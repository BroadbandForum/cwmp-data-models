<?xml version="1.0" encoding="UTF-8"?>
<!-- DO NOT EDIT; generated by Broadband Forum report.pl#425 (2020-03-23 version) on 2020/04/03 at 12:49:37.
     report.pl -exitcode=fatals -cwmpindex=.. -nofontstyles -nowarnreport -quiet -report=xml -outfile=tr-181-2-12-0-cwmp-full.xml tr-181-2-12-0-cwmp.xml
     See https://github.com/BroadbandForum/cwmp-xml-tools/tree/master/Report_Tool. -->
<!--
  TR-069 Device:2.12 Root Object definition [CWMP]

  Copyright (c) 2010-2018, Broadband Forum

  The undersigned members have elected to grant the copyright to
  their contributed material used in this software:
    Copyright (c) 2017-2018 ARRIS Enterprises, LLC.

  Redistribution and use in source and binary forms, with or
  without modification, are permitted provided that the following
  conditions are met:

  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

  2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.

  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products
     derived from this software without specific prior written
     permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  The above license is used as a license under copyright only.
  Please reference the Forum IPR Policy for patent licensing terms
  <https://www.broadband-forum.org/ipr-policy>.

  Any moral rights which are necessary to exercise under the above
  license grant are also deemed granted under this license.

  Summary:
    TR-069 Device:2.12 Root Object definition.

  Editors:
  * John Blackford, ARRIS
  * Tim Carey, Nokia
  * Tim Spets, Greenwave System
  * Klaus Wich, Huawei

  Broadband User Service Work Area Directors:
  * Jason Walls, QA Cafe
  * John Blackford, ARRIS

  Issue History (Filename: Approval Date: Publication Date: Changes):
  * tr-181-2-0-0.xml: May 2010:
    - corresponds to TR-181 Issue 2.
  * tr-181-2-1-0.xml: November 2010:
    - corresponds to TR-181 Issue 2 Amendment 1.
  * tr-181-2-2-0.xml: March 2011:
    - corresponds to TR-181 Issue 2 Amendment 2.
  * tr-181-2-3-0.xml: September 2011:
    - corresponds to TR-181 Issue 2 Amendment 3.
  * tr-181-2-4-0.xml: November 2011:
    - corresponds to TR-181 Issue 2 Amendment 4.
  * tr-181-2-5-0.xml: May 2012:
    - corresponds to TR-181 Issue 2 Amendment 5.
  * tr-181-2-6-0.xml: November 2012:
    - corresponds to TR-181 Issue 2 Amendment 6.
  * tr-181-2-7-0.xml: November 2013: January 17, 2014
    - corresponds to TR-181 Issue 2 Amendment 7.
  * tr-181-2-8-0.xml: 8 September 2014: 17 September 2014:
    - corresponds to TR-181 Issue 2 Amendment 8.
  * tr-181-2-9-0.xml:  1 December 2014:  4 February 2015:
    - Added WiFi MAC Address Filtering
    - Added Traceroute fixes
    - Added IEEE 1905 data model
    - Incorporated TR-143a1
  * tr-181-2-10-0.xml: 9 November 2015: 13 November 2015:
    - corresponds to TR-181 Issue 2 Amendment 10.
  * tr-181-2-11-0.xml: 18 July 2016: 12 August 2016
    - corresponds to TR-181 Issue 2 Amendment 11.
  * tr-181-2-12-0-cwmp.xml: 26 March 2018: 26 March 2018
    - corresponds to TR-181 Issue 2 Amendment 12.
-->
<dm:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-6"
             xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:broadband-forum-org:cwmp:datamodel-1-6 http://www.broadband-forum.org/cwmp/cwmp-datamodel-1-6.xsd urn:broadband-forum-org:cwmp:datamodel-report-0-1 http://www.broadband-forum.org/cwmp/cwmp-datamodel-report.xsd"
             spec="urn:broadband-forum-org:tr-181-2-12-0-cwmp" file="tr-181-2-12-0-cwmp-full.xml">
  <description>
    {{docname|Device:2 Root Data Model for CWMP (TR-069)}}
    {{appdate|March 2018}}
    {{trname|TR-181i2a12}}
    * Added TR-069a6 support
    * Added Firmware Image support
    * Added Ethernet Link Aggregation Group
    * Added additional Wi-Fi and WAN statistics
    * Added support for Two-Way Active Measurement Protocol (TWAMP) reflector
    * Added support for Layer Two Tunneling Protocol version 3 (L2TPv3)
    * Added support for Virtual eXtensible Local Area Network (VXLAN) tunnels
    * Added support for Broadband Access Service Attributes and Performance Metrics measurement test framework (BASAPM)
    * Added support for Large-Scale Measurement of Broadband Performance (LMAP)
  </description>
  <dataType name="_AliasCommon">
    <description>
      A non-volatile handle used to reference this instance.
      '''This is intended only for use in protocol-independent "common" definitions, and MUST NOT be used in protocol-specific definitions.'''
    </description>
    <string>
      <size maxLength="64"/>
    </string>
  </dataType>
  <dataType name="_AliasCWMP" base="_AliasCommon">
    <description>
      A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
      If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069|3.6.1}} and described in {{bibref|TR-069|Appendix II}}, the following mandatory constraints MUST be enforced:
      * Its value MUST NOT be empty.
      * Its value MUST start with a letter.
      * If its value is not assigned by the ACS, it MUST start with a "cpe-" prefix.
      * The CPE MUST NOT change the parameter value.
    </description>
    <size maxLength="64"/>
  </dataType>
  <dataType name="_AliasUSP" base="_AliasCommon">
    <description>
      A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference.
      The following mandatory constraints MUST be enforced:
      * The value MUST NOT be empty.
      * The value MUST start with a letter.
      * If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix.
      The value MUST NOT change once it's been assigned.
    </description>
    <size maxLength="64"/>
  </dataType>
  <dataType name="Alias" base="_AliasCWMP">
    <description>
      A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
      If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069|3.6.1}} and described in {{bibref|TR-069|Appendix II}}, the following mandatory constraints MUST be enforced:
      * Its value MUST NOT be empty.
      * Its value MUST start with a letter.
      * If its value is not assigned by the ACS, it MUST start with a "cpe-" prefix.
      * The CPE MUST NOT change the parameter value.
    </description>
    <size maxLength="64"/>
  </dataType>
  <dataType name="Dbm1000">
    <description>
      The value is measured in ''dBm/1000'', i.e. the value divided by 1000 is dB relative to 1 mW.  For example, -12345 means -12.345 dBm, 0 means 0 dBm (1 mW) and 12345 means 12.345 dBm.
    </description>
    <int>
    </int>
  </dataType>
  <dataType name="DiagnosticsState">
    <description>
      Indicates the availability of diagnostics data. Enumeration of:
      {{enum}}
      If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are {{enum|Requested}} and {{enum|Canceled}}. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to {{enum|Requested}}.
      When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test.
      When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
      If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
      When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
      After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
      Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
      While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
      While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
      While the test is in progress, setting this parameter to {{enum|Canceled}} MUST result in the test being canceled and the value of this parameter being set to {{enum|None}}. If the CPE does not support the {{enum|Canceled}} value, it MUST return a SPV error with "Invalid Parameter value" (9007) to the ACS instead.
    </description>
    <string>
      <enumeration value="None" access="readOnly"/>
      <enumeration value="Requested"/>
      <enumeration value="Canceled" optional="true"/>
      <enumeration value="Complete" access="readOnly"/>
      <enumeration value="Error" access="readOnly" optional="true"/>
    </string>
  </dataType>
  <dataType name="IEEE_EUI64">
    <description>
      The IEEE EUI 64-bit identifier as defined in {{bibref|EUI64}}. The IEEE defined 64-bit extended unique identifier (EUI-64) is a concatenation of:
      * The 24-bit (OUI-24) or 36-bit (OUI-36) company_id value assigned by the IEEE Registration Authority (IEEE-RA), and
      * The extension identifier (40 bits for OUI-24 or 28 bits for OUI-36) assigned by the organization with that company_id assignment.
    </description>
    <string>
      <size maxLength="23"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){7}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="IPAddress">
    <description>
      IP address, i.e. IPv4 address (or IPv4 subnet mask) or IPv6 address.
      All IPv4 addresses and subnet masks MUST be represented as strings in IPv4 dotted-decimal notation.  Here are some examples of valid IPv4 address textual representations:
      * 216.52.29.100
      * 192.168.1.254
      All IPv6 addresses MUST be represented using any of the 3 standard textual representations defined in {{bibref|RFC4291}} Sections 2.2.1, 2.2.2 and 2.2.3.  Both lower-case and upper-case letters can be used, but use of lower-case letters is RECOMMENDED.  Here are some examples of valid IPv6 address textual representations:
      * 1080:0:0:800:ba98:3210:11aa:12dd
      * 1080::800:ba98:3210:11aa:12dd
      * 0:0:0:0:0:0:13.1.68.3
      IPv6 addresses MUST NOT include zone identifiers. Zone identifiers are discussed in {{bibref|RFC4007|Section 6}}.
      Unspecified or inapplicable addresses (or IPv4 subnet masks) MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="45"/>
    </string>
  </dataType>
  <dataType name="IPv4Address" base="IPAddress">
    <description>
      IPv4 address (or subnet mask).
      Can be any IPv4 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="15"/>
    <pattern value=""/>
    <pattern value="((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])"/>
  </dataType>
  <dataType name="IPv6Address" base="IPAddress">
    <description>
      IPv6 address.
      Can be any IPv6 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="45"/>
  </dataType>
  <dataType name="IPPrefix">
    <description>
      IPv4 or IPv6 routing prefix in Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}. This is specified as an IP address followed by an appended "/n" suffix, where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the routing prefix.
      * IPv4 example: 192.168.1.0/24
      * IPv6 example: 2001:edff:fe6a:f76::/64
      If the IP address part is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.  In this case the IP prefix will be of the form "/n".
      If the entire IP prefix is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="49"/>
    </string>
  </dataType>
  <dataType name="IPv4Prefix" base="IPPrefix">
    <description>
      IPv4 address prefix.
      Can be any IPv4 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="18"/>
    <pattern value=""/>
    <pattern value="/(3[0-2]|[012]?[0-9])"/>
    <pattern value="((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])/(3[0-2]|[012]?[0-9])"/>
  </dataType>
  <dataType name="IPv6Prefix" base="IPPrefix">
    <description>
      IPv6 address prefix.
      Can be any IPv6 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="49"/>
  </dataType>
  <dataType name="JSONObject">
    <description>
      A JSON Object as defined in {{bibref|RFC7159|Section 4}}.
    </description>
    <string>
    </string>
  </dataType>
  <dataType name="MACAddress">
    <description>
      All MAC addresses are represented as strings of 12 hexadecimal digits (digits 0-9, letters A-F or a-f) displayed as six pairs of digits separated by colons.  Unspecified or inapplicable MAC addresses MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="17"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="StatsCounter32">
    <description>
      A 32-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD NOT be used for statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt'' (i.e. 0xffffffff, referred to below as ''maxval''). ''StatsCounter64'' SHOULD be used for such parameters.
      The value ''maxval'' indicates that no data is available for this parameter.  In the unlikely event that the actual value of the statistic is ''maxval'', the CPE SHOULD return ''maxval - 1''.
      The actual value of the statistic might be greater than ''maxval''. Such values SHOULD wrap around through zero.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedInt>
    </unsignedInt>
  </dataType>
  <dataType name="StatsCounter64">
    <description>
      A 64-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD be used for all statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt''.
      The maximum value that can be represented as an ''unsignedLong'' (i.e. 0xffffffffffffffff) indicates that no data is available for this parameter.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedLong>
    </unsignedLong>
  </dataType>
  <dataType name="UUID">
    <description>
      Universally Unique Identifier.  See {{bibref|RFC4122}}.
    </description>
    <string>
      <size minLength="36" maxLength="36"/>
      <pattern value="[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"/>
    </string>
  </dataType>
  <dataType name="URI">
    <description>
      Uniform Resource Identifier.  See {{bibref|RFC3986}}.
    </description>
    <string>
      <size maxLength="2048"/>
    </string>
  </dataType>
  <dataType name="URN" base="URI">
    <description>
      Uniform Resource Name.  See {{bibref|RFC3986}} (URI) and {{bibref|RFC8141}} (''urn'' URI scheme).
    </description>
    <size maxLength="2048"/>
    <pattern value="urn:[A-Za-z0-9][A-Za-z0-9-]{0,30}[A-Za-z0-9]:.+"/>
  </dataType>
  <dataType name="URL" base="URI">
    <description>
      Uniform Resource Locator.  See {{bibref|RFC3986}} (URI), {{bibref|IANA-uri-schemes}}, and individual URI scheme RFCs such as {{bibref|RFC7252}} (''coap'', ''coaps'') and {{bibref|RFC7230}} (''http'', ''https'').
    </description>
    <size maxLength="2048"/>
  </dataType>
  <dataType name="ZigBeeNetworkAddress">
    <description>
      The ZigBee 16-bit network address (NWK) as defined in {{bibref|ZigBee2007}}. The address is assigned to a device by the network layer and used by the network layer for routing messages between devices.
    </description>
    <string>
      <size maxLength="4"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f]){4}"/>
    </string>
  </dataType>
  <dataType name="PSMBreakPointIndexAndLevel">
    <description>
      # The PSM breakpoint sub-carrier index in the range [0:4095], and
      # the value of the level of the PSM at this sub-carrier expressed in ''0.1 dBm/Hz'' with an offset of -140 dBm/Hz.
      Both values are represented as unsignedInt.
      {{bibref|G.9964|Clause 5.2}} defines limits on PSM breakpoint levels.
    </description>
    <list minItems="2" maxItems="2"/>
    <unsignedInt>
    </unsignedInt>
  </dataType>
  <bibliography>
    <reference id="3GPP-HSPA">
      <name>High Speed Packet data Access (HSPA)</name>
      <organization>3GPP</organization>
      <hyperlink>https://www.3gpp.org/technologies/keywords-acronyms/99-hspa</hyperlink>
    </reference>
    <reference id="3GPP-TS.25.171">
      <name>3GPP TS 25.171</name>
      <title>Requirements for support of Assisted Global Positioning System (A-GPS)</title>
      <organization>3GPP RAN WG4</organization>
      <hyperlink>https://www.3gpp.org/ftp/Specs/html-info/25171.htm</hyperlink>
    </reference>
    <reference id="802.11-2007">
      <name>IEEE Std 802.11-2007</name>
      <title>Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications</title>
      <organization>IEEE</organization>
      <date>2007</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.11-2007.pdf</hyperlink>
    </reference>
    <reference id="802.11-2012">
      <name>IEEE Std 802.11-2012</name>
      <title>Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) Specifications</title>
      <organization>IEEE</organization>
      <date>March 2012</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.11-2012.pdf</hyperlink>
    </reference>
    <reference id="802.11a-1999">
      <name>IEEE Std 802.11a-1999</name>
      <title>High-speed Physical Layer in the 5 GHz band</title>
      <organization>IEEE</organization>
      <date>1999</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.11a-1999.pdf</hyperlink>
    </reference>
    <reference id="802.11ac-2013">
      <name>IEEE Std 802.11ac-2013</name>
      <title>Enhancements for Very High Throughput for Operation in Bands below 6 GHz</title>
      <organization>IEEE</organization>
      <date>December 2013</date>
      <hyperlink>https://www.ieee802.org/11/Reports/tgac_update.htm</hyperlink>
    </reference>
    <reference id="802.11b-1999">
      <name>IEEE Std 802.11b-1999</name>
      <title>Higher Speed Physical Layer Extension in the 2.4 GHz band</title>
      <organization>IEEE</organization>
      <date>1999</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.11b-1999.pdf</hyperlink>
    </reference>
    <reference id="802.11g-2003">
      <name>IEEE Std 802.11g-2003</name>
      <title>Further Higher Data Rate Extension in the 2.4 GHz Band</title>
      <organization>IEEE</organization>
      <date>2003</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.11g-2003.pdf</hyperlink>
    </reference>
    <reference id="802.11h-2003">
      <name>IEEE Std 802.11h-2003</name>
      <title>Spectrum and Transmit Power Management Extensions</title>
      <organization>IEEE</organization>
      <date>2003</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.11h-2003.pdf</hyperlink>
    </reference>
    <reference id="802.11n-2009">
      <name>IEEE Std 802.11n-2009</name>
      <title>Amendment 5: Enhancements for Higher Throughput</title>
      <organization>IEEE</organization>
      <date>2009</date>
      <hyperlink>https://ieeexplore.ieee.org/xpl/freeabs_all.jsp?reload=true&amp;arnumber=5307322</hyperlink>
    </reference>
    <reference id="802.1AB-2009">
      <name>IEEE Std 802.1AB-2009</name>
      <title>Station and Media Access Control Connectivity Discovery</title>
      <organization>IEEE</organization>
      <date>2009</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1AB-2009.pdf</hyperlink>
    </reference>
    <reference id="802.1ad-2005">
      <name>IEEE Std 802.1ad-2005</name>
      <title>Virtual Bridged Local Area Networks Amendment 4: Provider Bridges</title>
      <organization>IEEE</organization>
      <date>May 2005</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1ad-2005.pdf</hyperlink>
    </reference>
    <reference id="802.1AX-2014">
      <name>IEEE Std 802.1AX-2014</name>
      <title>IEEE Standard for Local and metropolitan area networks -- Link Aggregation</title>
      <organization>IEEE</organization>
      <date>2014</date>
      <hyperlink>https://ieeexplore.ieee.org/servlet/opac?punumber=6997981</hyperlink>
    </reference>
    <reference id="802.1D-2004">
      <name>IEEE Std 802.1D-2004</name>
      <title>Media Access Control (MAC) Bridges</title>
      <organization>IEEE</organization>
      <date>2004</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1D-2004.pdf</hyperlink>
    </reference>
    <reference id="802.1Q-2005">
      <name>IEEE Std 802.1Q-2005</name>
      <title>Virtual Bridged Local Area Networks</title>
      <organization>IEEE</organization>
      <date>2006</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1Q-2005.pdf</hyperlink>
    </reference>
    <reference id="802.1Q-2011">
      <name>IEEE Std 802.1Q-2011</name>
      <title>MAC Bridges and Virtual Bridge Local Area Networks</title>
      <organization>IEEE</organization>
      <date>2011</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1Q-2011.pdf</hyperlink>
    </reference>
    <reference id="802.1x-2004">
      <name>IEEE Std 802.1x-2004</name>
      <title>Standards for Local and Metropolitan Area Networks: Port based Network Access Control</title>
      <organization>IEEE</organization>
      <date>2004</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1X-2004.pdf</hyperlink>
    </reference>
    <reference id="802.3-2015">
      <name>IEEE Std 802.3-2015</name>
      <title>IEEE Standard for Ethernet</title>
      <organization>IEEE</organization>
      <date>2015</date>
      <hyperlink>https://ieeexplore.ieee.org/servlet/opac?punumber=7428774</hyperlink>
    </reference>
    <reference id="802.3-2012_section6">
      <name>IEEE 802.3-2012 - Section Six</name>
      <title>IEEE Standard for Ethernet - Section Six</title>
      <organization>IEEE</organization>
      <date>December 2012</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.3-2012_section6.pdf</hyperlink>
    </reference>
    <reference id="BLUE">
      <name>Blue</name>
      <title>A New Class of Active Queue Management Algorithms</title>
      <hyperlink>https://www.thefengs.com/wuchang/work/blue</hyperlink>
    </reference>
    <reference id="DLNA-NDIG">
      <name>DLNA Networked Device Interoperability Guidelines</name>
      <title>DLNA Networked Device Interoperability Guidelines, Volume 2: Media Format Profiles.</title>
      <organization>DLNA</organization>
      <date>October 2006</date>
      <hyperlink>https://www.dlna.org/industry/certification/guidelines/</hyperlink>
    </reference>
    <reference id="DNS-SD">
      <name>RFC 6763</name>
      <title>DNS-Based Service Discovery</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2013</date>
      <hyperlink>https://tools.ietf.org/html/rfc6763</hyperlink>
    </reference>
    <reference id="DSLite">
      <name>RFC 6333</name>
      <title>Dual-Stack Lite Broadband Deployments Following IPv4 Exhaustion</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2011</date>
      <hyperlink>https://tools.ietf.org/html/rfc6333</hyperlink>
    </reference>
    <reference id="DSLite-options">
      <name>RFC 6334</name>
      <title>Dynamic Host Configuation Protocol for IPv6 (DHCPv6) Option for Dual-Stack Lite</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2011</date>
      <hyperlink>https://tools.ietf.org/html/rfc6334</hyperlink>
    </reference>
    <reference id="DVB-TS.102.824">
      <name>TS 102 824</name>
      <title>Digital Video Broadcasting (DVB);Remote Management and Firmware Update System for DVB IP Services</title>
      <organization>ETSI</organization>
      <date>July 2008</date>
      <hyperlink>https://webapp.etsi.org/workprogram/Report_WorkItem.asp?WKI_ID=27769</hyperlink>
    </reference>
    <reference id="ETSIBRAN">
      <name>ETSI EN 301 893</name>
      <title>Broadband Radio Access Networks (BRAN); 5 GHz high performance RLAN; Harmonized EN covering the essential requirements of article 3.2 of the RTTE Directive</title>
      <organization>ETSI</organization>
      <hyperlink>https://www.etsi.org/deliver/etsi_en/301800_301899/301893/01.08.01_60/en_301893v010801p.pdf</hyperlink>
    </reference>
    <reference id="ETSIM2MFA">
      <name>ETSI TS 102 690 v1.1.6</name>
      <title>Machine-to-Machine Communications (M2M Functional Architecture)</title>
      <organization>ETSI</organization>
      <date>June 2012</date>
      <hyperlink>https://docbox.etsi.org/M2M/Open/Latest_Drafts/00002ed121v116.pdf</hyperlink>
    </reference>
    <reference id="ETSIM2MInterfaces">
      <name>ETSI TS 102 921 v1.1.6</name>
      <title>M2M mIa, dIa and mId Interfaces</title>
      <organization>ETSI</organization>
      <date>August 2012</date>
      <hyperlink>https://docbox.etsi.org/M2M/Open/Latest_Drafts/00010ed121v116.pdf</hyperlink>
    </reference>
    <reference id="G.988">
      <name>G.988</name>
      <title>ONU management and control interface (OMCI) specification</title>
      <organization>ITU-T</organization>
      <date>2010</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.988-201010-P/en</hyperlink>
    </reference>
    <reference id="G.9701">
      <name>G.9701</name>
      <title>Fast access to subscriber terminals (G.fast)- Physical layer specification</title>
      <organization>ITU-T</organization>
      <date>2014</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9701-201412-P</hyperlink>
    </reference>
    <reference id="G.9954">
      <name>G.9954</name>
      <title>Phoneline networking transceivers - Enhanced physical, media access, and link layer specifications (HPNA 3.0 and 3.1)</title>
      <organization>ITU-T</organization>
      <date>2007</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9954/en</hyperlink>
    </reference>
    <reference id="G.9960">
      <name>G.9960</name>
      <title>Unified high-speed wire-line based home networking transceivers - System architecture and physical layer specification</title>
      <organization>ITU-T</organization>
      <category>G.hn series</category>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9960-201006-P</hyperlink>
    </reference>
    <reference id="G.9961">
      <name>G.9961</name>
      <title>Unified high-speed wire-line based home networking transceivers - Data link layer specification</title>
      <organization>ITU-T</organization>
      <category>G.hn series</category>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9961-201006-P</hyperlink>
    </reference>
    <reference id="G.9962">
      <name>G.9962</name>
      <title>Unified high-speed wire-line based home networking transceivers - Management specification</title>
      <organization>ITU-T</organization>
      <category>G.hn series</category>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9962-201308-P</hyperlink>
    </reference>
    <reference id="G.9964">
      <name>G.9964</name>
      <title>Unified high-speed wire-line based home networking transceivers - Power spectral density specification</title>
      <organization>ITU-T</organization>
      <category>G.hn series</category>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9962-201308-P</hyperlink>
    </reference>
    <reference id="G.9973">
      <name>G.9973</name>
      <title>Protocol for identifying home network topology</title>
      <organization>ITU-T</organization>
      <date>2011</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.9973-201110-I/en</hyperlink>
    </reference>
    <reference id="G.993.1">
      <name>G.993.1</name>
      <title>Very high speed digital subscriber line transceivers</title>
      <organization>ITU-T</organization>
      <hyperlink>https://www.itu.int/rec/T-REC-G.993.1</hyperlink>
    </reference>
    <reference id="G.993.2">
      <name>G.993.2</name>
      <title>Very high speed digital subscriber line transceivers 2 (VDSL2)</title>
      <organization>ITU-T</organization>
      <hyperlink>https://www.itu.int/rec/T-REC-G.993.2</hyperlink>
    </reference>
    <reference id="G.997.1">
      <name>G.997.1</name>
      <title>Physical layer management for digital subscriber line (DSL) transceivers</title>
      <organization>ITU-T</organization>
      <hyperlink>https://www.itu.int/rec/T-REC-G.997.1</hyperlink>
    </reference>
    <reference id="G.997.2">
      <name>G.997.2</name>
      <title>Physical layer management for FAST transceivers</title>
      <organization>ITU-T</organization>
      <date>2015</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.997.2-201505-I</hyperlink>
    </reference>
    <reference id="G.998.1">
      <name>G.998.1</name>
      <title>ATM-based Multi-Pair Bonding</title>
      <organization>ITU-T</organization>
      <date>2005</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.998.1</hyperlink>
    </reference>
    <reference id="G.998.2">
      <name>G.998.2</name>
      <title>Ethernet-based Multi-Pair Bonding</title>
      <organization>ITU-T</organization>
      <date>2005</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.998.2</hyperlink>
    </reference>
    <reference id="G.998.3">
      <name>G.998.3</name>
      <title>Multi-Pair Bonding Using Time-Division Inverse Multiplexing</title>
      <organization>ITU-T</organization>
      <date>2005</date>
      <hyperlink>https://www.itu.int/rec/T-REC-G.998.2</hyperlink>
    </reference>
    <reference id="HPAV1.1">
      <name>HomePlug AV Specification</name>
      <title>Version 1.1</title>
      <organization>HomePlug</organization>
      <date>2007</date>
      <hyperlink>https://www.homeplug.org</hyperlink>
    </reference>
    <reference id="HTML4.01">
      <name>HTML 4.01 Specification</name>
      <organization>W3C</organization>
      <hyperlink>https://www.w3.org/TR/html4</hyperlink>
    </reference>
    <reference id="IANA-protocolnumbers">
      <name>IANA Protocol Numbers</name>
      <title>Protocol Numbers</title>
      <organization>IANA</organization>
      <hyperlink>https://www.iana.org/assignments/protocol-numbers</hyperlink>
    </reference>
    <reference id="IANAifType">
      <name>IANAifType</name>
      <title>IANAifType-MIB DEFINITIONS</title>
      <organization>IANA</organization>
      <date>2009</date>
      <hyperlink>https://www.iana.org/assignments/ianaiftype-mib/ianaiftype-mib</hyperlink>
    </reference>
    <reference id="ICSA-Baseline">
      <name>ICSA Baseline Modular Firewall Certification Criteria</name>
      <title>Baseline module - version 4.1</title>
      <organization>ICSA Labs</organization>
      <date>2008</date>
      <hyperlink>https://www.icsalabs.com/sites/default/files/baseline.pdf</hyperlink>
    </reference>
    <reference id="ICSA-Residential">
      <name>ICSA Residential Modular Firewall Certification Criteria</name>
      <title>Required Services Security Policy - Residential Category module - version 4.1</title>
      <organization>ICSA Labs</organization>
      <date>2008</date>
      <hyperlink>https://www.icsalabs.com/sites/default/files/residential.pdf</hyperlink>
    </reference>
    <reference id="IEEE1905.1a">
      <name>IEEE 1905.1a</name>
      <title>IEEE Std 1905.1a, Convergent Digital Home Network for Heterogeneous Technologies Amendment 1: Support of new MAC/PHYs and enhancements, IEEE, December 2014.</title>
      <organization>IEEE</organization>
      <date>December 2014</date>
      <hyperlink>https://www.IEEE.org</hyperlink>
    </reference>
    <reference id="IKEv2-params">
      <name>IKEv2 Parameters</name>
      <title>Internet Key Exchange Version 2 (IKEv2) Parameters</title>
      <organization>IANA</organization>
      <hyperlink>https://www.iana.org/assignments/ikev2-parameters/ikev2-parameters.xml</hyperlink>
    </reference>
    <reference id="IPDR-FTP">
      <name>IPDR File Transfer Protocol</name>
      <title>IPDR/File Transfer Protocol</title>
      <organization>TM Forum</organization>
      <hyperlink>https://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="IPDR-SP">
      <name>IPDR Streaming Protocol</name>
      <title>IPDR Streaming Protocol (IPDR/SP) Specification</title>
      <organization>TM Forum</organization>
      <hyperlink>https://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="IPDR-XDR">
      <name>IPDR XDR Encoding Format</name>
      <title>IPDR/XDR Encoding Format</title>
      <organization>TM Forum</organization>
      <hyperlink>https://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="IPDR-XML">
      <name>IPDR XML File Encoding Format</name>
      <title>IPDR/XML File Encoding Format</title>
      <organization>TM Forum</organization>
      <hyperlink>https://www.ipdr.org/public/</hyperlink>
    </reference>
    <reference id="ISO-13818-6:1998">
      <name>ISO/IEC 13818-6:1998</name>
      <title>Information Technology - Generic coding of moving pictures and associated audio information - Part 6: Extensions for DSM-CC</title>
      <organization>ISO</organization>
      <date>1998</date>
      <hyperlink>https://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=25039</hyperlink>
    </reference>
    <reference id="ISO3166-1">
      <name>ISO 3166-1</name>
      <title>Codes for the representation of names of countries and their subdivisions - Part 1: Country codes</title>
      <organization>ISO</organization>
      <date>2006</date>
      <hyperlink>https://www.iso.org/iso/country_codes.htm</hyperlink>
    </reference>
    <reference id="ISO639-1">
      <name>ISO 639-1</name>
      <title>Codes for the representation of names of Languages - Part 1: Alpha-2 code</title>
      <organization>ISO</organization>
      <date>2002</date>
      <hyperlink>https://www.iso.org/iso/language_codes</hyperlink>
    </reference>
    <reference id="ISO646-1991">
      <name>ISO/IEC 646-1991</name>
      <title>Information Technology - ISO 7-bit coded character set for information interchange</title>
      <organization>ISO</organization>
      <date>1991</date>
    </reference>
    <reference id="ITU-E.118">
      <name>ITU E.118</name>
      <title>The international telecommunication charge card</title>
      <organization>International Telecommunication Union</organization>
      <date>May 2006</date>
      <hyperlink>https://www.itu.int/rec/T-REC-E.118-200605-I/en</hyperlink>
    </reference>
    <reference id="ITU-E.164">
      <name>ITU E.164</name>
      <title>The international public telecommunication numbering plan</title>
      <organization>International Telecommunication Union</organization>
      <date>October 2010</date>
      <hyperlink>https://www.itu.int/rec/T-REC-E.164-201011-I/en</hyperlink>
    </reference>
    <reference id="ITU-X.733">
      <name>ITU X.733</name>
      <title>Information technology - Open Systems Interconnection - Systems Management: Alarm reporting function</title>
      <organization>International Telecommunication Union</organization>
      <date>February 1992</date>
      <hyperlink>https://www.itu.int/rec/T-REC-X.733/en</hyperlink>
    </reference>
    <reference id="JJ-300.00">
      <name>JJ-300.00</name>
      <title>Home-network Topology Identifying Protocol</title>
      <organization>TTC</organization>
      <date>2011</date>
      <hyperlink>https://www.ttc.or.jp/jp/document_list/pdf/e/STD/JJ-300.00(E)v1.1.pdf</hyperlink>
    </reference>
    <reference id="JJ-300.01">
      <name>JJ-300.01</name>
      <title>The List of Device Categories</title>
      <organization>TTC</organization>
      <date>2011</date>
      <hyperlink>https://www.ttc.or.jp/jp/document_list/pdf/e/STD/JJ-300.01(E)v1.1.pdf</hyperlink>
    </reference>
    <reference id="LMAPIFM">
      <name>RFC 8193</name>
      <title>Information Model for Large-Scale Measurement Platforms (LMAPs)</title>
      <organization>IETF</organization>
      <category>Informational RFC</category>
      <date>August 2017</date>
      <hyperlink>https://tools.ietf.org/html/rfc8193</hyperlink>
    </reference>
    <reference id="LMAPREG">
      <name>draft-ietf-ippm-metric-registry-12</name>
      <title>Registry for Performance Metrics</title>
      <organization>IETF</organization>
      <category>Internet Draft</category>
      <date>June 30, 2017</date>
      <hyperlink>https://datatracker.ietf.org/doc/draft-ietf-ippm-metric-registry/</hyperlink>
    </reference>
    <reference id="MOCA11-MIB">
      <name>MOCA11-MIB</name>
      <title>Remote Management of MoCA Interfaces using SNMP MIB</title>
      <organization>MoCA Alliance</organization>
      <date>2009</date>
      <hyperlink>https://www.mocalliance.org</hyperlink>
    </reference>
    <reference id="MoCAv1.0">
      <name>MoCA v1.0</name>
      <title>MoCA MAC/PHY Specification v1.0</title>
      <organization>MoCA Alliance</organization>
      <date>2009</date>
      <hyperlink>https://www.mocalliance.org</hyperlink>
    </reference>
    <reference id="MoCAv1.1">
      <name>MoCA v1.1</name>
      <title>MoCA MAC/PHY Specification v1.1 Extensions</title>
      <organization>MoCA Alliance</organization>
      <date>2009</date>
      <hyperlink>https://www.mocalliance.org</hyperlink>
    </reference>
    <reference id="MQTT31">
      <name>MQTT v3.1</name>
      <title>MQ Telemetry Transport (MQTT) V3.1 Protocol Specification</title>
      <date>2010</date>
      <hyperlink>https://www.ibm.com/developerworks/webservices/library/ws-mqtt/index.html</hyperlink>
    </reference>
    <reference id="MQTT311">
      <name>MQTT Version 3.1.1</name>
      <title>MQTT v3.1.1</title>
      <organization>OASIS Message Queuing Telemetry Transport (MQTT) TC</organization>
      <date>October 2014</date>
      <hyperlink>https://www.oasis-open.org/standards#mqttv3.1.1</hyperlink>
    </reference>
    <reference id="OUI">
      <name>Organizationally Unique Identifiers (OUIs)</name>
      <hyperlink>https://standards.ieee.org/faqs/OUI.html</hyperlink>
    </reference>
    <reference id="PCPProxy">
      <name>PCP Proxy Function</name>
      <title>Port Control Protocol (PCP) Proxy Function</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>September 2015</date>
      <hyperlink>https://tools.ietf.org/html/pcpproxyfunction</hyperlink>
    </reference>
    <reference id="POSIXBase">
      <name>ISO/IEC/IEEE 9945</name>
      <title>Information technology - Portable Operating System Interface (POSIX) Base Specifications, Issue 7</title>
      <organization>ISO/IEC/IEEE</organization>
      <date>September 2009</date>
      <hyperlink>https://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=4694974</hyperlink>
    </reference>
    <reference id="RED">
      <name>References on RED (Random Early Detection) Queue Management</name>
      <hyperlink>https://www.icir.org/floyd/red.html</hyperlink>
    </reference>
    <reference id="RFC793">
      <name>RFC 793</name>
      <title>Transmission Control Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>September 1981</date>
      <hyperlink>https://tools.ietf.org/html/rfc793</hyperlink>
    </reference>
    <reference id="RFC862">
      <name>RFC 862</name>
      <title>Echo Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1983</date>
      <hyperlink>https://tools.ietf.org/html/rfc862</hyperlink>
    </reference>
    <reference id="RFC959">
      <name>RFC 959</name>
      <title>File Transfer Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1985</date>
      <hyperlink>https://tools.ietf.org/html/rfc959</hyperlink>
    </reference>
    <reference id="RFC1035">
      <name>RFC 1035</name>
      <title>Domain Names - Implementation and Specification</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1987</date>
      <hyperlink>https://tools.ietf.org/html/rfc1035</hyperlink>
    </reference>
    <reference id="RFC1323">
      <name>RFC 1323</name>
      <title>TCP Extensions for High Performance</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>May 1992</date>
      <hyperlink>https://tools.ietf.org/html/rfc1323</hyperlink>
    </reference>
    <reference id="RFC1332">
      <name>RFC 1332</name>
      <title>The PPP Internet Protocol Control Protocol (IPCP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1992</date>
      <hyperlink>https://tools.ietf.org/html/rfc1332</hyperlink>
    </reference>
    <reference id="RFC1378">
      <name>RFC 1378</name>
      <title>The PPP AppleTalk Control Protocol (ATCP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1992</date>
      <hyperlink>https://tools.ietf.org/html/rfc1378</hyperlink>
    </reference>
    <reference id="RFC1552">
      <name>RFC 1552</name>
      <title>The PPP Internetwork Packet Exchange Control Protocol (IPXCP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1993</date>
      <hyperlink>https://tools.ietf.org/html/rfc1552</hyperlink>
    </reference>
    <reference id="RFC1661">
      <name>RFC 1661</name>
      <title>The Point-to-Point Protocol (PPP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1994</date>
      <hyperlink>https://tools.ietf.org/html/rfc1661</hyperlink>
    </reference>
    <reference id="RFC1877">
      <name>RFC 1877</name>
      <title>PPP Internet Protocol Control Protocol Extensions for Name Server Addresses</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1995</date>
      <hyperlink>https://tools.ietf.org/html/rfc1877</hyperlink>
    </reference>
    <reference id="RFC1974">
      <name>RFC 1974</name>
      <title>PPP Stac LZS Compression Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1996</date>
      <hyperlink>https://tools.ietf.org/html/rfc1974</hyperlink>
    </reference>
    <reference id="RFC2080">
      <name>RFC 2080</name>
      <title>RIPng for IPv6</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1997</date>
      <hyperlink>https://tools.ietf.org/html/rfc2080</hyperlink>
    </reference>
    <reference id="RFC2097">
      <name>RFC 2097</name>
      <title>The PPP NetBIOS Frames Control Protocol (NBFCP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1997</date>
      <hyperlink>https://tools.ietf.org/html/rfc2097</hyperlink>
    </reference>
    <reference id="RFC2131">
      <name>RFC 2131</name>
      <title>Dynamic Host Configuration Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2131</hyperlink>
    </reference>
    <reference id="RFC2132">
      <name>RFC 2132</name>
      <title>DHCP Options and BOOTP Vendor Extensions</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2132</hyperlink>
    </reference>
    <reference id="RFC2225">
      <name>RFC 2225</name>
      <title>Classical IP and ARP over ATM</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2225</hyperlink>
    </reference>
    <reference id="RFC2364">
      <name>RFC 2364</name>
      <title>PPP Over AAL5</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1998</date>
      <hyperlink>https://tools.ietf.org/html/rfc2364</hyperlink>
    </reference>
    <reference id="RFC2474">
      <name>RFC 2474</name>
      <title>Definition of the Differentiated Services Field (DS Field) in the IPv4 and IPv6 Headers</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2474</hyperlink>
    </reference>
    <reference id="RFC2581">
      <name>RFC 2581</name>
      <title>TCP Congestion Control</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>April 1999</date>
      <hyperlink>https://tools.ietf.org/html/rfc2581</hyperlink>
    </reference>
    <reference id="RFC2582">
      <name>RFC 2582</name>
      <title>The NewReno Modification to TCP's Fast Recovery Algorithm</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>April 1999</date>
      <hyperlink>https://tools.ietf.org/html/rfc2582</hyperlink>
    </reference>
    <reference id="RFC2616">
      <name>RFC 2616</name>
      <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1999</date>
      <hyperlink>https://tools.ietf.org/html/rfc2616</hyperlink>
    </reference>
    <reference id="RFC2684">
      <name>RFC 2684</name>
      <title>Multiprotocol Encapsulation over ATM Adaptation Layer 5</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2684</hyperlink>
    </reference>
    <reference id="RFC2697">
      <name>RFC 2697</name>
      <title>A Single Rate Three Color Marker</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2697</hyperlink>
    </reference>
    <reference id="RFC2698">
      <name>RFC 2698</name>
      <title>A Two Rate Three Color Marker</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2698</hyperlink>
    </reference>
    <reference id="RFC2782">
      <name>RFC 2782</name>
      <title>A DNS RR for specifying the location of services (DNS SRV)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2782</hyperlink>
    </reference>
    <reference id="RFC2784">
      <name>RFC 2784</name>
      <title>Generic Routing Encapsulation (GRE)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>November 2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2784</hyperlink>
    </reference>
    <reference id="RFC2818">
      <name>RFC 2818</name>
      <title>HTTP Over TLS</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>May 2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2818</hyperlink>
    </reference>
    <reference id="RFC2819">
      <name>RFC 2819</name>
      <title>Remote Network Monitoring Management Information Base</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2819</hyperlink>
    </reference>
    <reference id="RFC2863">
      <name>RFC 2863</name>
      <title>The Interfaces Group MIB</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2863</hyperlink>
    </reference>
    <reference id="RFC2865">
      <name>RFC 2865</name>
      <title>Remote Authentication Dial In User Service (RADIUS)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2865</hyperlink>
    </reference>
    <reference id="RFC2866">
      <name>RFC 2866</name>
      <title>RADIUS Accounting</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2866</hyperlink>
    </reference>
    <reference id="RFC2869">
      <name>RFC 2869</name>
      <title>RADIUS Extensions</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2869</hyperlink>
    </reference>
    <reference id="RFC2890">
      <name>RFC 2890</name>
      <title>Key and Sequence Number Extensions to GRE</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>November 2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2890</hyperlink>
    </reference>
    <reference id="RFC2898">
      <name>RFC 2898</name>
      <title>PKCS #5: Password-Based Cryptography Specification Version 2.0</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2898</hyperlink>
    </reference>
    <reference id="RFC2974">
      <name>RFC 2974</name>
      <title>Session Announcement Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>October 2000</date>
      <hyperlink>https://tools.ietf.org/html/rfc2974</hyperlink>
    </reference>
    <reference id="RFC3004">
      <name>RFC 3004</name>
      <title>The User Class Option for DHCP</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3004</hyperlink>
    </reference>
    <reference id="RFC3066">
      <name>RFC 3066</name>
      <title>Tags for the Identification of Languages</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3066</hyperlink>
    </reference>
    <reference id="RFC3232">
      <name>RFC 3232</name>
      <title>"Assigned Numbers: RFC 1700 is Replaced by an On-line Database"</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2002</date>
      <hyperlink>https://tools.ietf.org/html/rfc3232</hyperlink>
    </reference>
    <reference id="RFC3315">
      <name>RFC 3315</name>
      <title>Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2003</date>
      <hyperlink>https://tools.ietf.org/html/rfc3315</hyperlink>
    </reference>
    <reference id="RFC3339">
      <name>RFC 3339</name>
      <title>Date and Time on the Internet: Timestamps</title>
      <organization>IETF</organization>
      <category>Draft Standard</category>
      <date>July, 2002</date>
      <hyperlink>https://tools.ietf.org/html/rfc3339</hyperlink>
    </reference>
    <reference id="RFC3489">
      <name>RFC 3489</name>
      <title>STUN - Simple Traversal of User Datagram Protocol (UDP) Through Network Address Translators (NATs)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3489</hyperlink>
    </reference>
    <reference id="RFC3596">
      <name>RFC 3596</name>
      <title>DDNS Extensions to Support IP Version 6</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2003</date>
      <hyperlink>https://tools.ietf.org/html/rfc3596</hyperlink>
    </reference>
    <reference id="RFC3633">
      <name>RFC 3633</name>
      <title>IPv6 Prefix Options for Dynamic Host Configuration Protocol (DHCP) version 6</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2003</date>
      <hyperlink>https://tools.ietf.org/html/rfc3633</hyperlink>
    </reference>
    <reference id="RFC3646">
      <name>RFC 3646</name>
      <title>DNS Configuration options for Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2003</date>
      <hyperlink>https://tools.ietf.org/html/rfc3646</hyperlink>
    </reference>
    <reference id="RFC3775">
      <name>RFC 3775</name>
      <title>Mobility Support in IPv6</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2004</date>
      <hyperlink>https://tools.ietf.org/html/rfc3775</hyperlink>
    </reference>
    <reference id="RFC3925">
      <name>RFC 3925</name>
      <title>Vendor-Identifying Vendor Options for Dynamic Host Configuration Protocol version 4 (DHCPv4)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3925</hyperlink>
    </reference>
    <reference id="RFC3926">
      <name>RFC 3926</name>
      <title>FLUTE - File Delivery over Unidirectional Transport</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>October 2004</date>
      <hyperlink>https://tools.ietf.org/html/rfc3926</hyperlink>
    </reference>
    <reference id="RFC3927">
      <name>RFC 3927</name>
      <title>Dynamic Configuration of IPv4 Link-Local Addresses</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc3927</hyperlink>
    </reference>
    <reference id="RFC3931">
      <name>RFC 3931</name>
      <title>Layer Two Tunneling Protocol - Version 3 (L2TPv3)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>March 2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc3931</hyperlink>
    </reference>
    <reference id="RFC3948">
      <name>RFC 3948</name>
      <title>UDP Encapsulation of IPsec ESP Packets</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>January 2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc3948</hyperlink>
    </reference>
    <reference id="RFC3986">
      <name>RFC 3986</name>
      <title>Uniform Resource Identifier (URI): Generic Syntax</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3986</hyperlink>
    </reference>
    <reference id="RFC4122">
      <name>RFC 4122</name>
      <title>A Universally Unique IDentifier (UUID) URN Namespace</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4122</hyperlink>
    </reference>
    <reference id="RFC4180">
      <name>RFC4180</name>
      <title>Common Format and MIME Type for Comma-Separated Values (CSV) Files</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>October 2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4180</hyperlink>
    </reference>
    <reference id="RFC4191">
      <name>RFC 4191</name>
      <title>Default Router Preferences and More-Specific Routes</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4191</hyperlink>
    </reference>
    <reference id="RFC4193">
      <name>RFC 4193</name>
      <title>Unique Local IPv6 Unicast Addresses</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4193</hyperlink>
    </reference>
    <reference id="RFC4242">
      <name>RFC 4242</name>
      <title>Information Refresh Time Option for Dynamic Host Configuration Protocol for IPv6 (DHCPv6)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4242</hyperlink>
    </reference>
    <reference id="RFC4291">
      <name>RFC 4291</name>
      <title>IP Version 6 Addressing Architecture</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>https://tools.ietf.org/html/rfc4291</hyperlink>
    </reference>
    <reference id="RFC4292">
      <name>RFC 4292</name>
      <title>IP Forwarding Table MIB</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>https://tools.ietf.org/html/rfc4292</hyperlink>
    </reference>
    <reference id="RFC4293">
      <name>RFC 4293</name>
      <title>Management Information Base for the Internet Protocol (IP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>https://tools.ietf.org/html/rfc4293</hyperlink>
    </reference>
    <reference id="RFC4301">
      <name>RFC 4301</name>
      <title>Security Architecture for the Internet Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>December 2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4301</hyperlink>
    </reference>
    <reference id="RFC4302">
      <name>RFC 4302</name>
      <title>IP Authentication Header</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>December 2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4302</hyperlink>
    </reference>
    <reference id="RFC4303">
      <name>RFC 4303</name>
      <title>IP Encapsulating Security Payload (ESP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>December 2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4303</hyperlink>
    </reference>
    <reference id="RFC4389">
      <name>RFC 4389</name>
      <title>Neighbor Discovery Proxies (ND Proxy)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>https://tools.ietf.org/html/rfc4389</hyperlink>
    </reference>
    <reference id="RFC4632">
      <name>RFC 4632</name>
      <title>Classless Inter-domain Routing (CIDR): The Internet Address Assignment and Aggregation Plan</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2006</date>
      <hyperlink>https://tools.ietf.org/html/rfc4632</hyperlink>
    </reference>
    <reference id="RFC4719">
      <name>RFC 4719</name>
      <title>Transport of Ethernet Frames over Layer 2 Tunneling Protocol Version 3 (L2TPv3)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>November 2006</date>
      <hyperlink>https://tools.ietf.org/html/rfc4719</hyperlink>
    </reference>
    <reference id="RFC4835">
      <name>RFC 4835</name>
      <title>Cryptographic Algorithm Implementation Requirements for Encapsulating Security Payload (ESP) and Authentication Header (AH)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2007</date>
      <hyperlink>https://tools.ietf.org/html/rfc4835</hyperlink>
    </reference>
    <reference id="RFC4861">
      <name>RFC 4861</name>
      <title>Neighbor Discovery for IP version 6 (IPv6)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2007</date>
      <hyperlink>https://tools.ietf.org/html/rfc4861</hyperlink>
    </reference>
    <reference id="RFC4862">
      <name>RFC 4862</name>
      <title>IPv6 Stateless Address Autoconfiguration</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2007</date>
      <hyperlink>https://tools.ietf.org/html/rfc4862</hyperlink>
    </reference>
    <reference id="RFC5072">
      <name>RFC 5072</name>
      <title>IP Version 6 over PPP</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2007</date>
      <hyperlink>https://tools.ietf.org/html/rfc5072</hyperlink>
    </reference>
    <reference id="RFC5139">
      <name>RFC 5139</name>
      <title>Revised Civic Location Format For Presence Information Data Format Location Object (PIDF-LO)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>February 2008</date>
      <hyperlink>https://tools.ietf.org/html/rfc5139</hyperlink>
    </reference>
    <reference id="RFC5280">
      <name>RFC 5280</name>
      <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>May 2008</date>
      <hyperlink>https://tools.ietf.org/html/rfc5280</hyperlink>
    </reference>
    <reference id="RFC5491">
      <name>RFC 5491</name>
      <title>GEOPRIV Presence Information Data Format Location Object (PIDF-LO) Usage Clarification, Considerations, and Recommendations</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>March 2009</date>
      <hyperlink>https://tools.ietf.org/html/rfc5491</hyperlink>
    </reference>
    <reference id="RFC5625">
      <name>RFC 5625</name>
      <title>DNS Proxy Implementation Guidelines</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2009</date>
      <hyperlink>https://tools.ietf.org/html/rfc5625</hyperlink>
    </reference>
    <reference id="RFC5969">
      <name>RFC 5969</name>
      <title>IPv6 Rapid Deployment on IPv4 Infrastructures (6rd) - Protocol Specification</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2010</date>
      <hyperlink>https://tools.ietf.org/html/rfc5969</hyperlink>
    </reference>
    <reference id="RFC5996">
      <name>RFC 5996</name>
      <title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>September 2010</date>
      <hyperlink>https://tools.ietf.org/html/rfc5996</hyperlink>
    </reference>
    <reference id="RFC6106">
      <name>RFC 6106</name>
      <title>IPv6 Router Advertisement Option for DNS Configuration</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2010</date>
      <hyperlink>https://tools.ietf.org/html/rfc6106</hyperlink>
    </reference>
    <reference id="RFC6120">
      <name>RFC 6120</name>
      <title>Extensible Messaging and Presence Protocol (XMPP) : Core</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2011</date>
      <hyperlink>https://tools.ietf.org/html/rfc6120</hyperlink>
    </reference>
    <reference id="RFC6887">
      <name>RFC 6887</name>
      <title>Port Control Protocol (PCP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2013</date>
      <hyperlink>https://tools.ietf.org/html/rfc6887</hyperlink>
    </reference>
    <reference id="RFC6970">
      <name>RFC 6970</name>
      <title>Universal Plug and Play (UPnP) Internet Gateway Device (IGD) - Port Control Protocol (PCP) Interworking Function</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2013</date>
      <hyperlink>https://tools.ietf.org/html/rfc6970</hyperlink>
    </reference>
    <reference id="RFC7159">
      <name>RFC7159</name>
      <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>March 2014</date>
      <hyperlink>https://tools.ietf.org/html/rfc7159</hyperlink>
    </reference>
    <reference id="RFC7291">
      <name>RFC 7291</name>
      <title>DHCP Options for the Port Control Protocol (PCP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2014</date>
      <hyperlink>https://tools.ietf.org/html/rfc7291</hyperlink>
    </reference>
    <reference id="RFC7348">
      <name>RFC 7348</name>
      <title>Virtual eXtensible Local Area Network (VXLAN)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>August 2014</date>
      <hyperlink>https://tools.ietf.org/html/rfc7348</hyperlink>
    </reference>
    <reference id="RFC7395">
      <name>RFC 7395</name>
      <title>An Extensible Messaging and Presence Protocol (XMPP) Subprotocol for WebSocket</title>
      <organization>IETF</organization>
      <category>Standards Track</category>
      <date>October 2014</date>
      <hyperlink>https://tools.ietf.org/html/rfc7395</hyperlink>
    </reference>
    <reference id="RFC7398">
      <name>RFC 7398</name>
      <title>A Reference Path and Measurement Points for Large-Scale Measurement of Broadband Performance</title>
      <organization>IETF</organization>
      <category>Informational RFC</category>
      <date>February 2015</date>
      <hyperlink>https://tools.ietf.org/html/rfc7398</hyperlink>
    </reference>
    <reference id="RFC7594">
      <name>RFC 7594</name>
      <title>A Framework for Large-Scale Measurement of Broadband Performance (LMAP)</title>
      <organization>IETF</organization>
      <category>Informational RFC</category>
      <date>September 2015</date>
      <hyperlink>https://tools.ietf.org/html/rfc7594</hyperlink>
    </reference>
    <reference id="RFC7597">
      <name>RFC 7597</name>
      <title>Mapping of Address and Port with Encapsulation (MAP)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>July 2015</date>
      <hyperlink>https://tools.ietf.org/html/rfc7597</hyperlink>
    </reference>
    <reference id="RFC7598">
      <name>RFC 7598</name>
      <title>DHCPv6 Options for configuration of Softwire Address and Port Mapped Clients</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>July 2015</date>
      <hyperlink>https://tools.ietf.org/html/rfc7598</hyperlink>
    </reference>
    <reference id="RFC7599">
      <name>RFC 7599</name>
      <title>Mapping of Address and Port using Translation (MAP-T)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>July 2015</date>
      <hyperlink>https://tools.ietf.org/html/rfc7599</hyperlink>
    </reference>
    <reference id="SOAP1.1">
      <name>Simple Object Access Protocol (SOAP) 1.1</name>
      <organization>W3C</organization>
      <hyperlink>https://www.w3.org/TR/2000/NOTE-SOAP-20000508</hyperlink>
    </reference>
    <reference id="TR-064">
      <name>TR-064 Corrigendum 1</name>
      <title>LAN-Side DSL CPE Configuration Specification</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>August 2015</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-064.pdf</hyperlink>
    </reference>
    <reference id="TR-069">
      <name>TR-069 Amendment 6</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>April 2018</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069.pdf</hyperlink>
    </reference>
    <reference id="TR-069a2">
      <name>TR-069 Amendment 2</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2007</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-069a3">
      <name>TR-069 Amendment 3</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2010</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069_Amendment-3.pdf</hyperlink>
    </reference>
    <reference id="TR-069a4">
      <name>TR-069 Amendment 4</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>July 2011</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069_Amendment-4.pdf</hyperlink>
    </reference>
    <reference id="TR-069a5">
      <name>TR-069 Amendment 5</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2013</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069_Amendment-5.pdf</hyperlink>
    </reference>
    <reference id="TR-098">
      <name>TR-098 Amendment 2 Corrigendum 1</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2014</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-098.pdf</hyperlink>
    </reference>
    <reference id="TR-106">
      <name>TR-106 Amendment 8</name>
      <title>Data Model Template for CWMP Endpoints and USP Agents</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2018</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106.pdf</hyperlink>
    </reference>
    <reference id="TR-106a2">
      <name>TR-106 Amendment 2</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2008</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-106a3">
      <name>TR-106 Amendment 3</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>September 2009</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-3.pdf</hyperlink>
    </reference>
    <reference id="TR-106a4">
      <name>TR-106 Amendment 4</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>February 2010</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-4.pdf</hyperlink>
    </reference>
    <reference id="TR-106a5">
      <name>TR-106 Amendment 5</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2010</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-5.pdf</hyperlink>
    </reference>
    <reference id="TR-106a6">
      <name>TR-106 Amendment 6</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>July 2011</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-6.pdf</hyperlink>
    </reference>
    <reference id="TR-106a7">
      <name>TR-106 Amendment 7</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>September 2013</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-7.pdf</hyperlink>
    </reference>
    <reference id="TR-106a8">
      <name>TR-106 Amendment 8</name>
      <title>Data Model Template for CWMP Endpoints and USP Agents</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2018</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-8.pdf</hyperlink>
    </reference>
    <reference id="TR-143">
      <name>TR-143 Amendment 3</name>
      <title>Enabling Network Throughput Performance Tests and Statistical Monitoring</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2017</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-143.pdf</hyperlink>
    </reference>
    <reference id="TR-143a1">
      <name>TR-143 Amendment 1</name>
      <title>Enabling Network Throughput Performance Tests and Statistical Monitoring</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2014</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-143_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-157">
      <name>TR-157 Amendment 10</name>
      <title>Component Objects for CWMP</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2015</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-157.pdf</hyperlink>
    </reference>
    <reference id="TR-157a3">
      <name>TR-157 Amendment 3</name>
      <title>Component Objects for CWMP</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2010</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-157_Amendment-3.pdf</hyperlink>
    </reference>
    <reference id="TR-157a10">
      <name>TR-157 Amendment 10</name>
      <title>Component Objects for CWMP</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2015</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-157_Amendment-10.pdf</hyperlink>
    </reference>
    <reference id="TR-159">
      <name>TR-159</name>
      <title>Management Framework for xDSL Bonding</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2008</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-159.pdf</hyperlink>
    </reference>
    <reference id="TR-181i1">
      <name>TR-181 Issue 1</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>February 2010</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-181_Issue-1.pdf</hyperlink>
    </reference>
    <reference id="TR-181i2">
      <name>TR-181 Issue 2 Amendment 13</name>
      <title>Device Data Model</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>September 2019</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-181_Issue-2.pdf</hyperlink>
    </reference>
    <reference id="TR-181i2a2">
      <name>TR-181 Issue 2 Amendment 2</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>February 2011</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-181_Issue-2_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-181i2a5">
      <name>TR-181 Issue 2 Amendment 5</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>2012</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-181_Issue-2_Amendment-5.pdf</hyperlink>
    </reference>
    <reference id="TR-181i2a8">
      <name>TR-181 Issue 2 Amendment 8</name>
      <title>Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>September 2014</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-181_Issue-2_Amendment-8.pdf</hyperlink>
    </reference>
    <reference id="TR-232">
      <name>TR-232</name>
      <title>Bulk Data Collection</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2012</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-232.pdf</hyperlink>
    </reference>
    <reference id="TR-262">
      <name>TR-262</name>
      <title>Femto Component Objects</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2011</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-262.pdf</hyperlink>
    </reference>
    <reference id="TR-304">
      <name>TR-304</name>
      <title>Broadband Access Service Attributes and Performance Metrics</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>February 2015</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-304.pdf</hyperlink>
    </reference>
    <reference id="TR-390">
      <name>TR-390</name>
      <title>Performance Measurement from Customer Equipment to IP Edge</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2017</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-390.pdf</hyperlink>
    </reference>
    <reference id="UPA-PLC">
      <name>Universal Powerline Association</name>
      <organization>UPA</organization>
      <hyperlink>https://www.upaplc.org</hyperlink>
    </reference>
    <reference id="UPnP-DAv1">
      <name>UPnP Device Architecture</name>
      <title>UPnP Device Architecture 1.0</title>
      <organization>UPnP Forum</organization>
      <date>April 2008</date>
      <hyperlink>https://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.0-20080424.pdf</hyperlink>
    </reference>
    <reference id="UPnP-DAv11">
      <name>UPnP Device Architecture 1.1</name>
      <title>UPnP Device Architecture 1.1</title>
      <organization>UPnP Forum</organization>
      <date>October, 2008</date>
      <hyperlink>https://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf</hyperlink>
    </reference>
    <reference id="UPnP-DM:1">
      <name>UPnP Device Management:1</name>
      <title>UPnP Device Management v1</title>
      <hyperlink>https://upnp.org/specs/dm/dm1/</hyperlink>
    </reference>
    <reference id="UPnP-IGD:1">
      <name>UPnP InternetGatewayDevice:1</name>
      <title>InternetGatewayDevice:1 Device Template Version 1.01</title>
      <organization>UPnP</organization>
      <category>SDCP</category>
      <date>2001</date>
      <hyperlink>https://upnp.org/specs/gw/UPnP-gw-InternetGatewayDevice-v1-Device.pdf</hyperlink>
    </reference>
    <reference id="UPnP-IGD:2">
      <name>UPnP InternetGatewayDevice:2</name>
      <title>InternetGatewayDevice:2 Device Template Version 1.01</title>
      <organization>UPnP</organization>
      <category>SDCP</category>
      <date>2010</date>
      <hyperlink>https://upnp.org/specs/gw/UPnP-gw-InternetGatewayDevice-v2-Device.pdf</hyperlink>
    </reference>
    <reference id="USB1.0">
      <name>USB 1.0</name>
      <title>USB 1.0 Specification</title>
      <organization>USB-IF</organization>
      <date>January 1996</date>
      <hyperlink>https://www.usb.org/developers/docs/</hyperlink>
    </reference>
    <reference id="USB2.0">
      <name>USB 2.0</name>
      <title>USB 2.0 Specification</title>
      <organization>USB-IF</organization>
      <date>April 2000</date>
      <hyperlink>https://www.usb.org/developers/docs/usb_20_122208.zip</hyperlink>
    </reference>
    <reference id="USB3.0">
      <name>USB 3.0</name>
      <title>USB 3.0 Specification</title>
      <organization>USB-IF</organization>
      <date>November 2008</date>
      <hyperlink>https://www.usb.org/developers/docs/usb_30_spec.zip</hyperlink>
    </reference>
    <reference id="WPS 2.0">
      <name>WSC 2.0</name>
      <title>Wi-Fi Simple Configuration Technical Specification Version 2.0.x </title>
      <organization>Wi-Fi Alliance</organization>
      <hyperlink>https://www.wi-fi.org/discover-wi-fi/wi-fi-protected-setup</hyperlink>
    </reference>
    <reference id="WPSv1.0">
      <name>Wi-Fi Protected Setup Specification Version 1.0h</name>
      <title>Wi-Fi Alliance</title>
      <date>2006</date>
      <hyperlink>https://www.wi-fi.org</hyperlink>
    </reference>
    <reference id="Z-Wave">
      <name>Z-Wave</name>
      <title>Z-Wave website</title>
      <hyperlink>https://www.z-wave.com</hyperlink>
    </reference>
    <reference id="ZigBee">
      <name>ZigBee</name>
      <title>ZigBee Alliance website</title>
      <hyperlink>https://www.zigbee.org</hyperlink>
    </reference>
    <reference id="ZigBee2007">
      <name>ZigBee 2007 Specification</name>
      <title>ZigBee 2007 Specification</title>
      <organization>ZigBee Alliance</organization>
      <date>October 2007</date>
      <hyperlink>https://www.zigbee.org/Specifications/ZigBee/download.aspx</hyperlink>
    </reference>
  </bibliography>
  <model name="Device:2.12">
    <object name="Device." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The top-level object for a Device.
      </description>
      <parameter name="RootDataModelVersion" access="readOnly" forcedInform="true" dmr:version="2.4">
        <description>
          Root data model version, e.g. ''2.4''.  For a vendor-defined root data model, this is the standard Broadband Forum model on which the vendor-defined model is based.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
            <pattern value="2\.\d+"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceStackNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Services." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains general services information.
      </description>
    </object>
    <object name="Device.DeviceInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains general device information.
      </description>
      <parameter name="DeviceCategory" access="readOnly" dmr:version="2.8">
        <description>
          Each list item is a device category (e.g. "AV_TV" and "AV_Recorder"), or the value is {{empty}} if no such element is provided by the device.
          Note: It is assumed that this list might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. Standard HTIP device categories are defined in {{bibref|JJ-300.01}}. In this case, the maximum length of the list is 127 and of each item is 31, and any non-HTIP device categories SHOULD NOT conflict with standard HTIP device categories.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Manufacturer" access="readOnly" dmr:version="2.0">
        <description>
          The manufacturer of the CPE (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="2.0">
        <description>
          Organizationally unique identifier of the device manufacturer. Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros. {{pattern}}
          The value MUST be a valid OUI as defined in {{bibref|OUI}}.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates.
          Any change would indicate that it's a new device and would therefore require a BOOTSTRAP Inform.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedDataModelNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Model name of the CPE (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelNumber" access="readOnly" dmr:version="2.8">
        <description>
          The model number of the device (human readable string), or {{empty}} if no model number is provided by the device.
          Note: It is assumed that this string might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, the maximum length of the string is 31.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          A full description of the CPE device (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" dmr:version="2.0">
        <description>
          Identifier of the class of product for which the serial number applies.  That is, for a given manufacturer, this  parameter is used to identify the product or class of product over which the {{param|SerialNumber}} parameter is unique.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's  a new device and would therefore require a BOOTSTRAP Inform.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.0">
        <description>
          Identifier of the particular device that is unique for the indicated class of product and manufacturer.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates. Any change would indicate that it's  a new device and would therefore require a BOOTSTRAP Inform.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HardwareVersion" access="readOnly" forcedInform="true" dmr:version="2.0">
        <description>
          A string identifying the particular CPE model and version.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SoftwareVersion" access="readOnly" activeNotify="forceEnabled" forcedInform="true" dmr:version="2.0">
        <description>
          A string identifying the software version currently installed in the CPE (i.e. version of the overall CPE  firmware).
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example, ''3.0.21'' where the components mean: ''Major.Minor.Build''.
          For CPEs that support multiple firmware images, the value for this parameter MUST be the software version of the active firmware image.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ActiveFirmwareImage" access="readOnly" dmr:version="2.12">
        <description>
          {{noreference}}A full path reference to the row in the {{object|FirmwareImage}} table representing the currently running firmware image.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="FirmwareImage." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BootFirmwareImage" access="readWrite" dmr:version="2.12">
        <description>
          {{noreference}}A full path reference to the row in the {{object|FirmwareImage}} table of the firmware image that is to be loaded the next time the device boots.
          This parameter value cannot be empty and must point to a valid and enabled {{object|FirmwareImage}} object where the ({{param|FirmwareImage.{i}.Available}} parameter is set to 'true'). Out of the factory, this parameter should be set to point to the firmware image the CPE will attempt to boot when first powered on.
          The firmware image instance referenced by this parameter must also have an Available parameter value of 'true'. Attempting to set this parameter to point to a non-enabled firmware image MUST result in the CPE responding with a CWMP fault (9007).
          In situations where the CPE cannot boot the firmware image specified by this parameter and manages to boot a different firmware image, the CPE MUST NOT modify this value to point to the alternate firmware image that is currently active.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="FirmwareImage." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalHardwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          {{list}}  Each entry is an additional version.  Represents any additional hardware version information the vendor might wish to supply.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AdditionalSoftwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          {{list}}  Each entry is an additional version.  Represents any additional software version information the vendor might wish to supply.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ProvisioningCode" access="readWrite" activeNotify="forceEnabled" forcedInform="true" dmr:version="2.0">
        <description>
          Identifier of the primary service provider and other provisioning information, which MAY be used by the ACS to  determine service provider-specific customization and provisioning parameters.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Time in {{units}} since the CPE was last restarted.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FirstUseDate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Date and time in UTC that the CPE first both successfully established an IP-layer network connection and acquired an absolute time reference using NTP or equivalent over that network connection.  The CPE MAY reset this date after a factory reset.
          If NTP or equivalent is not available, this parameter, if present, SHOULD be set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="FirmwareImageNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VendorConfigFileNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ProcessorNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VendorLogFileNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LocationNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DeviceImageNumberOfEntries" access="readOnly" dmr:version="2.11">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.VendorConfigFile.{i}." access="readOnly" numEntriesParameter="VendorConfigFileNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Every instance of this object is a Vendor Configuration File, and contains parameters associated with the Vendor  Configuration File.
        This table of Vendor Configuration Files is for information only and does not allow the ACS to operate on these files in any way.
        Whenever the CPE successfully downloads a configuration file as a result of the Download RPC with the FileType argument of ''3 Vendor Configuration File'', the CPE MUST update this table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          Name of the vendor configuration file.
          If the CPE is able to obtain the name of the configuration file from the file itself, then the value of this parameter MUST be set to that name.
          Otherwise, if the CPE can extract the file name from the URL used to download the configuration file, then the value of this  parameter MUST be set to that name.
          Otherwise, the value of this parameter MUST be set to the value of the TargetFileName argument of the Download RPC used to download this configuration file.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.0">
        <description>
          A string identifying the configuration file version currently used in the CPE.
          If the CPE is able to obtain the version of the configuration file from the file itself, then the value of this parameter MUST be set to the obtained value.
          Otherwise, the value of this parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Date" access="readOnly" dmr:version="2.0">
        <description>
          Date and time when the content of the current version of this vendor configuration file was first applied by the CPE.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" dmr:version="2.0">
        <description>
          A description of the vendor configuration file (human-readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UseForBackupRestore" access="readOnly" dmr:version="2.7">
        <description>
          When {{true}}, this parameter indicates that this {{object}} instance is to be used for backup and restoration purposes.
          Note: The backup and restore operations may require the use of multiple {{object}} instances. In this scenario the mechanism for detemining the order and combination of {{object}} instances used for backup and restoration purposes is implementation specific.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.MemoryStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Status of the device's volatile physical memory.
      </description>
      <parameter name="Total" access="readOnly" dmr:version="2.0">
        <description>
          The total physical RAM, in {{units}}, installed on the device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kilobytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Free" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The free physical RAM, in {{units}}, currently available on the device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kilobytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.ProcessStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Status of the processes on the device.
      </description>
      <parameter name="CPUUsage" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total amount of the CPU, in {{units}}, rounded up to the nearest whole {{units}}.  In the case that multiple CPU are present, this value represents the average of all CPU.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ProcessNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
          Since a Process can come and go very quickly, the CPE SHOULD place a locally specified limit on the frequency at which it will notify the ACS of value changes, as described in {{bibref|TR-069a2|Section 3.2.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.ProcessStatus.Process.{i}." access="readOnly" numEntriesParameter="ProcessNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        List of all processes running on the device.
      </description>
      <uniqueKey>
        <parameter ref="PID"/>
      </uniqueKey>
      <parameter name="PID" access="readOnly" dmr:version="2.0">
        <description>
          The Process Identifier.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Command" access="readOnly" dmr:version="2.0">
        <description>
          The name of the command that has caused the process to exist.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Size" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The size in {{units}} of the memory occupied by the process.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kilobytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readOnly" dmr:version="2.0">
        <description>
          The priority of the process where 0 is highest.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="99"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CPUTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The amount of time in {{units}} that the process has spent taking up CPU time since the process was started.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="State" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current state that the process is in.
        </description>
        <syntax>
          <string>
            <enumeration value="Running"/>
            <enumeration value="Sleeping"/>
            <enumeration value="Stopped"/>
            <enumeration value="Idle" optional="true"/>
            <enumeration value="Uninterruptible" optional="true"/>
            <enumeration value="Zombie" optional="true"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.TemperatureStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Status of the temperature of the device.
      </description>
      <parameter name="TemperatureSensorNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}." access="readOnly" numEntriesParameter="TemperatureSensorNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object represents information that the device has obtained via sampling an internal temperature sensor.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether or not the temperature sensor is enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this temperature sensor.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled">
              <description>
                The sensor is not currently sampling the temperature.
              </description>
            </enumeration>
            <enumeration value="Enabled">
              <description>
                The sensor is currently sampling the temperature.
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                The sensor error currently prevents sampling the temperature.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, resets the temperature sensor.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ResetTime" access="readOnly" dmr:version="2.0">
        <description>
          The time at which this temperature sensor was reset.
          Reset can be caused by:
          * {{param|Status}} transition from {{enum|Disabled|Status}} to {{enum|Enabled|Status}}
          * {{param|Reset}} set to {{true}}.
          * An internal reset of the temperature sensor (including a reboot of the device).
          The Unknown Time value, as defined in {{bibref|TR-106a2}}, indicates that this temperature sensor has never been reset, which can only happen if it has never been enabled.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          Name of this temperature sensor. This text MUST be sufficient to distinguish this temperature sensor from other temperature sensors.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          This temperature sensor's last good reading in {{units}}.
          A value of -274 (which is below absolute zero) indicates a good reading has not been obtained since last reset.
        </description>
        <syntax>
          <int>
            <range minInclusive="-274"/>
            <units value="degrees celsius"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The time at which this temperature sensor's last good reading was obtained.
          The Unknown Time value, as defined in {{bibref|TR-106a2}}, indicates a good reading has not been obtained since last reset.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="MinValue" access="readOnly" dmr:version="2.0">
        <description>
          This temperature sensor's lowest value  reading in {{units}} since last reset.
          A value of -274 (which is below absolute zero) indicates a good reading has not been obtained since last reset.
        </description>
        <syntax>
          <int>
            <range minInclusive="-274"/>
            <units value="degrees celsius"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="MinTime" access="readOnly" dmr:version="2.0">
        <description>
          The time at which this temperature sensor's lowest value was read.
          The Unknown Time value, as defined in {{bibref|TR-106a2}}, indicates a good reading has not been obtained since last reset.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="MaxValue" access="readOnly" dmr:version="2.0">
        <description>
          This temperature sensor's highest value  reading in {{units}} since last reset.
          A value of -274 (which is below absolute zero) indicates a good reading has not been obtained since last reset.
        </description>
        <syntax>
          <int>
            <range minInclusive="-274"/>
            <units value="degrees celsius"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="MaxTime" access="readOnly" dmr:version="2.0">
        <description>
          The time at which this temperature sensor's highest value was read.
          The Unknown Time value, as defined in {{bibref|TR-106a2}}, indicates a good reading has not been obtained since last reset.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LowAlarmValue" access="readWrite" dmr:version="2.0">
        <description>
          This temperature sensor's low alarm value in {{units}}.
          A value of -274 (which is below absolute zero) indicates a non configured value.
          A change to this value will cause {{param|LowAlarmTime}} to be reset.
        </description>
        <syntax>
          <int>
            <range minInclusive="-274"/>
            <units value="degrees celsius"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="LowAlarmTime" access="readOnly" dmr:version="2.0">
        <description>
          Initial time at which this temperature sensor's {{param|LowAlarmValue}} was encountered.
          This value is only set the first time the alarm is seen and not changed until the next reset.
          The Unknown Time value, as defined in {{bibref|TR-106a2}}, indicates that an alarm has not been encountered since the last reset.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="HighAlarmValue" access="readWrite" dmr:version="2.0">
        <description>
          This temperature sensor's high alarm value in {{units}}.
          A value of -274 (which is below absolute zero) indicates a non configured value.
          A change to this value will cause {{param|HighAlarmTime}} to be reset.
        </description>
        <syntax>
          <int>
            <range minInclusive="-274"/>
            <units value="degrees celsius"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="PollingInterval" access="readWrite" dmr:version="2.1">
        <description>
          The interval, measured in {{units}}, in which the device polls this {{object}}.
          If the value is 0 then the device selects its own polling interval.
          If the value is greater than 0 then the device MUST use this value as the polling interval.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="HighAlarmTime" access="readOnly" dmr:version="2.0">
        <description>
          Initial time at which this temperature sensor's {{param|HighAlarmValue}} was encountered.
          This value is only set the first time the alarm is seen and not changed until the next reset.
          The Unknown Time value, as defined in {{bibref|TR-106a2}}, indicates that an alarm has not been encountered since the last reset.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.NetworkProperties." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines the parameters that describe how the device handles network traffic.
      </description>
      <parameter name="MaxTCPWindowSize" access="readOnly" dmr:version="2.0">
        <description>
          The maximum number of {{units}} of outstanding data a sender can send on a particular connection prior to an acknowledgment {{bibref|RFC793}}.  Any scaling factor SHOULD be included in this parameter {{bibref|RFC1323}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TCPImplementation" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the TCP congestion control mechanism(s) implemented. {{enum}}
          Tahoe, Reno, and New Reno are defined in {{bibref|RFC2582}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Tahoe">
              <description>
                Represents the base TCP implementation in {{bibref|RFC793}} and elements of {{bibref|RFC2582}}
              </description>
            </enumeration>
            <enumeration value="Reno">
              <description>
                Represents the base TCP implementation in {{bibref|RFC793}} with the additional algorithms defined in {{bibref|RFC2581}}
              </description>
            </enumeration>
            <enumeration value="New Reno">
              <description>
                Described as a modification to the Reno algorithms in {{bibref|RFC2582}}
              </description>
            </enumeration>
            <enumeration value="Vegas">
              <description>
                An emerging TCP congestion control mechanism
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.Processor.{i}." access="readOnly" numEntriesParameter="ProcessorNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1" dmr:noUniqueKeys="true">
      <description>
        Each table entry represents a hardware or virtual processor that resides on this device.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Architecture" access="readOnly" dmr:version="2.1">
        <description>
          The architecture of the processor on the underlying hardware. {{enum}}
          For processor architectures not included in this list, the vendor MAY include vendor-specific values, which MUST use the format defined in {{bibref|TR-106a4|Section 3.3}}.
        </description>
        <syntax>
          <string>
            <enumeration value="arm"/>
            <enumeration value="i386"/>
            <enumeration value="m68010"/>
            <enumeration value="m68k"/>
            <enumeration value="mipseb">
              <description>
                big-endian
              </description>
            </enumeration>
            <enumeration value="mipsel">
              <description>
                little-endian
              </description>
            </enumeration>
            <enumeration value="powerpc"/>
            <enumeration value="sh3eb">
              <description>
                big-endian
              </description>
            </enumeration>
            <enumeration value="sh3el">
              <description>
                little-endian
              </description>
            </enumeration>
            <enumeration value="x86_64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.VendorLogFile.{i}." access="readOnly" numEntriesParameter="VendorLogFileNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>
        Each table entry represents a Vendor Log File.
        This table of log files is informational only and does not allow the ACS to operate on these files in any way.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>
          Name of the log file.
          Typically this will be the full file system path, but provided that it is guaranteed to be unique across current and future log files, it MAY be a shorter name derived from the file system path, or be derived via another mechanism.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaximumSize" access="readOnly" dmr:version="2.1">
        <description>
          The maximum size of the log file in {{units}}.  If the device doesn't know the maximum file size then {{param}} will be 0.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Persistent" access="readOnly" dmr:version="2.1">
        <description>
          When {{true}}, the log file contents are preserved across a device reboot.
          When {{false}}, the log file contents will be purged when the device is rebooted.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.Location.{i}." access="readWrite" numEntriesParameter="LocationNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        This object contains Location information.
      </description>
      <uniqueKey>
        <parameter ref="Source"/>
        <parameter ref="ExternalSource"/>
      </uniqueKey>
      <parameter name="Source" access="readOnly" dmr:version="2.4">
        <description>
          Identifies the source of the location data.
        </description>
        <syntax>
          <string>
            <enumeration value="GPS"/>
            <enumeration value="AGPS"/>
            <enumeration value="Manual"/>
            <enumeration value="External"/>
          </string>
          <default type="object" value="External"/>
        </syntax>
      </parameter>
      <parameter name="AcquiredTime" access="readOnly" dmr:version="2.4">
        <description>
          The time when the location was acquired.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ExternalSource" access="readOnly" dmr:version="2.4">
        <description>
          URL, MAC address, or other identifier that identifies an "External" source of this location.
          Meaningful only if {{param|Source}} has a value of {{enum|External|Source}}, otherwise it MUST be {{empty}}.
          If {{param|ExternalProtocol}} has a value of {{enum|CWMP|ExternalProtocol}},  this is the URL or IP address of the ACS.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ExternalProtocol" access="readOnly" dmr:version="2.4">
        <description>
          Protocol used to acquire a location from an "External" source. {{enum}}
          Meaningful only if {{param|Source}} has a value of {{enum|External|Source}}, otherwise it MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <enumeration value="">
              <description>
                {{empty}}
              </description>
            </enumeration>
            <enumeration value="CWMP"/>
            <enumeration value="OMA-DM"/>
            <enumeration value="SNMP"/>
            <enumeration value="UPnP"/>
            <enumeration value="HELD"/>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
            <enumeration value="LLDP-MED"/>
            <enumeration value="MLP"/>
            <enumeration value="Other"/>
          </string>
          <default type="object" value="CWMP"/>
        </syntax>
      </parameter>
      <parameter name="DataObject" access="readWrite" dmr:version="2.4">
        <description>
          The currently valid location information.
          Writable only when {{param|ExternalProtocol}} has a value of {{enum|CWMP|ExternalProtocol}}.
          If obtained through the local GPS/AGPS then the location information is formatted according to {{bibref|RFC5491}}.
          If manually configured then location information will be XML-formatted according to {{bibref|RFC5491}} (geographical information) and {{bibref|RFC5139}} (civic addresses).
          If obtained by an external source this is the location information as received.
          If it's an XML document (e.g. CWMP, OMA-DM, UPnP, HELD, MLP) the location information will be represented as-is, otherwise it will be converted to base64.
          CWMP configured location information will be XML-formatted according to {{bibref|RFC5491}} (geographical information) and {{bibref|RFC5139}} (civic addresses).
          Only zero or one Location object instance with value {{enum|CWMP|ExternalProtocol}} MUST exist at any given time.
        </description>
        <syntax>
          <string>
            <size maxLength="1200"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.DeviceImageFile.{i}." access="readOnly" numEntriesParameter="DeviceImageNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.11">
      <description>
        This object describes an image of the device.
      </description>
      <uniqueKey>
        <parameter ref="Location"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Location" access="readOnly" dmr:version="2.11">
        <description>
          The location of the device that represents the image as the user looks at the front of the device in its typical orientation (e.g., on-end, flat).
        </description>
        <syntax>
          <string>
            <enumeration value="Front"/>
            <enumeration value="Back"/>
            <enumeration value="Left"/>
            <enumeration value="Right"/>
            <enumeration value="Top"/>
            <enumeration value="Bottom"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Image" access="readOnly" dmr:version="2.11">
        <description>
          The device image in PNG, JPEG or GIF format.
        </description>
        <syntax>
          <base64/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.FirmwareImage.{i}." access="readOnly" numEntriesParameter="FirmwareImageNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        Top-level object for mapping firmware images.
        This is a static table – the number of object instances in this table is defined by the firmware that is currently running.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.12">
        <description>
          Firmware/software image name. Descriptive text of the image or filename.
          The value of {{param}} is {{empty}} if {{param|Status}} is anything other than {{enum|Available|Status}}, {{enum|InstallationFailed|Status}}, or {{enum|ActivationFailed|Status}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.12">
        <description>
          A string identifying the version of the firmware image represented by this {{object}}. Whenever this firmware image is active (ie, the device has booted this firmware image), the value of the {{param|.DeviceInfo.SoftwareVersion}} parameter MUST be the same as the value contained in this parameter.
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example, 3.0.21 where the components mean: ''Major.Minor.Build''.
          The value of {{param}} is {{empty}} if {{param|Status}} is anything other than {{enum|Available|Status}}, {{enum|InstallationFailed|Status}}, or {{enum|ActivationFailed|Status}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Available" access="readWrite" dmr:version="2.12">
        <description>
          Specifies whether or not this particular firmware image can be used by the Agent. An Agent will only attempt to boot this particular firmware image if this parameter value is set to {{true}}.
          This value MUST be set to {{true}} whenever a new firmware image is installed.
          This value cannot be set to {{false}} if the firmware image is active or is referenced by the {{param|#.BootFirmwareImage}} parameter.
          Firmware image instances cannot be deleted, so a Controller MAY use this parameter to subsequently mark a particular firmware as being invalid, which will prevent the Agent from attempting to boot it.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          Status of the firmware image, as determined by the Agent. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="NoImage">
              <description>
                This Firmware Image instance is empty.
                This value could happen on an Agent that supports multiple firmware images, but only has a single image installed.
              </description>
            </enumeration>
            <enumeration value="Downloading">
              <description>
                This Firmware Image instance is being downloaded.
              </description>
            </enumeration>
            <enumeration value="Validating">
              <description>
                This Firmware Image instance has been downloaded, and is in the process of being validated.
              </description>
            </enumeration>
            <enumeration value="Available">
              <description>
                This Firmware Image instance has been downloaded, validated, and installed, and is ready to be activated.
              </description>
            </enumeration>
            <enumeration value="DownloadFailed">
              <description>
                The Agent has attempted to download this Firmware Image instance, but ultimately failed while retrieving it from the source URL.
              </description>
            </enumeration>
            <enumeration value="ValidationFailed">
              <description>
                The Agent has attempted to validate a Firmware Image downloaded to this instance, but ultimately failed while validating it.
              </description>
            </enumeration>
            <enumeration value="InstallationFailed">
              <description>
                The Agent has attempted to install a Firmware Image downloaded and validated to this instance, but ultimately failed while installing it.
              </description>
            </enumeration>
            <enumeration value="ActivationFailed">
              <description>
                The Agent has attempted to active this Firmware Image instance, but ultimately failed while being activated.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="BootFailureLog" access="readOnly" dmr:version="2.12">
        <description>
          If the Agent is unable to boot into this firmware image, when specified, the Agent can use this parameter to record some information as to why the boot failed.
          If the Agent successfully boots into this firmware, the value of this parameter SHOULD be {{empty}}. When a new firmware image is installed into this object instance, this parameter MUST be cleared.
          The length of this string is defined as implementation-specific by the Agent.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.SupportedDataModel.{i}." access="readOnly" numEntriesParameter="SupportedDataModelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains details of the device's Current Supported Data Model.
        The table MUST describe the device's entire Supported Data Model.  Therefore, if a device's Supported Data Model changes at run-time, entries will need to be added or removed as appropriate.
        Each table entry MUST refer to only a single Root Object or Service Object.  The device MAY choose to use more than one table entry for a given Root Object or Service Object.
        Considering that every device has some form of a data model, this table MUST NOT be empty.
      </description>
      <uniqueKey>
        <parameter ref="URL"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="UUID"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readOnly" dmr:version="2.0">
        <description>
          URL ({{bibref|RFC3986}}) that describes some or all of the device's Current Supported Data Model.
          The URL MUST reference an XML file which describes the appropriate part of the Supported Data Model.
          The referenced XML file MUST be compliant with the DT (Device Type) Schema that is described in {{bibref|TR-106a3|Annex B}}, including any additional normative requirements referenced within the Schema.
          The XML file referenced by this URL MUST NOT change while the CPE is running, and SHOULD NOT change across a CPE reboot. Note that {{param|UUID}} is a unique key, so the XML file referenced by this URL will never change.
          The XML file MAY be located within the CPE. In this scenario the CPE MAY use the value of "localhost" as URL host portion, When the "localhost" value is used, the ACS has the responsibility to substitute the "localhost" value with the host portion of the connection request URL.
          Behavior in the event of an invalid URL, failure to access the referenced XML file, or an invalid XML file, is implementation-dependent.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" dmr:version="2.6">
        <description>
          UUID ({{bibref|RFC4122}}) that is the value of the uuid attribute in the DT Instance referenced by {{param|URL}}.
        </description>
        <syntax>
          <dataType ref="UUID"/>
        </syntax>
      </parameter>
      <parameter name="URN" access="readOnly" dmr:version="2.0">
        <description>
          URN ({{bibref|RFC3986}}) that is the value of the spec attribute in the DM (data model) Instance that defines the Root Object or Service Object referenced by this table entry.
          For example, if this table entry references a DT Instance that refers to the ''Device:1.3'' Root Object, the value of this parameter would be ''urn:broadband-forum-org:tr-157-1-0-0'', because TR-157 defines ''Device:1.3''.  If the DT Instance instead referred to a vendor-specific Root Object, e.g. ''X_EXAMPLE_Device:1.0'' (derived from ''Device:1.3''), the value of this parameter would be something like ''urn:example-com:device-1-0-0''.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Features" access="readOnly" dmr:version="2.0">
        <description>
          This parameter MUST list exactly the features that are defined using the top-level ''feature'' element in the DT Instance referenced by {{param|URL}}.
          For example, if the DT instance specified the following:
          :&lt;feature name="DNSServer"/&gt;
          :&lt;feature name="Router"/&gt;
          :&lt;feature name="X_MyDeviceFeature"/&gt;
          then the value of this parameter might be ''DNSServer,Router,X_MyDeviceFeature''.  The order in which the features are listed is not significant.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DeviceInfo.ProxierInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.3">
      <description>
        Represents the associated CPE Proxier for a Proxied Device that utilizes the Virtual CWMP Device Mechanism {{bibref|TR-069a4|Annex J.1.1}}.
      </description>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="2.3">
        <description>
          Organizationally unique identifier of the associated CPE Proxier.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  {{pattern}}
          The value MUST be a valid OUI as defined in {{bibref|OUI}}.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" dmr:version="2.3">
        <description>
          Identifier of the class of product of the associated CPE Proxier for which the serial number applies.
          {{empty}} indicates either that the CPE Proxier does not use a product class to differentiate its serial number.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.3">
        <description>
          Serial number of the associated CPE Proxier.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProxyProtocol" access="readOnly" dmr:version="2.3">
        <description>
          The protocol being used to communicate between the CPE Proxier and this Proxied Device. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a6|3.3}} MUST be adhered to.
        </description>
        <syntax>
          <string>
            <enumeration value="Z-Wave">
              <description>
                see {{bibref|Z-Wave}}
              </description>
            </enumeration>
            <enumeration value="ZigBee">
              <description>
                see {{bibref|ZigBee}}
              </description>
            </enumeration>
            <enumeration value="UPnP-DM">
              <description>
                see {{bibref|UPnP-DM:1}}
              </description>
            </enumeration>
            <enumeration value="ETSI-M2M">
              <description>
                see {{bibref|ETSIM2MFA}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters relating to the CPE's association with an ACS.
      </description>
      <parameter name="EnableCWMP" access="readWrite" dmr:version="2.0">
        <description>
          Enables and disables the CPE's support for CWMP.
          {{false}} means that CWMP support in the CPE is disabled, in which case the device MUST NOT send any Inform messages to the ACS or  accept any Connection Request notifications from the ACS.
          {{true}} means that CWMP support on the CPE is enabled.
          The subscriber can re-enable the CPE's CWMP support either by performing a factory reset or by using a LAN-side protocol to change  the value of this parameter back to {{true}}.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="true"/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" dmr:version="2.0">
        <description>
          URL, as defined in {{bibref|RFC3986}}, for the CPE to connect to the ACS using the CPE WAN Management Protocol.
          This parameter MUST be in the form of a valid HTTP or HTTPS URL.
          The ''host'' portion of this URL is used by the CPE for validating the ACS certificate when using SSL or TLS.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.0">
        <description>
          Username used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
          This username is used only for HTTP-based authentication of the CPE.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.0">
        <description>
          Password used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
          This password is used only for HTTP-based authentication of the CPE.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ScheduleReboot" access="readWrite" dmr:version="2.10">
        <description>
          An absolute date and time in UTC at which time the CPE will perform a reboot.
          If a CWMP session is in progress at the specified time, the CPE MUST wait until the session has ended before performing the reboot.
          If the value specifies a date and time that has already passed (i.e., a past date and time), no reboot will be performed.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="DelayReboot" access="readWrite" dmr:version="2.10">
        <description>
          The number of seconds from the time the CWMP session in which this parameter value is set is ended until the CPE performs a reboot.
          Whenever the CPE reboots, this value MUST be reset by the CPE to -1.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformEnable" access="readWrite" dmr:version="2.0">
        <description>
          Whether or not the CPE MUST periodically send CPE information to the ACS using the Inform method  call.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformInterval" access="readWrite" dmr:version="2.0">
        <description>
          The duration in {{units}} of the interval for which the CPE MUST attempt to connect with the ACS and call the  Inform method if {{param|PeriodicInformEnable}} is {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformTime" access="readWrite" dmr:version="2.0">
        <description>
          An absolute time reference in UTC to determine when the CPE will initiate the periodic Inform method calls. Each Inform call MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicInformInterval}}.
          {{param}} is used only to set the ''phase'' of the periodic Informs.  The actual value of {{param}} can be arbitrarily far into the  past or future.
          For example, if {{param|PeriodicInformInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past,  present, or future) then periodic Informs will occur every day at UTC midnight.  These MUST begin on the very next midnight, even if  {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified.  That is,  the CPE MAY locally choose the time reference, and needs only to adhere to the specified {{param|PeriodicInformInterval}}.
          If absolute time is not available to the CPE, its periodic Inform behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ParameterKey" access="readOnly" activeNotify="canDeny" forcedInform="true" dmr:version="2.0">
        <description>
          {{param}} provides the ACS a reliable and extensible means to track changes made by the ACS.  The value of  {{param}} MUST be equal to the value of the ParameterKey argument from the most recent successful SetParameterValues, AddObject, or  DeleteObject method call from the ACS.
          The CPE MUST set {{param}} to the value specified in the corresponding method arguments if and only if the method completes  successfully and no fault response is generated.  If a method call does not complete successfully (implying that the changes  requested in the method did not take effect), the value of {{param}} MUST NOT be modified.
          The CPE MUST only modify the value of {{param}} as a result of SetParameterValues, AddObject, DeleteObject, or due to a factory  reset.  On factory reset, the value of {{param}} MUST be set to {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestURL" access="readOnly" activeNotify="forceDefaultEnabled" forcedInform="true" dmr:version="2.0">
        <description>
          HTTP URL, as defined in {{bibref|RFC3986}}, for an ACS to make a Connection Request notification to the CPE.
          In the form:
          : http://host:port/path
          The ''host'' portion of the URL MAY be the IP address for the management interface of the CPE in lieu of a host name.
          Note: If the ''host'' portion of the URL is a literal IPv6 address then it MUST be enclosed in square brackets (see {{bibref|RFC3986|Section 3.2.2}}).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestUsername" access="readWrite" dmr:version="2.0">
        <description>
          Username used to authenticate an ACS making a Connection Request to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestPassword" access="readWrite" dmr:version="2.0">
        <description>
          Password used to authenticate an ACS making a Connection Request to the CPE.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpgradesManaged" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether or not the ACS will manage upgrades for the CPE.  If {{true}}, the CPE SHOULD NOT use other  means other than the ACS to seek out available upgrades.  If {{false}}, the CPE MAY use other means for this purpose.
          Note that an autonomous upgrade (reported via an "10 AUTONOMOUS TRANSFER COMPLETE" Inform Event code) SHOULD be regarded as a managed  upgrade if it is performed according to ACS-specified policy.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="KickURL" access="readOnly" dmr:version="2.0">
        <description>
          Present only for a CPE that supports the Kicked RPC method.
          LAN-accessible URL, as defined in {{bibref|RFC3986}}, from which the CPE can be ''kicked'' to initiate the Kicked RPC method call.   MUST be an absolute URL including a host name or IP address as would be used on the LAN side of the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadProgressURL" access="readOnly" dmr:version="2.0">
        <description>
          Present only for a CPE that provides a LAN-side web page to show progress during a file download.
          LAN-accessible URL, as defined in {{bibref|RFC3986}}, to which a web-server associated with the ACS MAY redirect a user's browser on  initiation of a file download to observer the status of the download.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultActiveNotificationThrottle" access="readWrite" dmr:version="2.0">
        <description>
          This parameter is used to control throttling of active notifications sent by the CPE to the ACS.  It defines the  minimum number of {{units}} that the CPE MUST wait since the end of the last session with the ACS before establishing a new session for  the purpose of delivering an active notification.
          In other words, if CPE needs to establish a new session with the ACS for the sole purpose of delivering an active notification, it  MUST delay establishing such a session as needed to ensure that the minimum time since the last session completion has been met.
          The time is counted since the last successfully completed session, regardless of whether or not it was used for active notifications  or other purposes. However, if connection to the ACS is established for purposes other than just delivering active notifications,  including for the purpose of retrying a failed session, such connection MUST NOT be delayed based on this parameter value, and the  pending active notifications MUST be communicated during that connection.
          The time of the last session completion does not need to be tracked across reboots.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CWMPRetryMinimumWaitInterval" access="readWrite" dmr:version="2.0">
        <description>
          Configures the first session retry wait interval, in {{units}}, as specified in {{bibref|TR-069a2|section 3.2.1.1}}.
          A value of 5 corresponds to the default behavior that is described in {{bibref|TR-069a2}}.
          The device MUST use a random value between {{param}}  and ({{param}} * {{param|CWMPRetryIntervalMultiplier}} / 1000) as the first  retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CWMPRetryIntervalMultiplier" access="readWrite" dmr:version="2.0">
        <description>
          Configures the retry interval multiplier as specified in {{bibref|TR-069a2|section 3.2.1.1}}.
          This value is expressed in units of 0.001.  Hence the values of the multiplier range between 1.000 and 65.535.
          A value of 2000 corresponds to the default behavior that is described in {{bibref|TR-069a2}}.
          The device MUST use a random value between {{param|CWMPRetryMinimumWaitInterval}}  and ({{param|CWMPRetryMinimumWaitInterval}} *  {{param}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a  starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="HTTPConnectionRequestEnable" access="readWrite" dmr:version="2.11">
        <description>
          Enables or disables HTTP connection request handling on the CPE.
          If HTTP connection request handling is disabled ({{param}} is set to {{false}}), {{param|ConnectionRequestURL}} MUST be set to {{empty}} and the CPE MUST close the port used by the HTTP connection request server.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="true"/>
        </syntax>
      </parameter>
      <parameter name="UDPConnectionRequestAddress" access="readOnly" dmr:version="2.0">
        <description>
          Address and port to which an ACS MAY send a UDP Connection Request to the CPE (see {{bibref|TR-069a2|Annex G}}).
          This parameter is represented in the form of an Authority element as defined in {{bibref|RFC3986}}.  The value MUST be in one of the  following two forms:
          : host:port
          : host
          * When {{param|STUNEnable}} is {{true}}, the ''host'' and ''port'' portions of this parameter MUST represent the public address and port corresponding to the NAT binding through which the ACS can send UDP Connection Request messages (once this information is learned by the CPE through the use of STUN).
          * When {{param|STUNEnable}} is {{false}}, the ''host'' and ''port'' portions of the URL MUST represent the local IP address and port on which the CPE is listening for UDP Connection Request messages.
          The second form of this parameter MAY be used only if the port value is equal to ''80''.
          Note: If the ''host'' portion of the URL is a literal IPv6 address then it MUST be enclosed in square brackets (see {{bibref|RFC3986|Section 3.2.2}}).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNEnable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the use of STUN by the CPE.  This applies only to the use of STUN in association with the  ACS to allow UDP Connection Requests.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="STUNServerAddress" access="readWrite" dmr:version="2.0">
        <description>
          Host name or IP address of the STUN server for the CPE to send Binding Requests if STUN is enabled via  {{param|STUNEnable}}.
          If is {{empty}} and {{param|STUNEnable}} is {{true}}, the CPE MUST use the address of the ACS extracted from the host portion of the  ACS URL.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNServerPort" access="readWrite" dmr:version="2.0">
        <description>
          Port number of the STUN server for the CPE to send Binding Requests if STUN is enabled via {{param|STUNEnable}}.
          By default, this SHOULD be the equal to the default STUN port, 3478.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="STUNUsername" access="readWrite" dmr:version="2.0">
        <description>
          If is not {{empty}}, the value of the STUN USERNAME attribute to be used in Binding Requests (only if message  integrity has been requested by the STUN server).
          If is {{empty}}, the CPE MUST NOT send STUN Binding Requests with message integrity.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNPassword" access="readWrite" dmr:version="2.0">
        <description>
          The value of the STUN Password to be used in computing the MESSAGE-INTEGRITY attribute to be used in Binding  Requests (only if message integrity has been requested by the STUN server).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNMaximumKeepAlivePeriod" access="readWrite" dmr:version="2.0">
        <description>
          If STUN Is enabled, the maximum period, in {{units}}, that STUN Binding Requests MUST be sent by the CPE for the  purpose of maintaining the binding in the Gateway.  This applies specifically to Binding Requests sent from the UDP Connection  Request address and port.
          A value of -1 indicates that no maximum period is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="STUNMinimumKeepAlivePeriod" access="readWrite" dmr:version="2.0">
        <description>
          If STUN Is enabled, the minimum period, in {{units}}, that STUN Binding Requests can be sent by the CPE for the  purpose of maintaining the binding in the Gateway.  This limit applies only to Binding Requests sent from the UDP Connection Request  address and port, and only those that do not contain the BINDING-CHANGE attribute.  This limit does not apply to retransmissions  following the procedures defined in {{bibref|RFC3489}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NATDetected" access="readOnly" dmr:version="2.0">
        <description>
          When STUN is enabled, this parameter indicates whether or not the CPE has detected address and/or port mapping  in use.
          A {{true}} value indicates that the received MAPPED-ADDRESS in the most recent Binding Response differs from the CPE's source address and port.
          When {{param|STUNEnable}} is {{false}}, this value MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AliasBasedAddressing" access="readOnly" forcedInform="true" dmr:version="2.3">
        <description>
          Indicates whether or not the Alias-Based Addressing Mechanism is supported.
          A {{true}} value indicates that the CPE supports the Alias-Based Addressing Mechanism, as defined in {{bibref|TR-069a4|3.6.1}} and described in {{bibref|TR-069a4|Appendix II}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InstanceMode" access="readWrite" dmr:version="2.3">
        <description>
          Instance identification mode as defined in {{bibref|TR-069a4|3.6.1}}. When {{param|AliasBasedAddressing}} is {{true}}, {{param}} is used by the ACS to control whether the CPE will use Instance Numbers or Instance Aliases in returned Path Names.  {{enum}}
          This parameter is REQUIRED for any CPE supporting Alias-Based Addressing.
        </description>
        <syntax>
          <string>
            <enumeration value="InstanceNumber"/>
            <enumeration value="InstanceAlias"/>
          </string>
          <default type="factory" value="InstanceNumber"/>
        </syntax>
      </parameter>
      <parameter name="AutoCreateInstances" access="readWrite" dmr:version="2.3">
        <description>
          Enable or disable the Auto-Create Instance Mechanism. When {{param|AliasBasedAddressing}} is {{true}}, {{param}} indicates whether or not the CPE will automatically create instances while processing a SetParameterValues RPC (as defined in {{bibref|TR-069a4|A.3.2.1}}).
          *A {{true}} value indicates that the CPE will perform auto-creation of instances when the Alias-Based Addressing Mechanism is used in SetParameterValues RPC.
          *A {{false}} value indicates that the CPE will not create new object instances. Instead, it will reject the setting of parameters in unrecognized instances and respond with a fault code.
          This parameter is REQUIRED for any CPE supporting Alias-Based Addressing.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ManageableDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ManageableDeviceNotificationLimit" access="readWrite" dmr:version="2.7">
        <description>
          The minimum time, in seconds, between Active Notifications resulting from changes to the {{param|ManageableDeviceNumberOfEntries}} (if Active Notification is enabled).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EmbeddedDeviceNumberOfEntries" access="readOnly" dmr:version="2.3">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VirtualDeviceNumberOfEntries" access="readOnly" dmr:version="2.3">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SupportedConnReqMethods" access="readOnly" dmr:version="2.7">
        <description>
          The connection request methods supported by this {{object}}. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP">
              <description>
                The connection request method as specified in {{bibref|TR-069|Section 3.2.2 ACS Connection Initiation}}, '''REQUIRED'''
              </description>
            </enumeration>
            <enumeration value="STUN" optional="true">
              <description>
                The connection request method as specified in {{bibref|TR-069|Annex G Connection Request via NAT Gateway}}
              </description>
            </enumeration>
            <enumeration value="XMPP" optional="true">
              <description>
                The connection request method as specified in {{bibref|TR-069a5|Annex K XMPP Connection Request}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnReqXMPPConnection" access="readWrite" dmr:version="2.7">
        <description>
          {{reference|the {{object|.XMPP.Connection}} instance that is used for connection requests to this {{object}}}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".XMPP.Connection." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnReqAllowedJabberIDs" access="readWrite" dmr:version="2.7">
        <description>
          When an XMPP Connection Request is sent to a CPE the XMPP IQ Stanza will contian a "from" address that contains the Jabber ID of the initiating entity.
          This parameter is a {{list}} Each entry represents a Jabber ID, or address, that is allowed to initiate an XMPP Connection Request.
          Each Jabber ID is allowed to be either a "Full JID" (containing a local-part, domain-part, and resource-part in the following format: "local-part@domain-part/resource-part") or a "Bare JID" (containing a local-part and a domain-part in the following format: "local-part@domain-part").  "Full JID" entries require an exact match whereas "Bare JID" entries are a wildcard match and will match any Jabber ID with the same local-part and domain-part independent of the resource-part.
          For example, if {{param}} contained "ACS1@tr069.example.com, ACS2@tr-069.example.com/resource1" then the following incoming "from" addresses would be '''allowed''':
          * "ACS1@tr069.example.com/resource1"
          * "ACS1@tr069.example.com/resource2"
          * "ACS2@tr069.example.com/resource1"
          And the following incoming "from" addresses '''would not be allowed''':
          * "ACS2@tr069.example.com/resource2"
          * "ACS@tr069.example.com/resource"
          If this Parameter is {{empty}} then all Jabber IDs are allowed and an XMPP Connection Request can not be deemed invalid due to the "from" address.
        </description>
        <syntax>
          <list maxItems="32"/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnReqJabberID" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.7">
        <description>
          The value MUST be the value of the {{param|.XMPP.Connection.{i}.JabberID}} contained in the {{object|.XMPP.Connection}} instance referenced by the {{param|ConnReqXMPPConnection}} parameter.
          If the {{param|ConnReqXMPPConnection}} parameter is empty or the {{object|.XMPP.Connection}} instance being reference is disabled, then this value will be empty.
          If the {{object|.XMPP.Connection}} instance being referenced by the {{param|ConnReqXMPPConnection}} parameter is lost ({{param|.XMPP.Connection.{i}.Status}} parameter changes from Enabled to some other value), then the value of this parameter MUST remain unchanged until the connection can be reestablished and a new {{param|.XMPP.Connection.{i}.JabberID}} can be established.  If the new {{param|.XMPP.Connection.{i}.JabberID}} is identical to the existing value, then the value of this parameter MUST NOT be altered and a VALUE CHANGE event MUST NOT be generated.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HTTPCompressionSupported" access="readOnly" dmr:version="2.7">
        <description>
          Indicates the HTTP Compression mechanism(s) supported by this CPE.  Requirements for the use of HTTP Compression for CWMP can be found in {{bibref|TR-069a5|Section 3.4.7}}. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a7|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="GZIP">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Compress">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Deflate">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="HTTPCompression" access="readWrite" dmr:version="2.7">
        <description>
          The value of this parameter represents the HTTP Compression mechanism to be used by the CPE when communicating with the ACS.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="HTTPCompressionSupported" nullValue="Disabled"/>
          </string>
          <default type="factory" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="LightweightNotificationProtocolsSupported" access="readOnly" dmr:version="2.7">
        <description>
          Indicates the Lightweight Notification Protocol(s) supported by this CPE.  {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a7|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="UDP">
              <description>
                As defined in {{bibref|TR-069a5|Annex M}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LightweightNotificationProtocolsUsed" access="readWrite" dmr:version="2.7">
        <description>
          The value of this parameter represents the protocol(s) that will be used by the CPE when sending Lightweight Notifications.
          {{empty}} means that Lightweight Notifications are disabled, despite any SetParameterAttributes that have been configured on various parameters.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="LightweightNotificationProtocolsSupported" nullValue=""/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LightweightNotificationTriggerInterval" access="readWrite" dmr:version="2.12">
        <description>
          The duration in {{units}} of the interval for which the CPE MUST attempt to deliver any pending Passive Lightweight Notifications.
          A value of 0 means that the trigger interval is effectively disabled. In this case pending Passive Lightweight Notifications are only sent when triggered by an Active Lightweight Notification.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LightweightNotificationTriggerTime" access="readWrite" dmr:version="2.12">
        <description>
          An absolute time reference in UTC to determine when the CPE will initiate the Lightweight Notification (in the case that there are pending Passive Lightweight Notifications that need to be delivered). Each Passive Lightweight Notification (that is waiting for the Lightweight Notification Trigger mechanism for delivery) MUST occur at this reference time plus or minus an integer multiple of the {{param|LightweightNotificationTriggerInterval}}. {{param}} is used only to set the ''phase'' of the Passive Lightweight Notification. The actual value of {{param}} can be arbitrarily far into the past or future.
          For example, if {{param|LightweightNotificationTriggerInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then Lightweight Notifications for pending Passive Lightweight Notifications will occur every day at UTC midnight. These MUST begin on the very next midnight, even if {{param}} refers to a day in the future. The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified {{param|LightweightNotificationTriggerInterval}}. If absolute time is not available to the CPE, its Lightweight Notifications behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="UDPLightweightNotificationHost" access="readWrite" dmr:version="2.7">
        <description>
          Host name or address to be used when sending the UDP Lightweight Notifications.
          {{param}} is only applicable when {{param|LightweightNotificationProtocolsUsed}} contains the {{enum|UDP|LightweightNotificationProtocolsUsed}} enumeration.
          If {{param}} is not implemented or is {{empty}}, and UDP Lightweight Notifications are supported, the destination host MUST be the same as the ACS (as contained in the host portion of the {{param|URL}}).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UDPLightweightNotificationPort" access="readWrite" dmr:version="2.7">
        <description>
          The port number to be used when sending UDP Lightweight Notifications.
          {{param}} is only applicable when {{param|LightweightNotificationProtocolsUsed}} contains the {{enum|UDP|LightweightNotificationProtocolsUsed}} enumeration.
          If {{param}} is not implemented and UDP Lightweight Notifications are supported, the destination port MUST be 7547.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InstanceWildcardsSupported" access="readOnly" dmr:version="2.12">
        <description>
          Indicates whether or not instance wildcards are supported.
          A {{true}} value indicates that the CPE supports instance wildcards for GPV, GPN and GPA RPC calls, as defined in [TR-069a6].
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InformParameterNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.ManageableDevice.{i}." access="readOnly" numEntriesParameter="ManageableDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Each entry in this table corresponds to a distinct LAN Device that supports Device-Gateway Association according to {{bibref|TR-069a2|Annex F}} as indicated by the presence of the DHCP option specified in that Annex.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="ManufacturerOUI"/>
        <parameter ref="SerialNumber"/>
        <parameter ref="ProductClass"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" status="deprecated" dmr:version="2.0">
        <description>
          A non-volatile handle used to reference this instance. {{param}} provides a mechanism for an ACS to label this instance for future reference. An initial unique value MUST be assigned when the CPE creates an instance of this object.
          This parameter is DEPRECATED because {{object}} is a transient object.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Organizationally unique identifier of the Device manufacturer as provided to the Gateway by the Device.   Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  {{pattern}}
          The value MUST be a valid  OUI as defined in {{bibref|OUI}}.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Serial number of the Device as provided to the Gateway by the Device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Identifier of the class of product for which the Device's serial number applies as provided to the Gateway by  the Device.
          If the Device does not provide a Product Class, then this parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} {{reference}}  References all the {{object|.Hosts.Host}} table entries, whether active or inactive, that correspond to this physical LAN device.  There can be multiple such entries if the device has more than one network interface.
          For example: ''Device.Hosts.Host.1,Device.Hosts.Host.5''
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetParent=".Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.AutonomousTransferCompletePolicy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object allows configuration of CPE policy for notification of AUTONOMOUS TRANSFER COMPLETE events, defined in {{bibref|TR-069a2}}.
        The CPE policy determines the conditions under which the CPE notifies the ACS of the completion of file transfers that were not specifically requested by the ACS.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enable/disable CPE notification of AUTONOMOUS TRANSFER COMPLETE events to the ACS.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransferTypeFilter" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the transfer types that MUST be included when the CPE notifies the ACS of AUTONOMOUS TRANSFER COMPLETE events.   Transfer types not indicated by this filter MUST NOT be included when the CPE notifies the ACS. {{enum}}
          Note that this includes any backup or restore operations that were not specifically requested by the ACS.  A backup is regarded as an Upload and a restore is regarded as a Download.
        </description>
        <syntax>
          <string>
            <enumeration value="Upload"/>
            <enumeration value="Download"/>
            <enumeration value="Both">
              <description>
                Upload and Download
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ResultTypeFilter" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the transfer results that MUST be included when the CPE notifies the ACS of AUTONOMOUS TRANSFER COMPLETE events.  Transfer results omitted from this list MUST NOT be included when the CPE notifies the ACS.
          Note that this includes any backup or restore operations that were not specifically requested by the ACS.  A backup is regarded as an Upload and a restore is regarded as a Download.
        </description>
        <syntax>
          <string>
            <enumeration value="Success">
              <description>
                The autonomous file transfer completed successfully; i.e., the FaultCode was zero
              </description>
            </enumeration>
            <enumeration value="Failure">
              <description>
                The autonomous file transfer did not complete successfully; i.e., the FaultCode was non-zero
              </description>
            </enumeration>
            <enumeration value="Both">
              <description>
                Success and Failure
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="FileTypeFilter" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Indicates the file types that MUST be included when the CPE notifies the ACS of AUTONOMOUS TRANSFER COMPLETE events.  File types omitted from this list MUST NOT be included when the CPE notifies the ACS.
          {{pattern}}
          Additionally, the following format is defined to allow the unique definition of vendor-specific file types:
          * ''"X &lt;OUI&gt; &lt;Vendor-specific identifier&gt;"''
          &lt;OUI&gt; is replaced by a 6 hexadecimal-digit OUI (organizationally unique identifier) as defined in {{bibref|OUI}}, with all upper-case letters and any leading zeros included. The OUI used for a given vendor-specific file type MUST be one that is assigned to the organization that defined this file type (which is not necessarily the same as the vendor of the CPE or ACS).
          Note that {{empty}} indicates that all file types are excluded from this filter, effectively disabling CPE notification of AUTONOMOUS TRANSFER COMPLETE events to the ACS.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pattern value="1 Firmware Upgrade Image">
              <description>
                Download Only
              </description>
            </pattern>
            <pattern value="2 Web Content">
              <description>
                Download Only
              </description>
            </pattern>
            <pattern value="3 Vendor Configuration File">
              <description>
                Download or Upload
              </description>
            </pattern>
            <pattern value="4 Vendor Log File">
              <description>
                Upload Only
              </description>
            </pattern>
            <pattern value="X [0-9A-F]{6} .*">
              <description>
                For Vendor-Specific File Types, could be for either Download or Upload
              </description>
            </pattern>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.DownloadAvailability." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains multicast announcement and query parameters used for the purpose of downloading files.
      </description>
    </object>
    <object name="Device.ManagementServer.DownloadAvailability.Announcement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains multicast announcement parameters used to download files.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enable/disable CPE ability to receive and use multicast announcements from a server for the purpose of downloading files.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the announcement service.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true">
              <description>
                MAY be used by the CPE to indicate a locally defined error condition.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="GroupNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.DownloadAvailability.Announcement.Group.{i}." access="readWrite" numEntriesParameter="GroupNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Multicast groups to which the CPE SHOULD listen for announcements.
      </description>
      <uniqueKey>
        <parameter ref="URL"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enable/disable listening to this multicast group.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this group table entry.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true">
              <description>
                MAY be used by the CPE to indicate a locally defined error condition, e.g. unable to parse received announcements.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" dmr:version="2.0">
        <description>
          URL {{bibref|RFC3986}} encoding the group address, source and port on which to listen, and other protocol information, e.g. expected announcement format.
          Depending on the application, the messages identified by this URL MAY directly contain the data to be downloaded, or alternatively MAY contain information informing the CPE how to obtain the data to be downloaded via a separate mechanism, which itself could involve a unicast or a multicast download protocol.
          Refer to {{bibref|DVB-TS.102.824}} for an example of a URL format that identifies a SAP {{bibref|RFC2974}} stream that indicates how to use either FLUTE {{bibref|RFC3926}} or DSM-CC {{bibref|ISO-13818-6:1998}} to perform the download.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.DownloadAvailability.Query." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains multicast query parameters used to download files.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enable/disable CPE ability to autonomously query a server for the purpose of downloading files.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the query service.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true">
              <description>
                MAY be used by the CPE to indicate a locally defined error condition, e.g. unable to contact query response server.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" dmr:version="2.0">
        <description>
          URL {{bibref|RFC3986}} of the query response server.
          Depending on the application, the protocol described by this URL MAY be a SOAP interface, or MAY be any other RPC mechanism.
          Refer to {{bibref|DVB-TS.102.824}} for an example of a URL format that identifies a SOAP interface running over HTTP or HTTPS.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.DUStateChangeComplPolicy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.1">
      <description>
        This object allows configuration of CPE policy for notification of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events defined in {{bibref|TR-069a3}}.
        The CPE policy determines the conditions under which the CPE notifies the ACS of the completion of Deployment Unit state changes that were not specifically requested via CWMP.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.1">
        <description>
          Enables/Disables CPE notification of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events to the ACS.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OperationTypeFilter" access="readWrite" dmr:version="2.1">
        <description>
          Indicates the Deployment Unit operations that MUST be included when the CPE notifies the ACS of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events.
          Operation types not indicated by this list MUST NOT be included when the CPE notifies the ACS.  {{empty}} is essentially the same as setting {{param|Enable}} to {{false}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Install"/>
            <enumeration value="Update"/>
            <enumeration value="Uninstall"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ResultTypeFilter" access="readWrite" dmr:version="2.1">
        <description>
          Indicates the Deployment Unit state change results that MUST be included when the CPE notifies the ACS of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events.  State change results omitted from this filter MUST NOT be included when the CPE notifies the ACS.
        </description>
        <syntax>
          <string>
            <enumeration value="Success">
              <description>
                The autonomous state change completed successfully; i.e., the FaultCode was zero
              </description>
            </enumeration>
            <enumeration value="Failure">
              <description>
                The autonomous state change did not complete successfully; i.e., the FaultCode was non-zero
              </description>
            </enumeration>
            <enumeration value="Both">
              <description>
                All result types independent of Success or Failure
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="FaultCodeFilter" access="readWrite" dmr:version="2.1">
        <description>
          Indicates the Deployment Unit state change fault codes that MUST be included when the CPE notifies the ACS of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events.  State change fault codes omitted from this filter MUST NOT be included when the CPE notifies the ACS.
          This filter has no effect on the notification of a successful autonomous state change. This filter only applies when {{param|ResultTypeFilter}} is set to either {{enum|Failure|ResultTypeFilter}} or {{enum|Both|ResultTypeFilter}}.  {{empty}} means that failed autonomous state changes will not be sent to the ACS.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="9001"/>
            <enumeration value="9003"/>
            <enumeration value="9012"/>
            <enumeration value="9013"/>
            <enumeration value="9015"/>
            <enumeration value="9016"/>
            <enumeration value="9017"/>
            <enumeration value="9018"/>
            <enumeration value="9022"/>
            <enumeration value="9023"/>
            <enumeration value="9024"/>
            <enumeration value="9025"/>
            <enumeration value="9026"/>
            <enumeration value="9027"/>
            <enumeration value="9028"/>
            <enumeration value="9029"/>
            <enumeration value="9030"/>
            <enumeration value="9031"/>
            <enumeration value="9032"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.EmbeddedDevice.{i}." access="readOnly" numEntriesParameter="EmbeddedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.3">
      <description>
        Each entry in this table represents a distinct Proxied Device that utilizes the Embedded Object Mechanism {{bibref|TR-069a4|Annex J.1.2}} for proxying devices.
      </description>
      <uniqueKey>
        <parameter ref="ControllerID"/>
        <parameter ref="ProxiedDeviceID"/>
      </uniqueKey>
      <parameter name="ControllerID" access="readOnly" dmr:version="2.3">
        <description>
          Identifier of the controller that is responsible for a sub-network of Proxied Devices within the LAN.
          {{empty}} indicates that this Proxied Device either:
          * Isn't part of a sub-network, within the LAN, with a controller entity.
          * Doesn't need a {{param}} to ensure its {{param|ProxiedDeviceID}} is unique throughout the LAN.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProxiedDeviceID" access="readOnly" dmr:version="2.3">
        <description>
          Idenitfier of the Proxied Device.
          This is an opaque string that is unique to the Proxied Device within a specific sub-network within the LAN (identified by the {{param|ControllerID}}).  If the {{param|ControllerID}} is {{empty}} this {{param}} is unique across the LAN.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reference" access="readOnly" dmr:version="2.3">
        <description>
          {{noreference}}The value MUST be the path name of a table row.  If the referenced object is deleted, this {{object}} instance MUST also be removed. Represents the instance of a multi-instanced object that is directly controlled by, and has come into existence because of, this Proxied Device  that utilizes the Embedded Object Mechanism {{bibref|TR-069a4|Annex J.1.2}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedDataModel" access="readOnly" dmr:version="2.3">
        <description>
          Represents the CWMP-DT schema instance(s) that this Proxied Device is utilizing.  The CWMP-DT schema instance is also the one being utilized by the object referenced within {{param|Reference}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.SupportedDataModel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.3">
        <description>
          References the {{object|.Hosts.Host}} table entry(s), whether active or inactive, that corresponds to this proxied LAN device.
        </description>
        <syntax>
          <list maxItems="32"/>
          <string>
            <pathRef refType="strong" targetParent=".Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProxyProtocol" access="readOnly" dmr:version="2.3">
        <description>
          The protocol being used to communicate between the CPE Proxier and this Proxied Device. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a6|3.3}} MUST be adhered to.
        </description>
        <syntax>
          <string>
            <enumeration value="Z-Wave">
              <description>
                see {{bibref|Z-Wave}}
              </description>
            </enumeration>
            <enumeration value="ZigBee">
              <description>
                see {{bibref|ZigBee}}
              </description>
            </enumeration>
            <enumeration value="UPnP-DM">
              <description>
                see {{bibref|UPnP-DM:1}}
              </description>
            </enumeration>
            <enumeration value="ETSI-M2M">
              <description>
                see {{bibref|ETSIM2MFA}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProxyProtocolReference" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|a protocol object that uses the {{param|ProxyProtocol}}}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiscoveryProtocol" access="readOnly" dmr:version="2.6">
        <description>
          {{list|that represents the discovery protocol(s) for this proxied device}}
          {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a3|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Z-Wave">
              <description>
                see {{bibref|Z-Wave}}
              </description>
            </enumeration>
            <enumeration value="ZigBee">
              <description>
                see {{bibref|ZigBee}}
              </description>
            </enumeration>
            <enumeration value="UPnP">
              <description>
                see {{bibref|UPnP-DAv1}}
              </description>
            </enumeration>
            <enumeration value="ETSI-M2M">
              <description>
                see {{bibref|ETSIM2MFA}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiscoveryProtocolReference" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference|an object discovered using one or more protocols listed in {{param|DiscoveryProtocol}}|ignore}}
          For objects discovered by the UPnP discovery protocol, the {{param}} would contain items that are references to instances of the following:
          * {{object|.UPnP.Discovery.RootDevice}}
          * {{object|.UPnP.Discovery.Device}}
          * {{object|.UPnP.Discovery.Service}}
          For objects discovered by the ETSI-M2M discovery protocol, the {{param}} would contain items that are references to instances of ETSIM2M.SCL.{i}.AreaNwkDeviceInfoInstance.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CommandProcessed" access="readOnly" dmr:version="2.3">
        <description>
          Whether or not the CPE Proxier has successfully communicated all pending configuration commands down to the Proxied Device.
        </description>
        <syntax>
          <string>
            <enumeration value="Pending"/>
            <enumeration value="Retrying"/>
            <enumeration value="Success"/>
            <enumeration value="Error"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CommandProcessingErrMsg" access="readOnly" dmr:version="2.3">
        <description>
          Detailed {{param|CommandProcessed}} error description (vendor specific).
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastSyncTime" access="readOnly" dmr:version="2.3">
        <description>
          The last time that the CPE Proxier synchronized the state of the Proxied Device.  This parameter MUST be updated when a proxy command is executed successfully on the Proxied Device.
          The Unknown Time value, as defined in {{bibref|TR-106a6}}, indicates that the Proxied Device's state has not been synchronized since the CPE Proxier was last rebooted.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.VirtualDevice.{i}." access="readOnly" numEntriesParameter="VirtualDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.3">
      <description>
        Each entry in this table represents a distinct Proxied Device that utilizes the Virtual CWMP Device Mechanism {{bibref|TR-069a4|Annex I.1.1}} for proxying devices.
      </description>
      <uniqueKey>
        <parameter ref="ManufacturerOUI"/>
        <parameter ref="ProductClass"/>
        <parameter ref="SerialNumber"/>
      </uniqueKey>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="2.3">
        <description>
          Organizationally unique identifier of the associated Proxied Device.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  {{pattern}}
          The value MUST be a valid OUI as defined in {{bibref|OUI}}.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" dmr:version="2.3">
        <description>
          Identifier of the class of product of the associated Proxied Device for which the serial number applies.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.3">
        <description>
          Serial number of the associated Proxied Device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.3">
        <description>
          {{list}} {{reference}}  References all the {{object|.Hosts.Host}} table entries, whether active or inactive, that correspond to this proxied LAN device.  There can be multiple such entries if the Proxied Device has more than one network interface.
        </description>
        <syntax>
          <list maxItems="32"/>
          <string>
            <pathRef refType="strong" targetParent=".Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProxyProtocol" access="readOnly" dmr:version="2.3">
        <description>
          The protocol being used to communicate between the CPE Proxier and this Proxied Device. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a6|3.3}} MUST be adhered to.
        </description>
        <syntax>
          <string>
            <enumeration value="Z-Wave">
              <description>
                see {{bibref|Z-Wave}}
              </description>
            </enumeration>
            <enumeration value="ZigBee">
              <description>
                see {{bibref|ZigBee}}
              </description>
            </enumeration>
            <enumeration value="UPnP-DM">
              <description>
                see {{bibref|UPnP-DM:1}}
              </description>
            </enumeration>
            <enumeration value="ETSI-M2M">
              <description>
                see {{bibref|ETSIM2MFA}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProxyProtocolReference" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|a protocol object that uses the {{param|ProxyProtocol}}}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiscoveryProtocol" access="readOnly" dmr:version="2.6">
        <description>
          {{list|that represents the discovery protocol(s) for this proxied device}}
          {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a3|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Z-Wave">
              <description>
                see {{bibref|Z-Wave}}
              </description>
            </enumeration>
            <enumeration value="ZigBee">
              <description>
                see {{bibref|ZigBee}}
              </description>
            </enumeration>
            <enumeration value="UPnP">
              <description>
                see {{bibref|UPnP-DAv1}}
              </description>
            </enumeration>
            <enumeration value="ETSI-M2M">
              <description>
                see {{bibref|ETSIM2MFA}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiscoveryProtocolReference" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference|an object discovered using one or more protocols listed in {{param|DiscoveryProtocol}}|ignore}}
          For objects discovered by the UPnP discovery protocol, the {{param}} would contain items that are references to instances of the following:
          * {{object|.UPnP.Discovery.RootDevice}}
          * {{object|.UPnP.Discovery.Device}}
          * {{object|.UPnP.Discovery.Service}}
          For objects discovered by the ETSI-M2M discovery protocol, the {{param}} would contain items that are references to instances of ETSIM2M.SCL.{i}.AreaNwkDeviceInfoInstance.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.StandbyPolicy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        Parameters related to CPE behavior when waking up from standby. If this object is supported then the CPE MUST support the requirements of {{bibref|TR-069a5|Annex L}}.
        NOTE: "CR", as used in the names and descriptions of the parameters defined in this object, refers to the Connection Request concept defined in TR-069.
      </description>
      <parameter name="CRUnawarenessMaxDuration" access="readWrite" dmr:version="2.7">
        <description>
          When waking up from a non CR-Aware Standby that lasted more than this parameter's value (in {{units}}), the CPE MUST issue a WAKEUP Event.
          If the value is -1, the CPE MUST NOT ever issue WAKEUP Events for having been non CR-aware.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
          <default type="factory" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="MaxMissedPeriodic" access="readWrite" dmr:version="2.7">
        <description>
          When waking up from a non fully Timer-Aware Standby that made it miss more than this parameter's value Periodic Contacts, the CPE MUST issue a WAKEUP Event.
          If the value is -1, the CPE MUST NOT ever issue WAKEUP Events for exceeding that limit.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="factory" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="NotifyMissedScheduled" access="readWrite" dmr:version="2.7">
        <description>
          When waking up from a non fully Timer-Aware Standby that made it miss at least one Scheduled Contact, the CPE MUST issue a WAKEUP Event if this parameter is {{true}}.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="NetworkAwarenessCapable" access="readOnly" dmr:version="2.7">
        <description>
          Indicates that the CPE is capable of CR-Aware Standby.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SelfTimerCapable" access="readOnly" dmr:version="2.7">
        <description>
          Indicates that the CPE is capable of Timer-Aware Standby.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="CRAwarenessRequested" access="readWrite" dmr:version="2.7">
        <description>
          If {{param|NetworkAwarenessCapable}} and this parameter are both {{true}}, the CPE MUST NOT go into a non CR-Aware Standby state.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PeriodicAwarenessRequested" access="readWrite" dmr:version="2.7">
        <description>
          If {{param|SelfTimerCapable}} and this parameter are both {{true}}, the CPE MUST NOT go into a standby state that prevents it from honoring Periodic Contacts.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ScheduledAwarenessRequested" access="readWrite" dmr:version="2.7">
        <description>
          If this parameter is true, the CPE MUST NOT go into a standby state that prevents it from honoring Scheduled Contacts. This means that, whenever the ACS has requested a Scheduled Contact:
          *if {{param|SelfTimerCapable}} is {{true}} and the CPE chooses to go into Standby before the Scheduled Contact has been honored, it MUST use a Timer-Aware Standby;
          *if {{param|SelfTimerCapable}} is {{false}}, the CPE MUST NOT go into Standby before the Scheduled Contact has been honored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.InformParameter.{i}." access="readWrite" numEntriesParameter="InformParameterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        This table provides the ACS with the ability to control the Parameters that are delivered by the Inform RPC.
        Any Parameter (identified by {{param|ParameterName}}) contained in this table MUST be included within the ParameterList argument of the Inform RPC whenever any Event within the {{param|EventList}} is being delivered.
        This table does not include Forced Inform Parameters, and Forced Inform Parameters are not allowed to be inserted into this table.  Any attempt by an ACS to configure this table to contain a Forced Inform Parameter MUST result in the failure of the SetParameterValues RPC with error code 9007.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="ParameterName"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables this {{object}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="ParameterName" access="readWrite" dmr:version="2.8">
        <description>
          A pattern that describes the Parameter(s) to be included in the Inform’s ParameterList argument.  Specifically, patterns with wildcards (an "*" character) in place of Instance Identifiers are allowed; any attempt to set the value otherwise MUST be rejected by the CPE.
          If the pattern does not match any existing Parameters at the time that the CPE is creating the Inform RPC, then this {{object|#.InformParameter}} instance is not included in the Inform’s ParameterList argument.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="EventList" access="readWrite" dmr:version="2.8">
        <description>
          Each entry in this list represents an Event for which this Parameter MUST be included within the ParameterList argument of the Inform RPC.
          All Inform Events (see {{bibref|TR-069|Section 3.7.1.5}}), except for "4 VALUE CHANGE", are allowed as entries in this list.  "4 VALUE CHANGE" is not allowed as that would violate requirements contained in {{bibref|TR-069|Section A.3.3.1}}.
          {{empty}} means all events except "4 VALUE CHANGE".
        </description>
        <syntax>
          <list/>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ManagementServer.HeartbeatPolicy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        Parameters related to CPE behavior in order to issue a Heartbeat event to the ACS using the Inform method call.
        If this object is supported then the CPE MUST support the requirements of {{bibref|TR-069|Annex O}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          When {{true}}, Heartbeat events are enabled to be sent to the ACS based on the values of the {{param|ReportingInterval}} and {{param|InitiationTime}} parameters.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ReportingInterval" access="readWrite" dmr:version="2.12">
        <description>
          The duration in {{units}} of the interval for which the CPE MUST attempt to connect with the ACS and call the Inform method if {{param|Enable}} is {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="30"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="InitiationTime" access="readWrite" dmr:version="2.12">
        <description>
          An absolute time reference in UTC to determine when the CPE will initiate the Heartbeat event Inform method calls. Each Inform call MUST occur at this reference time plus or minus an integer multiple of the {{param|ReportingInterval}}.
          {{param}} is used only to set the ''phase'' of the Heartbeat event Informs. The actual value of {{param}} can be arbitrarily far into the past or future.
          For example, if {{param|ReportingInterval}} is 60 (one minute) and if {{param}} is set to UTC midnight on some day (in the past,  present, or future) then Heartbeat Informs will occur every minute at the next UTC midnight. These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified.  The CPE MUST locally choose a random time reference.
          If absolute time is not available to the CPE, its Heartbeat Inform behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SoftwareModules." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.1">
      <description>
        Top level object for dynamically managed software applications.
      </description>
      <parameter name="ExecEnvNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DeploymentUnitNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExecutionUnitNumberOfEntries" access="readOnly" dmr:version="2.1">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SoftwareModules.ExecEnv.{i}." access="readOnly" numEntriesParameter="ExecEnvNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>
        The Execution Environments that are available on the device, along with their properties and configurable settings.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.1">
        <description>
          Indicates whether or not this {{object}} is enabled.
          Disabling an enabled Execution Environment stops it, while enabling a disabled Execution Environment starts it.
          When an Execution Environment is disabled, Deployment Units installed to that Execution Environment will be unaffected, but any Execution Units currently running on that Execution Environment will automatically transition to {{enum|Idle|#.ExecutionUnit.{i}.Status}}.
          If a ChangeDUState is attempted on a {{object|#.DeploymentUnit}} that is to be applied against a disabled {{object}}, that ChangeDUState operation fails and the associated DUStateChangeComplete RPC will contain a FaultStruct for that operation.
          If a SetParameterValues is attempted against the {{param|#.ExecutionUnit.{i}.RequestedState}} for an {{object|#.ExecutionUnit}} that is associated with a disabled {{object}} a CWMP Fault will be issued in response.
          Disabling an Execution Environment could place the device in a non-manageable state.  For example, if the operating system itself was modeled as an {{object}} and the ACS disabled it, the CWMP management agent might be terminated leaving the device unmanageable.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.1">
        <description>
          Indicates the status of this {{object}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.1">
        <description>
          Setting this parameter to {{true}} causes this {{object}} to revert back to the state it was in when the device last issued a "0 BOOTSTRAP" Inform event.  The following requirements dictate what MUST happen for the reset to be complete:
          # All Deployment Units that were installed after the last "0 BOOTSTRAP" Inform event MUST be removed
          # All persistent storage, configuration files, and log files that were associated with the removed Deployment Units MUST be removed
          # Any Deployment Unit that is still installed against the Execution Environment MUST be restored to the version present when the last "0 BOOTSTRAP" Inform event was issued
          # Any Deployment Unit that was present when the last "0 BOOTSTRAP" Inform event was issued, but was subsequently uninstalled and is now not present, MUST be installed with the version that was present when the last "0 BOOTSTRAP" Inform event was issued
          # The Execution Environment MUST be restored to the version and configuration present when the last "0 BOOTSTRAP" Inform event was issued
          # The Execution Environment MUST be restarted after all other restoration requirements have been met
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>
          A Name provided by the CPE that adequately distinguishes this {{object}} from all other {{object}} instances.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.1">
        <description>
          Indicates the complete type and specification version of this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InitialRunLevel" access="readWrite" dmr:version="2.1">
        <description>
          The run level that this {{object}} will be in upon startup (whether that is caused by a CPE Boot or the Execution Environment starting).
          Run levels dictate which Execution Units will be started.  Execution Units will be started if {{param|CurrentRunLevel}} is greater than or equal to {{param|#.ExecutionUnit.{i}.RunLevel}} and {{param|#.ExecutionUnit.{i}.AutoStart}} is {{true}}.
          If the value of {{param|CurrentRunLevel}} is -1, then the value of this parameter is irrelevant when read and setting its value has no impact on the Run Level of this {{object}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RequestedRunLevel" access="readWrite" dmr:version="2.1">
        <description>
          Provides a mechanism to remotely manipulate the run level of this {{object}}, meaning that altering this parameter's value will change the value of the {{param|CurrentRunLevel}}.
          Run levels dictate which Execution Units will be started.  Execution Units will be started if {{param|CurrentRunLevel}} is greater than or equal to {{param|#.ExecutionUnit.{i}.RunLevel}} and {{param|#.ExecutionUnit.{i}.AutoStart}} is {{true}}.
          Setting this value when {{param|CurrentRunLevel}} is -1 has no impact to the Run Level of this {{object}}.
        </description>
        <syntax command="true">
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="CurrentRunLevel" access="readOnly" dmr:version="2.1">
        <description>
          The run level that this {{object}} is currently operating in.  This value is altered by changing the {{param|RequestedRunLevel}} parameter.
          Upon startup (whether that is caused by a CPE Boot or the Execution Environment starting) {{param}} will be equal to {{param|InitialRunLevel}}, unless Run Levels are not supported by this {{object}} in which case {{param}} will be -1.
          Run levels dictate which Execution Units will be started.  Execution Units will be started if {{param}} is greater than or equal to {{param|#.ExecutionUnit.{i}.RunLevel}} and {{param|#.ExecutionUnit.{i}.AutoStart}} is {{true}}.
          If {{param}} is -1 then Run Levels are not supported by this {{object}} and setting {{param|InitialRunLevel}} or {{param|RequestedRunLevel}} will not impact the Run Level of this {{object}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="InitialExecutionUnitRunLevel" access="readWrite" dmr:version="2.4">
        <description>
          Indicates the initial value on creation for {{param|#.ExecutionUnit.{i}.RunLevel}} for all Execution Unit instances associated with this {{object}}.
          If the value of {{param|CurrentRunLevel}} is -1, then the value of this parameter is irrelevant when read and setting its value has no impact on the Run Level of any Execution Unit.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Vendor" access="readOnly" dmr:version="2.1">
        <description>
          The vendor that produced this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.1">
        <description>
          The Version of this {{object}} as specified by the Vendor that implemented this {{object}}, not the version of the specification.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ParentExecEnv" access="readOnly" dmr:version="2.1">
        <description>
          Represents the parent {{object}} of this {{object}}.
          If this value is {{empty}} then this is the Primary Execution Environment.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.ExecEnv." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllocatedDiskSpace" access="readOnly" dmr:version="2.1">
        <description>
          The amount of disk space measured in {{units}} allocated to this {{object}}.  A value of -1 MUST be used for {{object}} instances where this parameter is not applicable.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="kilobytes"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AvailableDiskSpace" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>
          The amount of disk space measured in {{units}} currently available to this {{object}}.  This value changes as the {{object|#.ExecutionUnit}} instances associated with this {{object}} consumes disk space.  A value of -1 MUST be used for {{object}} instances where this parameter is not applicable.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="kilobytes"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AllocatedMemory" access="readOnly" dmr:version="2.1">
        <description>
          The amount of physical RAM measured in {{units}} allocated to this {{object}}.  A value of -1 MUST be used for {{object}} instances where this parameter is not applicable.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="kilobytes"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AvailableMemory" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>
          The amount of physical RAM measured in {{units}} currently available to this {{object}}.  This value changes as the {{object|#.ExecutionUnit}} instances associated with this {{object}} are started/stopped and consume the physical RAM.  A value of -1 MUST be used for {{object}} instances where this parameter is not applicable.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="kilobytes"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ActiveExecutionUnits" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>
          Represents the {{object|#.ExecutionUnit}} instances currently running on this {{object}}.  This parameter only contains {{object|#.ExecutionUnit}} instances that currently have a {{param|#.ExecutionUnit.{i}.Status}} of {{enum|Active|#.ExecutionUnit.{i}.Status}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.ExecutionUnit." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProcessorRefList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the processors that this {{object}} has available to it.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.Processor." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SoftwareModules.DeploymentUnit.{i}." access="readOnly" numEntriesParameter="DeploymentUnitNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>
        This table serves as the Deployment Unit inventory and contains status information about each Deployment Unit.
        A new instance of this table gets created during the installation of a Software Module.
      </description>
      <uniqueKey>
        <parameter ref="UUID"/>
        <parameter ref="Version"/>
        <parameter ref="ExecutionEnvRef"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="UUID" access="readOnly" dmr:version="2.1">
        <description>
          A Universally Unique Identifier either provided by the ACS, or generated by the CPE, at the time of Deployment Unit Installation.  The format of this value is defined by {{bibref|RFC4122}} Version 3 (Name-Based) and {{bibref|TR-069a3|Annex H}}.
          This value MUST NOT be altered when the {{object}} is updated.
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readOnly" dmr:version="2.1">
        <description>
          Deployment Unit Identifier chosen by the targeted {{object|#.ExecEnv}}.  The format of this value is Execution Environment specific.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>
          Indicates the Name of this {{object}}, which is chosen by the author of the Deployment Unit.
          The value of this parameter is used in the generation of the {{param|UUID}} based on the rules defined in {{bibref|TR-069a3|Annex H}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>
          Indicates the status of this {{object}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Installing">
              <description>
                This instance is in the process of being Installed and SHOULD transition to the {{enum|Installed}} state.
              </description>
            </enumeration>
            <enumeration value="Installed">
              <description>
                This instance has been successfully Installed.  The {{param|Resolved}} flag SHOULD also be referenced for dependency resolution.
              </description>
            </enumeration>
            <enumeration value="Updating">
              <description>
                This instance is in the process of being Updated and SHOULD transition to the {{enum|Installed}} state.
              </description>
            </enumeration>
            <enumeration value="Uninstalling">
              <description>
                This instance is in the process of being Uninstalled and SHOULD transition to the {{enum|Uninstalled}} state.
              </description>
            </enumeration>
            <enumeration value="Uninstalled">
              <description>
                This instance has been successfully Uninstalled.  This status will typically not be seen within a {{object}} instance.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Resolved" access="readOnly" dmr:version="2.1">
        <description>
          Indicates whether or not this {{object}} has resolved all of its dependencies.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readOnly" dmr:version="2.1">
        <description>
          Contains the URL used by the most recent ChangeDUState RPC to either Install or Update this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" dmr:version="2.1">
        <description>
          Textual description of this {{object}}. The format of this value is Execution Environment specific.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Vendor" access="readOnly" dmr:version="2.1">
        <description>
          The author of this {{object}} formatted as a domain name.
          The value of this parameter is used in the generation of the {{param|UUID}} based on the rules defined in {{bibref|TR-069a3|Annex H}}.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.1">
        <description>
          Version of this {{object}}.  The format of this value is Execution Environment specific.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorLogList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the vendor log files that have come into existence because of this {{object}}.  This does not include any vendor log files that have come into existence because of {{object|#.ExecutionUnit}} instances that are contained within this {{object}}.
          When this {{object}} is uninstalled the vendor log files referenced here SHOULD be removed from the CPE.
          Not all {{object}} instances will actually have a corresponding vendor log file, in which case the value of this parameter will be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.VendorLogFile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorConfigList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the vendor config files that have come into existence because of this {{object}}.  This does not include any vendor config files that have come into existence because of {{object|#.ExecutionUnit}} instances that are contained within this {{object}}.
          When this {{object}} is uninstalled the vendor config files referenced here SHOULD be removed from the CPE.
          Not all {{object}} instances will actually have a corresponding vendor config file, in which case the value of this parameter will be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.VendorConfigFile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionUnitList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the {{object|#.ExecutionUnit}} instances that are associated with this {{object}} instance.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.ExecutionUnit." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionEnvRef" access="readOnly" dmr:version="2.1">
        <description>
          Represents the {{object|#.ExecEnv}} instance where this {{object}} instance is installed.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.ExecEnv." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SoftwareModules.ExecutionUnit.{i}." access="readOnly" numEntriesParameter="ExecutionUnitNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.1">
      <description>
        This table serves as the Execution Unit inventory and contains both status information about each Execution Unit as well as configurable parameters for each Execution Unit.
        Each {{object|#.DeploymentUnit}} that is installed can have zero or more Execution Units.
        Once a Deployment Unit is installed it populates this table with its contained Execution Units.
        When the Deployment Unit (that caused this {{object}} to come into existence) is updated, this instance MAY be removed and new instances MAY come into existence.  While the Deployment Unit (that caused this {{object}} to come into existence) is being updated, all {{object}} instances associated with the Deployment Unit will be stopped until the update is complete at which time they will be restored to the state that they were in before the update started.
        When the Deployment Unit (that caused this {{object}} to come into existence) is uninstalled, this instance is removed.
        Each {{object}} MAY also contain a set of vendor specific parameters displaying status and maintaining configuration that reside under the {{object|Extensions}} object.
      </description>
      <uniqueKey>
        <parameter ref="EUID"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="EUID" access="readOnly" dmr:version="2.1">
        <description>
          Execution Unit Identifier chosen by the {{object|#.ExecEnv}} during installation of the associated {{object|#.DeploymentUnit}}.
          The format of this value is Execution Environment specific, but it MUST be unique across {{object|#.ExecEnv}} instances.  Thus, it is recommended that this be a combination of the {{param|#.ExecEnv.{i}.Name}} and an Execution Environment local unique value.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.1">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.1">
        <description>
          The name of this {{object}} as it pertains to its associated {{object|#.DeploymentUnit}}, which SHOULD be unique across all {{object}} instances contained within its associated {{object|#.DeploymentUnit}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecEnvLabel" access="readOnly" dmr:version="2.1">
        <description>
          The name of this {{object}} as provided by the {{object|#.ExecEnv}}, which SHOULD be unique across all {{object}} instances contained within a specific {{object|#.ExecEnv}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.1">
        <description>
          Indicates the status of this {{object}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Idle">
              <description>
                This instance is in an Idle state and not running.
              </description>
            </enumeration>
            <enumeration value="Starting">
              <description>
                This instance is in the process of Starting and SHOULD transition to the {{enum|Active}} state.
              </description>
            </enumeration>
            <enumeration value="Active">
              <description>
                This instance is currently running.
              </description>
            </enumeration>
            <enumeration value="Stopping">
              <description>
                This instance is in the process of Stopping and SHOULD transition to the {{enum|Idle}} state.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="RequestedState" access="readWrite" dmr:version="2.1">
        <description>
          Indicates the state transition that the ACS is requesting for this {{object}}.  {{enum}}
          If this {{object}} is associated with an Execution Environment that is disabled and an attempt is made to alter this value, then a CWMP Fault MUST be generated.
        </description>
        <syntax command="true">
          <string>
            <enumeration value="Idle">
              <description>
                If this {{object}} is currently in {{enum|Starting|Status}} or {{enum|Active|Status}} the CPE will attempt to Stop the Execution Unit; otherwise this requested state is ignored.
              </description>
            </enumeration>
            <enumeration value="Active">
              <description>
                If this {{object}} is currently in {{enum|Idle|Status}} the CPE will attempt to Start the Execution Unit.  If this {{object}} is in {{enum|Stopping|Status}} the request is rejected and a fault raised.  Otherwise this requested state is ignored.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionFaultCode" access="readOnly" dmr:version="2.1">
        <description>
          If while running or transitioning between states this {{object}} identifies a fault this parameter embodies the problem.  The value of {{enum|NoFault}} MUST be used when everything is working as intended. {{enum}}
          For fault codes not included in this list, the vendor MAY include vendor-specific values, which MUST use the format defined in {{bibref|TR-106a4|Section 3.3}}.
        </description>
        <syntax>
          <string>
            <enumeration value="NoFault"/>
            <enumeration value="FailureOnStart"/>
            <enumeration value="FailureOnAutoStart"/>
            <enumeration value="FailureOnStop"/>
            <enumeration value="FailureWhileActive"/>
            <enumeration value="DependencyFailure"/>
            <enumeration value="UnStartable"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionFaultMessage" access="readOnly" dmr:version="2.1">
        <description>
          If while running or transitioning between states this {{object}} identifies a fault this parameter provides a more detailed explanation of the problem.
          If {{param|ExecutionFaultCode}} has the value of {{enum|NoFault|ExecutionFaultCode}} then the value of this parameter MUST {{empty}} and ignored by the ACS.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AutoStart" access="readWrite" dmr:version="2.1">
        <description>
          If {{true}} and the {{param|RunLevel}} verification is also met, then this {{object}} will be automatically started by the device after its {{object|#.ExecEnv}} is either rebooted or restarted.
          If {{false}} this {{object}} will not be started after its {{object|#.ExecEnv}} is either rebooted or restarted until it is explicitly commanded to do so by either the ACS or another Execution Unit.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RunLevel" access="readWrite" dmr:version="2.1">
        <description>
          Determines when this {{object}} will be started.
          If {{param|AutoStart}} is {{true}} and {{param|#.ExecEnv.{i}.CurrentRunLevel}} is greater than or equal to {{param}}, then this {{object}} will be started.
          If the value of {{param|#.ExecEnv.{i}.CurrentRunLevel}} is -1, then the associated {{object|#.ExecEnv.}} doesn't support Run Levels, thus the value of this parameter is irrelevant when read and setting its value has no impact to the Run Level of this {{object}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Vendor" access="readOnly" dmr:version="2.1">
        <description>
          Vendor of this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.1">
        <description>
          Version of the {{object}}.  The format of this value is Execution Environment specific.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" dmr:version="2.1">
        <description>
          Textual description of this {{object}}. The format of this value is Execution Environment specific.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiskSpaceInUse" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>
          The amount of disk space measured in {{units}} currently being used by this {{object}}.  A value of -1 MUST be used for {{object}} instances where this parameter is not applicable.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="kilobytes"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="MemoryInUse" access="readOnly" activeNotify="canDeny" dmr:version="2.1">
        <description>
          The amount of physical RAM measured in {{units}} currently being used by this {{object}}.  A value of -1 MUST be used for {{object}} instances where this parameter is not applicable.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="kilobytes"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="References" access="readOnly" dmr:version="2.1">
        <description>
          Represents the instances of multi-instanced objects that are directly controlled by, and have come into existence because of, this {{object}}.  See {{bibref|TR-157a3|Appendix II.3.2}} for more description and some examples.
          NOTE: All other objects and parameters (i.e. not multi-instanced objects) that this {{object}} has caused to come into existence can be discovered via the {{object|.DeviceInfo.SupportedDataModel.{i}.}} table.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedProcessList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the system processes that are active in the system because of this {{object}}.
          If {{param|Status}} is not {{enum|Active|Status}} it is expected that this list will be {{empty}}.  Some {{object}} instances MIGHT NOT have any system processes irrespective of the value of {{param|Status}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.ProcessStatus.Process." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorLogList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the vendor log files that have come into existence because of this {{object}}.
          When the {{object|#.DeploymentUnit}} (that caused this {{object}} to come into existence) is uninstalled the vendor log files referenced here SHOULD be removed from the CPE.
          Not all {{object}} instances will actually have a corresponding vendor log file, in which case the value of this parameter will be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.VendorLogFile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorConfigList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the vendor config files that have come into existence because of this {{object}}.
          When the {{object|#.DeploymentUnit}} (that caused this {{object}} to come into existence) is uninstalled the vendor config files referenced here SHOULD be removed from the CPE.
          Not all {{object}} instances will actually have a corresponding vendor config file, in which case the value of this parameter will be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.VendorConfigFile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedDataModelList" access="readOnly" dmr:version="2.1">
        <description>
          Represents the CWMP-DT schema instances that have been introduced to this device because of the existence of this {{object}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".DeviceInfo.SupportedDataModel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExecutionEnvRef" access="readOnly" dmr:version="2.1">
        <description>
          Represents the {{object|#.ExecEnv}} that this {{object}} is associated with.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.ExecEnv." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SoftwareModules.ExecutionUnit.{i}.Extensions." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.1">
      <description>
        This object proposes a general location for vendor extensions specific to this Execution Unit, which allows multiple Execution Units to expose parameters without the concern of conflicting parameter names.  These vendor extensions are related to displaying status and maintaining configuration for this Execution Unit.
        It is also possible for the Execution Unit to expose status and configuration parameters within Service objects or as embedded objects and parameters directly within the root data model, in which case the combination of {{param|#.References}} and {{param|#.SupportedDataModelList}} will be used to determine their locations.
        See {{bibref|TR-157a3|Appendix II.3.2}} for more description and some examples.
      </description>
    </object>
    <object name="Device.ETSIM2M." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        The {{object}} object represents the management object for the Remote Entity Functions (REM) functions defined in the M2M Functional Architecture {{bibref|ETSIM2MFA}}.
      </description>
      <parameter name="SCLNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}." access="readWrite" numEntriesParameter="SCLNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This object represents an instance of a Service Capability Layer (SCL) for a M2M device or gateway.
        The {{object}} MAY be maintained by the ACS or by the CPE.
        When the {{object}} provides the administration of an SCL that is represented as a {{object|.SoftwareModules.ExecutionUnit}} the {{object}} is maintained in the {{param|.SoftwareModules.ExecutionUnit.{i}.References}} parameter.
        Section 5.1.2 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the high level event flows for SCL registration.
        Section 9.3.2.6.2 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the creation/registration of SCLs.
        Section 9.3.2.6.4 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the update/re-registration of SCLs.
        Section 9.3.2.6.5 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the deletion/deregistration of SCLs.
        {{keys}}
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="AnnouncedToSCLList" access="readWrite" dmr:version="2.6">
        <description>
          {{list}} The list represents an unordered set of URIs {{bibref|RFC3986}}.
          A list item is a URI string that represents a SCL to which the this {{object}} will announce original (local) resources.
          The AnnouncedToSCL has an interest in the discovery of the local resource. Section 9.2.1.14 Announced Resource of the M2M Functional Architecture {{bibref|ETSIM2MFA}} provides a description of this behavior of an Announced Resource.
          Section 9.3.2.28 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} and Section 10.3.2.7 of the M2M mIa, dIa and mId Interfaces {{bibref|ETSIM2MInterfaces}} describes the process of announcing and deannouncing of resources within a SCL.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SAFPolicySetNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AreaNwkInstanceNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AreaNwkDeviceInfoInstanceNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.Discovery." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        This object is represents the administration properties used when a NSCL requests discovery of resources within this {{object|##.SCL}} instance.
        Section 9.3.2.27 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the process of discovery of resources within a SCL.
      </description>
      <parameter name="MaxNumberOfDiscovRecords" access="readWrite" dmr:version="2.6">
        <description>
          The maximum number of URIs {{bibref|RFC3986}} for discovered resources contained in a discovery result.
          This parameter and the {{param|MaxSizeOfDiscovAnswer}} parameter are mutually exclusive in that a result can be limited due to the bounds of either parameter.
          A value of 0 indicates that the SCL does not have a limit for this parameter.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxSizeOfDiscovAnswer" access="readWrite" dmr:version="2.6">
        <description>
          The maximum size in bytes of the Discovery Answer.
          This parameter and the {{param|MaxNumberOfDiscovRecords}} parameter are mutually exclusive in that a result can be limited due to the bounds of either parameter.
          A value of 0 indicates that the SCL does not have a limit for this parameter.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.Reregistration." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        This object represents the properties and status necessary for a SCL to reregister with one or more NSCLs.
      </description>
      <parameter name="RegTargetNSCLList" access="readWrite" dmr:version="2.6">
        <description>
          {{list}} The list represents a priority ordered set of URIs {{bibref|RFC3986}}. The item that is first in the list has the highest priority.
          A list item is a URI {{bibref|RFC3986}} string that represents a NSCL that this {{object|##.SCL}} instance can use in order to attempt registration.
          When modified the contents of this parameter replace the {{param}} received during the bootstrap procedure.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="RegSearchStrings" access="readWrite" dmr:version="2.6">
        <description>
          {{list}} The list represents the string tokens used as keys when searching for this {{object|##.SCL}} instance.
          Sections 9.2.3.6.2 and 9.2.3.6.4 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describe the usage for this parameter.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="RegAccessRightID" access="readWrite" dmr:version="2.6">
        <description>
          URI {{bibref|RFC3986}} that represents the identifier of the access right resource. The value of this parameter is maintained by the NSCL and used by the SCL as a default access right identifier for re-registration to NSCLs.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="RegExpirationDuration" access="readWrite" dmr:version="2.6">
        <description>
          The duration, in {{units}}, that the SCL will use in its next re-registration attempt. Any negative value represents an infinite duration.
        </description>
        <syntax>
          <int>
            <units value="seconds"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="Reregistration" access="readWrite" dmr:version="2.6">
        <description>
          {{command}} When set to {{true}}, triggers an immediate re-registration action where the SCL re-registers with the SCLs in the {{param|RegTargetNSCLList}} .
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.Reregistration.ActionStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        This object represents the status of the Reregistration action.
      </description>
      <parameter name="Progress" access="readOnly" activeNotify="canDeny" dmr:version="2.6">
        <description>
          The progress, in {{units}}, of the Reregistration action. The progress is measured from 0-100%. A value of 0 indicates that the action has not started. A value of 100 indicates that the action has completed.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FinalStatus" access="readOnly" dmr:version="2.6">
        <description>
          The completion status of the Reregistration operation. Enumeration of:
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="SUCCESS"/>
            <enumeration value="FAILURE"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}." access="readWrite" numEntriesParameter="SAFPolicySetNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This object describes the parameters necessary to administer the store-and-forward (SAF) handling policies applied to requests to access remotely hosted resources.
        Policies are described by instances of {{object}}. Which instances of {{object}} are used by the SCL is determined by the {{param|PolicyScope}} parameter.
        Section 9.3.1.5 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} and Section 10.3.1.2.2 of the M2M mIa, dIa and mId Interfaces {{bibref|ETSIM2MInterfaces}} describe the behavior for SAF processing.
        There is at most one {{object}} instance with the {{param|PolicyScope}} containing a specific application id (APP-ID) URI value within the list.
        There is exactly one {{object}} instance with a {{param|PolicyScope}} value of "default".
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="PolicyScope" access="readWrite" dmr:version="2.6">
        <description>
          The parameter defines the scope of the policies contained in this instance of a {{object|#.SAFPolicySet}}.
          The parameter value is:
          *a list of unordered set of URIs {{bibref|RFC3986}} that represents an M2M application id (APP-ID)
          *the value of  "default"
          *{{empty}}
          When this parameter is set to a list of application id (APP-ID) URIs {{bibref|RFC3986}}, the scope indicates that the policies are applicable to requests coming from any specific application on that list.
          When this parameter is set to a string with the value "default", the scope indicates that the policies are the default policies for this {{object|##.SCL}} instance.
          When this parameter is set to {{empty}}, the value represents an unknown {{object|#.SAFPolicySet}} and the {{object|#.SAFPolicySet}} is not to be used.
        </description>
        <syntax>
          <list/>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ANPPolicyNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}." access="readWrite" numEntriesParameter="ANPPolicyNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This table contains the SAF-handling policies which are controlled by the Access Network Provider(s).
        {{keys}}
      </description>
      <uniqueKey>
        <parameter ref="ANName"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="ANName" access="readWrite" dmr:version="2.6">
        <description>
          This parameter is the name of the access network provider and used to determine for which access network the policies defined in the {{object|#.ANPPolicy}} table will apply.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="BlockPeriodNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RequestCategoryNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.BlockPeriod.{i}." access="readWrite" numEntriesParameter="BlockPeriodNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:noUniqueKeys="true">
      <description>
        This table contains a list of block periods for a {{object|##.ANPPolicy}}.
        A block period defines how long the device will wait before re-trying to establish connectivity via the access network after the previous attempt has failed.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="FailedAttempts"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="FailedAttempts" access="readWrite" dmr:version="2.6">
        <description>
          Number of consecutively failed access attempts for which the {{param|BlockDuration}} will be used to block the next access attempt.
          The SCL will apply the {{object}} entry with the largest number of consecutive failed attempts that is smaller or equal to the actual number of consecutive failed attempts.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="BlockDuration" access="readWrite" dmr:version="2.6">
        <description>
          The duration, in {{units}}, to which to block further access attempts.
        </description>
        <syntax>
          <int>
            <units value="seconds"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.RequestCategory.{i}." access="readWrite" numEntriesParameter="RequestCategoryNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This table contains the Request Category (RCAT) policy items for defining when it is appropriate to use the access network for processing requests.
      </description>
      <uniqueKey>
        <parameter ref="RCAT"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RCAT" access="readWrite" dmr:version="2.6">
        <description>
          An RCAT is a string that represents a request category used for policy enforcement.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ScheduleNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.RequestCategory.{i}.Schedule.{i}." access="readWrite" numEntriesParameter="ScheduleNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This table contains the schedules that define when it is appropriate to use the access network for processing requests for the specified value of the {{param|#.RCAT}}.
        The combination of all instances of the {{object|AbsTimeSpan}} along with the {{param|Schedules}} parameter makes up the complete schedule for this instance of a {{object}}.
        The {{param|Schedules}} parameter defines a recurrence of the schedule. If instances of {{object|AbsTimeSpan}} exist, these instances places constraints on the schedule recurrence.
        If the value of the {{param|Schedules}} parameter is {{empty}}, at least one enabled instance of {{object|AbsTimeSpan}} MUST exist.
        Processing behavior for the use of RCAT Schedules is defined in section 10.3.1.2.2 of the M2M mIa, dIa and mId Interfaces {{bibref|ETSIM2MInterfaces}} document.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Schedules" access="readWrite" dmr:version="2.6">
        <description>
          The list is a set of schedule strings.
          A schedule string is formatted according to the date and time fields defined CRONTAB input file definition in {{bibref|POSIXBase}}.
          The {{param}} parameter is used to set the recurrence of the schedule.
          The timezone used for this parameter is dependent upon the existence of instances of {{object|AbsTimeSpan}} for this {{object}}. If instances of {{object|AbsTimeSpan}} exist, then the timezone of the {{object|AbsTimeSpan}} is used otherwise the UTC timezone is used for this {{param}} parameter.
          Note the command field is not used in this definition and any whitespace or comma characters within a Schedule string MUST be escaped using percent as defined in {{bibref|TR-106a5|section 3.2.3}}
          Example of CRONTAB string:
          *"* 0-6 * * 1-5" would mean every minute for the period from 0:00h to 6:00h (inclusive) on any week day (Monday through Friday) and would be represented as "*%200-6%20*%20*%201-5"
          *"*/15 22-23,0-4 * * 1-5" would mean every 15 minutes for the period from 22:00h to 04:00h on any week day (Monday through Friday) and would be represented as "*/15%2022-23%2C0-4%20*%20*%201-5"
        </description>
        <syntax>
          <list/>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AbsTimeSpanNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.RequestCategory.{i}.Schedule.{i}.AbsTimeSpan.{i}." access="readWrite" numEntriesParameter="AbsTimeSpanNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:noUniqueKeys="true">
      <description>
        This object defines an instance of a time span used for determining an RCAT schedule.
        An instance of the {{object}} represents the time span in which the schedule recurrence defined in {{param|#.Schedules}} is constrained.
        {{object}} instances with unknown values for the {{param|StartTime}} or {{param|EndTime}} are ignored.
        All instances of the {{object}} within this {{object|##.Schedule}} MUST utilize the same time zone.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="StartTime" access="readWrite" dmr:version="2.6">
        <description>
          Date and time that represents the start of the time span.
          The value 0001-01-01T00:00:00Z represents an unknown value.
          The device MUST reject requests to set the {{param}} value greater than the {{param|EndTime}} value.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="0001-01-01T00:00:00Z"/>
        </syntax>
      </parameter>
      <parameter name="EndTime" access="readWrite" dmr:version="2.6">
        <description>
          Date and time that represents the end of the time span.
          The value 9999-12-31T23:59:59Z represents an infinite time span from the start time.
          The value 0001-01-01T00:00:00Z represents an unknown value.
          The device MUST reject requests to set the {{param}} value less than or equal the {{param|StartTime}} value.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="0001-01-01T00:00:00Z"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.M2MSPPolicy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        This object maintains the SAF handling policies' properties that are controlled by the M2M service provider for a request.
      </description>
      <parameter name="DefaultRCATValue" access="readWrite" dmr:version="2.6">
        <description>
          The default RCAT value to use for requests to remotely hosted resources during SAF-handling when no RCAT value was specified in the request.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="RequestCategoryNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.M2MSPPolicy.RequestCategory.{i}." access="readWrite" numEntriesParameter="RequestCategoryNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This object maintains a list of properties to be used for forwarding requests with a specified {{param|RCAT}}.
        Processing behavior for the use of M2M Service Provider policies is defined in section 10.3.1.2.2.1 of the M2M mIa, dIa and mId Interfaces {{bibref|ETSIM2MInterfaces}} document.
      </description>
      <uniqueKey>
        <parameter ref="RCAT"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          Administratively enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.6">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RCAT" access="readWrite" dmr:version="2.6">
        <description>
          An RCAT is a string that represents a request category used for policy enforcement.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="TolerableDelay" access="readWrite" dmr:version="2.6">
        <description>
          The tolerable duration, in {{units}}, that a request of the given RCAT category can be pending in SAF handling when a request from an M2M Application does not specify a tolerable delay.
          A value of -1 represents an infinite duration.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Thresh" access="readWrite" dmr:version="2.6">
        <description>
          The threshold of maximum number of pending requests permitted to be held for a specified RCAT.
          A value of 0 indicates that the request should be transmitted immediately.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Mem" access="readWrite" dmr:version="2.6">
        <description>
          This parameter defines the maximum size of the request queue for pending requests permitted to be held for a specified RCAT.
          The format of the string is an integer with an appended memory unit (B - Bytes, K - 1024 Bytes, M - 1048576 Bytes, G -1073741824, T - 1099511627776 Bytes).
          When the value is {{empty}}  the memory threshold criteria for the associated RCATList will be ignored in SAF handling.
          {{pattern}}
        </description>
        <syntax>
          <string>
            <pattern value="([0-9]{1,15}?[BKMGT])"/>
            <pattern value="">
              <description>
                {{empty}}
              </description>
            </pattern>
          </string>
        </syntax>
      </parameter>
      <parameter name="RankedANList" access="readWrite" dmr:version="2.6">
        <description>
          The list is a prioritized set of Access Networks where the preference of using an Access Network is based on order of the list items with the lowest order list item as the most preferred Access Network.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="##.ANPPolicy." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.AreaNwkInstance.{i}." access="readOnly" numEntriesParameter="AreaNwkInstanceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:fixedObject="true">
      <description>
        The M2M Area Network information provides administration capabilities for remote management (REM) of M2M Devices (D', d) that are attached to this {{object|##.SCL}} instance.
        This object provides the administration of the properties needed by the SCL to remotely manage M2M Devices within a specific type of M2M Area network as defined by {{param|AreaNwkType}}.
        Multiple instances of {{object}} with the same {{param|AreaNwkType}} is permitted.
        Section 5.3.5 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the REM functionality expected of a SCL for an M2M Device.
      </description>
      <uniqueKey>
        <parameter ref="ID"/>
      </uniqueKey>
      <parameter name="ID" access="readOnly" dmr:version="2.6">
        <description>
          URI {{bibref|RFC3986}} that represents the identifier of the instance.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AreaNwkType" access="readOnly" dmr:version="2.6">
        <description>
          Devices (D' and d) that connect to an SCL are said to be "attached devices" and are organized by M2M Area Networks within the {{object|##.SCL}} instance. The {{param}} is an implementation-chosen string that indicates the type of M2M Area Network.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ListOfDevices" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference}}
          The list represents the M2M Devices (D', d) that are attached to this {{object|##.SCL}} instance that are within this {{object}} instance. The list does not contain an instance for this CPE.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.AreaNwkDeviceInfoInstance." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PropertyNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.AreaNwkInstance.{i}.Property.{i}." access="readOnly" numEntriesParameter="PropertyNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:noUniqueKeys="true">
      <description>
        This object contains an instance of a property extension (name value pair) for this {{object|##.AreaNwkInstance}} instance.
        For example, if the {{param|#.AreaNwkType}} is ZigBee the {{object|##.AreaNwkInstance}} will contain ZigBee specific parameters that have not been modeled for the M2M Area network.
        At a minimum, a property instance MUST exist that defines  an attribute that describes the IP layer address type (e.g., IPv4, IPv6, non-IP) of this M2M Area Network.
      </description>
      <parameter name="Name" access="readOnly" dmr:version="2.6">
        <description>
          The name of the property
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.6">
        <description>
          The value of the property.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.AreaNwkDeviceInfoInstance.{i}." access="readOnly" numEntriesParameter="AreaNwkDeviceInfoInstanceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:noUniqueKeys="true" dmr:fixedObject="true">
      <description>
        The M2M Area Network Device Information provides the administration capability to the SCL for maintenance of M2M Devices (D', d) that are attached to this {{object|##.SCL}} instance.
        While discovery and identification of devices by the M2M Gateway or Device (CPE) is implementation specific, each device is represented by an instance of the {{object|.Hosts.Host}} table.
        When the M2M Device is managed by the CWMP endpoint of the CPE, the {{object}} is expected to be referenced by an instance of one of the following tables:
        *{{object|.ManagementServer.EmbeddedDevice}}
        *{{object|.ManagementServer.VirtualDevice}}
        Section 5.3.5 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes the REM functionality expected of a SCL to a M2M Device.
        This object instance provides the administration properties required by a SCL to remotely manage an instance of a M2M Device within a M2M area network.
        A M2M Device is associated with an instance of a {{object|#.AreaNwkInstance}}.
        This table contains parameters and information of the M2M Device related to each {{object|#.AreaNwkInstance}} instance.
        Instances of this table are created and deleted by the CPE. The ACS MAY modify the writeable parameters of this object instance but  it is possible that the value set by the ACS is not retained between reboots of the M2M Device.
      </description>
      <parameter name="AreaNwkInstance" access="readOnly" dmr:version="2.6">
        <description>
          {{reference}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.AreaNwkInstance." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference|the {{object|.Hosts.Host}} table entry that represents an active or inactive M2M Device}}
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ListOfDeviceNeighbors" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference}} References all the {{object|.Hosts.Host}} table entries, whether active or inactive, that represent the reachable neighbors of this M2M Device (D' or d).
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ListOfDeviceApplications" access="readOnly" dmr:version="2.6">
        <description>
          The list is an unordered set of URIs {{bibref|RFC3986}}.
          A list item is an URI string that represents an application id (APP-ID) for the M2M D'A applications residing on the M2M Device for the associated {{object|#.AreaNwkInstance}}.
          Table B.58 of the M2M Functional Architecture {{bibref|ETSIM2MFA}} describes this parameter.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SleepInterval" access="readWrite" dmr:version="2.6">
        <description>
          The interval, in {{units}}, between sleep periods for the device.
          A value of 0 represents a device that does not sleep.
          Note: When this value is modified, the CPE could modify the {{param}} for this M2M Device in other Area Networks.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SleepDuration" access="readWrite" dmr:version="2.6">
        <description>
          The duration, in {{units}}, of a sleep period.
          The value 0 represents an unknown value.
          Note: When this value is modified, the CPE could modify the {{param}} for this M2M Device in other Area Networks.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.6">
        <description>
          The sleep status of the device.
          Enumeration of:
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="ASLEEP"/>
            <enumeration value="AWAKE"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.6">
        <description>
          Whether or not this M2M Device is currently attached to this {{object|##.SCL}} instance.
          The ability to list inactive M2M Devices is OPTIONAL.  If the CPE includes inactive M2MDevices in this table, {{param}} is set to {{false}}  for each inactive M2M Device.  The length of time an inactive M2M Device remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PropertyNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ETSIM2M.SCL.{i}.AreaNwkDeviceInfoInstance.{i}.Property.{i}." access="readOnly" numEntriesParameter="PropertyNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:noUniqueKeys="true">
      <description>
        This object contains an instance of a property extension (name value pair) for this {{object|##.AreaNwkDeviceInfoInstance}} instance.
        For example, if the {{param|##.AreaNwkInstance.{i}.AreaNwkType}} value is ZigBee, this {{object|##.AreaNwkDeviceInfoInstance}} contains ZigBee-specific parameters that are not formally modeled for this {{object|##.AreaNwkDeviceInfoInstance}} instance.
      </description>
      <parameter name="Name" access="readOnly" dmr:version="2.6">
        <description>
          The name of the property
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.6">
        <description>
          The value of the property.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GatewayInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains information associated with a connected Internet Gateway Device.
      </description>
      <parameter name="ManufacturerOUI" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.0">
        <description>
          Organizationally unique identifier of the associated Internet Gateway Device.  {{pattern}}
          {{empty}} indicates that there is  no associated Internet Gateway Device that has been detected.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
            <pattern value=""/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.0">
        <description>
          Identifier of the product class of the associated Internet Gateway Device.  {{empty}} indicates either that  there is no associated Internet Gateway Device that has been detected, or the Internet Gateway Device does not support the use of the  product-class parameter.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.0">
        <description>
          Serial number of the associated Internet Gateway Device.  {{empty}} indicates that there is no associated  Internet Gateway Device that has been detected.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Time." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters relating an NTP or SNTP time client in the CPE.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the NTP or SNTP time client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Status of Time support on the CPE.  {{enum}}
          The {{enum|Unsynchronized}} value indicates that the CPE's absolute time has not yet been set.
          The {{enum|Synchronized}} value indicates that the CPE has acquired accurate absolute time; its current time is accurate.
          The {{enum|Error_FailedToSynchronize}} value indicates that the CPE failed to acquire accurate absolute time; its current time is not  accurate.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Unsynchronized"/>
            <enumeration value="Synchronized"/>
            <enumeration value="Error_FailedToSynchronize"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer1" access="readWrite" dmr:version="2.0">
        <description>
          First NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer2" access="readWrite" dmr:version="2.0">
        <description>
          Second NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer3" access="readWrite" dmr:version="2.0">
        <description>
          Third NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer4" access="readWrite" dmr:version="2.0">
        <description>
          Fourth NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer5" access="readWrite" dmr:version="2.0">
        <description>
          Fifth NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentLocalTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current date and time in the CPE's local time zone.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LocalTimeZone" access="readWrite" dmr:version="2.0">
        <description>
          The local time zone definition, encoded according to IEEE 1003.1 (POSIX).  The following is an example value:
          : EST+5 EDT,M4.1.0/2,M10.5.0/2
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UserInterface." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters relating to the user interface of the CPE.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.11">
        <description>
          Enables and disables the CPE's user interface.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="true"/>
        </syntax>
      </parameter>
      <parameter name="PasswordRequired" access="readWrite" dmr:version="2.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface.
          Indicates whether or not the local user interface MUST require a password to be chosen by the user.  If {{false}}, the choice of  whether or not a password is used is left to the user.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PasswordUserSelectable" access="readWrite" dmr:version="2.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface and supports LAN-side  Auto-Configuration.
          Indicates whether or not a password to protect the local user interface of the CPE MAY be selected by the user directly (i.e. {{param|.Users.User.{i}.Password}}), or MUST be equal to the password used by the LAN-side Auto-Configuration protocol (i.e. {{param|.LANConfigSecurity.ConfigPassword}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PasswordReset" access="readWrite" dmr:version="2.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface and supports LAN-side Auto-Configuration.
          When set to true, resets {{param|.LANConfigSecurity.ConfigPassword}} to its factory value.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UpgradeAvailable" access="readWrite" dmr:version="2.0">
        <description>
          Indicates that a CPE upgrade is available, allowing the CPE to display this information to the  user.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WarrantyDate" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the date and time in UTC that the warranty associated with the CPE is to expire.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ISPName" access="readWrite" dmr:version="2.0">
        <description>
          The name of the customer's ISP.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPHelpDesk" access="readWrite" dmr:version="2.0">
        <description>
          The help desk phone number of the ISP.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPHomePage" access="readWrite" dmr:version="2.0">
        <description>
          The URL of the ISP's home page.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPHelpPage" access="readWrite" dmr:version="2.0">
        <description>
          The URL of the ISP's on-line support page.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPLogo" access="readWrite" dmr:version="2.0">
        <description>
          Base64 encoded GIF or JPEG image. The binary image is constrained to 4095 bytes or less.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="4095"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="ISPLogoSize" access="readWrite" dmr:version="2.0">
        <description>
          Un-encoded binary image size in bytes.
          If ISPLogoSize input value is 0 then the ISPLogo is cleared.
          ISPLogoSize can also be used as a check to verify correct transfer and conversion of Base64 string to image size.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4095"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ISPMailServer" access="readWrite" dmr:version="2.0">
        <description>
          The URL of the ISP's mail server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPNewsServer" access="readWrite" dmr:version="2.0">
        <description>
          The URL of the ISP's news server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TextColor" access="readWrite" dmr:version="2.0">
        <description>
          The color of text on the GUI screens in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="BackgroundColor" access="readWrite" dmr:version="2.0">
        <description>
          The color of the GUI screen backgrounds in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="ButtonColor" access="readWrite" dmr:version="2.0">
        <description>
          The color of buttons on the GUI screens in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="ButtonTextColor" access="readWrite" dmr:version="2.0">
        <description>
          The color of text on buttons on the GUI screens in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="AutoUpdateServer" access="readWrite" dmr:version="2.0">
        <description>
          The server the CPE can check to see if an update is available for direct download to it.
          This MUST NOT be used by the CPE if the {{param|.ManagementServer.UpgradesManaged}} parameter is {{true}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UserUpdateServer" access="readWrite" dmr:version="2.0">
        <description>
          The server where a user can check via a web browser if an update is available for download to a PC.
          This MUST NOT be used by the CPE if the {{param|.ManagementServer.UpgradesManaged}} parameter is {{true}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AvailableLanguages" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent user-interface languages that are available, where each language is specified according to {{bibref|RFC3066}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CurrentLanguage" access="readWrite" dmr:version="2.0">
        <description>
          Current user-interface language, specified according to {{bibref|RFC3066}}. The value MUST be a member of the list reported by the {{param|AvailableLanguages}} parameter.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UserInterface.RemoteAccess." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters relating to remotely accessing the CPE's user interface.
        Remote access is defined as any entity not of a local subnet attempting to connect to the CPE.
        Remote access requires user authentication.  To provide remote access authentication the CPE MUST support a "User" table with at least one instance that has "RemoteAccessCapable" set to {{true}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables remotely accessing the CPE's user interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.0">
        <description>
          Destination TCP port required for remote access connection.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SupportedProtocols" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the protocols that are supported by the CPE for the purpose of remotely accessing the user interface.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP">
              <description>
                As defined in {{bibref|RFC2616}}
              </description>
            </enumeration>
            <enumeration value="HTTPS">
              <description>
                As defined in {{bibref|RFC2818}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.0">
        <description>
          This is the protocol currently being used for remote access.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedProtocols"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UserInterface.LocalDisplay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object describes how to remotely manage the initial positioning of a user interface on a device's local display.
      </description>
      <parameter name="Movable" access="readWrite" dmr:version="2.0">
        <description>
          Controls whether the user is allowed to change the GUI window position on the local CPE's display.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Resizable" access="readWrite" dmr:version="2.0">
        <description>
          Controls whether the user is allowed to resize the GUI window on the local CPE's display.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PosX" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The horizontal position of the User Interface's top left corner within the local CPE's display measured from the top left corner, expressed in {{units}}.
        </description>
        <syntax>
          <int>
            <units value="pixels"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="PosY" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The vertical position of the User Interface's top left corner within the local CPE's display measured from the top left corner, expressed in {{units}}.
        </description>
        <syntax>
          <int>
            <units value="pixels"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Width" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The width of the user interface within the local CPE's display, expressed in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="pixels"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Height" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The height of the user interface within the local CPE's display, expressed in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="pixels"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DisplayWidth" access="readOnly" dmr:version="2.0">
        <description>
          The width of the local CPE's display, expressed in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="pixels"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DisplayHeight" access="readOnly" dmr:version="2.0">
        <description>
          The height of the local CPE's display, expressed in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="pixels"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UserInterface.Messages." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        Definition of user information message displays.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.11">
        <description>
          Enables and displays the user information message.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="true"/>
        </syntax>
      </parameter>
      <parameter name="Title" access="readWrite" dmr:version="2.11">
        <description>
          Message title to be displayed.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SubTitle" access="readWrite" dmr:version="2.11">
        <description>
          Message sub title to be displayed.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Text" access="readWrite" dmr:version="2.11">
        <description>
          Message text.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="IconType" access="readWrite" dmr:version="2.11">
        <description>
          Icon to be displayed.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="Greeting"/>
            <enumeration value="Information"/>
            <enumeration value="Warning"/>
            <enumeration value="Important"/>
            <enumeration value="Urgent"/>
            <enumeration value="Advertisement"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MessageColor" access="readWrite" dmr:version="2.11">
        <description>
          The color of message text in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="BackgroundColor" access="readWrite" dmr:version="2.11">
        <description>
          The color of the message screen background in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="TitleColor" access="readWrite" dmr:version="2.11">
        <description>
          The color of the message title in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="SubTitleColor" access="readWrite" dmr:version="2.11">
        <description>
          The color of the sub title in RGB hexadecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RequestedNumberOfRepetitions" access="readWrite" dmr:version="2.11">
        <description>
          The number of times the device SHOULD repeat the message.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExecutedNumberOfRepetitions" access="readOnly" dmr:version="2.11">
        <description>
          The number of times the device repeated the message.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.InterfaceStack.{i}." access="readOnly" numEntriesParameter="InterfaceStackNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains information about the relationships between the multiple layers of interface objects ({{bibref|TR-181i2|Section 4.3}}). In particular, it contains information on which interfaces run ''on top of'' which other interfaces.
        This table is auto-generated by the CPE based on the ''LowerLayers'' parameters on individual interface objects.
        Each table row represents a "link" between two interface objects, a higher-layer interface object (referenced by {{param|HigherLayer}}) and a lower-layer interface object (referenced by {{param|LowerLayer}}). Consequently, if a referenced interface object is deleted, the CPE MUST delete the corresponding {{object}} row(s) that had referenced it.
      </description>
      <uniqueKey>
        <parameter ref="HigherLayer"/>
        <parameter ref="LowerLayer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="HigherLayer" access="readOnly" dmr:version="2.0">
        <description>
          {{noreference}}A reference to the interface object corresponding to the higher layer of the relationship, i.e. the interface which runs on ''top'' of the interface identified by the corresponding instance of {{param|LowerLayer}}.
          When the referenced higher layer interface is deleted, the CPE MUST delete the table row.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LowerLayer" access="readOnly" dmr:version="2.0">
        <description>
          {{noreference}}A reference to the interface object corresponding to the lower layer of the relationship, i.e. the interface which runs ''below'' the interface identified by the corresponding instance of {{param|HigherLayer}}.
          When the referenced lower layer interface is deleted, the CPE MUST delete the table row.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HigherAlias" access="readOnly" dmr:version="2.0">
        <description>
          The value of the ''Alias'' parameter for the interface object referenced by {{param|HigherLayer}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LowerAlias" access="readOnly" dmr:version="2.0">
        <description>
          The value of the ''Alias'' parameter for the interface object referenced by {{param|LowerLayer}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object models DSL lines, DSL channels, DSL bonding, and DSL diagnostics. The specific interface objects defined here are {{object|Line}}, {{object|Channel}}, and {{object|BondingGroup}}. Each {{object|Line}} models a layer 1 DSL Line interface, and each {{object|Channel}} models a layer 1 DSL Channel interface where multiple channels can run over a DSL line. In the case where bonding is configured, it is expected that {{object|BondingGroup}} is stacked above the {{object|Channel}} instances within its group.
      </description>
      <parameter name="LineNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChannelNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BondingGroupNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}." access="readOnly" numEntriesParameter="LineNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        DSL Line table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        This table models physical DSL lines.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DSL line.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EnableDataGathering" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables data gathering on the DSL line.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the DSL line (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the DSL line as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the DSL line entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          A string identifying the version of the modem firmware currently installed for this interface. This is applicable only when the modem firmware is separable from the overall CPE software.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkStatus" access="readOnly" dmr:version="2.0">
        <description>
          Status of the DSL physical link. {{enum}}
          When {{param}} is {{enum|Up}}, {{param|Status}} is expected to be {{enum|Up|Status}}. When {{param}} is {{enum|Initializing}} or {{enum|EstablishingLink}} or {{enum|NoSignal}} or {{enum|Disabled}}, {{param|Status}} is expected to be {{enum|Down|Status}}.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Initializing"/>
            <enumeration value="EstablishingLink"/>
            <enumeration value="NoSignal"/>
            <enumeration value="Disabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StandardsSupported" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          {{list}} List items indicate which DSL standards and recommendations are supported by the {{object}} instance. {{enum}}
          Note: In G.997.1, this parameter is called "xDSL Transmission system capabilities". See ITU-T Recommendation {{bibref|G.997.1}}.
          This parameter is DEPRECATED because its entries are out-of-date; {{param|XTSE}} points to a current list.  Therefore its value MAY be {{empty}} if (and only if) {{param|XTSE}} is supported.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="G.992.1_Annex_A"/>
            <enumeration value="G.992.1_Annex_B"/>
            <enumeration value="G.992.1_Annex_C"/>
            <enumeration value="T1.413"/>
            <enumeration value="T1.413i2"/>
            <enumeration value="ETSI_101_388"/>
            <enumeration value="G.992.2"/>
            <enumeration value="G.992.3_Annex_A"/>
            <enumeration value="G.992.3_Annex_B"/>
            <enumeration value="G.992.3_Annex_C"/>
            <enumeration value="G.992.3_Annex_I"/>
            <enumeration value="G.992.3_Annex_J"/>
            <enumeration value="G.992.3_Annex_L"/>
            <enumeration value="G.992.3_Annex_M"/>
            <enumeration value="G.992.4"/>
            <enumeration value="G.992.5_Annex_A"/>
            <enumeration value="G.992.5_Annex_B"/>
            <enumeration value="G.992.5_Annex_C"/>
            <enumeration value="G.992.5_Annex_I"/>
            <enumeration value="G.992.5_Annex_J"/>
            <enumeration value="G.992.5_Annex_M"/>
            <enumeration value="G.993.1"/>
            <enumeration value="G.993.1_Annex_A"/>
            <enumeration value="G.993.2_Annex_A"/>
            <enumeration value="G.993.2_Annex_B"/>
            <enumeration value="G.993.2_Annex_C"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="XTSE" access="readOnly" dmr:version="2.8">
        <description>
          This configuration parameter defines the transmission system types to be allowed by the xTU on this {{object}} instance. Each bit is 0 if not allowed or 1 if allowed, as defined for the xTU transmission system enabling (XTSE) in ITU-T G.997.1.
          Note: This parameter is defined as xDSL Transmission system enabling (XTSE) in ITU-T G.997.1. For a full definition, see Clause 7.3.1.1.1 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="StandardUsed" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          Indicates the standard that the {{object}} instance is using for the connection.
          Note: In G.997.1, this parameter is called "xDSL Transmission system". See ITU-T Recommendation {{bibref|G.997.1}}.
          This parameter is DEPRECATED because its entries are out-of-date; {{param|XTSE}} points to a current list.  Therefore its value MAY be {{empty}} if (and only if) {{param|XTSUsed}} is supported.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="StandardsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="XTSUsed" access="readOnly" dmr:version="2.8">
        <description>
          This parameter indicates which DSL standard and recommendation are currently in use by the {{object}} instance. Only one bit is set, as defined for the xTU transmission system enabling (XTSE) in ITU-T G.997.1.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="LineEncoding" access="readOnly" dmr:version="2.0">
        <description>
          The line encoding method used in establishing the Layer 1 DSL connection between the CPE and the DSLAM.  {{enum}}
          Note: Generally speaking, this variable does not change after provisioning.
        </description>
        <syntax>
          <string>
            <enumeration value="DMT"/>
            <enumeration value="CAP"/>
            <enumeration value="2B1Q"/>
            <enumeration value="43BT"/>
            <enumeration value="PAM"/>
            <enumeration value="QAM"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedProfiles" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate which VDSL2 profiles are allowed on the line.  {{enum}}
          Note:  In G.997.1, this parameter is called PROFILES.  See ITU-T Recommendation {{bibref|G.997.1}}.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="8a"/>
            <enumeration value="8b"/>
            <enumeration value="8c"/>
            <enumeration value="8d"/>
            <enumeration value="12a"/>
            <enumeration value="12b"/>
            <enumeration value="17a"/>
            <enumeration value="17b" status="deleted"/>
            <enumeration value="30a"/>
            <enumeration value="35b"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentProfile" access="readOnly" dmr:version="2.0">
        <description>
          Indicates which VDSL2 profile is currently in use on the line.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="AllowedProfiles" nullValue=""/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PowerManagementState" access="readOnly" dmr:version="2.0">
        <description>
          The power management state of the line. {{enum}}
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <string>
            <enumeration value="L0"/>
            <enumeration value="L1"/>
            <enumeration value="L2"/>
            <enumeration value="L3"/>
            <enumeration value="L4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SuccessFailureCause" access="readOnly" dmr:version="2.0">
        <description>
          The success failure cause of the initialization. An enumeration of the following integer values:
          * 0: Successful
          * 1: Configuration error.  This error occurs with inconsistencies in configuration parameters, e.g. when the line is initialized in  an xDSL Transmission system where an xTU does not support the configured Maximum Delay or the configured Minimum or Maximum Data Rate  for one or more bearer channels.
          * 2: Configuration not feasible on the line.  This error occurs if the Minimum Data Rate cannot be reached on the line with the  Minimum Noise Margin, Maximum PSD level, Maximum Delay and Maximum Bit Error Ratio for one or more bearer channels.
          * 3: Communication problem.  This error occurs, for example, due to corrupted messages or bad syntax messages or if no common mode  can be selected in the G.994.1 handshaking procedure or due to a timeout.
          * 4: No peer xTU detected.  This error occurs if the peer xTU is not powered or not connected or if the line is too long to allow  detection of a peer xTU.
          * 5: Any other or unknown Initialization Failure cause.
          * 6: ITU T G.998.4 retransmission mode was not selected while RTX_MODE = FORCED or with RTX_MODE = RTX_TESTMODE.
          Note: In G.997.1, this parameter is called "Initialization success/failure cause". See Clause 7.5.1.6 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="6"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UPBOKLER" access="readOnly" dmr:version="2.8">
        <description>
          This parameter contains the estimated electrical loop length estimated by the VTU-R expressed in {{units}} at 1MHz (see O-UPDATE in section 12.2.4.2.1.2/G.993.2). The value is coded as an unsignedInt in the range 0 (coded as 0) to 128 dB (coded as 1280) in steps of {{units}}.
          Note: This parameter is defined as UPBOKLE-R in Clause 7.5.1.23.2 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UPBOKLEPb" access="readOnly" dmr:version="2.8">
        <description>
          VTU-O estimated upstream power back-off electrical length per band.
          This parameter is a vector of UPBO electrical length per-band estimates for each supported downstream band, expressed in {{units}} at 1 MHz (kl0) calculated by the VTU-R, based on separate measurements in the supported upstream bands. The value of each list element ranges from 0 to 128 dB in steps of {{units}}, with special value 204.7 which indicates that the estimate is greater than 128 dB. This parameter is required for the alternative electrical length estimation method (ELE-M1).
          Note: This parameter is defined as UPBOKLE-pb in Clause 7.5.1.23.3 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
            <range minInclusive="2047" maxInclusive="2047"/>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UPBOKLERPb" access="readOnly" dmr:version="2.8">
        <description>
          VTU-R estimated upstream power back-off electrical length per band.
          This parameter is a vector of UPBO electrical length per-band estimates for each supported downstream band, expressed in {{units}} at 1 MHz (kl0) calculated by the VTU-R, based on separate measurements in the supported downstream bands. The value of each list element ranges from 0 to 128 dB in steps of {{units}}, with special value 204.7 which indicates that the estimate is greater than 128 dB. This parameter is required for the alternative electrical length estimation method (ELE-M1).
          The value of each list element is coded as an unsigned 16 bit number in the range 0 (coded as 0) to 128 dB (coded as 1280) in steps of {{units}}.
          Note: This parameter is defined as UPBOKLE-R-pb in Clause 7.5.1.23.4 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
            <range minInclusive="2047" maxInclusive="2047"/>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RXTHRSHds" access="readOnly" dmr:version="2.8">
        <description>
          UPBO downstream receiver signal level threshold.
          This parameter reports the downstream received signal level threshold value used in the alternative electrical length estimation method (ELE-M1). This parameter represents an offset from -100 dBm/Hz, and ranges from -64 dB to 0 dB in steps of {{units}}.
          The value is coded as a 16 bit number in the range -64 (coded as -640) to 0 dB (coded as 0) in steps of {{units}}.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-640" maxInclusive="0"/>
            <units value="0.1 dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ACTRAMODEds" access="readOnly" dmr:version="2.8">
        <description>
          This parameter indicates the actual active rate adaptation mode in the downstream direction.
          * If {{param}} equals 1, the link is operating in RA-MODE 1 (MANUAL).
          * If {{param}} equals 2, the link is operating in RA-MODE 2 (AT_INIT).
          * If {{param}} equals 3, the link is operating in RA-MODE 3 (DYNAMIC).
          * If {{param}} equals 4, the link is operating in RA-MODE 4 (DYNAMIC with SOS).
          Note: This parameter is defined as ACT-RA-MODEds in Clause 7.5.1.33.1 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="4"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACTRAMODEus" access="readOnly" dmr:version="2.8">
        <description>
          This parameter indicates the actual active rate adaptation mode in the upstream direction.
          * If {{param}} equals 1, the link is operating in RA-MODE 1 (MANUAL).
          * If {{param}} equals 2, the link is operating in RA-MODE 2 (AT_INIT).
          * If {{param}} equals 3, the link is operating in RA-MODE 3 (DYNAMIC).
          * If {{param}} equals 4, the link is operating in RA-MODE 4 (DYNAMIC with SOS).
          Note: This parameter is defined as ACT-RA-MODEus in Clause 7.5.1.33.2 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="4"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACTINPROCds" access="readOnly" dmr:version="2.8">
        <description>
          This parameter reports the actual impulse noise protection (INP) of the robust overhead channel (ROC) in the downstream direction. The format and usage is identical to the channel status parameter {{param|#.Channel.{i}.ACTINP}}.
          Note: This parameter is defined as ACTINP-ROC-ds in Clause 7.5.1.34.1 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTINPROCus" access="readOnly" dmr:version="2.8">
        <description>
          This parameter reports the actual impulse noise protection (INP) of the robust overhead channel (ROC) in the upstream direction. The format and usage is identical to the channel status parameter {{param|#.Channel.{i}.ACTINP}}.
          Note: This parameter is defined as ACTINP-ROC-us in Clause 7.5.1.34.2 ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMROCds" access="readOnly" dmr:version="2.8">
        <description>
          This parameter reports the actual signal-to-noise margin of the robust overhead channel (ROC) in the downstream direction (expressed in {{units}}). The format is identical to the format of the line status parameter SNRM margin {{param|DownstreamNoiseMargin}}.
          Note: This parameter is defined as SNRM-ROC-ds in Clause 7.5.1.35.1 ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SNRMROCus" access="readOnly" dmr:version="2.8">
        <description>
          This parameter reports the actual signal-to-noise margin of the robust overhead channel (ROC) in the upstream direction (expressed in {{units}}). The format is identical to the format of the line status parameter SNRM margin ({{param|UpstreamNoiseMargin}}).
          Note: This parameter is defined as SNRM-ROC-us in Clause 7.5.1.35.2 ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastStateTransmittedDownstream" access="readOnly" dmr:version="2.0">
        <description>
          This parameter represents the last successful transmitted initialization state in the downstream direction in  the last full initialization performed on the line.  Initialization states are defined in the individual xDSL Recommendations and are  counted from 0 (if G.994.1 is used) or 1 (if G.994.1 is not used) up to Showtime.  This parameter needs to be interpreted along with  the xDSL Transmission System.
          This parameter is available only when, after a failed full initialization, the line diagnostics procedures are activated on the  line.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastStateTransmittedUpstream" access="readOnly" dmr:version="2.0">
        <description>
          This parameter represents the last successful transmitted initialization state in the upstream direction in the  last full initialization performed on the line.  Initialization states are defined in the individual xDSL Recommendations and are  counted from 0 (if G.994.1 is used) or 1 (if G.994.1 is not used) up to Showtime.  This parameter needs to be interpreted along with  the xDSL Transmission System.
          This parameter is available only when, after a failed full initialization, the line diagnostics procedures are activated on the  line.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPBOKLE" access="readOnly" dmr:version="2.0">
        <description>
          This parameter contains the estimated electrical loop length expressed in {{units}} at 1MHz (see O-UPDATE  in section 12.2.4.2.1.2/G.993.2).  The value SHALL be coded as an unsigned 16 bit number in the range 0 (coded as 0) to 128 dB (coded  as 1280) in steps of 0.1 dB.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MREFPSDds" access="readOnly" dmr:version="2.0">
        <description>
          This parameter SHALL contain the set of breakpoints exchanged in the MREFPSDds fields of the O-PRM message of  G.993.2. Base64 encoded of the binary representation defined in Table 12-19/G.993.2 (maximum length is 145 octets, which requires 196  bytes for Base64 encoding).
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="145"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="MREFPSDus" access="readOnly" dmr:version="2.0">
        <description>
          This parameter SHALL contain the set of breakpoints exchanged in the MREFPSDus fields of the R-PRM message of  G.993.2. Base64 encoded of the binary representation defined in Table 12-19/G.993.2 (maximum length is 145 octets, which requires 196  bytes for Base64 encoding).
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="145"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="LIMITMASK" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the enabled VDSL2 Limit PSD mask of the selected PSD mask class.  Bit mask as specified in ITU-T  Recommendation G.997.1.
          Note:  For a VDSL2-capable multimode device operating in a mode other than VDSL2, the value of this parameter SHOULD be set to  0.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="US0MASK" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the allowed VDSL2 US0 PSD masks for Annex A operation.  Bit mask as specified in see ITU-T  Recommendation G.997.1.
          Note:  For a VDSL2-capable multimode device operating in a mode other than VDSL2, the value of this parameter SHOULD be set to  0.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TRELLISds" access="readOnly" dmr:version="2.0">
        <description>
          Reports whether trellis coding is enabled in the downstream direction.  A value of 1 indicates that trellis  coding is in use, and a value of 0 indicates that the trellis is disabled.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="TRELLISus" access="readOnly" dmr:version="2.0">
        <description>
          Reports whether trellis coding is enabled in the upstream direction.  A value of 1 indicates that trellis coding  is in use, and a value of 0 indicates that the trellis is disabled.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTSNRMODEds" access="readOnly" dmr:version="2.0">
        <description>
          Reports whether the OPTIONAL virtual noise mechanism is in use in the downstream direction.  A value of 1  indicates the virtual noise mechanism is not in use, and a value of 2 indicates the virtual noise mechanism is in use.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTSNRMODEus" access="readOnly" dmr:version="2.0">
        <description>
          Reports whether the OPTIONAL virtual noise mechanism is in use in the upstream direction.  A value of 1  indicates the virtual noise mechanism is not in use, and a value of 2 indicates the virtual noise mechanism is in use.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VirtualNoisePSDds" access="readOnly" dmr:version="2.0">
        <description>
          Reports the virtual noise PSD for the downstream direction. Base64 encoded of the binary representation defined  in G.997.1 by the parameter called TXREFVNds (maximum length is 97 octets, which requires 132 bytes for Base64 encoding).
          See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value of  this parameter SHOULD be set to {{empty}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="97"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="VirtualNoisePSDus" access="readOnly" dmr:version="2.0">
        <description>
          Reports the virtual noise PSD for the upstream direction. Base64 encoded of the binary representation defined in  G.997.1by the parameter called TXREFVNus (maximum length is 49 octets, which requires 68 bytes for Base64 encoding).
          See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value of  this parameter SHOULD be set to {{empty}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="49"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="ACTUALCE" access="readOnly" dmr:version="2.0">
        <description>
          Reports the actual cyclic extension, as the value of m, in use for the connection.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 99.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LineNumber" access="readOnly" dmr:version="2.0">
        <description>
          Signifies the line pair that the modem is using to connection.  {{param}} = 1 is the innermost  pair.
        </description>
        <syntax>
          <int>
            <range minInclusive="1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamMaxBitRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current maximum attainable data rate upstream (expressed in {{units}}).
          Note:  This parameter is related to the G.997.1 parameter ATTNDRus, which is measured in bits/s.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamMaxBitRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current maximum attainable data rate downstream (expressed in {{units}}).
          Note:  This parameter is related to the G.997.1 parameter ATTNDRds, which is measured in bits/s.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamNoiseMargin" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current signal-to-noise ratio margin (expressed in {{units}}) in the upstream direction.
          Note:  In G.997.1, this parameter is called SNRMus.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DownstreamNoiseMargin" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current signal-to-noise ratio margin (expressed in {{units}}) in the downstream direction.
          Note:  In G.997.1, this parameter is called SNRMds.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SNRMpbus" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the current signal-to-noise ratio margin of each upstream band.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMpbds" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the current signal-to-noise ratio margin of each band.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="INMIATOds" access="readOnly" dmr:version="2.0">
        <description>
          The Impulse Noise Monitoring (INM) Inter Arrival Time (IAT) Offset, measured in DMT symbols, that the xTU  receiver uses to determine in which bin of the IAT histogram the IAT is reported.
          Note:  In G.997.1, this parameter is called INMIATO.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="3" maxInclusive="511"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMIATSds" access="readOnly" dmr:version="2.0">
        <description>
          The Impulse Noise Monitoring (INM)  Inter Arrival Time (IAT) Step that the xTU receiver uses to determine in  which bin of the IAT histogram the IAT is reported.
          Note:  In G.997.1, this parameter is called INMIATS.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMCCds" access="readOnly" dmr:version="2.0">
        <description>
          The Impulse Noise Monitoring (INM) Cluster Continuation value, measured in DMT symbols, that the xTU receiver  uses in the cluster indication process.
          Note:  In G.997.1, this parameter is called INMCC.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMINPEQMODEds" access="readOnly" dmr:version="2.0">
        <description>
          The Impulse Noise Monitoring (INM) Equivalent Impulse Noise Protection (INP) Mode that the xTU receiver uses in  the computation of the Equivalent INP.
          Note:  In G.997.1, this parameter is called INM_INPEQ_MODE.  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamAttenuation" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current upstream signal loss (expressed in {{units}}).
          Doesn't apply to VDSL2 {{bibref|G.993.2}}. Otherwise has the same value as the single element of {{param|TestParams.SATNus}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DownstreamAttenuation" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current downstream signal loss (expressed in {{units}}).
          Doesn't apply to VDSL2 {{bibref|G.993.2}}. Otherwise has the same value as the single element of {{param|TestParams.SATNds}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamPower" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current output power at the CPE's DSL line (expressed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="0.1dBmV"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DownstreamPower" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current received power at the CPE's DSL line (expressed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="0.1dBmV"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="XTURVendor" access="readOnly" dmr:version="2.0">
        <description>
          xTU-R vendor identifier as defined in G.994.1 and T1.413.  In the case of G.994.1 this corresponds to the four-octet provider code, which MUST be represented as eight hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, it MUST have the value "00000000".
          Note: In G.997.1, this parameter is called "xTU-R G.994.1 Vendor ID". See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="4" maxLength="4"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="XTURCountry" access="readOnly" dmr:version="2.0">
        <description>
          T.35 country code of the xTU-R vendor as defined in G.994.1, where the two-octet value defined in G.994.1 MUST be represented as four hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, it MUST have the value "0000".
          Note: In G.997.1, this parameter is called "xTU-R G.994.1 Vendor ID". See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="2" maxLength="2"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="XTURANSIStd" access="readOnly" dmr:version="2.0">
        <description>
          xTU-R T1.413 Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURANSIRev" access="readOnly" dmr:version="2.0">
        <description>
          xTU-R Vendor Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCVendor" access="readOnly" dmr:version="2.0">
        <description>
          xTU-C vendor identifier as defined in G.994.1 and T1.413.  In the case of G.994.1 this corresponds to the four-octet provider code, which MUST be represented as eight hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, it MUST have the value "00000000".
        </description>
        <syntax>
          <hexBinary>
            <size minLength="4" maxLength="4"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="XTUCCountry" access="readOnly" dmr:version="2.0">
        <description>
          T.35 country code of the xTU-C vendor as defined in G.994.1, where the two-octet value defined in G.994.1 MUST be represented as four hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, it MUST have the value "0000".
        </description>
        <syntax>
          <hexBinary>
            <size minLength="2" maxLength="2"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="XTUCANSIStd" access="readOnly" dmr:version="2.0">
        <description>
          xTU-C T1.413 Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCANSIRev" access="readOnly" dmr:version="2.0">
        <description>
          xTU-C Vendor Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|Total}} statistics.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the most recent DSL Showtime - the beginning of the period used for collection of {{object|Showtime}} statistics.
          Showtime is defined as successful completion of the DSL link establishment process.  The ''Showtime'' statistics are those collected  since the most recent establishment of the DSL link.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the second most recent DSL Showtime-the beginning of the period used for collection of {{object|LastShowtime}} statistics.
          If the CPE has not retained information about the second most recent Showtime (e.g., on reboot), the start of ''LastShowtime''  statistics MAY temporarily coincide with the start of ''Showtime'' statistics.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CurrentDayStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|CurrentDay}} statistics.
          The CPE MAY align the beginning of each ''CurrentDay'' interval with days in the UTC time zone, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QuarterHourStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|QuarterHour}} statistics.
          The CPE MAY align the beginning of each ''QuarterHour'' interval with real-time quarter-hour intervals, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.Stats.Total." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL line total statistics. See {{bibref|G.997.1|Chapter 7.2.6}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of errored seconds (ES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of severely errored seconds (SES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.Stats.Showtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL line statistics accumulated since the most recent DSL Showtime. See {{bibref|G.997.1|Chapter 7.2.6}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of errored seconds since the most recent DSL Showtime (ES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of severely errored seconds since the most recent DSL Showtime (SES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.Stats.LastShowtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL line statistics accumulated since the second most recent DSL Showtime. See {{bibref|G.997.1|Chapter 7.2.6}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of errored seconds since the second most recent DSL Showtime (ES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime (SES-L as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.Stats.CurrentDay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL line statistics accumulated during the current day. See {{bibref|G.997.1|Chapter 7.2.6}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of errored seconds since the second most recent DSL Showtime (ES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime (SES-L as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.Stats.QuarterHour." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL line statistics accumulated during the current quarter hour. See {{bibref|G.997.1|Chapter 7.2.6}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of errored seconds since the second most recent DSL Showtime (ES-L as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime (SES-L as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.TestParams." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains the DSL line test parameters that are available during the L0 (i.e., Showtime)  state.
      </description>
      <parameter name="HLOGGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLOGpsds}}. Valid values are 1, 2, 4, 8, and 16.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|HLOGpsus}}.  Valid values are  1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the downstream logarithmic line characteristics per sub-carrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of  {{param|HLOGGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the upstream logarithmic line characteristics per sub-carrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsds}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsus}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|QLNpsds}}. Valid values are 1, 2, 4, 8, and 16.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|QLNpsus}}.  Valid values are  1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the downstream quiet line noise per subcarrier group.  The maximum number of elements is 256 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGds}} but will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="QLNpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the upstream quiet line noise per subcarrier group.  The maximum number of elements is 64 for  G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGus}} but will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsds}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsus}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|SNRpsds}}. Valid values are 1, 2, 4, 8, and 16.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|SNRpsus}}.  Valid values are  1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the downstream SNR per subcarrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGds}} but will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is first measured during initialization and is updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the upstream SNR per subcarrier group.  The maximum number of elements is 64 for G.992.3 and  G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is first measured during initialization and is updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsds}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsus}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LATNds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the downstream line attenuation averaged across all sub-carriers in the frequency band, as computed during initialization.  Number  of elements is dependent on the number of downstream bands but will exceed one only for ITU-T G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LATNus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the upstream line attenuation averaged across all sub-carriers in the frequency band, as computed during initialization.  Number of  elements is dependent on the number of upstream bands but will exceed one only for ITU-T G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the downstream signal attenuation averaged across all active sub-carriers in the frequency band, as computed during the L0 (i.e., Showtime)  state.  Number of elements is dependent on the number of downstream bands but will exceed one only for ITU-T G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the upstream signal attenuation averaged across all active sub-carriers in the frequency band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for ITU-T G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="35"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Line.{i}.DataGathering." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object models the DSL data gathering function at the VTU-R. This only applies to VDSL2.
        Note: see ITU-T Recommendation {{bibref|G.993.2}}.
      </description>
      <parameter name="LoggingDepthR" access="readOnly" dmr:version="2.8">
        <description>
          This parameter is the maximum depth of the entire data gathering event buffer at the VTU-R, in number of {{units}}, where each of the {{units}} consists of 6 bytes indicating a data gathering event as defined in {{bibref|G.993.2}}.
          Note: This parameter is defined as LOGGING_DEPTH_R in Clause 7.5.3.2 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="records"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ActLoggingDepthReportingR" access="readOnly" dmr:version="2.8">
        <description>
          This parameter is actual logging depth that is used for reporting the VTU-R event trace buffer over the eoc channel, in number of {{units}}, where each of the {{units}} consists of 6 bytes indicating a data gathering event as defined in {{bibref|G.993.2}}.
          Note: This parameter is defined as ACT_LOGGING_DEPTH_REPORTING_R in Clause 7.5.3.4 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="records"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EventTraceBufferR" access="readOnly" dmr:version="2.8">
        <description>
          This parameter identifies the log file of the the data gathering event trace buffer containing the event records that originated at the VTU-R.
          This indicates the table entry that represents a Vendor Log File that contains the data gathering buffer at the VTU-R in the {{object|###.DeviceInfo.VendorLogFile}} table.
          This data gathering buffer MAY be retrieved wia an upload RPC of the identified Vendor Log File.
          Note: This parameter is defined as EVENT_TRACE_BUFFER_R in Clause 7.5.3.6 of ITU-T Recommendation {{bibref|G.997.1}} and Clause 11.5 of ITU-T Recommendation {{bibref|G.993.2}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".DeviceInfo.VendorLogFile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}." access="readOnly" numEntriesParameter="ChannelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        DSL Channel table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        This table models DSL channel(s) on top of physical DSL lines.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the channel.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the channel (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the channel as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the channel entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate which link encapsulation standards and recommendations are supported by the {{object}} instance.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="G.992.3_Annex_K_ATM"/>
            <enumeration value="G.992.3_Annex_K_PTM"/>
            <enumeration value="G.993.2_Annex_K_ATM"/>
            <enumeration value="G.993.2_Annex_K_PTM"/>
            <enumeration value="G.994.1">
              <description>
                Auto
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationUsed" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the link encapsulation standard that the {{object}} instance is using for the connection.  {{enum}}
          When ATM encapsulation is identified then an upper-layer {{object|.ATM.Link}} interface MUST be used.
          When PTM encapsulation is identified then an upper-layer {{object|.PTM.Link}} interface MUST be used.
        </description>
        <syntax>
          <string>
            <enumeration value="G.992.3_Annex_K_ATM"/>
            <enumeration value="G.992.3_Annex_K_PTM"/>
            <enumeration value="G.993.2_Annex_K_ATM"/>
            <enumeration value="G.993.2_Annex_K_PTM"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LPATH" access="readOnly" dmr:version="2.0">
        <description>
          Reports the index of the latency path supporting the bearer channel.
          Note:  See ITU-T Recommendation {{bibref|G.997.1|Section 7.5.2.7}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INTLVDEPTH" access="readOnly" dmr:version="2.0">
        <description>
          Reports the interleaver depth D for the latency path indicated in {{param|LPATH}}.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.  For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="INTLVBLOCK" access="readOnly" dmr:version="2.0">
        <description>
          Reports the interleaver block length in use on the latency path indicated in {{param|LPATH}}.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ActualInterleavingDelay" access="readOnly" dmr:version="2.0">
        <description>
          Reports the actual delay, in {{units}}, of the latency path due to interleaving.
          Note:  In G.997.1, this parameter is called "Actual Interleaving Delay." See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACTINP" access="readOnly" dmr:version="2.0">
        <description>
          Reports the actual impulse noise protection (INP) provided by the latency path indicated in {{param|LPATH}}.  The value is  the actual INP in the L0 (i.e., Showtime) state.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="INPREPORT" access="readOnly" dmr:version="2.0">
        <description>
          Reports whether the value reported in ACTINP was computed assuming the receiver does not use erasure decoding.   Valid values are 0 (computed per the formula assuming no erasure decoding) and 1 (computed by taking into account erasure decoding  capabilities of receiver).
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.  For a multimode device operating in a mode in which this parameter does not apply, the  value of this parameter SHOULD be set to {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NFEC" access="readOnly" dmr:version="2.0">
        <description>
          Reports the size, in {{units}}, of the Reed-Solomon codeword in use on the latency path indicated in {{param|LPATH}}.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int>
            <units value="octets"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="RFEC" access="readOnly" dmr:version="2.0">
        <description>
          Reports the number of redundancy bytes per Reed-Solomon codeword on the latency path indicated in {{param|LPATH}}.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="LSYMB" access="readOnly" dmr:version="2.0">
        <description>
          Reports the number of bits per symbol assigned to the latency path indicated in {{param|LPATH}}.  This value does not  include overhead due to trellis coding.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="UpstreamCurrRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current physical layer aggregate data rate (expressed in {{units}}) of the upstream DSL connection.
          Note: If the parameter is implemented but no value is  available, it MUST have the value 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamCurrRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current physical layer aggregate data rate (expressed in {{units}}) of the downstream DSL connection.
          Note: If the parameter is implemented but no value is  available, it MUST have the value 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACTNDR" access="readOnly" dmr:version="2.8">
        <description>
          Actual net data rate expressed in {{units}}. Independent whether retransmission is used or not in a given transmit direction:
          * In L0 state, this parameter reports the net data rate (as specified in [ITU T G.992.3], [ITU T G.992.5] or [ITU T G.993.2]) at which the bearer channel is operating.
          * In L2 state, the parameter contains the net data rate (as specified in [ITU T G.992.3], [ITU T G.992.5] or [ITU T G.993.2]) in the previous L0 state.
          Note: See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACTINPREIN" access="readOnly" dmr:version="2.8">
        <description>
          Actual impulse noise protection against REIN, expressed in {{units}}.
          If retransmission is used in a given transmit direction, this parameter reports the actual impulse noise protection (INP) against REIN (under specific conditions detailed in [ITU T G.998.4]) on the bearer channel in the L0 state. In the L2 state, the parameter contains the INP in the previous L0 state.
          The value is coded in fractions of DMT symbols with a granularity of 0.1 symbols.
          The range is from 0 to 25.4. A special value of 25.5 indicates an ACTINP_REIN of 25.5 or higher.
          Note: This parameter is defined as ACTINP_REIN in Clause 7.5.2.9 of ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="0.1 DMT symbols"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|Total}} statistics.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the most recent DSL Showtime - the beginning of the period used for collection of {{object|Showtime}} statistics.
          Showtime is defined as successful completion of the DSL link establishment process.  The ''Showtime'' statistics are those collected  since the most recent establishment of the DSL link.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the second most recent DSL Showtime-the beginning of the period used for collection of {{object|LastShowtime}} statistics.
          If the CPE has not retained information about the second most recent Showtime (e.g., on reboot), the start of ''LastShowtime''  statistics MAY temporarily coincide with the start of ''Showtime'' statistics.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CurrentDayStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|CurrentDay}} statistics.
          The CPE MAY align the beginning of each ''CurrentDay'' interval with days in the UTC time zone, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QuarterHourStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|QuarterHour}} statistics.
          The CPE MAY align the beginning of each ''QuarterHour'' interval with real-time quarter-hour intervals, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}.Stats.Total." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL channel total statistics {{bibref|G.997.1}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="XTURFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of FEC errors detected (FEC-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of FEC errors detected by the ATU-C (FEC-CFE as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of HEC errors detected (HEC-P as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of HEC errors detected by the ATU-C (HEC-PFE as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of CRC errors detected (CV-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of CRC errors detected by the ATU-C (CV-CFE as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}.Stats.Showtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL channel statistics accumulated since the most recent DSL Showtime {{bibref|G.997.1}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="XTURFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected since the most recent DSL Showtime (FEC-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected by the ATU-C since the most recent DSL Showtime (FEC-CFE as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected since the most recent DSL Showtime (HEC-P as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected by the ATU-C since the most recent DSL Showtime (HEC-PFE as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected since the most recent DSL Showtime (CV-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected by the ATU-C since the most recent DSL Showtime (CV-CFE as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}.Stats.LastShowtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL channel statistics accumulated since the second most recent DSL Showtime {{bibref|G.997.1}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="XTURFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected since the second most recent DSL Showtime (FEC-C as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected by the ATU-C since the second most recent DSL Showtime (FEC-CFE as defined in  ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected since the second most recent DSL Showtime (HEC-P as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected by the ATU-C since the second most recent DSL Showtime (HEC-PFE as defined in  ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected since the second most recent DSL Showtime (CV-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected by the ATU-C since the second most recent DSL Showtime (CV-CFE as defined in ITU-T  Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}.Stats.CurrentDay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL channel statistics accumulated during the current day {{bibref|G.997.1}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="XTURFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected since the second most recent DSL Showtime (FEC-C as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected by the ATU-C since the second most recent DSL Showtime (FEC-CFE as defined in  ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected since the second most recent DSL Showtime (HEC-P as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected by the ATU-C since the second most recent DSL Showtime (HEC-PFE as defined in  ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected since the second most recent DSL Showtime (CV-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected by the ATU-C since the second most recent DSL Showtime (CV-CFE as defined in ITU-T  Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Channel.{i}.Stats.QuarterHour." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains DSL channel statistics accumulated during the current quarter hour {{bibref|G.997.1}}.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="XTURFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected since the second most recent DSL Showtime (FEC-C as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCFECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of FEC errors detected by the ATU-C since the second most recent DSL Showtime (FEC-CFE as defined in  ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected since the second most recent DSL Showtime (HEC-P as defined in ITU-T Rec.  {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCHECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of HEC errors detected by the ATU-C since the second most recent DSL Showtime (HEC-PFE as defined in  ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTURCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected since the second most recent DSL Showtime (CV-C as defined in ITU-T Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="XTUCCRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of CRC errors detected by the ATU-C since the second most recent DSL Showtime (CV-CFE as defined in ITU-T  Rec. {{bibref|G.997.1}}).
          Note: If the parameter is implemented but no value is  available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}." access="readOnly" numEntriesParameter="BondingGroupNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        DSL bonding group table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Each instance is a bonding group, and is expected to be stacked above a {{object|.DSL.Channel}} instance or a {{object|.FAST.Line}} instance for each bonded channel in the group.
        Many of the parameters within this object, including {{param|LowerLayers}}, are read-only because bonding is not expected to be configured via {{bibref|TR-069}}.
        The DSL bonding data model is closely aligned with {{bibref|TR-159}}. Corresponds to {{bibref|TR-159}} ''oBondingGroup''.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="GroupID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the bonding group.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the bonding group (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the bonding group as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the bonding group entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          {{param}} is read-only for this object because bonding is expected to be configured by the CPE, not by the ACS.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GroupStatus" access="readOnly" dmr:version="2.0">
        <description>
          {{list}}  Indicates the current fault status of the DSL bonding group.  {{enum}}
          Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupStatus''.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="NoPeer">
              <description>
                Peer physical layer is unreachable
              </description>
            </enumeration>
            <enumeration value="PeerPowerLoss">
              <description>
                Local device received a "dying gasp" message (preceding a loss-of-power) from the peer  device
              </description>
            </enumeration>
            <enumeration value="PeerBondSchemeMismatch">
              <description>
                Operating bonding scheme of the peer port is different from the local one
              </description>
            </enumeration>
            <enumeration value="LowRate">
              <description>
                Upstream or downstream data rate is at or below threshold
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="GroupID" access="readOnly" dmr:version="2.0">
        <description>
          DSL bonding group ID.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupID''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BondSchemesSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Supported DSL bonding schemes. {{enum}}
          Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupBondSchemesSupported''.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="ATM">
              <description>
                {{bibref|G.998.1}} ATM-based bonding
              </description>
            </enumeration>
            <enumeration value="Ethernet">
              <description>
                {{bibref|G.998.2}} Ethernet-based bonding
              </description>
            </enumeration>
            <enumeration value="TDIM">
              <description>
                {{bibref|G.998.3}} TDIM-based bonding
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="BondScheme" access="readOnly" dmr:version="2.0">
        <description>
          Currently operating bonding scheme.  Corresponds to {{bibref|TR-159}} ''aGroupOperBondScheme''.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="BondSchemesSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GroupCapacity" access="readOnly" dmr:version="2.0">
        <description>
          DSL bonding group capacity, i.e. the maximum number of channels that can be bonded in this group. Corresponds to  {{bibref|TR-159}} ''oBondingGroup.aGroupCapacity''.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="32"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RunningTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} for which this bonding group has been operationally up.  Corresponds to  {{bibref|G.998.1|section 11.4.2}} ''Group Running Time''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TargetUpRate" access="readOnly" dmr:version="2.0">
        <description>
          Desired upstream data rate in {{units}} for this DSL bonding group (zero indicates best effort). Corresponds to  {{bibref|TR-159}} ''oBondingGroup.aGroupTargetUpRate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TargetDownRate" access="readOnly" dmr:version="2.0">
        <description>
          Desired downstream data rate in {{units}} for DSL bonding group (zero indicates best effort). Corresponds to  {{bibref|TR-159}} ''oBondingGroup.aGroupTargetDownRate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ThreshLowUpRate" access="readOnly" dmr:version="2.0">
        <description>
          Threshold upstream data rate in {{units}} for this DSL bonding group.  {{param|GroupStatus}} will include  {{enum|LowRate|GroupStatus}} whenever the upstream rate is less than this threshold.  Corresponds to {{bibref|TR-159}}  ''oBondingGroup.aGroupThreshLowUpRate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ThreshLowDownRate" access="readOnly" dmr:version="2.0">
        <description>
          Threshold downstream data rate in {{units}} for this DSL bonding group.  {{param|GroupStatus}} will include  {{enum|LowRate|GroupStatus}} whenever the downstream rate is less than this threshold.  Corresponds to {{bibref|TR-159}}  ''oBondingGroup.aGroupThreshLowDownRate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamDifferentialDelayTolerance" access="readOnly" dmr:version="2.0">
        <description>
          The maximum upstream differential delay in {{units}} among member links in a bonding group.  Corresponds to  {{bibref|G.998.1|section 11.4.1}} ''Differential Delay Tolerance''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamDifferentialDelayTolerance" access="readOnly" dmr:version="2.0">
        <description>
          The maximum downstream differential delay in {{units}} among member links in a bonding group.  Corresponds to  {{bibref|G.998.1|section 11.4.1}} ''Differential Delay Tolerance''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="BondedChannelNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}} Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupNumChannels''.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="32"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.BondedChannel.{i}." access="readOnly" numEntriesParameter="BondedChannelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        DSL bonded channel table. Each table entry represents a bonded channel within the bonding group, and is associated with exactly one {{object|.DSL.Channel}} instance or one {{object|.FAST.Line}} instance. There MUST be an instance of {{object}} for each DSL channel or FAST line that is bonded.
        When a {{object|.DSL.Channel}} or {{object|.FAST.Line}} is no longer bonded, then the CPE MUST delete the corresponding {{object}} instance. However, when a bonded {{object|.DSL.Channel}} or {{object|.FAST.Line}} becomes disabled, the channel remains bonded and so the corresponding {{object}} instance MUST NOT be deleted.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Channel"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}}This is the channel that is being bonded.
          This is read-only because bonding is expected to be configured by the CPE, not by the ACS.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".DSL.Channel. .FAST.Line." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.BondedChannel.{i}.Ethernet." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Per-channel {{bibref|G.998.2}} Ethernet-based bonding parameters.
        This object MUST be present if, and only if, {{param|##.BondScheme}} is  {{enum|Ethernet|##.BondScheme}}.
      </description>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.BondedChannel.{i}.Ethernet.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Per-channel {{bibref|G.998.2}} Ethernet-based bonding statistics.
        These relate to the {{bibref|G.998.2}} PME (Physical Medium Entity) Aggregation Function (PAF) lower layer (per-channel) interfaces.
        The CPE MUST reset the Stats parameters either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|###.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|###.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="UnderflowErrorsSent" access="readOnly" dmr:version="2.0">
        <description>
          Number of underflow errors sent, i.e. on the transmit side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrorsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of CRC errors received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AlignmentErrorsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of alignment errors received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShortPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of short packets received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LongPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of long packets received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OverflowErrorsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of overflow errors received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PauseFramesReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of pause frames received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FramesDropped" access="readOnly" dmr:version="2.0">
        <description>
          Number of frames dropped, e.g. because the receive queue is full.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|Total}} statistics.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CurrentDayStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|CurrentDay}} statistics.
          The CPE MAY align the beginning of each CurrentDay interval with days in the UTC time zone, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QuarterHourStart" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DSL-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|QuarterHour}} statistics.
          The CPE MAY align the beginning of each QuarterHour interval with real-time quarter-hour intervals, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.Stats.Total." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Total statistics for this bonding group.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="FailureReasons" access="readOnly" dmr:version="2.0">
        <description>
          {{list}}  Indicates the failure conditions that have occurred during the accumulation period.  {{enum}}
          Corresponds to {{bibref|G.998.1|section 11.4.3}} ''Current Group Failure Reason''.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="LowRate">
              <description>
                Minimum data rate not met
              </description>
            </enumeration>
            <enumeration value="ExcessiveDelay">
              <description>
                Differential delay tolerance exceeded
              </description>
            </enumeration>
            <enumeration value="InsufficientBuffers">
              <description>
                Insufficient buffers on receiver
              </description>
            </enumeration>
            <enumeration value="Other">
              <description>
                Other failure occurred
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpstreamRate" access="readOnly" dmr:version="2.0">
        <description>
          The achieved upstream data rate in {{units}} (which might change subject to dynamic link usage conditions).  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Achieved Aggregate Data Rate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamRate" access="readOnly" dmr:version="2.0">
        <description>
          The achieved downstream data rate in {{units}} (which might change subject to dynamic link usage conditions).   Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Achieved Aggregate Data Rate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamPacketLoss" access="readOnly" dmr:version="2.0">
        <description>
          The total number of upstream packets that were lost at aggregation output from a bonding group during the  accumulation period.  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Group Rx Cell Loss Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamPacketLoss" access="readOnly" dmr:version="2.0">
        <description>
          The total number of downstream packets that were lost at aggregation output from a bonding group during the  accumulation period.  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Group Rx Cell Loss Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamDifferentialDelay" access="readOnly" dmr:version="2.0">
        <description>
          The achieved upstream differential delay in {{units}} (which might change subject to dynamic link usage  conditions).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamDifferentialDelay" access="readOnly" dmr:version="2.0">
        <description>
          The achieved downstream differential delay in {{units}} (which might change subject to dynamic link usage  conditions).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" dmr:version="2.0">
        <description>
          The number of times that the group was declared ''Unavailable'' during the accumulation period.  Corresponds to  {{bibref|G.998.1|Section 11.4.3}} ''Group Failure Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErroredSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''Errored'' during the accumulation period. Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**ES''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''SeverelyErrored'' during the accumulation period.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**SES''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UnavailableSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''Unavailable'' during the accumulation period.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**UAS''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.Stats.CurrentDay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Current day statistics for this bonding group.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="FailureReasons" access="readOnly" dmr:version="2.0">
        <description>
          {{list}}  Indicates the failure conditions that have occurred during the accumulation period.  {{enum}}
          Corresponds to {{bibref|G.998.1|section 11.4.3}} ''Current Group Failure Reason''.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="LowRate">
              <description>
                Minimum data rate not met
              </description>
            </enumeration>
            <enumeration value="ExcessiveDelay">
              <description>
                Differential delay tolerance exceeded
              </description>
            </enumeration>
            <enumeration value="InsufficientBuffers">
              <description>
                Insufficient buffers on receiver
              </description>
            </enumeration>
            <enumeration value="Other">
              <description>
                Other failure occurred
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpstreamRate" access="readOnly" dmr:version="2.0">
        <description>
          The achieved upstream data rate in {{units}} (which might change subject to dynamic link usage conditions).  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Achieved Aggregate Data Rate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamRate" access="readOnly" dmr:version="2.0">
        <description>
          The achieved downstream data rate in {{units}} (which might change subject to dynamic link usage conditions).   Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Achieved Aggregate Data Rate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamPacketLoss" access="readOnly" dmr:version="2.0">
        <description>
          The total number of upstream packets that were lost at aggregation output from a bonding group during the  accumulation period.  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Group Rx Cell Loss Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamPacketLoss" access="readOnly" dmr:version="2.0">
        <description>
          The total number of downstream packets that were lost at aggregation output from a bonding group during the  accumulation period.  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Group Rx Cell Loss Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamDifferentialDelay" access="readOnly" dmr:version="2.0">
        <description>
          The achieved upstream differential delay in {{units}} (which might change subject to dynamic link usage  conditions).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamDifferentialDelay" access="readOnly" dmr:version="2.0">
        <description>
          The achieved downstream differential delay in {{units}} (which might change subject to dynamic link usage  conditions).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" dmr:version="2.0">
        <description>
          The number of times that the group was declared ''Unavailable'' during the accumulation period.  Corresponds to  {{bibref|G.998.1|Section 11.4.3}} ''Group Failure Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErroredSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''Errored'' during the accumulation period. Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**ES''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''SeverelyErrored'' during the accumulation period.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**SES''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UnavailableSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''Unavailable'' during the accumulation period.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**UAS''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.Stats.QuarterHour." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Current quarter hour statistics for this bonding group.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="FailureReasons" access="readOnly" dmr:version="2.0">
        <description>
          {{list}}  Indicates the failure conditions that have occurred during the accumulation period.  {{enum}}
          Corresponds to {{bibref|G.998.1|section 11.4.3}} ''Current Group Failure Reason''.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="LowRate">
              <description>
                Minimum data rate not met
              </description>
            </enumeration>
            <enumeration value="ExcessiveDelay">
              <description>
                Differential delay tolerance exceeded
              </description>
            </enumeration>
            <enumeration value="InsufficientBuffers">
              <description>
                Insufficient buffers on receiver
              </description>
            </enumeration>
            <enumeration value="Other">
              <description>
                Other failure occurred
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpstreamRate" access="readOnly" dmr:version="2.0">
        <description>
          The achieved upstream data rate in {{units}} (which might change subject to dynamic link usage conditions).  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Achieved Aggregate Data Rate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamRate" access="readOnly" dmr:version="2.0">
        <description>
          The achieved downstream data rate in {{units}} (which might change subject to dynamic link usage conditions).   Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Achieved Aggregate Data Rate''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamPacketLoss" access="readOnly" dmr:version="2.0">
        <description>
          The total number of upstream packets that were lost at aggregation output from a bonding group during the  accumulation period.  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Group Rx Cell Loss Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamPacketLoss" access="readOnly" dmr:version="2.0">
        <description>
          The total number of downstream packets that were lost at aggregation output from a bonding group during the  accumulation period.  Corresponds to {{bibref|G.998.1|section 11.4.2}} ''Group Rx Cell Loss Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamDifferentialDelay" access="readOnly" dmr:version="2.0">
        <description>
          The achieved upstream differential delay in {{units}} (which might change subject to dynamic link usage  conditions).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamDifferentialDelay" access="readOnly" dmr:version="2.0">
        <description>
          The achieved downstream differential delay in {{units}} (which might change subject to dynamic link usage  conditions).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" dmr:version="2.0">
        <description>
          The number of times that the group was declared ''Unavailable'' during the accumulation period.  Corresponds to  {{bibref|G.998.1|Section 11.4.3}} ''Group Failure Count''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErroredSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''Errored'' during the accumulation period. Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**ES''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''SeverelyErrored'' during the accumulation period.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**SES''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UnavailableSeconds" access="readOnly" dmr:version="2.0">
        <description>
          The time in {{units}} during which the group was declared ''Unavailable'' during the accumulation period.  Corresponds to {{bibref|TR-159}} ''oBondingGroup.aGroupPerf**UAS''.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.Ethernet." access="readOnly" minEntries="0" maxEntries="1" dmr:version="2.0">
      <description>
        Ethernet-based bonding parameters {{bibref|G.998.2}}.
        This object MUST be present if, and only if, {{param|#.BondScheme}} is {{enum|Ethernet|#.BondScheme}}.
      </description>
    </object>
    <object name="Device.DSL.BondingGroup.{i}.Ethernet.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        {{bibref|G.998.2}} Ethernet-based bonding statistics.
        These relate to the {{bibref|G.998.2}} PME (Physical Medium Entity) Aggregation Function (PAF) and to its upper layer interface.  PAF  lower layer interface statistics are in the {{object|##.BondedChannel.{i}.Ethernet.Stats}} objects.
        The CPE MUST reset the Stats parameters either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|##.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|##.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="PAFErrors" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF errors.  Corresponds to {{bibref|TR-159}} ''oBondETH.aEthRxErrors''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFSmallFragments" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Small Fragment events.  Corresponds to {{bibref|TR-159}}  ''oBondETH.aEthRxSmallFragments''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFLargeFragments" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Large Fragment events. Corresponds to {{bibref|TR-159}}  ''oBondETH.aEthRxLargeFragments''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFBadFragments" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Bad Fragment events. Corresponds to {{bibref|TR-159}}  ''oBondETH.aEthRxBadFragments''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFLostFragments" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Lost Fragment events. Corresponds to {{bibref|TR-159}}  ''oBondETH.aEthRxLostFragments''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFLateFragments" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Late Fragment events.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFLostStarts" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Lost Start events. Corresponds to {{bibref|TR-159}} ''oBondETH.aEthRxLostStarts''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFLostEnds" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Lost End events. Corresponds to {{bibref|TR-159}} ''oBondETH.aEthRxLostEnds''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PAFOverflows" access="readOnly" dmr:version="2.0">
        <description>
          Number of PAF Overflow events. Corresponds to {{bibref|TR-159}} ''oBondETH.aEthRxOverflows''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PauseFramesSent" access="readOnly" dmr:version="2.0">
        <description>
          Number of pause frames sent, i.e. on the transmit side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrorsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of CRC errors received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AlignmentErrorsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of alignment errors received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShortPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of short packets received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LongPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of long packets received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OverflowErrorsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of overflow errors received, i.e. on the receive side of the interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FramesDropped" access="readOnly" dmr:version="2.0">
        <description>
          Number of frames dropped, e.g. because the receive queue is full.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSL.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The DSL Diagnostics object.
      </description>
    </object>
    <object name="Device.DSL.Diagnostics.ADSLLineTest." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object is to provide diagnostic information for a CPE with an ADSL2 or ADSL2+ modem WAN interface, but MAY also be used for ADSL.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  This is the interface over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".DSL.Channel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ACTPSDds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Downstream actual power spectral density.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTPSDus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Upstream actual power spectral density.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTATPds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Downstream actual aggregate transmitter power.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTATPus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Upstream actual aggregate transmitter power.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINSCds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Downstream linear representation scale.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINSCus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Scaling used to represent the upstream linear channel characteristics.  Interpretation of the value is as  defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLINpsds}}.  Valid values  are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLINGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLINpsus}}.  Valid values  are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLOGpsds}}.  Valid values  are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|HLOGpsus}}.  Valid values are  1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream logarithmic channel characteristics per sub-carrier group.  The maximum  number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of  {{param|HLOGGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsds}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsus}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LATNpbds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LATNpbus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of upstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLINpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream linear channel characteristics per subcarrier group.  Maximum number of  complex pairs is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of pairs will depend on the value of {{param|HLINGds}} but will not exceed 512.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note: HLIN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream linear channel characteristics per sub-carrier group.  Maximum number of  complex pairs is 64 for G.992.3, and G.992.5.  For G.993.2, the number of pairs will depend on the value of {{param|HLINGus}} but  will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  HLIN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|QLNpsds}}.  Valid values  are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|QLNpsus}}.  Valid values are  1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream quiet line noise per subcarrier group.  Maximum number of elements is  256 for G.992.3, 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGds}} but will not  exceed 512.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  QLN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="QLNpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream quiet line noise per subcarrier group.  The maximum number of elements is  64 for G.992.3, and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGus}} but will not exceed  512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  QLN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsds}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsus}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|SNRpsds}}.  Valid values  are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|SNRpsus}}.  Valid values are  1, 2, 4, and 8.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream SNR per subcarrier group.  Maximum number of elements is 256 for  G.992.3, 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGds}} but will not exceed 512.    Interpretation of the value is as defined in ITU-T Rec. G.997.1.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  SNRps is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream SNR per subcarrier group.  The maximum number of elements is 64 for  G.992.3, and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGus}} but will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  SNRps is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsds}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsus}} was measured.
          Note:  See ITU-T Recommendation {{bibref|G.997.1}}. For a multimode device operating in a mode in which this parameter does not apply, the value  of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BITSpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent downstream bit allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="BITSpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent upstream bit allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. {{bibref|G.997.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object models FAST (defined in ITU Recommendation {{bibref|G.9701}}) lines. Each {{object|Line}} models a layer 1 FAST Line interface.
      </description>
      <parameter name="LineNumberOfEntries" access="readOnly" dmr:version="2.11">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}." access="readOnly" numEntriesParameter="LineNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.11">
      <description>
        FAST Line table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        This table models physical FAST lines.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.11">
        <description>
          Enables or disables the FAST line. This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.11">
        <description>
          The current operational state of the FAST line (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.11">
        <description>
          The textual name of the FAST line as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The accumulated time in {{units}} since the FAST line entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.11">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.11">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.11">
        <description>
          A string identifying the version of the modem firmware currently installed for this interface. This is applicable only when the modem firmware is separable from the overall CPE software.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkStatus" access="readOnly" dmr:version="2.11">
        <description>
          Status of the FAST physical link. {{enum}}
          When {{param}} is {{enum|Up}}, {{param|Status}} is expected to be {{enum|Up|Status}}. When {{param}} is {{enum|Initializing}} or {{enum|EstablishingLink}} or {{enum|NoSignal}} or {{enum|Disabled}}, {{param|Status}} is expected to be {{enum|Down|Status}}.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Initializing"/>
            <enumeration value="EstablishingLink"/>
            <enumeration value="NoSignal"/>
            <enumeration value="Disabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedProfiles" access="readOnly" dmr:version="2.11">
        <description>
          {{list}} List items indicate which FAST profiles are allowed on the line. {{enum}}
          Note:  In G.997.2, this parameter is called PROFILES. See ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="106a"/>
            <enumeration value="212a"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentProfile" access="readOnly" dmr:version="2.11">
        <description>
          Indicates which FAST profile is currently in use on the line.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="AllowedProfiles" nullValue=""/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PowerManagementState" access="readOnly" dmr:version="2.11">
        <description>
          The power management state of the line. {{enum}}
          Note: See ITU-T Recommendation {{bibref|G.9701}}.
        </description>
        <syntax>
          <string>
            <enumeration value="L0"/>
            <enumeration value="L2.1"/>
            <enumeration value="L2.2"/>
            <enumeration value="L3"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SuccessFailureCause" access="readOnly" dmr:version="2.11">
        <description>
          The success failure cause of the initialization. An enumeration of the following integer values:
          * 0: Successful
          * 1: Configuration error. Configuration error. This error occurs if the line cannot reach L0 state due to a mismatch of configuration and FTU capabilities.
          * 2: Configuration not feasible on the line. This error occurs if the line cannot reach the L0 state due to a mismatch of configuration of line and noise characteristics.
          * 3: Communication problem. This error occurs, for example, due to corrupted messages or bad syntax messages or if no common mode can be selected in the G.994.1 handshaking procedure or due to a timeout.
          * 4: No far-end FTU detected. This error occurs if the far-end FTU is not powered or not connected or if the line is too long to allow detection of a far-end FTU.
          * 5: Any other or unknown initialization failure cause.
          Note: In G.997.2, this parameter is called "Initialization success/failure cause". See Clause 7.20.2.1 of ITU-T
          Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="5"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UPBOKLER" access="readOnly" dmr:version="2.11">
        <description>
          This parameter reports the estimate of the electrical length expressed in {{units}}, as determined by the FTU-R (see clause 7.3.1.4.2.1/{{bibref|G.9701}}) and conveyed in the R-MSG1 initialization message (see clause 12.3.3.2.3/{{bibref|G.9701}}). The value is coded as an unsignedInt in the range 0 (coded as 0) to 128 dB (coded as 1280) in steps of {{units}}.
          Note: This parameter is defined as UPBOKLE-R in Clause 7.10.4.2 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastTransmittedDownstreamSignal" access="readOnly" dmr:version="2.11">
        <description>
          This parameter reports the downstream signal count of the last transmitted initialization signal in the last full or short initialization performed on the line. The valid values are 0..21. The downstream signal count is defined in clause 12.3.1/{{bibref|G.9701}}.
          Note: See clause 7.10.2.2 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="21"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastTransmittedUpstreamSignal" access="readOnly" dmr:version="2.11">
        <description>
          This parameter reports the upstream signal count of the last transmitted initialization signal in the last full or short initialization performed on the line. The valid values are 0..21. The upstream signal count is defined in clause 12.3.1/{{bibref|G.9701}}.
          Note: See clause 7.10.2.3 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="21"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UPBOKLE" access="readOnly" dmr:version="2.11">
        <description>
          This parameter reports the electrical length that would have been sent from the FTU-O to the FTU-R if the electrical length was not forced by the DPU-MIB. If the electrical length is not forced by the DPU-MIB, then this object reports the final electrical length, as determined by the FTU-O (see clause 7.3.1.4.2.1/{{bibref|G.9701}}) and conveyed in the O-UPDATE initialization message (see clause 12.3.3.2.4/{{bibref|G.9701}}).
          Note: See clause 7.10.4.1 in ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LineNumber" access="readOnly" dmr:version="2.11">
        <description>
          Signifies the line pair that the modem is using to connection. {{param}} = 1 is the innermost  pair.
        </description>
        <syntax>
          <int>
            <range minInclusive="1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamMaxBitRate" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the attainable net data rate expressed in {{units}} as defined in clause 11.4.1.1.2/{{bibref|G.9701}}.
          Note: This parameter is related to the G.997.2 parameter ATTNDRus. See clause 7.11.2.1 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamMaxBitRate" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the attainable net data rate expressed in {{units}} as defined in clause 11.4.1.1.2/{{bibref|G.9701}}.
          Note: This parameter is related to the G.997.2 parameter ATTNDRds. See clause 7.11.2.1 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamNoiseMargin" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the signal-to-noise ratio margin (as defined in clause 9.8.3.2/{{bibref|G.9701}} and 11.4.1.3/{{bibref|G.9701}}) in the upstream direction. A special value indicates that the signal-to-noise ratio margin is out of the range to be represented. The parameter is expressed in {{units}}.
          Note: In G.997.2, this parameter is called SNRMus. See ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DownstreamNoiseMargin" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the signal-to-noise ratio margin (as defined in clause 9.8.3.2/{{bibref|G.9701}} and 11.4.1.3/{{bibref|G.9701}}) in the upstream direction. A special value indicates that the signal-to-noise ratio margin is out of the range to be represented. The parameter is expressed in {{units}}.
          Note: In G.997.2, this parameter is called SNRMds. See ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamAttenuation" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The current upstream signal loss (expressed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DownstreamAttenuation" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The current downstream signal loss (expressed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamPower" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The current output power at the CPE's FAST line (expressed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="0.1dBmV"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DownstreamPower" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The current received power at the CPE's FAST line (expressed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="0.1dBmV"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SNRMRMCds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the signal-to-noise margin for the robust management channel (RMC) in the downstream direction (express in {{units}}). A special value (-512)  indicates that the signal-to-noise ratio margin for the RMC is out of the range to be represented. This parameter is defined in clauses 7.10.12.1 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SNRMRMCus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the signal-to-noise margin for the robust management channel (RMC) in the upstream direction (express in {{units}}). A special value (-512)  indicates that the signal-to-noise ratio margin for the RMC is out of the range to be represented. This parameter is defined in clauses 7.10.12.2 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <int>
            <units value="0.1dB"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="BITSRMCpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{list}} List items report the bit allocation values on RMC sub-carriers in RMC symbols in the downstream direction. Each pair composes of a sub-carrier index from 0..4095 and an 8 bit allocation value. There are maximum 512 pairs. This parameter is defined in clause 7.10.12.3 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <list>
            <size maxLength="4610"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="BITSRMCpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{list}} List items report the bit allocation values on RMC sub-carriers in RMC symbols in the upstream direction. Each pair composes of a sub-carrier index from 0..4095 and an 8 bit allocation value. There are maximum 512 pairs. This parameter is defined in clause 7.10.12.4 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <list>
            <size maxLength="4610"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="FEXTCANCELds" access="readOnly" dmr:version="2.11">
        <description>
          This indicates whether FEXT cancellation in the downstream direction from all the other vectored lines into the line in the vectored group is enabled (TRUE) or disabled (FALSE). This parameter is defined as FEXT_TO_CANCEL_ENABLEds in clause 7.1.7.1 of ITU Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="FEXTCANCELus" access="readOnly" dmr:version="2.11">
        <description>
          This indicates whether FEXT cancellation in the upstream direction from all the other vectored lines into the line in the vectored group is enabled (TRUE) or disabled (FALSE). This parameter is defined as FEXT_TO_CANCEL_ENABLEds in clause 7.1.7.1 of ITU Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ETRds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the expected throughput rate expressed in {{units}} as defined in clause 7.11.1.2 of ITU-T Recommendation {{bibref|G.997.2}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ETRus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the expected throughput rate expressed in {{units}} as defined in clause 7.11.1.2 of ITU-T Recommendation {{bibref|G.997.2}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ATTETRds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the attainable expected throughput expressed in {{units}} as defined in clause 7.11.2.2 of ITU-T Recommendation {{bibref|G.997.2}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ATTETRus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the attainable expected throughput expressed in {{units}} as defined in clause 7.11.2.2 of ITU-T Recommendation {{bibref|G.997.2}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MINEFTR" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports the minimum error free throughput value expressed in {{units}} computed from power up as defined in clause 11.4.1.1.3 of ITU-T Recommendation {{bibref|G.9701}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalStart" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          FAST-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|Total}} statistics.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          FAST-specific statistic. The Number of {{units}} since the most recent DSL Showtime - the beginning of the period used for collection of {{object|Showtime}} statistics.
          Showtime is defined as successful completion of the DSL link establishment process. The ''Showtime'' statistics are those collected  since the most recent establishment of the DSL link.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastShowtimeStart" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          FAST-specific statistic. The Number of {{units}} since the second most recent DSL Showtime-the beginning of the period used for collection of {{object|LastShowtime}} statistics.
          If the CPE has not retained information about the second most recent Showtime (e.g., on reboot), the start of ''LastShowtime''  statistics MAY temporarily coincide with the start of ''Showtime'' statistics.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CurrentDayStart" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          FAST-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|CurrentDay}} statistics.
          The CPE MAY align the beginning of each ''CurrentDay'' interval with days in the UTC time zone, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QuarterHourStart" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          FAST-specific statistic. The Number of {{units}} since the beginning of the period used for collection of {{object|QuarterHour}} statistics.
          The CPE MAY align the beginning of each ''QuarterHour'' interval with real-time quarter-hour intervals, but is not required to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
          Note: {{param}} SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.Stats.Total." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object contains DSL line total statistics.
        Note: The {{object}} parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}. An errored second (ES) is declared if, during a 1-second interval, there are one or more crc anomalies, or one or more los defects, or one or more lor defects, or one or more lpr primitives.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of severely errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOSS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of signal seconds (LOSS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LOSS is declared if, during a 1-second interval, there are one or more los defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LORS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of RMC seconds (LORS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LORS is declared if, during a 1-second interval, there are one or more lor defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UAS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of unavailable seconds (UAS) as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXUC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of uncorrected DTU anomalies (rtx_uc). This parameter is defined in clause 7.8.5 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXTX" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of retransmitted DTU anomalies (rtx_tx). This parameter is defined in clause 7.8.6 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessBSW" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful bit swap (BSW) primitives. This parameter is defined as success_BSW in clause 7.7.20 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessSRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful autonomous SRA (seamless rate adaptation) primitives. This parameter is defined as success_SRA in clause 7.7.21 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessFRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful FRA (fast rate adaptation)  primitives. This parameter is defined as success_FRA in clause 7.7.22 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessRPA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful RPA (RMC parameter adjustment)  primitives. This parameter is defined as success_RPA in clause 7.7.23 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessTIGA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful TIGA (transmitter initiated gain adjustment)  primitives. This parameter is defined as success_TIGA in clause 7.7.24 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.Stats.Showtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object contains FAST line statistics since the most recent showtime.
        Note: The Total parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}. An errored second (ES) is declared if, during a 1-second interval, there are one or more crc anomalies, or one or more los defects, or one or more lor defects, or one or more lpr primitives.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of severely errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOSS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of signal seconds (LOSS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LOSS is declared if, during a 1-second interval, there are one or more los defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LORS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of RMC seconds (LORS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LORS is declared if, during a 1-second interval, there are one or more lor defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UAS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of unavailable seconds (UAS) as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXUC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of uncorrected DTU anomalies (rtx_uc). This parameter is defined in clause 7.8.5 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXTX" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of retransmitted DTU anomalies (rtx_tx). This parameter is defined in clause 7.8.6 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessBSW" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful bit swap (BSW) primitives. This parameter is defined as success_BSW in clause 7.7.20 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessSRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful autonomous SRA (seamless rate adaptation) primitives. This parameter is defined as success_SRA in clause 7.7.21 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessFRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful FRA (fast rate adaptation)  primitives. This parameter is defined as success_FRA in clause 7.7.22 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessRPA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful RPA (RMC parameter adjustment)  primitives. This parameter is defined as success_RPA in clause 7.7.23 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessTIGA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful TIGA (transmitter initiated gain adjustment)  primitives. This parameter is defined as success_TIGA in clause 7.7.24 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.Stats.LastShowtime." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object contains FAST line statistics since the second most recent showtime.
        Note: The Total parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}. An errored second (ES) is declared if, during a 1-second interval, there are one or more crc anomalies, or one or more los defects, or one or more lor defects, or one or more lpr primitives.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of severely errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOSS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of signal seconds (LOSS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LOSS is declared if, during a 1-second interval, there are one or more los defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LORS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of RMC seconds (LORS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LORS is declared if, during a 1-second interval, there are one or more lor defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UAS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of unavailable seconds (UAS) as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXUC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of uncorrected DTU anomalies (rtx_uc). This parameter is defined in clause 7.8.5 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXTX" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of retransmitted DTU anomalies (rtx_tx). This parameter is defined in clause 7.8.6 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessBSW" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful bit swap (BSW) primitives. This parameter is defined as success_BSW in clause 7.7.20 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessSRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful autonomous SRA (seamless rate adaptation) primitives. This parameter is defined as success_SRA in clause 7.7.21 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessFRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful FRA (fast rate adaptation)  primitives. This parameter is defined as success_FRA in clause 7.7.22 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessRPA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful RPA (RMC parameter adjustment)  primitives. This parameter is defined as success_RPA in clause 7.7.23 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessTIGA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful TIGA (transmitter initiated gain adjustment)  primitives. This parameter is defined as success_TIGA in clause 7.7.24 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.Stats.CurrentDay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object contains FAST line statistics accumulated during the current day.
        Note: The Total parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}. An errored second (ES) is declared if, during a 1-second interval, there are one or more crc anomalies, or one or more los defects, or one or more lor defects, or one or more lpr primitives.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of severely errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOSS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of signal seconds (LOSS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LOSS is declared if, during a 1-second interval, there are one or more los defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LORS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of RMC seconds (LORS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LORS is declared if, during a 1-second interval, there are one or more lor defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UAS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of unavailable seconds (UAS) as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXUC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of uncorrected DTU anomalies (rtx_uc). This parameter is defined in clause 7.8.5 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXTX" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of retransmitted DTU anomalies (rtx_tx). This parameter is defined in clause 7.8.6 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessBSW" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful bit swap (BSW) primitives. This parameter is defined as success_BSW in clause 7.7.20 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessSRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful autonomous SRA (seamless rate adaptation) primitives. This parameter is defined as success_SRA in clause 7.7.21 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessFRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful FRA (fast rate adaptation)  primitives. This parameter is defined as success_FRA in clause 7.7.22 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessRPA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful RPA (RMC parameter adjustment)  primitives. This parameter is defined as success_RPA in clause 7.7.23 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessTIGA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful TIGA (transmitter initiated gain adjustment)  primitives. This parameter is defined as success_TIGA in clause 7.7.24 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.Stats.QuarterHour." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object contains FAST line statistics accumulated during the current quarter hour.
        Note: The Total parameters SHOULD NOT be reset when the interface statistics are reset via an interface disable / enable cycle.
      </description>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}. An errored second (ES) is declared if, during a 1-second interval, there are one or more crc anomalies, or one or more los defects, or one or more lor defects, or one or more lpr primitives.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of severely errored seconds as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOSS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of signal seconds (LOSS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LOSS is declared if, during a 1-second interval, there are one or more los defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LORS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of loss of RMC seconds (LORS) as defined in ITU-T Rec. {{bibref|G.997.2}}. A LORS is declared if, during a 1-second interval, there are one or more lor defects.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UAS" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Total number of unavailable seconds (UAS) as defined in ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXUC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of uncorrected DTU anomalies (rtx_uc). This parameter is defined in clause 7.8.5 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTXTX" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of retransmitted DTU anomalies (rtx_tx). This parameter is defined in clause 7.8.6 of ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessBSW" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful bit swap (BSW) primitives. This parameter is defined as success_BSW in clause 7.7.20 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessSRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful autonomous SRA (seamless rate adaptation) primitives. This parameter is defined as success_SRA in clause 7.7.21 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessFRA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful FRA (fast rate adaptation)  primitives. This parameter is defined as success_FRA in clause 7.7.22 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessRPA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful RPA (RMC parameter adjustment)  primitives. This parameter is defined as success_RPA in clause 7.7.23 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessTIGA" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This parameter reports a count of the successful TIGA (transmitter initiated gain adjustment)  primitives. This parameter is defined as success_TIGA in clause 7.7.24 of  ITU-T Rec. {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAST.Line.{i}.TestParams." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object contains the FAST line test parameters that are available during the L0 (i.e., Showtime)  state.
      </description>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the number of sub-carriers in any one sub-carrier group used to represent the downstream SNR(f) values. Valid values are 1, 2, 4, and 8.
          Note: In ITU-T G.9701-2014, the only valid value is G = 1. See clause 7.10.8.2 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the number of sub-carriers in any one sub-carrier group used to represent the upstream SNR(f) values. Valid values are 1, 2, 4, and 8.
          Note: In ITU-T G.9701-2014, the only valid value is G = 1. See clause 7.10.8.5 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{list}} Reports the downstream SNR(f) values. A special value indicates that no measurement could be done for this sub-carrier group because it is out of the downstream MEDLEY set or its transmit power is zero. The number of elements will depend on the value of SNRGds. Interpretation of the values is as defined in clause 11.4.1.2.2.of ITU-T Rec. {{bibref|G.9701}}.
          Note: See clause 7.10.8.3 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{list}} Reports the upstream SNR(f) values. A special value indicates that no measurement could be done for this sub-carrier group because it is out of the downstream MEDLEY set or its transmit power is zero. The number of elements will depend on the value of SNRGds. Interpretation of the values is as defined in clause 11.4.1.2.2.of ITU-T Rec. {{bibref|G.9701}}.
          Note: See clause 7.10.8.6 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the number of symbols used to measure the downstream SNR(f) values. The valid values 0..65535.
          Note: See clause 7.10.8.1 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the number of symbols used to measure the upstream SNR(f) values. The valid values 0..65535.
          Note: See clause 7.10.8.4 of ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTINP" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the actual INP against SHINE as defined in clause 11.4.1.1.7/{{bibref|G.9701}}. A special value indicates an actual INP against SHINE of 2047 symbols or higher. The valid values are 0..2046 and 2047 is the special value.
          Note: See ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NFEC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the DTU FEC codeword length (expressed in 1 byte unit) as defined in clause 9.3/{{bibref|G.9701}}. The valid range is 32..255.
          Note: See clause 7.11.4.1 ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RFEC" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the DTU FEC codeword redundancy as defined in clause 9.3/{{bibref|G.9701}}.
          Note: See ITU-T Recommendation {{bibref|G.997.2}}.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="UpstreamCurrRate" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the current physical layer aggregate data rate (expressed in {{units}}) of the upstream FAST as defined in clause 11.4.1.1.1/{{bibref|G.9701}}.
          The current physical layer aggregate data rate (expressed in Kbps) of the upstream FAST connection. The valid values are 0..4294967295(0 to 232-1 kbit/s).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamCurrRate" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the current physical layer aggregate data rate (expressed in {{units}}) of the upstream FAST as defined in clause 11.4.1.1.1/{{bibref|G.9701}}.
          The current physical layer aggregate data rate (expressed in Kbps) of the downstream FAST connection. The valid values are 0..4294967295(0 to 232-1 kbit/s).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACTINPREIN" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          Reports the actual INP against REIN as defined in clause 11.4.1.1.8/{{bibref|G.9701}}. A special value indicates an actual INP against REIN of 63 symbols or higher. The valid range is 0..62 symbols, and 63 is the special value.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Optical." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object models optical interface technologies.  It defines an {{object|Interface}} object that models a layer 1 optical interface that is capable of transporting Ethernet packets.  The data model definition is based on parts of {{bibref|G.988}}.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Optical.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4" dmr:fixedObject="true">
      <description>
        Optical interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).  This table models physical optical interfaces.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables the optical interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.4">
        <description>
          The current operational state of the optical interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.4">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.4">
        <description>
          The textual name of the optical interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The accumulated time in {{units}} since the optical interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.4">
        <description>
          {{list}}  {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.4">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OpticalSignalLevel" access="readOnly" dmr:version="2.4">
        <description>
          Current measurement of total downstream optical signal level.
          {{datatype|expand}}
          Valid values are -65.536 dBm (coded as -65536), to 65.534 dBm (coded as 65534) in 0.002 dB increments.
          This parameter is based on ''Optical signal level'' from {{bibref|G.988|Section 9.2.1}}.
        </description>
        <syntax>
          <dataType ref="Dbm1000">
            <range minInclusive="-65536" maxInclusive="65534" step="2"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="LowerOpticalThreshold" access="readOnly" dmr:version="2.4">
        <description>
          Optical level that is used to declare the downstream low received optical power alarm.
          {{datatype|expand}}
          Valid values are -127.5 dBm (coded as -127500) to 0 dBm (coded as 0) in 0.5 dB increments.  The value -127500 indicates the device's internal policy.
          This parameter is based on ''Lower optical threshold'' from {{bibref|G.988|section 9.2.1}}.
        </description>
        <syntax>
          <dataType ref="Dbm1000">
            <range minInclusive="-127000" maxInclusive="0" step="500"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="UpperOpticalThreshold" access="readOnly" dmr:version="2.4">
        <description>
          Optical level that is used to declare the downstream high received optical power alarm.
          {{datatype|expand}}
          Valid values are -127.5 dBm (coded as -127500) to 0 dBm (coded as 0) in 0.5 dB increments.  The value -127500 indicates the device's internal policy.
          This parameter is based on ''Upper optical threshold'' from {{bibref|G.988|section 9.2.1}}.
        </description>
        <syntax>
          <dataType ref="Dbm1000">
            <range minInclusive="-127000" maxInclusive="0" step="500"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="TransmitOpticalLevel" access="readOnly" dmr:version="2.4">
        <description>
          Current measurement of mean optical launch power.
          {{datatype|expand}}
          Valid values are -127.5 dBm (coded as -127500) to 0 dBm (coded as 0) in 0.5 dB increments.  The value -127500 indicates the device's internal policy.
          This parameter is based on ''Transmit optical level'' from {{bibref|G.988|section 9.2.1}}.
        </description>
        <syntax>
          <dataType ref="Dbm1000">
            <range minInclusive="-127000" maxInclusive="0" step="500"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="LowerTransmitPowerThreshold" access="readOnly" dmr:version="2.4">
        <description>
          Minimum mean optical launch power that is used to declare the low transmit optical power alarm.
          {{datatype|expand}}
          Valid values are -63.5 dBm (coded as -63500) to +63.5 dBm (coded as 63500) in 0.5 dB increments.  The value -63500 indicates the device's internal policy.
          This parameter is based on ''Lower transmit power threshold'' from {{bibref|G.988|section 9.2.1}}.
        </description>
        <syntax>
          <dataType ref="Dbm1000">
            <range minInclusive="-63500" maxInclusive="63500" step="500"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="UpperTransmitPowerThreshold" access="readOnly" dmr:version="2.4">
        <description>
          Maximum mean optical launch power that is used to declare the high transmit optical power alarm.
          {{datatype|expand}}
          Valid values are -63.5 dBm (coded as -63500) to +63.5 dBm (coded as 63500) in 0.5 dB increments.  The value -63500 indicates the device's internal policy.
          This parameter is based on ''Upper transmit power threshold'' from {{bibref|G.988|section 9.2.1}}.
        </description>
        <syntax>
          <dataType ref="Dbm1000">
            <range minInclusive="-63500" maxInclusive="63500" step="500"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Optical.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Cellular." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object models cellular interfaces and access points.
      </description>
      <parameter name="RoamingEnabled" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables roaming.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RoamingStatus" access="readOnly" dmr:version="2.8">
        <description>
          Current roaming status.
        </description>
        <syntax>
          <string>
            <enumeration value="Home"/>
            <enumeration value="Roaming"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AccessPointNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Cellular.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8" dmr:fixedObject="true">
      <description>
        Cellular interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).  Each instance of this object models a cellular modem with a single radio and a single {{object|USIM}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}}
          * SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic.
          * SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed)
          * SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface
          * SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          Because the interface includes layer 1 the {{enum|LowerLayerDown}} value SHOULD never be used.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up">
              <description>
                Corresponds to {{enum|GPRS|CurrentAccessTechnology}}, {{enum|UMTS|CurrentAccessTechnology}}, {{enum|LTE|CurrentAccessTechnology}} etc ''ATTACHED'' status
              </description>
            </enumeration>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent">
              <description>
                Corresponds to {{enum|GPRS|CurrentAccessTechnology}}, {{enum|UMTS|CurrentAccessTechnology}}, {{enum|LTE|CurrentAccessTechnology}} etc ''DETACHED'' status
              </description>
            </enumeration>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.8">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.8">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IMEI" access="readOnly" dmr:version="2.8">
        <description>
          International Mobile Station Equipment Identity number, represented as a 15 digit string (digits 0-9).
        </description>
        <syntax>
          <string>
            <size minLength="15" maxLength="15"/>
            <pattern value="[0-9]{15,15}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedAccessTechnologies" access="readOnly" dmr:version="2.8">
        <description>
          Access technologies supported by the interface.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="GPRS">
              <description>
                GSM with GPRS
              </description>
            </enumeration>
            <enumeration value="EDGE">
              <description>
                GSM with EDGE
              </description>
            </enumeration>
            <enumeration value="UMTS"/>
            <enumeration value="UMTSHSPA">
              <description>
                UMTS with High Speed Packet Access (HSPA {{bibref|3GPP-HSPA}})
              </description>
            </enumeration>
            <enumeration value="CDMA2000OneX"/>
            <enumeration value="CDMA2000HRPD"/>
            <enumeration value="LTE"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PreferredAccessTechnology" access="readWrite" dmr:version="2.8">
        <description>
          Preferred access technology.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedAccessTechnologies" nullValue="Auto"/>
          </string>
          <default type="factory" value="Auto"/>
        </syntax>
      </parameter>
      <parameter name="CurrentAccessTechnology" access="readOnly" dmr:version="2.8">
        <description>
          Access technology that is currently in use.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedAccessTechnologies"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AvailableNetworks" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          List of available networks.
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NetworkRequested" access="readWrite" dmr:version="2.8">
        <description>
          Name of the network which will be used, or {{empty}} if the network is selected automatically.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="factory" value=""/>
        </syntax>
      </parameter>
      <parameter name="NetworkInUse" access="readOnly" dmr:version="2.8">
        <description>
          The value is {{empty}} if no network is found, or if the network specified in {{param|NetworkRequested}} is not found.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
            <enumerationRef targetParam="AvailableNetworks" nullValue=""/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RSSI" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The received signal strength in {{units}}. The allowed values depend on {{param|CurrentAccessTechnology}}:
          * For {{enum|GPRS|SupportedAccessTechnologies}}, {{enum|EDGE|SupportedAccessTechnologies}} the range is -111 {{units}} to -49 {{units}}
          * For {{enum|UMTS|SupportedAccessTechnologies}}, {{enum|UMTSHSPA|SupportedAccessTechnologies}} the range is -117 {{units}} to -54 {{units}}
          * For {{enum|LTE|SupportedAccessTechnologies}} the range is -117 {{units}} to -25 {{units}}
          Note: An undetectable signal is indicated by the appropriate lower limit, e.g. -117 {{units}} for LTE.
        </description>
        <syntax>
          <int>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamMaxBitRate" access="readOnly" dmr:version="2.8">
        <description>
          The current maximum attainable data rate upstream (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownstreamMaxBitRate" access="readOnly" dmr:version="2.8">
        <description>
          The current maximum attainable data rate downstream (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Cellular.Interface.{i}.USIM." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        USIM (Universal Subscriber Identity Module or SIM card) parameters for the interface.
      </description>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The current status of the USIM card.
        </description>
        <syntax>
          <string>
            <enumeration value="None">
              <description>
                No card available
              </description>
            </enumeration>
            <enumeration value="Available">
              <description>
                Card is available but not verified
              </description>
            </enumeration>
            <enumeration value="Valid">
              <description>
                Card can be used; either valid PIN was entered, or PIN check is deactivated
              </description>
            </enumeration>
            <enumeration value="Blocked">
              <description>
                USIM is blocked because the maximum number of invalid PIN entries was exceeded
              </description>
            </enumeration>
            <enumeration value="Error" optional="true">
              <description>
                An error was detected with the card
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="IMSI" access="readOnly" dmr:version="2.8">
        <description>
          International Mobile Subscriber Identity represented as a string with either 14 or 15 digits (digits 0-9). The first 3 digits are the mobile country code (MCC), which are followed by the mobile network code (MNC), either 2 digits (European standard) or 3 digits (North American standard), followed by the mobile subscription identification number (MSIN).
        </description>
        <syntax>
          <string>
            <size minLength="14" maxLength="15"/>
            <pattern value="[0-9]{14,15}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ICCID" access="readOnly" dmr:version="2.8">
        <description>
          Integrated Circuit Card Identifier represented as a string of up to 20 digits (digits 0-9). The number is composed of the following parts:
          * Major industry identifier (MII), 2 fixed digits, 89 for telecommunication purposes.
          * Country code, 1–3 digits, as defined by ITU-T recommendation {{bibref|ITU-E.164}}.
          * identifier, 1–4 digits.
          * Individual account identification number. Its length is variable, but every number under one IIN will have the same length.
          * Single check digit calculated from the other digits using the Luhn algorithm.
          For cards using an ICCID according to {{bibref|ITU-E.118}} the maximum length is 19 Digits, for GSM cards 20 digits.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="20"/>
            <pattern value="[0-9]{6,20}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MSISDN" access="readOnly" dmr:version="2.8">
        <description>
          Mobile Subscriber Integrated Service Digital Network Number, a number uniquely identifying a subscription in a GSM, UMTS, or LTE mobile network. {{bibref|ITU-E.164}}
        </description>
        <syntax>
          <string>
            <size minLength="14" maxLength="15"/>
            <pattern value="[0-9]{14,15}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PINCheck" access="readWrite" dmr:version="2.8">
        <description>
          Controls the PIN verification of the USIM card.
        </description>
        <syntax>
          <string>
            <enumeration value="OnNetworkAccess">
              <description>
                Check the PIN with each access to a new network
              </description>
            </enumeration>
            <enumeration value="Reboot">
              <description>
                Check the PIN with first access after (re)boot
              </description>
            </enumeration>
            <enumeration value="Off">
              <description>
                Disable the PIN check
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="PIN" access="readWrite" dmr:version="2.8">
        <description>
          Allows the ACS to change the USIM PIN used for SIM card activation.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Cellular.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Cellular.AccessPoint.{i}." access="readWrite" numEntriesParameter="AccessPointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Cellular Access Point table. Each entry is identified by an {{param|APN}} (Access Point Name) that identifies a gateway between the mobile network and another computer network.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="APN"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the Access Point.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="APN" access="readWrite" dmr:version="2.8">
        <description>
          Access Point Name.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.8">
        <description>
          Username used to authenticate the CPE when making a connection to the Access Point.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.8">
        <description>
          Password used to authenticate the CPE when making a connection to the Access Point.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Proxy" access="readWrite" dmr:version="2.8">
        <description>
          Proxy server IP address.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ProxyPort" access="readWrite" dmr:version="2.8">
        <description>
          Proxy server port.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.8">
        <description>
          Reference to the interface with which the access point is associated.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".Cellular.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ATM." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Asynchronous Transfer Mode (ATM) object that contains the {{object|Link}} interface and {{object|Diagnostics.F5Loopback}} diagnostics.
      </description>
      <parameter name="LinkNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ATM.Link.{i}." access="readWrite" numEntriesParameter="LinkNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        ATM link-layer table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Models an ATM PVC virtual circuit and the ATM Adaption Layer (AAL). An ATM Link entry is typically stacked on top of either a {{object|.DSL.Channel.}} or a {{object|.DSL.BondingGroup.}} object.
        When an ''ATM Link'' interface is used, a lower-layer {{object|.DSL.Channel}} interface MUST be configured with ATM encapsulation (see {{param|.DSL.Channel.{i}.LinkEncapsulationUsed}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the link.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the link (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the link as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the link entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="LinkType" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the type of connection and refers to the complete stack of protocol used for this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="EoA">
              <description>
                {{bibref|RFC2684}} bridged Ethernet over ATM
              </description>
            </enumeration>
            <enumeration value="IPoA">
              <description>
                {{bibref|RFC2684}} routed IP over ATM
              </description>
            </enumeration>
            <enumeration value="PPPoA">
              <description>
                {{bibref|RFC2364}} PPP over ATM
              </description>
            </enumeration>
            <enumeration value="CIP">
              <description>
                {{bibref|RFC2225}} Classical IP over ATM
              </description>
            </enumeration>
            <enumeration value="Unconfigured"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AutoConfig" access="readOnly" dmr:version="2.0">
        <description>
          Indicates if the CPE is currently using some auto configuration mechanisms for this connection.  If this  variable is {{true}}, all writable variables in this connection instance become read-only. Any attempt to change one of these variables SHOULD fail and an error SHOULD be returned.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="DestinationAddress" access="readWrite" dmr:version="2.0">
        <description>
          Destination address of this link, in the form "VPI/VCI" (e.g. "8/23" or "0/35").
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pattern value="\d+/\d+"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Encapsulation" access="readWrite" dmr:version="2.0">
        <description>
          Identifies the connection encapsulation that will be used.
        </description>
        <syntax>
          <string>
            <enumeration value="LLC"/>
            <enumeration value="VCMUX"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FCSPreserved" access="readWrite" dmr:version="2.0">
        <description>
          This flag tells if a checksum SHOULD be added in the ATM payload. It does not refer to the checksum of one of  the ATM cells or AALX packets. In case of LLC or VCMUX encapsulation, this ATM checksum is the FCS field described in {{bibref|RFC2684}}. It is only applicable in the upstream direction.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="VCSearchList" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Ordered list of VPI/VCI pairs to search if a link using the {{param|DestinationAddress}} cannot be  established.  In the form "VPI1/VCI1, VPI2/VCI2, ...".  {{pattern}}
          Example:
          : ''0/35, 8/35, 1/35''
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string>
            <pattern value="\d+/\d+"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AAL" access="readOnly" dmr:version="2.0">
        <description>
          Describes the ATM Adaptation Layer (AAL) currently in use on the PVC.
        </description>
        <syntax>
          <string>
            <enumeration value="AAL1"/>
            <enumeration value="AAL2"/>
            <enumeration value="AAL3"/>
            <enumeration value="AAL4"/>
            <enumeration value="AAL5"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ATM.Link.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmittedBlocks" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current count of successfully transmitted cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReceivedBlocks" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current count of successfully received cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Count of the ATM layer cyclic redundancy check (CRC) errors.
          This refers to CRC errors at the ATM adaptation layer (AAL). The AAL in use is indicated by the {{param|#.AAL}} parameter. The value  of the {{param}} parameter MUST be 0 for AAL types that have no CRCs.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Count of the number of Header Error Check related errors at the ATM layer.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ATM.Link.{i}.QoS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The ATM Link QoS object.
      </description>
      <parameter name="QoSClass" access="readWrite" dmr:version="2.0">
        <description>
          Describes the ATM Quality Of Service (QoS) being used on the VC.
        </description>
        <syntax>
          <string>
            <enumeration value="UBR"/>
            <enumeration value="CBR"/>
            <enumeration value="GFR"/>
            <enumeration value="VBR-nrt"/>
            <enumeration value="VBR-rt"/>
            <enumeration value="UBR+"/>
            <enumeration value="ABR"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PeakCellRate" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the upstream peak cell rate in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="cells per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumBurstSize" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the upstream maximum burst size in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="cells"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SustainableCellRate" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the upstream sustainable cell rate, in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="cells per second"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ATM.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The ATM Diagnostics object.
      </description>
    </object>
    <object name="Device.ATM.Diagnostics.F5Loopback." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object provides access to an ATM-layer F5 OAM loopback test.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  This is the interface over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".ATM.Link." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="2.0">
        <description>
          Number of repetitions of the ping test to perform before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>
          Timeout in {{units}} for the ping test.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the number of successful pings (those in which a successful response was received  prior to the timeout) in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the number of failed pings in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the average response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the minimum response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the maximum response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PTM." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Packet Transfer Mode ({{bibref|G.993.1|Annex H}}). This object contains the {{object|Link}} interface.
      </description>
      <parameter name="LinkNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PTM.Link.{i}." access="readWrite" numEntriesParameter="LinkNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        PTM link-layer table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Models a layer 2 variable-sized packet interface. A PTM Link entry is typically stacked on top of either a {{object|.FAST.Line.}}, {{object|.DSL.Channel.}}, or a {{object|.DSL.BondingGroup.}} object.
        When a ''PTM Link'' interface is used, a lower-layer {{object|.DSL.Channel}} interface MUST be configured with PTM encapsulation (see {{param|.DSL.Channel.{i}.LinkEncapsulationUsed}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the link.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the link (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the link as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the link entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PTM.Link.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Ethernet object. This object models several Ethernet interface objects, each representing a different stack layer, including: {{object|Interface}}, {{object|Link}}, and {{object|VLANTermination}}. {{object|Interface}} is media-specific and models a port, the PHY layer, and the MAC layer. {{object|Link}} is media-independent and models the Logical Link Control (LLC) layer. An "outer" {{object|VLANTermination}}, when present, is expected to be stacked on top of {{object|Link}} objects to receive and send frames with a configured VLANID.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VLANTerminationNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RMONStatsNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LAGNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        Ethernet interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models physical Ethernet ports, but in terms of the interface stack it also models the PHY and MAC level Ethernet interface.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" dmr:version="2.0">
        <description>
          The maximum upstream and downstream PHY bit rate supported by this interface (expressed in {{units}}).
          A value of -1 indicates automatic selection of the maximum bit rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="Mbps"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="CurrentBitRate" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The current upstream and downstream PHY bit rate on this interface (expressed in {{units}}).
          A value of 0 indicates that the current bit rate is unknown.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DuplexMode" access="readWrite" dmr:version="2.0">
        <description>
          The duplex mode available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Half"/>
            <enumeration value="Full"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EEECapability" access="readOnly" dmr:version="2.8">
        <description>
          Indicates whether this physical ethernet port supports Energy Efficient Ethernet as specified in {{bibref|802.3-2012_section6|Section 78}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EEEEnable" access="readWrite" dmr:version="2.8">
        <description>
          Whether Energy Efficient Ethernet {{bibref|802.3-2012_section6|Section 78}} support is currently enabled. When enabled, this ethernet port will be capable of entering or exiting Low Power Idle (LPI) mode.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.Link.{i}." access="readWrite" numEntriesParameter="LinkNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Ethernet link layer table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Table entries model the Logical Link Control (LLC) layer. It is expected that an ''Ethernet Link'' interface can be stacked above any lower-layer interface object capable of carrying Ethernet frames.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the link.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the link (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the link as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the link entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC address used for packets sent via this interface. Provides the source MAC address for outgoing traffic and the destination MAC address for incoming traffic.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="PriorityTagging" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables priority tagging on this Ethernet Link.
          When {{true}}, egress frames leaving this interface will be priority tagged with the frame's associated priority value, which will either be derived directly from the ingress frame or else set via {{param|.QoS.Classification.{i}.EthernetPriorityMark}} or {{param|.QoS.Classification.{i}.InnerEthernetPriorityMark}}.
          When {{false}}, egress frames leaving this interface will be untagged.
          The parameter does not affect reception of ingress frames.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.Link.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.VLANTermination.{i}." access="readWrite" numEntriesParameter="VLANTerminationNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        VLAN Termination table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). A VLAN Termination entry is typically stacked on top of a {{object|#.Link}} object to receive and send frames with the configured {{param|VLANID}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the VLANTermination entry.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the VLANTermination entry (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the VLANTermination entry as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the VLANTermination entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANID" access="readWrite" dmr:version="2.0">
        <description>
          The VLAN ID for this {{object}} entry (as defined in {{bibref|802.1Q-2011}}). Only ingress frames with this VLAN ID will be passed to higher protocol layers; frames sent from higher protocol layers will be tagged with this VLAN ID.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="4094"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TPID" access="readWrite" dmr:version="2.7">
        <description>
          The Tag Protocol Identifier (TPID) assigned to this {{object}}. The TPID is an EtherType value used to identify the frame as a tagged frame.
          Standard {{bibref|802.1Q-2011|Table 9.1}} TPID values are:
          *S-TAG 0x88A8 = 34984
          *C-TAG 0x8100 = 33024
          Non-Standard TPID values are:
          *S-TAG 0x9100 = 37120
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="33024"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.VLANTermination.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.RMONStats.{i}." access="readWrite" numEntriesParameter="RMONStatsNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        Ethernet statistics based on the {{bibref|RFC2819}} ''RMON-MIB'' ''etherStatsTable'', with some extensions inspired by {{bibref|G.988|Section 9.3.32}}.
        Each instance is associated with an interface capable of transporting Ethernet-encapsulated packets, and contains a set of unidirectional Ethernet statistics.
        The statistics are sampled either on ingress or on egress.  This is determined as follows:
        * If the instance is associated with an egress queue (or queues) via the {{param|Queue}} parameter or by setting {{param|AllQueues}} to {{true}} then data is sampled on egress.  In this case {{param|Bytes}} etc measure the data that has been sent on the interface, possibly filtered by {{param|Queue}} or {{param|VLANID}}.
        * Otherwise data is sampled on ingress.  In this case {{param|Bytes}} etc measure the data that has been received on the interface, possibly filtered by {{param|VLANID}}.
        When sampling on egress, the term ''received'' means ''received by the queuing sub-system''.
        Multiple instances can be associated with a single interface: individual instances can be configured to collect data associated with the entire interface, or with a particular VLAN and/or queue.
        The CPE MUST reset each instances's Stats parameters whenever the instance is disabled and re-enabled.  Whether this reset occurs when the instance becomes operationally disabled ({{param|Status}} = {{enum|Disabled|Status}}) or administratively enabled ({{param|Enable}} = {{true}}) is a local matter to the CPE.  This is similar to the behavior of interface statistics, e.g. as specified for {{object|Device.Ethernet.Interface.{i}.Stats}}.  Furthermore, this instance's Stats parameters MUST be reset whenever the referenced interface's Stats parameters are reset, or when the referenced queue or VLAN is disabled and re-enabled.
        For enabled table entries, if {{param|Interface}} references an interface that is not capable of transporting Ethernet-encapsulated packets, or if {{param|Queue}} references a queue that is not instantiated on {{param|Interface}}, or if {{param|Queue}} is not a valid reference and {{param|AllQueues}} is {{false}}, the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes unique key parameters that are strong references. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
        <parameter ref="VLANID"/>
        <parameter ref="Queue"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables this instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.4">
        <description>
          The status of this instance.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.4">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.4">
        <description>
          The textual name of the {{object}} entry as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.4">
        <description>
          The interface associated with this instance.  {{reference|an interface that is capable of transporting Ethernet-encapsulated packets}}
          The term "capable of transporting Ethernet-encapsulated packets" means "has an Ethernet header" and therefore refers to any interface that is at or below an ''Ethernet''.{{object|#.Link}} instance in the interface stack.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANID" access="readWrite" dmr:version="2.4">
        <description>
          Filter criterion.
          The VLAN ID for which statistics are to be collected.
          A zero value indicates that all packets, whether or not they have a VLAN header, will be considered.
          A non-zero value indicates that only packets that have the the specified VLAN ID will be considered.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4094"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Queue" access="readWrite" dmr:version="2.4">
        <description>
          Filter criterion.
          The egress queue with which this instance is associated.
          Only packets that are sent to the referenced queue will be considered.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="Device.QoS.Queue." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllQueues" access="readWrite" dmr:version="2.4">
        <description>
          Indicates whether this instance applies to all queues.  If {{true}}, the value of {{param|Queue}} is ignored since all egress queues are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DropEvents" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of events in which packets were dropped due to lack of resources.  Note that this number is not necessarily the number of packets dropped; it is just the number of times this condition has been detected.
          This parameter is based on ''etherStatsDropEvents'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including those in bad packets) received (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsOctets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="bytes"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets, broadcast packets, and multicast packets) received.
          This parameter is based on ''etherStatsPkts'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of good {{units}} received that were directed to the broadcast address.  Note that this does not include multicast packets.
          This parameter is based on ''etherStatsBroadcastPkts'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of good {{units}} received that were directed to a multicast address.  Note that this number does not include packets directed to the broadcast address.
          This parameter is based on ''etherStatsMulticastPkts'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="CRCErroredPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} received that had a length (excluding framing bits, but including FCS bytes) of between 64 and 1518 bytes, inclusive, but had either a bad Frame Check Sequence (FCS) with an integral number of bytes (FCS Error) or a bad FCS with a non-integral number of bytes (Alignment Error).
          This parameter is based on ''etherStatsCRCAlignErrors'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="packets"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="UndersizePackets" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} received that were less than 64 bytes long (excluding framing bits, but including FCS bytes) and were otherwise well formed.
          This parameter is based on ''etherStatsUndersizePkts'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="packets"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OversizePackets" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} received that were longer than 1518 bytes (excluding framing bits, but including FCS bytes) and were otherwise well formed.
          This parameter is based on ''etherStatsOversizePkts'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="packets"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets64Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets) received that were 64 bytes in length (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsPkts64Octets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets65to127Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets) received that were between 65 and 127 bytes in length inclusive (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsPkts65to127Octets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets128to255Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets) received that were between 128 and 255 bytes in length inclusive (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsPkts6128to255Octets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets256to511Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets) received that were between 256 and 511 bytes in length inclusive (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsPkts256to511Octets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets512to1023Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets) received that were between 512 and 1023 bytes in length inclusive (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsPkts512to1023Octets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Packets1024to1518Bytes" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of {{units}} (including bad packets) received that were between 1024 and 1518 bytes in length inclusive (excluding framing bits but including FCS bytes).
          This parameter is based on ''etherStatsPkts1024to1518Octets'' from {{bibref|RFC2819}}.
        </description>
        <syntax>
          <unsignedLong>
            <units value="packets"/>
          </unsignedLong>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.LAG.{i}." access="readWrite" numEntriesParameter="LAGNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        Ethernet Link Aggregation Group (LAG) table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Table entries model the Link Aggregation Sub-Layer as defined in {{bibref|802.3-2015}} and {{bibref|802.1AX-2014}}. It is expected that a {{object}} interface can only be stacked above {{object|.Ethernet.Interface}} interfaces. The CPE can reject creation of additional LAG instances if this would exceed its capabilities.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface). 
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.12">
        <description>
          The textual name of the LAG interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}.  See {{bibref|TR-181i2|Section 4.2.1}}.
          {{param}} must reference to Device.Ethernet.Interface instances where  Link Aggregation Group is configured by the CPE.
          For example, "Device.Ethernet.Interface.1, Device.Ethernet.Interface.2"
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readWrite" dmr:version="2.12">
        <description>
          MAC address of the Link Aggregation Interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ethernet.LAG.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Universal Serial Bus ({{bibref|USB1.0}}, {{bibref|USB2.0}}, {{bibref|USB3.0}}). This object contains the {{object|Interface}}, {{object|Port}}, and {{object|USBHosts}} objects.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        USB interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models master and slave USB physical interfaces that support carrying Ethernet frames, e.g. via the USB Communication Device Class.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum PHY bit rate supported by this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Port" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}} This is the USB port associated with this interface object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Port." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.Port.{i}." access="readOnly" numEntriesParameter="PortNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        USB Port table. This table models master and slave USB physical ports on the device.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the port.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Standard" access="readOnly" dmr:version="2.0">
        <description>
          USB specification version supported by the Port. Example: "1.1"
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Type of the USB connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Host"/>
            <enumeration value="Hub"/>
            <enumeration value="Device"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Receptacle" access="readOnly" dmr:version="2.0">
        <description>
          Receptacle of the port.
        </description>
        <syntax>
          <string>
            <enumeration value="Standard-A"/>
            <enumeration value="Standard-B"/>
            <enumeration value="Powered-B"/>
            <enumeration value="Micro-AB"/>
            <enumeration value="Micro-B"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Rate" access="readOnly" dmr:version="2.0">
        <description>
          Current speed of the USB connection. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Low">
              <description>
                1.5 Mbits/sec (187.5 KB/sec) defined in {{bibref|USB1.0}}
              </description>
            </enumeration>
            <enumeration value="Full">
              <description>
                12 Mbits/sec (1.5 MB/sec) defined in {{bibref|USB1.0}}
              </description>
            </enumeration>
            <enumeration value="High">
              <description>
                480 Mbits/sec (60 MB/sec) defined in {{bibref|USB2.0}}
              </description>
            </enumeration>
            <enumeration value="Super">
              <description>
                5.0 Gbits/sec (625 MB/sec) defined in {{bibref|USB3.0}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Power" access="readOnly" dmr:version="2.0">
        <description>
          Power configuration of the USB connection. {{enum}}
          Only applies when {{param|Type}} is {{enum|Device|Type}}. In other cases value is {{enum|Unknown}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Self"/>
            <enumeration value="Bus"/>
            <enumeration value="Unknown"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.USBHosts." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object models the CPE's USB Host controllers.
        See {{bibref|TR-157|Appendix I}} for Theory of Operation.
      </description>
      <parameter name="HostNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.USBHosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Table of CPE USB Host controllers.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the USB Host controller.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          User-readable host controller name.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Type of USB Host
        </description>
        <syntax>
          <string>
            <enumeration value="OHCI">
              <description>
                Open Host Controller Interface
              </description>
            </enumeration>
            <enumeration value="EHCI">
              <description>
                Enhanced Host Controller Interface
              </description>
            </enumeration>
            <enumeration value="UHCI">
              <description>
                Universal Host Controller Interface
              </description>
            </enumeration>
            <enumeration value="xHCI">
              <description>
                Extensible Host Controller Interface
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, reset the Host Controller and apply the reset signaling (see {{bibref|USB2.0|Chapter 7.1.7.5}}) to all of the Host Controller Hub downstream ports.
          The value is not saved in the device's state and setting it to {{false}} has no effect.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PowerManagementEnable" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, {{param}} enables the Host Controller to invoke Power Management policy, i.e. controlled Suspend (see {{bibref|USB2.0}}, Chapters 4.3.2, 7.1.7.6, and 11.9).
          When set to {{false}} {{param}} immediately disables the Host controller Power Management policy.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="USBVersion" access="readOnly" dmr:version="2.0">
        <description>
          USB specification version with which the controller complies.  Example: "1.1"
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.USBHosts.Host.{i}.Device.{i}." access="readOnly" numEntriesParameter="DeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Table of connected USB devices.
      </description>
      <uniqueKey>
        <parameter ref="DeviceNumber"/>
      </uniqueKey>
      <parameter name="DeviceNumber" access="readOnly" dmr:version="2.0">
        <description>
          Device number on USB bus.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="USBVersion" access="readOnly" dmr:version="2.0">
        <description>
          USB specification version with which the device complies.  Example: "1.1"
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceClass" access="readOnly" dmr:version="2.0">
        <description>
          Class Code as assigned by USB-IF.
          When 0x00, each device specifies its own class code.  When 0xFF, the class code is vendor specified.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="DeviceSubClass" access="readOnly" dmr:version="2.0">
        <description>
          Subclass code (assigned by USB-IF).
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="DeviceVersion" access="readOnly" dmr:version="2.0">
        <description>
          Device release number.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DeviceProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Protocol code (assigned by USB-IF).
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="ProductID" access="readOnly" dmr:version="2.0">
        <description>
          Product ID (assigned by manufacturer).
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="VendorID" access="readOnly" dmr:version="2.0">
        <description>
          Vendor ID (assigned by USB-IF).
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Manufacturer" access="readOnly" dmr:version="2.0">
        <description>
          Device Manufacturer string descriptor.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" dmr:version="2.0">
        <description>
          Device Product Class string descriptor.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.0">
        <description>
          Device SerialNumber string descriptor.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readOnly" dmr:version="2.0">
        <description>
          Hub port on parent device.
          0 when no parent.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="USBPort" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}} This is a reference to the USB host device to which this (external) USB device is connected.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".USB.Port." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Rate" access="readOnly" dmr:version="2.0">
        <description>
          Speed of the USB device. {{enum}}
          Internal signaling between the connected USB device and the USB Host Controller provide the information needed to determine the negotiated rate.
        </description>
        <syntax>
          <string>
            <enumeration value="Low">
              <description>
                1.5 Mbits/sec (187.5 KB/sec) defined in {{bibref|USB1.0}}
              </description>
            </enumeration>
            <enumeration value="Full">
              <description>
                12 Mbits/sec (1.5 MB/sec) defined in {{bibref|USB1.0}}
              </description>
            </enumeration>
            <enumeration value="High">
              <description>
                480 Mbits/sec (60 MB/sec) defined in {{bibref|USB2.0}}
              </description>
            </enumeration>
            <enumeration value="Super">
              <description>
                5.0 Gbits/sec (625 MB/sec) defined in {{bibref|USB3.0}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Parent" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}} This is a reference to the parent USB device (e.g. hub device).
          This is {{empty}} for a device connected to the Host controller (root hub).
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Device." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxChildren" access="readOnly" dmr:version="2.0">
        <description>
          Number of ports.  Only applies for hub device, equal to 0 for other devices.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IsSuspended" access="readOnly" dmr:version="2.0">
        <description>
          When {{true}} the associated Device is in a suspended (i.e. low-power) state (see {{bibref|USB2.0|Chapter 11.9}}).
          When {{false}} the associated Device is in any of the other states specified by the USB 2.0 Device State Machine (see {{bibref|USB2.0|Chapter 9.1.1}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IsSelfPowered" access="readOnly" dmr:version="2.0">
        <description>
          When {{true}} the associated device is at least partly powered by a local source (see {{bibref|USB2.0|Chapter 9.4.5}}).
          When {{false}} the associated device draws all the current it needs from the USB bus.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ConfigurationNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.USBHosts.Host.{i}.Device.{i}.Configuration.{i}." access="readOnly" numEntriesParameter="ConfigurationNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Table of device configurations.
      </description>
      <uniqueKey>
        <parameter ref="ConfigurationNumber"/>
      </uniqueKey>
      <parameter name="ConfigurationNumber" access="readOnly" dmr:version="2.0">
        <description>
          The identifier for each Device Configuration.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.USB.USBHosts.Host.{i}.Device.{i}.Configuration.{i}.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Table of device interface descriptors.
      </description>
      <uniqueKey>
        <parameter ref="InterfaceNumber"/>
      </uniqueKey>
      <parameter name="InterfaceNumber" access="readOnly" dmr:version="2.0">
        <description>
          Number of this interface (from USB interface descriptor).
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="InterfaceClass" access="readOnly" dmr:version="2.0">
        <description>
          Class Code as assigned by USB-IF.
          When 0x00, each interface specifies its own class code.  When 0xFF, the class code is vendor specified.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="InterfaceSubClass" access="readOnly" dmr:version="2.0">
        <description>
          Subclass code (assigned by USB-IF).
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="InterfaceProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Protocol code (assigned by USB-IF).
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        HPNA object that contains the {{object|Interface}} and {{object|Diagnostics}} objects. The HPNA (also known as HomePNA) industry standard {{bibref|G.9954}} defines peer to peer communication for home networking over existing coax cables and telephone wiring within the home.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        HPNA interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Each table entry models the PHY and MAC levels of an HPNA interface {{bibref|G.9954}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          This interface's firmware version.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NodeID" access="readOnly" dmr:version="2.0">
        <description>
          The Node ID of this interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IsMaster" access="readOnly" dmr:version="2.0">
        <description>
          Whether this interface is the HPNA network master.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Synced" access="readOnly" dmr:version="2.0">
        <description>
          Whether this interface is synchronized with the HPNA network master. If this interface is the HPNA network master, {{param}} MUST be {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TotalSyncTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total time in {{units}} (since device reset) that this interface has been up and synchronized to the HPNA network master.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum HPNA PHY bit rate (expressed in {{units}}) of this interface.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NetworkUtilization" access="readOnly" dmr:version="2.0">
        <description>
          Current HPNA network utilization (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1000"/>
            <units value="0.1%"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PossibleConnectionTypes" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate the types of connections possible for this interface. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Phone"/>
            <enumeration value="Coax"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Connection type(s) for which the HPNA protocol is active.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="PossibleConnectionTypes"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleSpectralModes" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate the spectral modes possible for this interface. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="A">
              <description>
                4-20MHz - Phone / Coax
              </description>
            </enumeration>
            <enumeration value="B">
              <description>
                12-28MHz - Phone / Coax
              </description>
            </enumeration>
            <enumeration value="C">
              <description>
                36-52MHz - Coax only
              </description>
            </enumeration>
            <enumeration value="D">
              <description>
                4-36MHz - Coax only
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpectralMode" access="readWrite" dmr:version="2.0">
        <description>
          Spectral mode for which the HPNA protocol is active.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="PossibleSpectralModes"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MTU" access="readWrite" dmr:version="2.0">
        <description>
          Maximum Transmission Unit for this HPNA interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NoiseMargin" access="readWrite" dmr:version="2.0">
        <description>
          The desired noise margin for which the local HPNA interface has been configured (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DefaultNonLARQPER" access="readWrite" dmr:version="2.0">
        <description>
          The desired packet error rate for which the local HPNA interface has been configured (expressed in 1E-8, e.g. PER of 1.27E-6 will be presented as 127).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LARQEnable" access="readWrite" dmr:version="2.0">
        <description>
          Enable or disable the Limited Automatic Repeat Request (LARQ) mechanism.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MinMulticastRate" access="readWrite" dmr:version="2.0">
        <description>
          The minimum multicast (and broadcast) rate that can be negotiated on the HPNA network directly accessible via this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NegMulticastRate" access="readOnly" dmr:version="2.0">
        <description>
          The negotiated multicast (and broadcast) rate on the HPNA network directly accessible via this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MasterSelectionMode" access="readWrite" dmr:version="2.0">
        <description>
          Master selection mode. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Automatic">
              <description>
                Automatic master selection
              </description>
            </enumeration>
            <enumeration value="ForceEndpoint">
              <description>
                Force local HPNA interface to be end point
              </description>
            </enumeration>
            <enumeration value="ForceMaster">
              <description>
                Force local HPNA interface to be master
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}} This is the number of HPNA nodes that are directly accessible via this interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Interface.{i}.QoS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        QoS configuration object.
      </description>
      <parameter name="FlowSpecNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Interface.{i}.QoS.FlowSpec.{i}." access="readWrite" numEntriesParameter="FlowSpecNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Flow specification table.
        The {{object|.QoS.Classification}} table is used to classify ingress traffic, where {{param|.QoS.Classification.{i}.TrafficClass}} is one of the classification result outputs. This ''TrafficClass'' value can be used to look up the appropriate {{object}} entry (i.e. the {{object}} entry whose {{param|TrafficClasses}} list contains a matching traffic class).
        For enabled table entries, if {{param|TrafficClasses}} is {{empty}} then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="TrafficClasses" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} This list identifies the set of traffic classes associated with this flow spec.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <unsignedInt/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="FlowType" access="readWrite" dmr:version="2.0">
        <description>
          Flow type. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="CBR">
              <description>
                Constant Bit Rate
              </description>
            </enumeration>
            <enumeration value="VBR">
              <description>
                Variable Bit Rate
              </description>
            </enumeration>
            <enumeration value="VBR-NRT">
              <description>
                Variable Bit Rate - Non Real Time
              </description>
            </enumeration>
            <enumeration value="BE">
              <description>
                Best Effort
              </description>
            </enumeration>
          </string>
          <default type="object" value="BE"/>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readWrite" dmr:version="2.0">
        <description>
          Flow queue network priority.
          Priority 0 is the lowest priority.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Latency" access="readWrite" dmr:version="2.0">
        <description>
          Maximum latency of the flow (expressed in {{units}}).
          Value 0 means no latency requirements.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="999"/>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Jitter" access="readWrite" dmr:version="2.0">
        <description>
          Maximum jitter of the flow (expressed in {{units}}).
          Value 0 means no jitter requirements.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="999"/>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PacketSize" access="readWrite" dmr:version="2.0">
        <description>
          Typical packet size.
          Value 0 means undefined packet size.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MinRate" access="readWrite" dmr:version="2.0">
        <description>
          Minimum required rate in Kbps.
          Value 0 means no MinRate requirements.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AvgRate" access="readWrite" dmr:version="2.0">
        <description>
          Average required rate in Kbps.
          Value 0 means no AvgRate requirements.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MaxRate" access="readWrite" dmr:version="2.0">
        <description>
          Maximum required rate in Kbps.
          Value 0 means no MaxRate requirements.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PER" access="readWrite" dmr:version="2.0">
        <description>
          The desired packet error rate (expressed in 1E-8, e.g. PER of 1.27E-6 will be presented as 127).
          Value 0 means no PER requirements.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>
          Flow inactivity tear down timeout (expressed in {{units}}).
          Value 0 means unlimited timeout.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Interface.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table provides information about other HPNA devices that are directly accessible via this HPNA interface.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The physical address of this node.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="NodeID" access="readOnly" dmr:version="2.0">
        <description>
          The Node ID of this node.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IsMaster" access="readOnly" dmr:version="2.0">
        <description>
          Whether this node is the HPNA network master.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Synced" access="readOnly" dmr:version="2.0">
        <description>
          Whether this node is synchronized with the HPNA network master. If this node is the HPNA network master, {{param}} MUST be {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TotalSyncTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total time in {{units}} (since device reset) that this node has been up and synchronized to the HPNA network master.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          This node's maximum HPNA PHY bit rate (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PHYDiagnosticsEnable" access="readWrite" dmr:version="2.0">
        <description>
          Enable / disable PHY throughput diagnostics mode on this node. All devices that are enabled will participate in the HPNA network PHY throughput diagnostics process.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not this node is currently present in the HPNA network.
          The ability to list inactive nodes is OPTIONAL.  If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}}  for each inactive node.  The length of time an inactive node remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The HPNA Diagnostics object.
      </description>
    </object>
    <object name="Device.HPNA.Diagnostics.PHYThroughput." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        HPNA PHY throughput diagnostics configuration and results.
        When diagnostics are requested, all HPNA nodes for which the {{param|##.Interface.{i}.AssociatedDevice.{i}.PHYDiagnosticsEnable}} parameter is set enter PHY diagnostics  mode.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_FailToEnableCert" access="readOnly"/>
            <enumeration value="Error_CertCmdTimeout" access="readOnly"/>
            <enumeration value="Error_UnknownErr" access="readOnly"/>
            <enumeration value="Error_UnsupportedOpcode" access="readOnly"/>
            <enumeration value="Error_InvalidParam" access="readOnly"/>
            <enumeration value="Error_UnsupportedCmdSegment" access="readOnly"/>
            <enumeration value="Error_UnsupportedDataGen" access="readOnly"/>
            <enumeration value="Error_InvalidSequence" access="readOnly"/>
            <enumeration value="Error_InvalidFrame" access="readOnly"/>
            <enumeration value="Eror_InvalidOpcode" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  This is the interface over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".HPNA.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumPacketsInBurst" access="readWrite" dmr:version="2.0">
        <description>
          Number of test packet in burst to be send during PHY diagnostics test from each HPNA device to other HPNA device  in the HPNA network.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BurstInterval" access="readWrite" dmr:version="2.0">
        <description>
          Test packet burst interval length (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestPacketPayloadLength" access="readWrite" dmr:version="2.0">
        <description>
          Payload length in the test packets.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1480"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PayloadEncoding" access="readWrite" dmr:version="2.0">
        <description>
          HPNA payload encoding in PHY diagnostics. 0 is used for negotiated payload between devices according to line  conditions.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PayloadDataGen" access="readWrite" dmr:version="2.0">
        <description>
          Test packets payload data generator value.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PayloadType" access="readWrite" dmr:version="2.0">
        <description>
          Test packets payload type. {{enum}}
          In Pattern mode the PayloadDataGen value is repeated pattern in the payload.
          In IncrementByte mode LSByte in PayloadDataGen is used as first payload  and next bytes in payload are incremented.
        </description>
        <syntax>
          <string>
            <enumeration value="Pattern"/>
            <enumeration value="IncrementByte"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PriorityLevel" access="readWrite" dmr:version="2.0">
        <description>
          Priority level of PHY diagnostics packets (0 lowest -7 highest).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ResultNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}} This is the number of PHY diagnostics results.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics.PHYThroughput.Result.{i}." access="readOnly" numEntriesParameter="ResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        PHY throughput diagnostics results.
        Each result object corresponds to unidirectional traffic between two PHY diagnostics-enabled nodes (so there are two such objects for  each such pair).
      </description>
      <uniqueKey>
        <parameter ref="SrcMACAddress"/>
        <parameter ref="DestMACAddress"/>
      </uniqueKey>
      <parameter name="SrcMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          HPNA source MAC address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          HPNA destination MAC address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="PHYRate" access="readOnly" dmr:version="2.0">
        <description>
          PHY diagnostics HPNA PHY rate (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="BaudRate" access="readOnly" dmr:version="2.0">
        <description>
          PHY Baud rate (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbaud"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SNR" access="readOnly" dmr:version="2.0">
        <description>
          PHY diagnostics SNR (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Number of received packets in PHY diagnostics mode.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Attenuation" access="readOnly" dmr:version="2.0">
        <description>
          Measured attenuation (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics.PerformanceMonitoring." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        HPNA performance monitoring configuration and results.
        Performance monitoring results are sampled from all nodes in the HPNA network.  All packet related counters are sampled synchronized at all nodes in the HPNA network in order to derive packet loss calculations in the HPNA network.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_SampleIntervalTooSmall" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This is the interface over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".HPNA.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SampleInterval" access="readWrite" dmr:version="2.0">
        <description>
          Time in {{units}} between automatic collection of performance monitoring data.  A value of zero disables automatic collection of data.
          The CPE MAY impose a minimum sample interval, in which case an attempt to set a (non-zero) interval that is less than this minimum MUST set the interval to the minimum and MUST NOT be regarded as an error.
          If SampleInterval is a simple fraction of a day, e.g. 900 (a quarter of an hour) or 3600 (an hour), the CPE MAY choose to align sample intervals with time of day, but is not required to do so.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics.PerformanceMonitoring.Nodes." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Per-node HPNA performance monitoring results.
        When automatic collection is enabled, i.e. {{param|#.SampleInterval}} is non-zero, the "current" interval is defined by the most recent automatic sample and the most recent subsequent manual sample, if any.
        When automatic collection is disabled, i.e. SampleInterval is zero, the "current" interval is defined by the three most recent manual  samples.
        Note: Packets in statistics counters are Ethernet packets.
      </description>
      <parameter name="CurrentStart" access="readOnly" dmr:version="2.0">
        <description>
          Start time for the current interval.
          When automatic collection is enabled, i.e. SampleInterval is non-zero, the current interval started at the most recent automatic  sample.
          When automatic collection is disabled, i.e. SampleInterval is zero, the current interval started two manual samples  ago.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="CurrentEnd" access="readOnly" dmr:version="2.0">
        <description>
          End time for the current interval.
          When automatic collection is enabled, i.e. SampleInterval is non-zero, the current interval ended at the most recent manual sample  since the most recent automatic sample.  If there has been no such manual sample, the current interval is empty.
          When automatic collection is disabled, i.e. SampleInterval is zero, the current interval ended at the most recent manual  sample.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="NodeNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}} This is the number of HPNA nodes for which performance monitoring results were collected during the current sample interval.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics.PerformanceMonitoring.Nodes.Node.{i}." access="readOnly" numEntriesParameter="NodeNumberOfEntries" minEntries="1" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Per-node HPNA performance monitoring results during the current sample interval. Each table entry contains the results collected between an HPNA node (as indicated by {{param|MACAddress}}) and the local HPNA interface (as indicated by {{param|##.Interface}}).
        Note: Packet counters indicate the number of packets received between {{param|#.CurrentStart}} and {{param|#.CurrentEnd}}.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC address of the HPNA node.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.0">
        <description>
          The total number of bytes sent by host equipment for transmission on the HPNA interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.0">
        <description>
          The total number of received bytes on the HPNA interface destined for the host equipment.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.0">
        <description>
          The total number of packets sent by host equipment for transmission on the HPNA interface. Number includes also short error packets and control packets.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          The total number of good packets received on the HPNA interface destined for the host equipment.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" dmr:version="2.0">
        <description>
          The number of broadcast packets transmitted on the HPNA interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          The number of broadcast packets received on the HPNA interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" dmr:version="2.0">
        <description>
          The number of multicast packets transmitted on the HPNA interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          The number of multicast packets received on the HPNA interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsCrcErrored" access="readOnly" dmr:version="2.0">
        <description>
          The number of packets received on the HPNA interface with CRC errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsCrcErroredHost" access="readOnly" dmr:version="2.0">
        <description>
          The number of CRC error packets received on the HPNA interface destined for the host equipment.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsShortErrored" access="readOnly" dmr:version="2.0">
        <description>
          The number of packets received on the HPNA interface that are too short to be valid.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsShortErroredHost" access="readOnly" dmr:version="2.0">
        <description>
          The number packets sent by the host equipment that are too short to be valid.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RxPacketsDropped" access="readOnly" dmr:version="2.0">
        <description>
          The number of received packets dropped due to lack of resources.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TxPacketsDropped" access="readOnly" dmr:version="2.0">
        <description>
          The number packets sent by the host equipment for transmission on the HPNA interface but dropped due to lack of resources.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ControlRequestLocal" access="readOnly" dmr:version="2.0">
        <description>
          The number of HPNA control request packets from local host.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ControlReplyLocal" access="readOnly" dmr:version="2.0">
        <description>
          The number of HPNA control reply packets to local host.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ControlRequestRemote" access="readOnly" dmr:version="2.0">
        <description>
          The number of HPNA control request packets from remote host.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ControlReplyRemote" access="readOnly" dmr:version="2.0">
        <description>
          The number of HPNA control reply packets to remote host.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsSentWire" access="readOnly" dmr:version="2.0">
        <description>
          The total number of packets transmitted to wire.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSentWire" access="readOnly" dmr:version="2.0">
        <description>
          The total number of broadcast packets transmitted to wire.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSentWire" access="readOnly" dmr:version="2.0">
        <description>
          The total number of multicast packets transmitted to wire.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsInternalControl" access="readOnly" dmr:version="2.0">
        <description>
          The number of HPNA control request packets from internal node.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsInternalControl" access="readOnly" dmr:version="2.0">
        <description>
          The number of HPNA broadcast control request packets from internal node.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceivedQueued" access="readOnly" dmr:version="2.0">
        <description>
          The number of received packets queued on host output queues.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceivedForwardUnknown" access="readOnly" dmr:version="2.0">
        <description>
          The number of packets received and forwarded to unknown hosts.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NodeUtilization" access="readOnly" dmr:version="2.0">
        <description>
          The node utilization (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1000"/>
            <units value="0.1%"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics.PerformanceMonitoring.Channels." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Per-channel HPNA performance monitoring results.
        Note: channels are unidirectional.
      </description>
      <parameter name="TimeStamp" access="readOnly" dmr:version="2.0">
        <description>
          Time at which channel data was last collected.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ChannelNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}} This is the number of HPNA channels for which performance monitoring results have been collected.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HPNA.Diagnostics.PerformanceMonitoring.Channels.Channel.{i}." access="readOnly" numEntriesParameter="ChannelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Per-channel HPNA performance monitoring results.
      </description>
      <uniqueKey>
        <parameter ref="HostSrcMACAddress"/>
        <parameter ref="HostDestMACAddress"/>
      </uniqueKey>
      <parameter name="HostSrcMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The host source MAC address associated with the channel.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="HostDestMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The host destination MAC address associated with the channel.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="HPNASrcMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The HPNA source MAC address associated with the channel.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="HPNADestMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The HPNA destination MAC address associated with the channel.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="PHYRate" access="readOnly" dmr:version="2.0">
        <description>
          Channel PHY rate (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="BaudRate" access="readOnly" dmr:version="2.0">
        <description>
          PHY Baud rate (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbaud"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SNR" access="readOnly" dmr:version="2.0">
        <description>
          Channel actual SNR measured in receiver side (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.0">
        <description>
          Number of packets sent in the channel.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Pre-LARQ number of packets received in the channel.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LARQPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          Post-LARQ number of packets received in the channel. Valid only if LARQ is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FlowSpec" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}} Identifies the ''FlowSpec'' associated with the channel. This parameter is only used for channels that correspond to egress traffic from the local HPNA interface.
          {{null}} means that the channel is not associated with any specified flow specification in the QoS object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".HPNA.Interface.{i}.QoS.FlowSpec." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MoCA." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        MoCA object that contains the {{object|Interface}} table {{bibref|MoCAv1.0}} {{bibref|MoCAv1.1}}.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MoCA.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        MoCA interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Each table entry models the PHY and MAC levels of a MoCA interface {{bibref|MoCAv1.0}} {{bibref|MoCAv1.1}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          This interface's firmware version.
          This parameter is based on ''mocaIfSoftwareVersion'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum MoCA PHY bit rate (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxIngressBW" access="readOnly" dmr:version="2.0">
        <description>
          The maximum bandwidth of this interface for flows onto the MoCA network in {{units}}.
          This parameter is based on ''mocaIfMaxIngressNodeBw'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxEgressBW" access="readOnly" dmr:version="2.0">
        <description>
          The maximum bandwidth of this interface for flows from the MoCA network in {{units}}.
          This parameter is based on ''mocaIfMaxEgressNodeBw'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="HighestVersion" access="readOnly" dmr:version="2.0">
        <description>
          Identifies the highest MoCA version that this interface supports.
          This element MUST be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example, 1.0, where the components mean major.minor revision number. {{pattern}}
          This parameter is based on ''mocaIfMocaVersion'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
            <pattern value="\d+(\.\d+)*"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentVersion" access="readOnly" dmr:version="2.0">
        <description>
          Identifies the MoCA version that the MoCA network is currently running.
          This element MUST be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example, 1.0, where the components mean major.minor revision number. {{pattern}}
          This parameter is based on ''mocaIfNetworkVersion'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
            <pattern value="\d+(\.\d+)*"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NetworkCoordinator" access="readOnly" dmr:version="2.0">
        <description>
          The Node ID of the current Network Coordinator (NC) for the MoCA network.
          This parameter is based on ''mocaIfNC'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NodeID" access="readOnly" dmr:version="2.0">
        <description>
          The Node ID of this interface.
          This parameter is based on ''mocaIfNodeID'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxNodes" access="readOnly" dmr:version="2.0">
        <description>
          The maximum network node capability supported by the interface. If {{param}} is {{true}} then the interface supports 16 nodes (the maximum for a MoCA 1.1 network). If {{param}} is false then the interface supports 8 nodes (the maximum for a MoCA 1.0 network).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PreferredNC" access="readWrite" dmr:version="2.0">
        <description>
          Whether this interface is a preferred Network Coordinator (NC).
          This parameter is based on ''mocaIfPreferredNC'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="BackupNC" access="readOnly" dmr:version="2.0">
        <description>
          The Node ID of the backup Network Coordinator node.
          This parameter is based on ''mocaIfBackupNC'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PrivacyEnabledSetting" access="readWrite" dmr:version="2.0">
        <description>
          The configured privacy mode. This indicates whether link-layer security is enabled ({{true}}) or disabled ({{false}}) for network admission.
          The configured privacy setting MAY NOT match the current operational state ({{param|PrivacyEnabled}}), since this setting is only applied during network formation or admission.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PrivacyEnabled" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether link-layer security is enabled or disabled.
          This parameter is based on ''mocaIfPrivacyEnable'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="FreqCapabilityMask" access="readOnly" dmr:version="2.0">
        <description>
          Hexadecimal encoded 64-bit mask of supported frequencies. This is the bit map of the spectrum that the interface supports, and each bit represents 25 MHz of spectrum. The least significant bit of the rightmost character corresponds to 800MHz, which is the lowest frequency.
          For example, an interface that supports 1150 MHz through 1500 MHz would have a value of 0x000000001FFFC000.
          This parameter is based on ''mocaIfCapabilityMask'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="FreqCurrentMaskSetting" access="readWrite" dmr:version="2.0">
        <description>
          The configured hexadecimal encoded 64-bit mask of enabled frequencies for network admission.
          The configured frequencies MAY NOT match the current operational state ({{param|FreqCurrentMask}}), since this setting is only applied during network formation or admission.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="FreqCurrentMask" access="readOnly" dmr:version="2.0">
        <description>
          Hexadecimal encoded 64-bit mask of used frequencies. This is the bit map of the spectrum that can be used and is a subset of the {{param|FreqCapabilityMask}}. Each bit represents 25 MHz of spectrum. The least significant bit of the rightmost character corresponds to 800MHz, which is the lowest frequency.
          This parameter is based on ''mocaIfChannelMask'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="CurrentOperFreq" access="readOnly" dmr:version="2.0">
        <description>
          Current Operational Frequency.  The RF frequency in Hz to which the MoCA interface is currently  tuned. This parameter is only valid when {{param|Status}} is {{enum|Up|Status}}.
          This parameter is based on ''mocaIfRFChannel'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastOperFreq" access="readOnly" dmr:version="2.0">
        <description>
          Last Operational Frequency.  The RF frequency in Hz to which the MoCA interface was tuned when last in the {{enum|Up|Status}} state.
          This parameter is based on ''mocaIfLOF'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="2.0">
        <description>
          MoCA Password. The value consists of numeric characters (0-9). {{pattern}}
          This parameter is based on ''mocaIfPassword'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax hidden="true">
          <string>
            <size minLength="12" maxLength="17"/>
            <pattern value="\d+"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TxPowerLimit" access="readWrite" dmr:version="2.0">
        <description>
          Transmit Power attenuation in dB relative to the maximum transmit power.
          The MoCA interface SHOULD have {{param|Enable}} set to {{false}} for any change in this configuration. If the parameter is modified when {{param|Enable}} is {{true}} then this change might take several minutes to complete.
          This parameter is based on ''mocaIfTxPowerLimit'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PowerCntlPhyTarget" access="readWrite" dmr:version="2.0">
        <description>
          Target PHY rate in Mbps for the power control algorithm.
          The MoCA interface SHOULD have {{param|Enable}} set to {{false}} for any change in this configuration. If the parameter is modified when {{param|Enable}} is {{true}} then this change might take several minutes to complete.
          This parameter is based on ''mocaIfPowerControlTargetRate'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BeaconPowerLimit" access="readWrite" dmr:version="2.0">
        <description>
          Beacon Transmit Power attenuation in {{units}} relative to the maximum transmit power.
          The MoCA interface SHOULD have {{param|Enable}} set to {{false}} for any change in this configuration. If the parameter is modified when {{param|Enable}} is {{true}} then this change might take several minutes to complete.
          This parameter is based on ''mocaIfBeaconPowerLimit'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NetworkTabooMask" access="readOnly" dmr:version="2.0">
        <description>
          Hexadecimal encoded 64-bit mask of MoCA taboo channels identified for the home network. This is the bit map of the spectrum that the interface supports, and each bit represents 25 MHz of spectrum. The least significant bit of the rightmost character corresponds to 800MHz, which is the lowest frequency.
          This parameter is based on ''mocaIfTabooChannelMask'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="NodeTabooMask" access="readOnly" dmr:version="2.0">
        <description>
          Hexadecimal encoded 64-bit mask of supported frequencies. This is the bit map of the spectrum that the interface supports, and each bit represents 25 MHz of spectrum. The least significant bit of the rightmost character corresponds to 800MHz, which is the lowest frequency.
          This parameter is based on ''mocaIfNodeTabooChannelMask'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="8" maxLength="8"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="TxBcastRate" access="readOnly" dmr:version="2.0">
        <description>
          The broadcast PHY transmit rate in {{units}} for this interface.
          This parameter is based on ''mocaIfTxGcdRate'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxBcastPowerReduction" access="readOnly" dmr:version="2.0">
        <description>
          Transmit Power attenuation in {{units}} relative to the maximum transmit power for broadcast transmissions.
          This parameter is based on ''mocaIfTxGcdPowerReduction'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QAM256Capable" access="readOnly" dmr:version="2.0">
        <description>
          Whether this interface supports the 256 QAM feature.
          This parameter is based on ''mocaIfQAM256Capable'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketAggregationCapability" access="readOnly" dmr:version="2.0">
        <description>
          The packet aggregation capability supported by the interface. Standard values are 0 (no support), 6 (6 {{units}}) or 10 (10 {{units}}).
          This parameter is based on ''mocaIfPacketsAggrCapability'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="10"/>
            <units value="packets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MoCA.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MoCA.Interface.{i}.QoS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The QoS object provides information on MoCA parameterized QoS for this interface {{bibref|MoCAv1.1}}.
      </description>
      <parameter name="EgressNumFlows" access="readOnly" dmr:version="2.0">
        <description>
          The number of QoS flows that this interface has from the MoCA network.
          This parameter is based on ''mocaIfEgressNodeNumFlows'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IngressNumFlows" access="readOnly" dmr:version="2.0">
        <description>
          The number of QoS flows that this interface has onto the MoCA network.
          This parameter is based on ''mocaIfIngressNodeNumFlows'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FlowStatsNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MoCA.Interface.{i}.QoS.FlowStats.{i}." access="readOnly" numEntriesParameter="FlowStatsNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        The flow statistics table provides information on the MoCA parameterized QoS flows this interface has allocated onto the MoCA network.
      </description>
      <uniqueKey>
        <parameter ref="FlowID"/>
      </uniqueKey>
      <parameter name="FlowID" access="readOnly" dmr:version="2.0">
        <description>
          The flow ID used to identify a flow in the network.
          This parameter is based on ''mocaIfFlowID'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketDA" access="readOnly" dmr:version="2.0">
        <description>
          The Destination Address (DA) for the packets in this flow.
          This parameter is based on ''mocaIfPacketDA'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxRate" access="readOnly" dmr:version="2.0">
        <description>
          Maximum required rate in {{units}}.
          This parameter is based on ''mocaIfPeakDataRate'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxBurstSize" access="readOnly" dmr:version="2.0">
        <description>
          Maximum burst size.
          This parameter is based on ''mocaIfBurstSize'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LeaseTime" access="readOnly" dmr:version="2.0">
        <description>
          Flow lease time (expressed in {{units}}).
          A {{param}} of 0 means unlimited lease time.
          This parameter is based on ''mocaIfLeaseTime'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeLeft" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Flow lease time remaining (expressed in {{units}}).
          If {{param|LeaseTime}} is 0 then a {{param}} of 0 means unlimited lease time; otherwise, a {{param}} of 0 means expired.
          This parameter is based on ''mocaIfLeaseTimeLeft'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FlowPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The number of packets transmitted for this flow.
          This parameter is based on ''mocaIfTxPacketsFlow'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MoCA.Interface.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains information about other MoCA devices currently associated with this MoCA interface.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC address of the associated device's MoCA interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="NodeID" access="readOnly" dmr:version="2.0">
        <description>
          The Node ID of this remote device.
          This parameter is based on ''mocaNodeIndex'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PreferredNC" access="readOnly" dmr:version="2.0">
        <description>
          Whether this remote device is a preferred Network Coordinator (NC).
          This parameter is based on ''mocaNodePreferredNC'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="HighestVersion" access="readOnly" dmr:version="2.0">
        <description>
          Identifies the highest MoCA version that this remote device supports.
          This element MUST be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example, 1.0, where the components mean major.minor revision number. {{pattern}}
          This parameter is based on ''mocaNodeMocaVersion'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
            <pattern value="\d+(\.\d+)*"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PHYTxRate" access="readOnly" dmr:version="2.0">
        <description>
          The PHY transmit rate (in {{units}}) to this remote device.
          This parameter is based on ''mocaMeshTxRate'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PHYRxRate" access="readOnly" dmr:version="2.0">
        <description>
          The PHY receive rate (in {{units}}) from this remote device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxPowerControlReduction" access="readOnly" dmr:version="2.0">
        <description>
          The reduction in transmitter level (in {{units}}) due to power control.
          This parameter is based on ''mocaNodeTxPowerReduction'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxPowerLevel" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The power level (in {{units}}) received at the MoCA interface from this remote device.
          This parameter is based on ''mocaNodeRxPower'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dBm"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxBcastRate" access="readOnly" dmr:version="2.0">
        <description>
          The broadcast PHY transmit rate (in {{units}}) from this remote device.
          This parameter is based on ''mocaNodeTxGcdRate'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxBcastPowerLevel" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The power level (in {{units}}) received at the MoCA interface from this remote device.
          This parameter is based on ''mocaNodeRxGcdPower'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dBm"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The number of packets transmitted to this remote device (Note: Includes Broadcast, Multicast and Unicast packets).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RxPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The number of packets received from this remote device (Note: Includes Broadcast, Multicast and Unicast packets).
          This parameter is based on ''mocaNodeRxPackets'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RxErroredAndMissedPackets" access="readOnly" dmr:version="2.0">
        <description>
          The number of errored and missed packets received from this remote device.
          This parameter is based on ''mocaNodeRxDrops'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QAM256Capable" access="readOnly" dmr:version="2.0">
        <description>
          Whether this remote device supports the 256 QAM feature.
          This parameter is based on ''mocaNodeQAM256Capable'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketAggregationCapability" access="readOnly" dmr:version="2.0">
        <description>
          The packet aggregation capability supported by the remote device. Standard values are 0 (no support), 6 (6 {{units}}) or 10 (10 {{units}}).
          This parameter is based on ''mocaNodePacketsAggrCapability'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="10"/>
            <units value="packets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxSNR" access="readOnly" dmr:version="2.0">
        <description>
          The signal to noise level (in {{units}}) received at this interface from this remote device.
          This parameter is based on ''mocaNodeSNR'' from {{bibref|MOCA11-MIB}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dBm"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not this remote device is currently present in the MoCA network.
          The ability to list inactive nodes is OPTIONAL.  If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}}  for each inactive node.  The length of time an inactive node remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        G.hn object that contains an {{object|Interface}} table for G.hn supported CPE. The ITU-T G.hn specifications {{bibref|G.9960}} and {{bibref|G.9961}} define Physical and MAC Layers for communication between two or more G.hn nodes in the home network over multiple wired media such as power line, phone line and coaxial cable.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4" dmr:fixedObject="true">
      <description>
        G.hn interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Each table entry models the PHY {{bibref|G.9960}} and MAC {{bibref|G.9961}} layers of a G.hn interface.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.4">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.4">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.4">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.4">
        <description>
          {{list}}  {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.4">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.4">
        <description>
          The MAC Address of the interface, denoted as node MAC address or REGID in {{bibref|G.9961}}.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.4">
        <description>
          The firmware version of the interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readOnly" status="deprecated" dmr:version="2.4">
        <description>
          This parameter is DEPRECATED because it has been replaced by {{param|MediumType}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Powerline"/>
            <enumeration value="Phone"/>
            <enumeration value="Coax"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxTransmitRate" access="readOnly" dmr:version="2.8">
        <description>
          The maximum PHY data rate that the interface is capable of transmitting (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TargetDomainNames" access="readWrite" dmr:version="2.4">
        <description>
          {{list}}  Identifies the target domains configured by the user, as described in {{bibref|G.9961|Section 8.6.1}}. When registering or re-registering, the G.hn interface SHOULD try to register to one of these domains in the given order.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DomainName" access="readOnly" dmr:version="2.4">
        <description>
          This is the domain name to which the interface is currently registered.
          {{empty}} indicates that the interface is currently not registered.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DomainNameIdentifier" access="readOnly" dmr:version="2.4">
        <description>
          The Domain Name Identifier, a shortened version of {{param|DomainName}}, denoted as DNI in {{bibref|G.9961|Section 8.6.11.2.1}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DomainId" access="readOnly" dmr:version="2.4">
        <description>
          The Domain Identifier of the domain to which the interface is registered, denoted as DOD in {{bibref|G.9961}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DeviceId" access="readOnly" dmr:version="2.4">
        <description>
          The Device Identifier assigned by the Domain Master, denoted as DEVICE_ID in {{bibref|G.9961}}.
          The value 0 indicates that the device is not currently registered.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.4">
        <description>
          The maximum PHY bit rate supported by this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NodeTypeDMCapable" access="readOnly" dmr:version="2.4">
        <description>
          Indicates whether this interface has the capability to act as Domain Master in the G.hn domain.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="DMRequested" access="readWrite" dmr:version="2.8">
        <description>
          Indicates a request to force the role of the G.hn interface to Domain Master (DM) for the G.hn domain it is connected to. The selection of the Domain Master follows the procedures described in {{bibref|G.9961|Clause 8.6.6}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IsDM" access="readOnly" dmr:version="2.8">
        <description>
          Indicates whether this G.hn interface is currently the Domain Master (DM) for the G.hn domain it is connected to, as described in {{bibref|G.9961|Clause 8.6}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NodeTypeSCCapable" access="readOnly" dmr:version="2.4">
        <description>
          Indicates whether this interface has the capability to act as Security Controller in the G.hn domain.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SCRequested" access="readWrite" dmr:version="2.8">
        <description>
          Indicates a request to force the role of the G.hn interface to Security Controller (SC) for the G.hn domain it is connected to. The selection of the Security Controller follows the procedures described in {{bibref|G.9961|Clause 9.2}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IsSC" access="readOnly" dmr:version="2.8">
        <description>
          Indicates whether this G.hn interface is currently the Security Controller (SC) for the G.hn domain it is connected to, as described in {{bibref|G.9961|Clause 9.2}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="StandardVersions" access="readOnly" dmr:version="2.8">
        <description>
          The standard versions that the interface supports. The list MUST have an even number of items.  The first item of each pair represents an ITU-T G.hn Recommendation while the second element of each pair represents the amendment version of the indicated Recommendation that this interface supports (the value 0 corresponds to the base Recommendation).
          For example, to indicate support for the G.9960 base document and G.9961 amendment 1, the corresponding list would be "G9960,0,G9961,1".
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MaxBandPlan" access="readOnly" dmr:version="2.8">
        <description>
          The largest bandplan that the interface can support, as defined in {{bibref|G.9961|Clause 8.8.5.5}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MediumType" access="readOnly" dmr:version="2.8">
        <description>
          The medium type that the interface currently operates on.  Refer to {{bibref|G.9962|Table 7-5}}.
        </description>
        <syntax>
          <string>
            <enumeration value="PowerLineBaseband"/>
            <enumeration value="PhoneLineBaseband"/>
            <enumeration value="CoaxBaseband"/>
            <enumeration value="CoaxRF"/>
            <enumeration value="PlasticOpticalFiber"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TAIFG" access="readOnly" dmr:version="2.8">
        <description>
          The Acknowledgement InterFrame Gap, or TAIFG, as defined in {{bibref|G.9961|Clause 8.4}}. It is represented as multiples of {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="1.28 microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NotchedAmateurRadioBands" access="readWrite" dmr:version="2.8">
        <description>
          A bit map representing usage of international amateur bands (0 = masked, 1 = unmasked). The LSB represents the lowest band (1.8-2.0 MHz), the second LSB represents the second lowest band (3.5-4.0 MHz), and so on. The maximum value for this parameter is 0x03FF, i.e. it is a 10-bit quantity represented in 16 bits and the top 6 bits are always zero.
          International Radio amateur bands are described in {{bibref|G.9964|Table D-1}} and conveyed by the Domain Master in the Amateur radio band descriptor (see {{bibref|G.9961|Table 8-77}}).
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="2"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="PHYThroughputDiagnosticsEnable" access="readWrite" dmr:version="2.8">
        <description>
          Comma-separated list of DeviceIDs of nodes that need to enable their PHY throughput diagnostics mode. All devices that are enabled will participate in the G.hn network PHY throughput diagnostics process.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PerformanceMonitoringDiagnosticsEnable" access="readWrite" dmr:version="2.8">
        <description>
          Comma-separated list of DeviceIDs of nodes that need to enable their Performance Monitoring diagnostics mode on this node. All devices that are enabled will participate in the G.hn network Performance Monitoring diagnostics process.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SMMaskedBandNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NodeTypeDMConfig" access="readWrite" dmr:version="2.4">
        <description>
          Requests the interface to become the Domain Master in the G.hn domain.
          This parameter is valid only if {{param|NodeTypeDMCapable}} is {{true}}.
          Note that, if more than one node is configured to act as Domain Master, G.hn specifies a protocol to ensure only one device actually becomes DM.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NodeTypeDMStatus" access="readOnly" dmr:version="2.4">
        <description>
          Indicates whether the interface is acting as Domain Master ({{true}}) or not ({{false}}).
          See Note in {{param|NodeTypeDMConfig}} regarding the possibility of more than one node being configured with {{param|NodeTypeDMConfig}} = {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NodeTypeSCStatus" access="readOnly" dmr:version="2.4">
        <description>
          Indicates whether the interface is acting as Security Controller ({{true}}) or not ({{false}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PSM" access="readWrite" dmr:version="2.12">
        <description>
          Specifies the list of PSD shaping mask (PSM) breakpoints to be applied to the G.hn interface.
          {{list|with each list item consisting of:}}
          {{datatype|expand}}
          The PSM level is 0.1*(the value of the level of the PSM) - 140 dBm/Hz.
          For example, a PSM defined by two breakpoints (subcarrier 450, PSM level -80 dBm/Hz) and (subcarrier 1050, PSM level -90 dBm/Hz) is represented by PSM [450,600],[1050,500] .
        </description>
        <syntax>
          <list minItems="2" maxItems="32"/>
          <dataType ref="PSMBreakPointIndexAndLevel"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        Throughput statistics for this interface at the different G.hn reference points described in {{bibref|G.9961|Clause 8.1}}.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
          More specifically, this is the total number of MPDU bytes transmitted or retransmitted by the node through a physical medium (i.e., PMI defined in {{bibref|G.9960|Clause 5.2.1}}), which correspond to data LPDUs (i.e., data packets) and framing overhead (e.g., LFH, LPH, LPCS defined in {{bibref|G.9961|Clause 8.1}}). It does not include transmitted bytes contributed by management LPDUs (i.e., management packets).
          Note: LPDUs in mixed LLC frame blocks are considered data LPDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of bytes received on the interface, including framing characters.
          More specifically, this is the total number of MPDU bytes received by the node through a physical medium, which correspond to data LPDUs and framing overhead. It does not include received bytes contributed by management LPDUs. It can include blocks with errors.
          Note: LPDUs in mixed LLC frame blocks are considered data LPDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets transmitted out of the interface.
          More specifically, this is the total number of APDUs requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point defined in {{bibref|G.9960|Clause 5.2.1}}) that were transmitted by the node through the physical medium. It does not include transmitted LCDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets received on the interface.
          More specifically, this is the total number of APDUs delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) that were received by the node through the physical medium. It does not include received LCDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
          More specifically, this is the total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point defined in {{bibref|G.9960|Clause 5.2.1}}) but could not be transmitted because of errors (e.g., APDUs containing CRC errors).
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
          More specifically, this is the total number of received APDUs that contained errors preventing them from being delivered to a higher layer (i.e., inbound APDUs at the x1 reference point defined in {{bibref|G.9960|Clause 5.2.1}}). The possible causes of error are: incorrect CRC, incorrect MIC, incorrect MIC size, and incorrect size of packet.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
          More specifically, this is the total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) and which were addressed to a unicast address at this layer. It includes APDUs that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
          More specifically, this is the total number of received APDUs that were delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) and which were addressed to a unicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
          More specifically, this is the total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) but chosen to be discarded even though no errors had been detected to prevent their being transmitted (e.g., buffer overflow).
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
          More specifically, this is the total number of received APDUs that were chosen to be discarded even though no errors had been detected to prevent their being delivered.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
          More specifically, this is the total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) and which were addressed to a multicast address at this layer. It includes APDUs that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
          More specifically, this is the total number of received APDUs that were delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) and which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
          More specifically, this is the total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) and which were addressed to a broadcast address at this layer. It includes APDUs that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
          More specifically, this is the total number of received APDUs that were delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) and which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
          More specifically, this is the total number of APDUs received by the management that were discarded because of an unknown or unsupported protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MgmtBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of MPDU bytes transmitted by the node through a physical medium, which correspond to management LPDUs and framing overhead.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MgmtBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of MPDU bytes received by the node through a physical medium, which correspond to management LPDUs and framing overhead.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MgmtPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LCDUs requested for transmission by a management layer (i.e., outbound LCDUs generated in LLC defined in {{bibref|G.9961|Clause 8.1.3}}) that were transmitted by the node through a physical medium.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MgmtPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LCDUs delivered to a management layer (i.e., inbound LCDUs) that were received by the node through a physical medium.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BlocksSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LPDUs that were transmitted by the node through a physical medium, regardless of new or retransmitted LPDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BlocksReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LPDUs that were received by the node through a physical medium, with or without errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BlocksResent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LPDUs that were retransmitted.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="BlocksErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received LPDUs that contained errors.
          Note the following relationships hold:
          * PacketsSent + ErrorsSent + DiscardPacketsSent = UnicastPacketsSent + MulticastPacketsSent + BroadcastPacketsSent.
          * PacketsReceived = UnicastPacketsReceived + MulticastPacketsReceived + BroadcastPacketsReceived.
          * Retransmission rate = BlocksResent / BlocksSent.
          * Block error rate = BlocksErrorReceived / BlocksReceived.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Interface.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        This table contains information about other G.hn devices connected to this G.hn interface.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.4">
        <description>
          MAC address of remote G.hn device.
          This is denoted as REGID in {{bibref|G.9961}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="DeviceId" access="readOnly" dmr:version="2.4">
        <description>
          Device Id (as defined in G.hn) for the remote G.hn device, denoted as DEVICE_ID in {{bibref|G.9961}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TxPhyRate" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The PHY transmit Rate (expressed in {{units}}) to this remote device, denoted as PHY data rate in {{bibref|G.9961}}.
          Refer to Note 1 of {{bibref|G.9961|Table 8-48}}.  To convert from the value in the table, divide by 32K (32768) and round down.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxPhyRate" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The PHY receive Rate (expressed in {{units}}) from this remote device, denoted as PHY data rate in {{bibref|G.9961}}.
          Refer to Note 1 of {{bibref|G.9961|Table 8-48}}.  To convert from the value in the table, divide by 32K (32768) and round down.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.4">
        <description>
          Whether or not this device is currently present in the G.hn domain.
          The ability to list inactive nodes is OPTIONAL. If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}} for each inactive node. The length of time an inactive node remains listed in this table is a local matter to the CPE.
          If {{param}} is {{true}}, it indicates that the Status of the remote device is 0, 1, or 2 (see {{bibref|G.9961|Table 7-3}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Interface.{i}.DMInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object specifies management parameters pertaining to the domain functionality (Domain Master function; see {{bibref|G.9961|Clause 8.6}}). The object exists only on G.hn interfaces that are currently the Domain Master, i.e. for which parameter {{param|#.IsDM}} is {{true}}.
      </description>
      <parameter name="DomainName" access="readWrite" dmr:version="2.8">
        <description>
          This is the domain name to which the interface is currently registered. {{empty}} indicates that the interface is currently not registered.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="32"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="DomainNameIdentifier" access="readOnly" dmr:version="2.8">
        <description>
          The Domain Name Identifier, a shortened version of {{param|DomainName}}, denoted as DNI in {{bibref|G.9961|Section 8.6.11.2.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="2"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="DomainId" access="readOnly" dmr:version="2.8">
        <description>
          The Domain Identifier of the domain to which the interface is registered, denoted as DOD in {{bibref|G.9961}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MACCycleDuration" access="readWrite" dmr:version="2.8">
        <description>
          The MAC cycle duration, as specified in {{bibref|G.9961|Clause 8.4}}. It is represented as multiples of {{units}}. In the case of power line, writing to this parameter has no effect and it reads back as 0, which is a special value indicating that the MAC cycle is synchronized with 2 AC cycles as defined in {{bibref|G.9961|Clause 8.6.3.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="0"/>
            <range minInclusive="10" maxInclusive="200"/>
            <units value="0.5 msec"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SCDeviceId" access="readWrite" dmr:version="2.8">
        <description>
          The DEVICE_ID of the Security Controller selected by the Domain Master.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SCMACAddress" access="readWrite" dmr:version="2.8">
        <description>
          The REGID of the Security Controller selected by the Domain Master.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="ReregistrationTimePeriod" access="readWrite" dmr:version="2.8">
        <description>
          The time interval for periodic re-registration, as specified in {{bibref|G.9961|Clause 8.8.5.8}}. It is represented as multiples of {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="5" maxInclusive="63"/>
            <units value="2 seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TopologyPeriodicInterval" access="readWrite" dmr:version="2.8">
        <description>
          The time interval that a node sends out the periodic topology update using TM_NodeTopologyChange.ind message, as specified in {{bibref|G.9961|Clause 8.8.5.8.1}}. It is represented as multiples of {{units}}. The special value 0 represents an infinite interval (i.e., no periodic topology update).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="0.1 sec"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinSupportedBandplan" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the value of the minimal bandplan capability for a node that is allowed to register to the domain.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxSupportedBandplan" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the value of the minimal bandplan capability for a node that is allowed to register to the domain.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Interface.{i}.SCInfo." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object specifies management parameters pertaining to the Security Controller functionality (Security Controller function; see {{bibref|G.9961|Clause 9.2}}). The object exists only on G.hn interfaces that are currently the Security Controller, i.e. for which parameter {{param|#.IsSC}} is {{true}}.
      </description>
      <parameter name="ModesSupported" access="readOnly" dmr:version="2.8">
        <description>
          The security modes that the Security Controller can support.  Refer to {{bibref|G.9961|Clause 9.2}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="NN">
              <description>
                Node-to-Node
              </description>
            </enumeration>
            <enumeration value="NMK">
              <description>
                Network Membership Key
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModeEnabled" access="readWrite" dmr:version="2.8">
        <description>
          The security mode in which the Security Controller is operating.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="ModesSupported" nullValue="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MICSize" access="readWrite" dmr:version="2.8">
        <description>
          The selected MIC size used in the domain.
        </description>
        <syntax>
          <string>
            <enumeration value="4-byte MIC"/>
            <enumeration value="8-byte MIC"/>
            <enumeration value="16-byte MIC"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Location" access="readOnly" dmr:version="2.8">
        <description>
          Indicates whether the Security Controller is above the L1 reference point. It is set to {{true}} if the Security Controller is above the L1 reference point, and set to {{false}} otherwise.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Interface.{i}.SMMaskedBand.{i}." access="readWrite" numEntriesParameter="SMMaskedBandNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="32" dmr:version="2.8">
      <description>
        Specifies the list of masked bands to be applied to the G.hn interface.  This information is conveyed by the Domain Master in the SM descriptor as specified in {{bibref|G.9961|Table 8-77}}.
        Instances of this object are expected to exist only on G.hn interfaces that are currently the Domain Master, i.e. for which parameter {{param|#.IsDM}} is {{true}}.
      </description>
      <uniqueKey>
        <parameter ref="BandNumber"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the {{object}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="BandNumber" access="readWrite" dmr:version="2.8">
        <description>
          The masked band number.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="StartSubCarrier" access="readWrite" dmr:version="2.8">
        <description>
          Index of the lowest frequency sub-carrier in the band to be masked as specified in {{bibref|G.9961|Table 8-79}}. This parameter is writable only on the interface which acts as the Domain Master.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="StopSubCarrier" access="readWrite" dmr:version="2.8">
        <description>
          Index of the highest frequency sub-carrier in the band to be masked as specified in Table 8-79 in {{bibref|G.9961}}. This parameter is writable only on the interface which acts as the Domain Master.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        The G.hn Diagnostics object.
      </description>
    </object>
    <object name="Device.Ghn.Diagnostics.PHYThroughput." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        G.hn PHY throughput diagnostics configuration and results.
        When diagnostics are requested, all G.hn nodes for which the {{param|##.Interface.{i}.PHYThroughputDiagnosticsEnable}} parameter is set enter PHY diagnostics mode.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.8">
        <description>
          The interface over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".Ghn.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiagnoseMACAddress" access="readWrite" dmr:version="2.8">
        <description>
          The MAC address of the originating G.hn interface of the link that is being diagnosed.
          Note: This MAC address might belong to another node of the domain.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="PHYThroughputResultNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics.PHYThroughput.Result.{i}." access="readOnly" numEntriesParameter="PHYThroughputResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        PHY throughput diagnostics results.
      </description>
      <uniqueKey>
        <parameter ref="DestinationMACAddress"/>
      </uniqueKey>
      <parameter name="DestinationMACAddress" access="readOnly" dmr:version="2.8">
        <description>
          MAC address of the destination node of the link being measured.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="LinkState" access="readOnly" dmr:version="2.8">
        <description>
          Indicates the state of the link between the G.hn Interface with MAC address {{param|#.DiagnoseMACAddress}} and the G.hn Interface with MAC address {{param|DestinationMACAddress}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Direct">
              <description>
                There is a direct link between G.hn Interface with MAC address {{param|#.DiagnoseMACAddress}} and G.hn Interface with MAC address {{param|DestinationMACAddress}}
              </description>
            </enumeration>
            <enumeration value="NonDirect">
              <description>
                There is no direct link between G.hn Interface with MAC address {{param|#.DiagnoseMACAddress}} and G.hn Interface with MAC address {{param|DestinationMACAddress}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="TxPhyRate" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          PHY data rate in transmit direction in the link between the G.hn Interface with MAC address {{param|#.DiagnoseMACAddress}} and the G.hn Interface with MAC address {{param|DestinationMACAddress}}. It is represented in {{units}} as defined in Note 1 to {{bibref|G.9961|Table 8-48}}.  To convert from the value in the table, divide by 32K (32768) and round down.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxPhyRate" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          PHY data rate in receive direction in the link between the G.hn Interface with MAC address {{param|#.DiagnoseMACAddress}}  and the G.hn Interface with MAC address {{param|DestinationMACAddress}}. It is represented in {{units}} as defined in Note 1 to {{bibref|G.9961|Table 8-48}}.  To convert from the value in the table, divide by 32K (32768) and round down.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics.PerformanceMonitoring." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        G.hn Performance Monitoring diagnostics configuration and results.
        When diagnostics are requested, all G.hn nodes for which the {{param|##.Interface.{i}.PerformanceMonitoringDiagnosticsEnable}} parameter is set enter PHY diagnostics mode.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.8">
        <description>
          The interface over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".Ghn.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiagnoseMACAddress" access="readWrite" dmr:version="2.8">
        <description>
          The MAC address of the originating G.hn interface of the link that is being diagnosed.
          Note: This MAC address might belong to another node of the domain.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="SampleInterval" access="readWrite" dmr:version="2.8">
        <description>
          Time in {{units}} between automatic collection of performance monitoring data. A value of zero disables automatic collection of data.
          The node MAY impose a minimum sample interval, in which case an attempt to set a (non-zero) interval that is less than this minimum MUST set the interval to the minimum and MUST NOT be regarded as an error.
          If SampleInterval is a simple fraction of a day, e.g. 900 (a quarter of an hour) or 3600 (an hour), the device MAY choose to align sample intervals with time of day, but is not required to do so.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SNRGroupLength" access="readWrite" dmr:version="2.8">
        <description>
          The number of sub-carriers in a group to be used for averaging SNR values when providing SNR information for a channel.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1"/>
            <range minInclusive="2" maxInclusive="2"/>
            <range minInclusive="4" maxInclusive="4"/>
            <range minInclusive="8" maxInclusive="8"/>
            <range minInclusive="16" maxInclusive="16"/>
            <range minInclusive="32" maxInclusive="32"/>
            <range minInclusive="64" maxInclusive="64"/>
            <range minInclusive="128" maxInclusive="128"/>
            <range minInclusive="256" maxInclusive="256"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics.PerformanceMonitoring.Nodes." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Per-node G.hn performance monitoring results.
        When automatic collection is enabled, i.e. {{param|#.SampleInterval}} is non-zero, the "current" interval is defined by the most recent automatic sample and the most recent subsequent manual sample, if any.
        When automatic collection is disabled, i.e. SampleInterval is zero, the "current" interval is defined by the three most recent manual  samples.
        Note: Packets in statistics counters are Ethernet packets.
      </description>
      <parameter name="CurrentStart" access="readOnly" dmr:version="2.8">
        <description>
          Start time for the current interval.
          When automatic collection is enabled, i.e. SampleInterval is non-zero, the current interval started at the most recent automatic sample.
          When automatic collection is disabled, i.e. SampleInterval is zero, the current interval started two manual samples ago.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="CurrentEnd" access="readOnly" dmr:version="2.8">
        <description>
          End time for the current interval.
          When automatic collection is enabled, i.e. SampleInterval is non-zero, the current interval ended at the most recent manual sample since the most recent automatic sample.  If there has been no such manual sample, the current interval is empty.
          When automatic collection is disabled, i.e. SampleInterval is zero, the current interval ended at the most recent manual sample.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="NodeNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}} This is the number of G.hn nodes for which performance monitoring results were collected during the current sample interval.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics.PerformanceMonitoring.Nodes.Node.{i}." access="readOnly" numEntriesParameter="NodeNumberOfEntries" minEntries="1" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Per-node G.hn performance monitoring results during the current sample interval. Each table entry contains the results collected between the G.hn nodes with MAC addresses {{param|##.DiagnoseMACAddress}}) and {{param|DestinationMACAddress}}).
        Note: Packet counters indicate the number of packets received between {{param|#.CurrentStart}} and {{param|#.CurrentEnd}}.
      </description>
      <uniqueKey>
        <parameter ref="DestinationMACAddress"/>
      </uniqueKey>
      <parameter name="DestinationMACAddress" access="readOnly" dmr:version="2.8">
        <description>
          MAC address of the destination node of the link being measured.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of MPDU bytes transmitted or retransmitted by the node through a physical medium (i.e., PMI defined in {{bibref|G.9960|Clause 5.2.1}}), which correspond to data LPDUs (i.e., data packets) and framing overhead (e.g., LFH, LPH, LPCS defined in {{bibref|G.9961|Clause 8.1}}). It does not include transmitted bytes contributed by management LPDUs (i.e., management packets).
          Note: LPDUs in mixed LLC frame blocks are considered data LPDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of MPDU bytes received by the node through a physical medium, which correspond to data LPDUs and framing overhead. It does not include received bytes contributed by management LPDUs. It might include blocks with errors.
          Note: LPDUs in mixed LLC frame blocks are considered data LPDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point defined in {{bibref|G.9960|Clause 5.2.1}}) that were transmitted by the node through the physical medium. It does not include transmitted LCDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) that were received by the node through the physical medium. It does not include received LCDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point defined in {{bibref|G.9960|Clause 5.2.1}}).  This parameter represents the total number of LCDUs requested for transmission by a management layer (i.e., outbound LCDUs generated in LLC defined in in {{bibref|G.9961|Clause 8.1.3}}) that were transmitted by the node through a physical medium) but could not be transmitted because of errors (e.g., APDUs containing CRC errors).
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received APDUs that contained errors preventing them from being delivered to a higher layer (i.e., inbound APDUs at the x1 reference point defined in {{bibref|G.9960|Clause 5.2.1}}). The possible causes of error are: incorrect CRC, incorrect MIC, incorrect MIC size, and incorrect size of packet.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) and which were addressed to a unicast address at this layer. It includes APDUs that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received APDUs that were delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) and which were addressed to a unicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) but chosen to be discarded even though no errors had been detected to prevent their being transmitted (e.g., buffer overflow).
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received APDUs that were chosen to be discarded even though no errors had been detected to prevent their being delivered.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) and which were addressed to a multicast address at this layer. It includes APDUs that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received APDUs that were delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) and which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs that were requested for transmission by a higher layer (i.e., outbound APDUs at the x1 reference point) and which were addressed to a broadcast address at this layer. It includes APDUs that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received APDUs that were delivered to a higher layer (i.e., inbound APDUs at the x1 reference point) and which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of APDUs received by the management that were discarded because of an unknown or unsupported protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MgmtBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of MPDU bytes transmitted by the node through a physical medium, which correspond to management LPDUs and framing overhead.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MgmtBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of MPDU bytes received by the node through a physical medium, which correspond to management LPDUs and framing overhead.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MgmtPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LCDUs requested for transmission by a management layer (i.e., outbound LCDUs generated in LLC defined in {{bibref|G.9961|Clause 8.1.3}}) that were transmitted by the node through a physical medium.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MgmtPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LCDUs delivered to a management layer (i.e., inbound LCDUs) that were received by the node through a physical medium.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BlocksSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LPDUs that were transmitted by the node through a physical medium, regardless of new or retransmitted LPDUs.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BlocksReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LPDUs that were received by the node through a physical medium, with or without errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BlocksResent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of LPDUs that were retransmitted.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="BlocksErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received LPDUs that contained errors.
          Note the following relationships hold:
          * PacketsSent + ErrorsSent + DiscardPacketsSent = UnicastPacketsSent + MulticastPacketsSent + BroadcastPacketsSent.
          * PacketsReceived = UnicastPacketsReceived + MulticastPacketsReceived + BroadcastPacketsReceived.
          * Retransmission rate = BlocksResent / BlocksSent.
          * Block error rate = BlocksErrorReceived / BlocksReceived.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics.PerformanceMonitoring.Channels." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Per-channel G.hn performance monitoring results.
        Note: channels are unidirectional.
      </description>
      <parameter name="TimeStamp" access="readOnly" dmr:version="2.8">
        <description>
          Time at which channel data was last collected.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ChannelNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Ghn.Diagnostics.PerformanceMonitoring.Channels.Channel.{i}." access="readOnly" numEntriesParameter="ChannelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Per-channel G.hn performance monitoring results during the current sample interval. Each table entry contains the results collected from the channel between a G.hn interface (as indicated by {{param|##.DiagnoseMACAddress}}) and a G.hn interface indicated by {{param|DestinationMACAddress}})
      </description>
      <uniqueKey>
        <parameter ref="DestinationMACAddress"/>
      </uniqueKey>
      <parameter name="DestinationMACAddress" access="readOnly" dmr:version="2.8">
        <description>
          MAC address of the destination node of the link being measured.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="SNR" access="readOnly" dmr:version="2.8">
        <description>
          The result of an SNR test performed over the channel. It is formatted as a comma-separated list of N/M unsigned integers that represents the result of Signal-to-Noise-Ratio measurement averaging in groups of M subcarriers. The number N depends on the bandplan used by the node and corresponds to the OFDM control parameter N of each medium as defined in {{bibref|G.9964}}. The number M corresponds to the parameter {{param|##.SNRGroupLength}}.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <units value="0.1 dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HomePlug." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        HomePlug object that contains the {{object|Interface}} table. The HomePlug industry standard {{bibref|HPAV1.1}} defines peer to peer communication over powerline medium.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HomePlug.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        HomePlug interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Each table entry models the PHY and MAC levels of a HomePlug interface {{bibref|HPAV1.1}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="LogicalNetwork" access="readWrite" dmr:version="2.0">
        <description>
          The textual name of the HomePlug Logical Network.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the HomePlug version of the interface. This element SHOULD be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation. For example:
          : "1.0"
          : "1.1"
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          The firmware version of the interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForceCCo" access="readWrite" dmr:version="2.0">
        <description>
          Central Coordinator (CCo) selection mode.
          If {{false}}, CCo selection is automatic. If {{true}}, the local HomePlug interface is forced to be CCo and all other devices in the Logical Network MUST be set to automatic CCo selection.
          Typically {{param}} is set to automatic CCo selection ({{false}}).
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="NetworkPassword" access="readWrite" dmr:version="2.0">
        <description>
          The network password of the device. This is a human readable ASCII string that is hashed per the HomePlug specification to generate the Network Membership Key (NMK). Note that care needs to be taken when setting this parameter as it might prohibit communication with other adapters or equipment connected via the powerline network.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OtherNetworksPresent" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates whether any other HomePlug networks are currently visible via this interface. Examples of valid list items include, but are not limited to:
          : "HomePlugAV"
          : "HomePlug1.0"
          : "Other"
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum PHY bit rate supported by this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HomePlug.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MPDUTxAck" access="readOnly" dmr:version="2.0">
        <description>
          HomePlug-specific statistic. The Number of MAC Protocol Data Units (MPDUs) Transmitted and Acknowledged.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MPDUTxCol" access="readOnly" dmr:version="2.0">
        <description>
          HomePlug-specific statistic. The Number of MAC Protocol Data Units (MPDUs) Transmitted and Collided
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MPDUTxFailed" access="readOnly" dmr:version="2.0">
        <description>
          HomePlug-specific statistic. The Number of MAC Protocol Data Units (MPDUs) Transmitted and Failed
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MPDURxAck" access="readOnly" dmr:version="2.0">
        <description>
          HomePlug-specific statistic. The Number of MAC Protocol Data Units (MPDUs) Received and Acknowledged
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MPDURxFailed" access="readOnly" dmr:version="2.0">
        <description>
          HomePlug-specific statistic. The Number of MAC Protocol Data Units (MPDUs) Received and Failed
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.HomePlug.Interface.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains information about other HomePlug devices connected to this HomePlug interface.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          MAC address of remote HomePlug device. It is used to uniquely identify and easily correlate with the connected remote HomePlug device.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="TxPhyRate" access="readOnly" dmr:version="2.0">
        <description>
          The PHY transmit Rate (expressed in {{units}}) to this remote device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxPhyRate" access="readOnly" dmr:version="2.0">
        <description>
          The PHY receive Rate (expressed in {{units}}) from this remote device.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SNRPerTone" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate Signal to Noise Ratio (SNR) per tone from this remote device (expressed in {{units}}).
        </description>
        <syntax>
          <list maxItems="1155"/>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AvgAttenuation" access="readOnly" dmr:version="2.0">
        <description>
          Average attenuation from this remote device (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EndStationMACs" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent MAC addresses of end stations bridged by the remote HomePlug device.
          For example: "11:22:33:AA:BB:CC, 22:33:44:DD:EE:66"
        </description>
        <syntax>
          <list maxItems="16"/>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not this device is currently present in the HomePlug network.
          The ability to list inactive nodes is OPTIONAL. If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}} for each inactive node. The length of time an inactive node remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Universal Powerline Association {{bibref|UPA-PLC}}. This object contains the {{object|Interface}} and {{object|Diagnostics}} objects.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        UPA interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). Each table entry models the PHY and MAC levels of a UPA interface {{bibref|UPA-PLC}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC Address of the interface.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.0">
        <description>
          This interface's firmware version.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum PHY bit rate supported by this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NodeType" access="readWrite" dmr:version="2.0">
        <description>
          Type of UPA device role. It can be Fixed Access Point (master) or End Point (slave) of the PLC network.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="AP"/>
            <enumeration value="EP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LogicalNetwork" access="readWrite" dmr:version="2.0">
        <description>
          The name (network ID) of the logical PLC network in which the local interface is a member (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="20"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionMethod" access="readWrite" dmr:version="2.0">
        <description>
          Encryption Method used by UPA device. {{enum}}
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
            <enumeration value="None"/>
            <enumeration value="DES"/>
            <enumeration value="3DES"/>
            <enumeration value="AES128"/>
            <enumeration value="AES256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionKey" access="readWrite" dmr:version="2.0">
        <description>
          Encryption key for secure PLC communications.
          This a human readable string used by the system to generate the encryption key to encrypt communications in powerline. It takes non extended ASCII characters (i.e. printable 7-bit ASCII character codes 32-126, which includes SPACE but excludes TAB, LF and CR). For example: bvjPekZiYUf9kjNKJASkgJ09adfoP01Fjvgd
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="36"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PowerBackoffEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Power back-off management feature status in the UPA device. Boolean can be {{true}} for "enabled" and {{false}}  for "disabled".
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PowerBackoffMechanismActive" access="readOnly" dmr:version="2.0">
        <description>
          Show if power back-off mechanism is active at that time in the UPA device. Boolean can be {{true}} for "active"  and {{false}} for "not active".
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EstApplicationThroughput" access="readOnly" dmr:version="2.0">
        <description>
          The estimated application throughput (expressed in {{units}}), received from the PLC link. This value can be  used to indicate link quality.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ActiveNotchEnable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the {{object|ActiveNotch}} table for this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ActiveNotchNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgeForNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA.Interface.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains information about PLC connections running between this UPA interface and other UPA devices.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          Remote UPA device MAC address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Port" access="readOnly" dmr:version="2.0">
        <description>
          The PLC port number.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LogicalNetwork" access="readOnly" dmr:version="2.0">
        <description>
          The name of the logical PLC network (human readable string).
          In the case where the associated device belongs to a different powerline network than the UPA interface, the actual network identifier of the neighboring network is not shown in {{param}}. Rather, only a generic string, e.g. "Network 1", "Network 2", etc is stored here due to security/privacy implications.
        </description>
        <syntax>
          <string>
            <size maxLength="20"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PhyTxThroughput" access="readOnly" dmr:version="2.0">
        <description>
          Physical transmission throughput (in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PhyRxThroughput" access="readOnly" dmr:version="2.0">
        <description>
          Physical reception throughput (in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RealPhyRxThroughput" access="readOnly" dmr:version="2.0">
        <description>
          Real Physical reception throughput (in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EstimatedPLR" access="readOnly" dmr:version="2.0">
        <description>
          Estimated PDU Loss Rate measurement between two devices (i.e. estimated {{units}} of MPDUs that have been  received with errors).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MeanEstimatedAtt" access="readOnly" dmr:version="2.0">
        <description>
          Mean estimated attenuation (i.e. channel loss between the local interface and the remote device). It is measured  in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SmartRouteIntermediatePLCMAC" access="readOnly" dmr:version="2.0">
        <description>
          Intermediate UPA adapter MAC address of the device that is acting as a relay to increase coverage in mesh scenarios. This is the MAC address of a third UPA device, with which the UPA interface is doing smart repeating in order to transmit data to the associated {{param|MACAddress}} UPA device. {{param}} will be empty when {{param|DirectRoute}} is {{true}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="DirectRoute" access="readOnly" dmr:version="2.0">
        <description>
          Route status, where {{true}} indicates ''direct'' and {{false}} indicates ''indirect''.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not this node is currently present in the UPA network.
          The ability to list inactive nodes is OPTIONAL.  If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}}  for each inactive node.  The length of time an inactive node remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA.Interface.{i}.ActiveNotch.{i}." access="readWrite" numEntriesParameter="ActiveNotchNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object contains the list of active notches of the UPA interface.
        A UPA device can have notches in its spectrum, where no power is transmitted in a given part of the spectrum. These notches are typically located in amateur radio bands, to avoid interference.
        Note: All {{object}} entries can be enabled/disabled as a group using the {{param|#.ActiveNotchEnable}} parameter.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the active notch entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="StartFreq" access="readWrite" dmr:version="2.0">
        <description>
          The initial frequency (in {{units}}) of a notch enabled in the spectrum of the local interface.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kHz"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="StopFreq" access="readWrite" dmr:version="2.0">
        <description>
          The final frequency (in {{units}}) of a notch enabled in the spectrum of the local interface.
        </description>
        <syntax>
          <unsignedInt>
            <units value="kHz"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Depth" access="readWrite" dmr:version="2.0">
        <description>
          The depth (in {{units}}) of a notch enabled in the spectrum of the local interface.
        </description>
        <syntax>
          <unsignedInt>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA.Interface.{i}.BridgeFor.{i}." access="readOnly" numEntriesParameter="BridgeForNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object represents the bridge table of the UPA interface. Each instance is a bridge table entry.
        It shows the MAC addresses of the remote UPA devices with their associated port number, and the MAC addresses of the end-devices (PCs, STBs, routers, etc) connected to Ethernet port of the powerline adapters with their associated logical port. In this way the system identifies to which UPA device an external device is connected to.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          MAC address of the device.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Port" access="readOnly" dmr:version="2.0">
        <description>
          Internal bridge associated port.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPA.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The UPA Diagnostics object.
      </description>
    </object>
    <object name="Device.UPA.Diagnostics.InterfaceMeasurement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object provides access to either a Signal-to-Noise-Ratio (SNR) Port Measurement test or a Channel Frequency Response (CFR) Port Measurement test. The {{param|Type}} parameter is used to select which type of test to perform.
        CFR and SNR measurements are done between a two UPA devices (a local interface and a remote device belonging to the same network).
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_InvalidPort" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the type of port measurement test to be carried out.  {{enum}}.
        </description>
        <syntax>
          <string>
            <enumeration value="SNR">
              <description>
                Signal-to-Noise-Ratio
              </description>
            </enumeration>
            <enumeration value="CFR">
              <description>
                Channel Frequency Response
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  This is the local UPA interface from which the test is to be performed.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".UPA.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.0">
        <description>
          PLC port being measured. This identifies which PLC connection to measure between the local interface (indicated by {{param|Interface}}) and the remote device (implied by {{param}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Measurements" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Result of Signal-to-Noise-Ratio measurement (if {{param|Type}} is {{enum|SNR|Type}}) or Channel Frequency Response measurement (if {{param|Type}} is {{enum|CFR|Type}}).
          List items indicate measurements per carrier for a PLC port (expressed in {{units}}).
        </description>
        <syntax>
          <list maxItems="1536"/>
          <unsignedInt>
            <units value="0.1dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RxGain" access="readOnly" dmr:version="2.0">
        <description>
          Reception gain of the adapter (expresssed in {{units}}).
        </description>
        <syntax>
          <int>
            <units value="dB"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The WiFi object is based on the WiFi Alliance 802.11 specifications ({{bibref|802.11-2007}}). It defines interface objects ({{object|Radio}} and {{object|SSID}}), and application objects ({{object|AccessPoint}} and {{object|EndPoint}}).
      </description>
      <parameter name="RadioNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SSIDNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AccessPointNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EndPointNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ResetCounter" access="readOnly" dmr:version="2.12">
        <description>
          This parameter counts the number of WiFi host or driver resets since the last device reset. This parameter is reset to zero after the device resets, and increments with each successive WiFi host or driver reset.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents a request to reset or reboot the WiFi sub-system without resetting or rebooting the device.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.Radio.{i}." access="readOnly" numEntriesParameter="RadioNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:fixedObject="true">
      <description>
        This object models an 802.11 wireless radio on a device (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        If the device can establish more than one connection simultaneously (e.g. a dual radio device), a separate {{object}} instance MUST be used for each physical radio of the device. See {{bibref|TR-181i2|Appendix III.1}} for additional information.
        Note: A dual-band single-radio device (e.g. an 802.11a/b/g radio) can be configured to operate at 2.4 or 5 GHz frequency bands, but only a single frequency band is used to transmit/receive at a given time. Therefore, a single {{object}} instance is used even for a dual-band radio.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the radio.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the radio (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the radio as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the radio entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since {{object}} is a layer 1 interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
          This parameter is DEPRECATED because it gives a wrong indication for multiple SSIDs. Use the {{param|#.SSID.{i}.Upstream}} parameter instead.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readOnly" dmr:version="2.0">
        <description>
          The maximum PHY bit rate supported by this interface (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SupportedFrequencyBands" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate the frequency bands at which the radio can operate.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="2.4GHz"/>
            <enumeration value="5GHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingFrequencyBand" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the frequency band at which the radio is operating.
          If the radio supports multiple bands, and {{param}} is changed, then all parameters whose value is not valid for the new frequency band (e.g. {{param|Channel}}) MUST be set to a valid value (according to some CPE vendor-specific behavior).
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedFrequencyBands"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedStandards" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items indicate which IEEE 802.11 standards this {{object}} instance can support simultaneously, in the frequency band specified by {{param|OperatingFrequencyBand}}.  {{enum}}
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|OperatingFrequencyBand}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|OperatingFrequencyBand}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="a">
              <description>
                {{bibref|802.11a-1999}}
              </description>
            </enumeration>
            <enumeration value="b">
              <description>
                {{bibref|802.11b-1999}}
              </description>
            </enumeration>
            <enumeration value="g">
              <description>
                {{bibref|802.11g-2003}}
              </description>
            </enumeration>
            <enumeration value="n">
              <description>
                {{bibref|802.11n-2009}}
              </description>
            </enumeration>
            <enumeration value="ac">
              <description>
                {{bibref|802.11ac-2013}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingStandards" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items indicate which IEEE 802.11 standard this {{object}} instance is configured for.
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|OperatingFrequencyBand}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|OperatingFrequencyBand}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
          For example, a value of "g,b" (or "b,g" - order is not important) means that the 802.11g standard {{bibref|802.11g-2003}} is used with a backwards-compatible mode for 802.11b {{bibref|802.11b-1999}}. A value of "g" means that only the 802.11g standard can be used.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="SupportedStandards"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleChannels" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent possible radio channels for the wireless standard (a, b, g, n) and the regulatory domain.
          Ranges in the form "n-m" are permitted.
          For example, for 802.11b and North America, would be "1-11".
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ChannelsInUse" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} List items represent channels that the radio determines to be currently in use (including any that it is using itself).
          Ranges in the form "n-m" are permitted.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readWrite" dmr:version="2.0">
        <description>
          The current radio channel used by the connection. To request automatic channel selection, set {{param|AutoChannelEnable}} to {{true}}.
          Whenever {{param|AutoChannelEnable}} is {{true}}, the value of the {{param}} parameter MUST be the channel selected by the automatic channel selection procedure.
          Note: Valid {{param}} values depend on the {{param|OperatingFrequencyBand}} and {{param|RegulatoryDomain}} values specified.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AutoChannelSupported" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether automatic channel selection is supported by this radio. If {{false}}, then {{param|AutoChannelEnable}} MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AutoChannelEnable" access="readWrite" dmr:version="2.0">
        <description>
          Enable or disable automatic channel selection.
          Set to {{false}} to disable the automatic channel selection procedure, in which case the currently selected channel remains selected.
          Set to {{true}} to enable the automatic channel selection procedure. This procedure MUST automatically select the channel, and MAY also change it subsequently.
          {{param}} MUST automatically change to {{false}} whenever the channel is manually selected, i.e. whenever the {{param|Channel}} parameter is written.
          Whenever {{param}} is {{true}}, the value of the {{param|Channel}} parameter MUST be the channel selected by the automatic channel selection procedure.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AutoChannelRefreshPeriod" access="readWrite" dmr:version="2.0">
        <description>
          The time period in {{units}} between two consecutive automatic channel selections. A value of 0 means that the automatic channel selection is done only at boot time.
          This parameter is significant only if {{param|AutoChannelEnable}} is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ChannelLastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The accumulated time in {{units}} since the current {{param|Channel}} came into use.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ChannelLastSelectionReason" access="readOnly" dmr:version="2.12">
        <description>
          The cause of the last channel selection.
        </description>
        <syntax>
          <string>
            <enumeration value="Manual">
              <description>
                Manual selection of the {{param|Channel}}.
              </description>
            </enumeration>
            <enumeration value="Auto_Startup">
              <description>
                Automatic channel selection procedure launched at radio startup.
              </description>
            </enumeration>
            <enumeration value="Auto_User">
              <description>
                Automatic channel selection procedure triggered by the user (e.g. via a GUI).
              </description>
            </enumeration>
            <enumeration value="Auto_Refresh">
              <description>
                Automatic channel selection procedure triggered by the {{param|AutoChannelRefreshPeriod}} timer.
              </description>
            </enumeration>
            <enumeration value="Auto_Dynamic">
              <description>
                Automatic channel selection procedure dynamically triggered to adjust to environmental interference.
              </description>
            </enumeration>
            <enumeration value="Auto_DFS">
              <description>
                Automatic channel selection procedure triggered by Dynamic Frequency Selection (DFS) {{bibref|ETSIBRAN}}.
              </description>
            </enumeration>
            <enumeration value="Unknown"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxSupportedSSIDs" access="readOnly" dmr:version="2.12">
        <description>
          Maximum number of SSIDs supported on this radio.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxSupportedAssociations" access="readOnly" dmr:version="2.12">
        <description>
          Maximum number of associated devices supported.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FirmwareVersion" access="readOnly" dmr:version="2.12">
        <description>
          This radio's WiFi firmware version.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedOperatingChannelBandwidths" access="readOnly" dmr:version="2.12">
        <description>
          {{list}}  These are the valid writable values for {{param|OperatingChannelBandwidth}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz">
              <description>
                wide mode
              </description>
            </enumeration>
            <enumeration value="80MHz">
              <description>
                802.11ac only
              </description>
            </enumeration>
            <enumeration value="160MHz">
              <description>
                802.11ac only
              </description>
            </enumeration>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingChannelBandwidth" access="readWrite" dmr:version="2.0">
        <description>
          The preferred channel bandwidth to be used (applicable to 802.11n and 802.11ac specifications only).
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedOperatingChannelBandwidths"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentOperatingChannelBandwidth" access="readOnly" dmr:version="2.11">
        <description>
          The channel bandwidth currently in use.
        </description>
        <syntax>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz"/>
            <enumeration value="80MHz"/>
            <enumeration value="160MHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExtensionChannel" access="readWrite" dmr:version="2.0">
        <description>
          The secondary extension channel position, applicable when operating in wide channel mode (i.e. when {{param|OperatingChannelBandwidth}} is set to {{enum|40MHz|OperatingChannelBandwidth}} or {{enum|Auto|OperatingChannelBandwidth}}).
        </description>
        <syntax>
          <string>
            <enumeration value="AboveControlChannel"/>
            <enumeration value="BelowControlChannel"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GuardInterval" access="readWrite" dmr:version="2.0">
        <description>
          The guard interval value between OFDM symbols (applicable to 802.11n and 802.11ac specifications only).
        </description>
        <syntax>
          <string>
            <enumeration value="400nsec"/>
            <enumeration value="800nsec"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MCS" access="readWrite" dmr:version="2.0">
        <description>
          The Modulation Coding Scheme index (applicable to 802.11n and 802.11ac specifications only). Values from 0 to 15 MUST be supported ({{bibref|802.11n-2009}}). Values from 0 to 9 MUST be supported for {{bibref|802.11ac-2013}}.  A value of -1 indicates automatic selection of the MCS index.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="15"/>
            <range minInclusive="16" maxInclusive="31"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="TransmitPowerSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent supported transmit power levels as {{units}} of full power. For example, "0,25,50,75,100".
          A -1 item indicates auto mode (automatic decision by CPE). Auto mode allows the ''Radio'' to adjust transmit power accordingly. For example, this can be useful for power-save modes such as EU-CoC, where the ''Radio'' can adjust power according to activity in the CPE.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <int>
            <range minInclusive="-1" maxInclusive="100"/>
            <units value="percentage"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="TransmitPower" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the current transmit power level as a {{units}} of full power. The value MUST be one of the values reported by the {{param|TransmitPowerSupported}} parameter. A value of -1 indicates auto mode (automatic decision by CPE).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="100"/>
            <units value="percentage"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="IEEE80211hSupported" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether IEEE 802.11h {{bibref|802.11h-2003}} functionality is supported by this radio. The value can be {{true}} only if the 802.11a or the 802.11n@5GHz standard is supported (i.e. {{param|SupportedFrequencyBands}} includes {{enum|5GHz|SupportedFrequencyBands}} and {{param|SupportedStandards}} includes {{enum|a|SupportedStandards}} and/or {{enum|n|SupportedStandards}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IEEE80211hEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether IEEE 802.11h functionality is enabled on this radio. The value can be {{true}} only if the 802.11a or the 802.11n@5GHz standard is supported and enabled (i.e. {{param|OperatingFrequencyBand}} is {{enum|5GHz|OperatingFrequencyBand}} and {{param|OperatingStandards}} includes {{enum|a|OperatingStandards}} and/or {{enum|n|OperatingStandards}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RegulatoryDomain" access="readWrite" dmr:version="2.0">
        <description>
          The 802.11d Regulatory Domain. First two octets are {{bibref|ISO3166-1}} two-character country code. The third octet is either " " (all environments), "O" (outside) or "I" (inside).
        </description>
        <syntax>
          <string>
            <size minLength="3" maxLength="3"/>
            <pattern value="[A-Z][A-Z][ OI]"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RetryLimit" access="readWrite" dmr:version="2.8">
        <description>
          The maximum number of retransmissions of a short packet i.e. a packet that is no longer than the {{param|RTSThreshold}}. This corresponds to IEEE 802.11 parameter ''dot11ShortRetryLimit''  {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CCARequest" access="readWrite" dmr:version="2.8">
        <description>
          A request for the clear channel assessment (CCA) report in the format specified in {{bibref|802.11-2012|Clause 8.4.2.23.3}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="11" maxLength="11"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="CCAReport" access="readOnly" dmr:version="2.8">
        <description>
          The clear channel assessment (CCA) report in the format specified in {{bibref|802.11-2012|Clause 8.4.2.24.3}}.
          When read, the value of this parameter MUST correspond to {{param|CCARequest}}.  How this is achieved is a local matter to the CPE.
          If this parameter is read before a CCARequest has been issued, then its value is {{empty}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="12" maxLength="12"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RPIHistogramRequest" access="readWrite" dmr:version="2.8">
        <description>
          A request for a received power indicator (RPI) histogram in the format specified in {{bibref|802.11-2012|Clause 8.4.2.23.4}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="11" maxLength="11"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RPIHistogramReport" access="readOnly" dmr:version="2.8">
        <description>
          Received power indicator (RPI) histogram report in the format specified in {{bibref|802.11-2012|Clause 8.4.2.24.4}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="19" maxLength="19"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="FragmentationThreshold" access="readWrite" dmr:version="2.8">
        <description>
          This specifies the current maximum size, in {{units}}, of the MPDU that can be delivered to the PHY. This parameter is based on ''dot11FragmentationThreshold'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RTSThreshold" access="readWrite" dmr:version="2.8">
        <description>
          This indicates the number of {{units}} in an MPDU, below which an RTS/CTS handshake is not performed. This parameter is based on ''dot11RTSThreshold'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LongRetryLimit" access="readWrite" dmr:version="2.8">
        <description>
          This indicates the maximum number of transmission attempts of a frame, the length of which is greater than {{param|RTSThreshold}}, that will be made before a failure condition is indicated. This parameter is based on ''dot11LongRetryLimit'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BeaconPeriod" access="readWrite" dmr:version="2.8">
        <description>
          Time interval between transmitting beacons (expressed in {{units}}). This parameter is based on ''dot11BeaconPeriod'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DTIMPeriod" access="readWrite" dmr:version="2.8">
        <description>
          This specifies the number of beacon intervals that elapse between transmission of Beacon frames containing a TIM element whose DTIM Count field is 0. This parameter is based on ''dot11DTIMPeriod'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketAggregationEnable" access="readWrite" dmr:version="2.8">
        <description>
          This determines whether or not packet aggregation (commonly called "frame aggregation") is enabled. This applies only to 802.11n.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PreambleType" access="readWrite" dmr:version="2.8">
        <description>
          The type of preamble. Longer preambles (more overhead) are needed by 802.11g to coexist with legacy systems 802.11 and 802.11b.
        </description>
        <syntax>
          <string>
            <enumeration value="short"/>
            <enumeration value="long"/>
            <enumeration value="auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BasicDataTransmitRates" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} The set of data rates, in ''Mbps'', that have to be supported by all stations that desire to join this BSS. The stations have to be able to receive and transmit at each of the data rates listed in {{param}}. For example, a value of "1,2", indicates that stations support 1 Mbps and 2 Mbps. Most control packets use a data rate in {{param}}.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OperationalDataTransmitRates" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} Maximum access point data transmit rates in ''Mbps'' for unicast frames (a superset of {{param|BasicDataTransmitRates}}). Given the value of {{param|BasicDataTransmitRates}} from the example above, {{param}} might be "1,2,5.5,11", indicating that unicast frames can additionally be transmitted at 5.5 Mbps and 11 Mbps.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SupportedDataTransmitRates" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Data transmit rates in ''Mbps'' for unicast frames at which the access point will permit a station to connect (a subset of {{param|OperationalDataTransmitRates}}). Given the values of {{param|BasicDataTransmitRates}} and {{param|OperationalDataTransmitRates}} from the examples above, {{param}} might be "1,2,5.5", indicating that the AP will only permit connections at 1 Mbps, 2 Mbps and 5.5 Mbps, even though it could theoretically accept connections at 11 Mbps.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.Radio.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface. Packet counters here count 802.11 WiFi frames. See {{bibref|TR-181i2a5|Appendix III}} for further details. The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2a5|Section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PLCPErrorCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received with a detected Physical Layer Convergence Protocol (PLCP) header error.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FCSErrorCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received with a detected FCS error. This parameter is based on dot11FCSErrorCount from {{bibref|802.11-2012|Annex C}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InvalidMACCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received with a detected invalid MAC header error.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsOtherReceived" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were received, but which were destined for a MAC address that is not associated with this interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Noise" access="readOnly" dmr:version="2.8">
        <description>
          An indicator of average noise strength received at this radio, measured in {{units}}. This measurement of non-IEEE 802.11 noise power is made by sampling the channel when virtual carrier sense indicates idle and this radio is neither transmitting nor receiving a frame.
        </description>
        <syntax>
          <int>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="TotalChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The total number of times that the {{param|#.Channel}} has changed since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ManualChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to manual channel selection since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoStartupChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure launched at radio startup since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoUserChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure triggered by the user (e.g. via a GUI) since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoRefreshChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure triggered by the {{param|#.AutoChannelRefreshPeriod}} timer since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoDynamicChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure dynamically triggered to adjust to environmental interference since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoDFSChannelChangeCount" access="readOnly" dmr:version="2.12">
        <description>
          The number of times that the {{param|#.Channel}} has changed due to automatic channel selection procedure triggered by DFS {{bibref|ETSIBRAN}} since the {{object|.WiFi.Radio}} entered its current operating state.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.NeighboringWiFiDiagnostic." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        This object defines access to other WiFi SSIDs that this device is able to receive.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Completed" access="readOnly" status="deprecated"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ResultNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.NeighboringWiFiDiagnostic.Result.{i}." access="readOnly" numEntriesParameter="ResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        Neighboring SSID table. This table models the other WiFi SSIDs that this device is able to receive.
      </description>
      <uniqueKey>
        <parameter ref="BSSID"/>
      </uniqueKey>
      <parameter name="Radio" access="readOnly" dmr:version="2.7">
        <description>
          The Radio that detected the neighboring WiFi SSID.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="Device.WiFi.Radio." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readOnly" dmr:version="2.7">
        <description>
          The current service set identifier in use by the neighboring WiFi SSID. The value MAY be empty for hidden SSIDs.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BSSID" access="readOnly" dmr:version="2.7">
        <description>
          The BSSID used for the neighboring WiFi SSID.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Mode" access="readOnly" dmr:version="2.7">
        <description>
          The mode the neighboring WiFi radio is operating in.
        </description>
        <syntax>
          <string>
            <enumeration value="AdHoc"/>
            <enumeration value="Infrastructure"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readOnly" dmr:version="2.7">
        <description>
          The current radio channel used by the neighboring WiFi radio.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SignalStrength" access="readOnly" dmr:version="2.7">
        <description>
          An indicator of radio signal strength (RSSI) of the neighboring WiFi radio measured in {{units}}, as an average of the last 100 packets received.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SecurityModeEnabled" access="readOnly" dmr:version="2.7">
        <description>
          The type of encryption the neighboring WiFi SSID advertises.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEP"/>
            <enumeration value="WPA"/>
            <enumeration value="WPA2"/>
            <enumeration value="WPA-WPA2"/>
            <enumeration value="WPA-Enterprise"/>
            <enumeration value="WPA2-Enterprise"/>
            <enumeration value="WPA-WPA2-Enterprise"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionMode" access="readOnly" dmr:version="2.7">
        <description>
          The type of encryption the neighboring WiFi SSID advertises.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="TKIP"/>
            <enumeration value="AES"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingFrequencyBand" access="readOnly" dmr:version="2.7">
        <description>
          Indicates the frequency band at which the radio this SSID instance is operating.
        </description>
        <syntax>
          <string>
            <enumeration value="2.4GHz"/>
            <enumeration value="5GHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedStandards" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} List items indicate which IEEE 802.11 standards this {{object}} instance can support simultaneously, in the frequency band specified by {{param|OperatingFrequencyBand}}. {{enum}}
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|OperatingFrequencyBand}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|OperatingFrequencyBand}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="a">
              <description>
                {{bibref|802.11a-1999}}
              </description>
            </enumeration>
            <enumeration value="b">
              <description>
                {{bibref|802.11b-1999}}
              </description>
            </enumeration>
            <enumeration value="g">
              <description>
                {{bibref|802.11g-2003}}
              </description>
            </enumeration>
            <enumeration value="n">
              <description>
                {{bibref|802.11n-2009}}
              </description>
            </enumeration>
            <enumeration value="ac">
              <description>
                {{bibref|802.11ac-2013}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingStandards" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} List items indicate which IEEE 802.11 standard that is detected for this {{object}}.
          Each value indicates support for the indicated standard.
          If {{param|OperatingFrequencyBand}} is set to {{enum|2.4GHz|##.Radio.{i}.SupportedFrequencyBands}}, only values {{enum|b}}, {{enum|g}}, {{enum|n}} are allowed.
          If {{param|OperatingFrequencyBand}} is set to {{enum|5GHz|##.Radio.{i}.SupportedFrequencyBands}}, only values {{enum|a}}, {{enum|n}}, {{enum|ac}} are allowed.
          For example, a value of "g,b" (or "b,g" - order is not important) means that the 802.11g standard {{bibref|802.11g-2003}} is used with a backwards-compatible mode for 802.11b {{bibref|802.11b-1999}}. A value of "g" means that only the 802.11g standard can be used.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="SupportedStandards"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperatingChannelBandwidth" access="readOnly" dmr:version="2.7">
        <description>
          Indicates the bandwidth at which the channel is operating.
        </description>
        <syntax>
          <string>
            <enumeration value="20MHz"/>
            <enumeration value="40MHz"/>
            <enumeration value="80MHz"/>
            <enumeration value="160MHz"/>
            <enumeration value="Auto"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BeaconPeriod" access="readOnly" dmr:version="2.7">
        <description>
          Time interval (in {{units}}) between transmitting beacons.
        </description>
        <syntax>
          <unsignedInt>
            <units value="ms"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Noise" access="readOnly" dmr:version="2.7">
        <description>
          Indicator of average noise strength (in {{units}}) received from the neighboring WiFi radio.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="BasicDataTransferRates" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} Basic data transmit rates (in Mbps) for the SSID.  For example, if {{param}} is "1,2", this indicates that the SSID is operating with basic rates of 1 Mbps and 2 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SupportedDataTransferRates" access="readOnly" dmr:version="2.7">
        <description>
          {{list}} Data transmit rates (in Mbps) for unicast frames at which the SSID will permit a station to connect. For example, if {{param}} is "1,2,5.5", this indicates that the SSID will only permit connections at 1 Mbps, 2 Mbps and 5.5 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DTIMPeriod" access="readOnly" dmr:version="2.7">
        <description>
          The number of beacon intervals that elapse between transmission of Beacon frames containing a TIM element whose DTIM count field is 0. This value is transmitted in the DTIM Period field of beacon frames. {{bibref|802.11-2012}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="ms"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.SSID.{i}." access="readWrite" numEntriesParameter="SSIDNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        WiFi SSID table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}), where table entries model the MAC layer. A WiFi SSID entry is typically stacked on top of a {{object|#.Radio}} object.
        WiFi SSID is also a multiplexing layer, i.e. more than one {{object}} can be stacked above a single {{object|#.Radio}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="BSSID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the SSID entry.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the SSID entry (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the SSID entry as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the SSID entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="BSSID" access="readOnly" dmr:version="2.0">
        <description>
          The Basic Service Set ID.
          This is the MAC address of the access point, which can either be local (when this instance models an access point SSID) or remote (when this instance models an end point SSID).
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The MAC address of this interface.
          If this instance models an access point SSID, {{param}} is the same as {{param||BSSID}}.
          Note: This is not necessarily the same as the Ethernet header source or destination MAC address, which is associated with the IP interface and is modeled via the {{param|.Ethernet.Link.{i}.MACAddress}} parameter.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readWrite" dmr:version="2.0">
        <description>
          The current service set identifier in use by the connection. The SSID is an identifier that is attached to packets sent over the wireless LAN that functions as an ID for joining a particular radio network (BSS).
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Upstream" access="readOnly" dmr:version="2.12">
        <description>
          Indicates whether the interface points towards the Internet ({{true}}) or towards End Devices ({{false}}).
          For example:
          * For an Internet Gateway Device, {{param}} will be {{true}} for all WAN interfaces and {{false}} for all LAN interfaces.
          * For a standalone WiFi Access Point that is connected via Ethernet to an Internet Gateway Device, {{param}} will be {{true}} for the Ethernet interface and {{false}} for the WiFi Radio interface.
          * For an End Device, {{param}} will be {{true}} for all interfaces.
          This parameter supersedes the deprecated {{param|#.Radio.{i}.Upstream}} parameter. If both exist, the parameter {{param|#.Radio.{i}.Upstream}} is ignored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.SSID.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface. Packet counters here count 802.11 WiFi frames. See {{bibref|TR-181i2a5|Appendix III}} for further details. The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2a5|Section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. These can be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.7">
        <description>
          The total number of transmitted packets which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailedRetransCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were not transmitted successfully due to the number of retransmission attempts exceeding an 802.11 retry limit. This parameter is based on dot11FailedCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RetryCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were successfully transmitted after one or more retransmissions. This parameter is based on dot11RetryCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MultipleRetryCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of packets that were successfully transmitted after more than one retransmission. This parameter is based on dot11MultipleRetryCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACKFailureCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of expected ACKs that were never received. This parameter is based on dot11ACKFailureCount from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AggregatedPacketCount" access="readOnly" dmr:version="2.7">
        <description>
          The number of aggregated packets that were transmitted. This applies only to 802.11n and 802.11ac.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}." access="readWrite" numEntriesParameter="AccessPointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object models an 802.11 connection from the perspective of a wireless access point. Each {{object}} entry is associated with a particular {{object|#.SSID}} interface instance via the {{param|SSIDReference}} parameter.
        For enabled table entries, if {{param|SSIDReference}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSIDReference"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this access point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this access point.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SSIDReference" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.SSID." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SSIDAdvertisementEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether or not beacons include the SSID name.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RetryLimit" access="readWrite" status="deprecated" dmr:version="2.0">
        <description>
          The maximum number of retransmission for a packet. This corresponds to IEEE 802.11 parameter ''dot11ShortRetryLimit''.
          This parameter is DEPRECATED because it is really a {{object|#.Radio}} attribute.  Use {{param|#.Radio.{i}.RetryLimit}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="WMMCapability" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether this access point supports WiFi Multimedia (WMM) Access Categories (AC).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDCapability" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether this access point supports WMM Unscheduled Automatic Power Save Delivery (U-APSD).
          Note: U-APSD support implies WMM support.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WMMEnable" access="readWrite" dmr:version="2.0">
        <description>
          Whether WMM support is currently enabled. When enabled, this is indicated in beacon frames.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDEnable" access="readWrite" dmr:version="2.0">
        <description>
          Whether U-APSD support is currently enabled. When enabled, this is indicated in beacon frames.
          Note: U-APSD can only be enabled if WMM is also enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxAssociatedDevices" access="readWrite" dmr:version="2.4">
        <description>
          The maximum number of devices that can simultaneously be connected to the access point.
          A value of 0 means that there is no specific limit.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IsolationEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables device isolation.
          A value of {{true}} means that the devices connected to the Access Point are isolated from all other devices within the home network (as is typically the case for a Wireless Hotspot).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" dmr:version="2.9">
        <description>
          Indicates whether or not MAC Address Control is enabled on this {{object|#}}.  MAC Address Control limits client devices to those whose hardware addresses match the {{param|AllowedMACAddress}} list.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AllowedMACAddress" access="readWrite" dmr:version="2.9">
        <description>
          Hardware addresses of client devices that are allowed to associate with this {{object|#}} if {{param|MACAddressControlEnabled}} is {{true}}.
        </description>
        <syntax>
          <list/>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxAllowedAssociations" access="readWrite" dmr:version="2.12">
        <description>
          Maximum number of associated devices allowed for this SSID. If the number is reached new device connections to this access point will be rejected.
          If the number is changed to a value less than the actual number of associated devices, new device connections will be rejected until the number of devices is below this number. It is not expected that any connections are dropped.
          If the parameter {{param|#.Radio.{i}.MaxSupportedAssociations}} exists, the value MUST be less than or equal to the maximum number specified in {{param|#.Radio.{i}.MaxSupportedAssociations}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains security related parameters that apply to a CPE acting as an Access Point {{bibref|802.11-2007}}.
      </description>
      <parameter name="ModesSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates which security modes this {{object|#}} instance is capable of supporting.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEP-64"/>
            <enumeration value="WEP-128"/>
            <enumeration value="WPA-Personal"/>
            <enumeration value="WPA2-Personal"/>
            <enumeration value="WPA-WPA2-Personal"/>
            <enumeration value="WPA-Enterprise"/>
            <enumeration value="WPA2-Enterprise"/>
            <enumeration value="WPA-WPA2-Enterprise"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModeEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates which security mode is enabled.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="ModesSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPKey" access="readWrite" dmr:version="2.0">
        <description>
          A WEP key expressed as a hexadecimal string.
          {{param}} is used only if {{param|ModeEnabled}} is set to {{enum|WEP-64|ModeEnabled}} or {{enum|WEP-128|ModeEnabled}}.
          A 5 byte {{param}} corresponds to security mode {{enum|WEP-64|ModeEnabled}} and a 13 byte {{param}} corresponds to security mode {{enum|WEP-128|ModeEnabled}}.
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size minLength="5" maxLength="5"/>
            <size minLength="13" maxLength="13"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="PreSharedKey" access="readWrite" dmr:version="2.0">
        <description>
          A literal PreSharedKey (PSK) expressed as a hexadecimal string.
          {{param}} is only used if {{param|ModeEnabled}} is set to {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}}.
          If {{param|KeyPassphrase}} is written, then {{param}} is immediately generated. The ACS SHOULD NOT set both the {{param|KeyPassphrase}} and the {{param}} directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size maxLength="32"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="2.0">
        <description>
          A passphrase from which the {{param|PreSharedKey}} is to be generated, for {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}} security modes.
          If {{param}} is written, then {{param|PreSharedKey}} is immediately generated. The ACS SHOULD NOT set both the {{param}} and the {{param|PreSharedKey}} directly (the result of doing this is undefined). The key is generated as specified by WPA, which uses PBKDF2 from PKCS #5: Password-based Cryptography Specification Version 2.0 ({{bibref|RFC2898}}).
        </description>
        <syntax hidden="true">
          <string>
            <size minLength="8" maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RekeyingInterval" access="readWrite" dmr:version="2.0">
        <description>
          The interval (expressed in {{units}}) in which the keys are re-generated.
          This is applicable to WPA, WPA2 and Mixed (WPA-WPA2) modes in Personal or Enterprise mode (i.e. when {{param|ModeEnabled}} is set to a value other than {{enum|None|ModeEnabled}} or {{enum|WEP-64|ModeEnabled}} or {{enum|WEP-128|ModeEnabled}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="3600"/>
        </syntax>
      </parameter>
      <parameter name="RadiusServerIPAddr" access="readWrite" dmr:version="2.0">
        <description>
          The IP Address of the RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryRadiusServerIPAddr " access="readWrite" dmr:version="2.5">
        <description>
          The IP Address of a secondary RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
          The client can forward requests to the secondary server in the event that the primary server is down or unreachable, or after a number of tries to the primary server fail, or in a round-robin fashion {{bibref|RFC2865}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="RadiusServerPort" access="readWrite" dmr:version="2.0">
        <description>
          The port number of the RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1812"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryRadiusServerPort" access="readWrite" dmr:version="2.5">
        <description>
          The port number of the secondary RADIUS server used for WLAN security. {{param}} is only applicable when {{param|ModeEnabled}} is an Enterprise type (i.e. {{enum|WPA-Enterprise|ModeEnabled}}, {{enum|WPA2-Enterprise|ModeEnabled}} or {{enum|WPA-WPA2-Enterprise|ModeEnabled}}).
          If this parameter is not implemented, the secondary RADIUS server will use the same port number as the primary RADIUS server.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1812"/>
        </syntax>
      </parameter>
      <parameter name="RadiusSecret" access="readWrite" dmr:version="2.0">
        <description>
          The secret used for handshaking with the RADIUS server {{bibref|RFC2865}}.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="SecondaryRadiusSecret" access="readWrite" dmr:version="2.5">
        <description>
          The secret used for handshaking with the secondary RADIUS server {{bibref|RFC2865}}.
          If this parameter is not implemented, the secondary RADIUS server will use the same secret as the primary RADIUS server.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="MFPConfig" access="readWrite" dmr:version="2.11">
        <description>
          Management Frame Protection configuration applicable when {{param|ModeEnabled}} is set to {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA2-Enterprise|ModeEnabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Optional"/>
            <enumeration value="Required"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.4">
        <description>
          When set to {{true}}, this {{object|#}} instance's WiFi security settings are reset to their factory default values. The affected settings include {{param|ModeEnabled}}, {{param|WEPKey}}, {{param|PreSharedKey}} , {{param|KeyPassphrase}} and {{param|#.WPS.PIN}} (if applicable).
          If the parameter cannot be set, the CPE MUST reject the request as an invalid parameter value. Possible failure reasons include a lack of default values or if {{param|ModeEnabled}} is an Enterprise type, i.e. {{enum|WPA-Enterprise|ModesSupported}}, {{enum|WPA2-Enterprise|ModesSupported}} or {{enum|WPA-WPA2-Enterprise|ModesSupported}}.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.WPS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters related to Wi-Fi Protected Setup for this access point (as specified in {{bibref|WPSv1.0}} or {bibref|WPSv2.0}}).
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables WPS functionality for this access point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsSupported" access="readOnly" dmr:version="2.0">
        <description>
          WPS configuration methods supported by the device. {{enum}}
          This parameter corresponds directly to the "Config Methods" attribute of {{bibref|WPS 2.0}}.
          The {{enum|USBFlashDrive}} and {{enum|Ethernet}} are only applicable in WPS 1.0 and are deprecated in WPS 2.x. The {{enum|PhysicalPushButton}}, {{enum|VirtualPushButton}}, {{enum|PhysicalDisplay}} and {{enum|VirtualDisplay}} are applicable to WPS 2.x only.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="USBFlashDrive"/>
            <enumeration value="Ethernet"/>
            <enumeration value="Label"/>
            <enumeration value="Display"/>
            <enumeration value="ExternalNFCToken"/>
            <enumeration value="IntegratedNFCToken"/>
            <enumeration value="NFCInterface"/>
            <enumeration value="PushButton"/>
            <enumeration value="PIN"/>
            <enumeration value="PhysicalPushButton"/>
            <enumeration value="PhysicalDisplay"/>
            <enumeration value="VirtualPushButton"/>
            <enumeration value="VirtualDisplay"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsEnabled" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Indicates WPS configuration methods enabled on the device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="ConfigMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.11">
        <description>
          {{list}} Indicates the current status of WPS. If the device goes to {{enum|SetupLocked}} the WPS needs to be disabled and re-enabled to come out of state.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Error"/>
            <enumeration value="Unconfigured"/>
            <enumeration value="Configured"/>
            <enumeration value="SetupLocked"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.11">
        <description>
          The Wi-Fi Simple Configuration version supported by the device, a string of the form ''m.n'' where ''m'' is the major version and ''n'' is the minor version.
          For example, a value of ''1.0'' denotes WSC 1.0 and a value of ''2.0'' denotes WSC 2.0.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PIN" access="readWrite" dmr:version="2.11">
        <description>
          Represents the Device PIN used for PIN based pairing between WPS peers. This PIN is either a four digit number or an eight digit number.
          {{hidden}}
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="8"/>
            <pattern value="\d{4}|\d{8}"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        A table of the devices currently associated with the access point.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The MAC address of an associated device.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="OperatingStandard" access="readOnly" dmr:version="2.10">
        <description>
          The operating standard that this associated device is connected with.
        </description>
        <syntax>
          <string>
            <enumeration value="a">
              <description>
                {{bibref|802.11a-1999}}
              </description>
            </enumeration>
            <enumeration value="b">
              <description>
                {{bibref|802.11b-1999}}
              </description>
            </enumeration>
            <enumeration value="g">
              <description>
                {{bibref|802.11g-2003}}
              </description>
            </enumeration>
            <enumeration value="n">
              <description>
                {{bibref|802.11n-2009}}
              </description>
            </enumeration>
            <enumeration value="ac">
              <description>
                {{bibref|802.11ac-2013}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="AuthenticationState" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Whether an associated device has authenticated ({{true}}) or not ({{false}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LastDataDownlinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the access point to the associated device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastDataUplinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the associated device to the access point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AssociationTime" access="readOnly" dmr:version="2.12">
        <description>
          Date and time in UTC when the device was associated
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="SignalStrength" access="readOnly" dmr:version="2.0">
        <description>
          An indicator of radio signal strength of the uplink from the associated device to the access point, measured in {{units}}, as an average of the last 100 packets received from the device.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Noise" access="readOnly" dmr:version="2.12">
        <description>
          An indicator of radio noise on the uplink from the associated device to the access point, measured in {{units}}, as an average of the last 100 packets received from the device (see ANPI definition in {{bibref|802.11-2012|Clause 10.11.9.4}})
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Retransmissions" access="readOnly" dmr:version="2.0">
        <description>
          The number of {{units}} that had to be re-transmitted, from the last 100 packets sent to the associated device. Multiple re-transmissions of the same packet count as one.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="packets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not this node is currently present in the WiFi AccessPoint network.
          The ability to list inactive nodes is OPTIONAL. If the CPE includes inactive nodes in this table, {{param}} MUST be set to {{false}} for each inactive node. The length of time an inactive node remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.AssociatedDevice.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        These count bytes or packets sent to, or received from, this Associated Device, which is a WiFi station associated to this access point. Packet counters here count 802.11 WiFi frames.
        The CPE MUST reset these {{object}} parameters (unless otherwise stated in individual object or parameter descriptions) either when the {{param|##.Status}} of the parent {{object|##}} object transitions from {{enum|Disabled|##.Status}} to {{enum|Enabled|##.Status}}, or when it transitions from {{enum|Enabled|##.Status}} to {{enum|Disabled|##.Status}}.
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of bytes transmitted to the Associated Device, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of bytes received from the Associated Device, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of packets transmitted to the Associated Device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of packets received from the Associated Device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound packets that could not be transmitted because of errors. These might be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The total number of transmitted packets which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="FailedRetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The number of packets that were not transmitted successfully due to the number of retransmission attempts exceeding an 802.11 retry limit. This parameter is based on ''dot11FailedCount'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="RetryCount" access="readOnly" dmr:version="2.8">
        <description>
          The number of packets that were successfully transmitted after one or more retransmissions. This parameter is based on ''dot11RetryCount'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MultipleRetryCount" access="readOnly" dmr:version="2.8">
        <description>
          The number of packets that were successfully transmitted after more than one retransmission. This parameter is based on ''dot11MultipleRetryCount'' from {{bibref|802.11-2012}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.AC.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="2.8">
      <description>
        This object contains parameters related to WiFi QoS for different 802.11e access categories (priorities). Access categories are: BE, BK, VI, and VO. These parameters can help control and monitor 802.11e Enhanced distributed channel access (EDCA). The size of this table is fixed, with four entries which are identified by the {{param|AccessCategory}} parameter as follows:
        * BE (Best Effort)
        * BK (Background)
        * VI (Video)
        * VO (Voice)
      </description>
      <uniqueKey>
        <parameter ref="AccessCategory"/>
      </uniqueKey>
      <parameter name="AccessCategory" access="readOnly" dmr:version="2.8">
        <description>
          This identifies the access category.
        </description>
        <syntax>
          <string>
            <enumeration value="BE"/>
            <enumeration value="BK"/>
            <enumeration value="VI"/>
            <enumeration value="VO"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="AIFSN" access="readWrite" dmr:version="2.8">
        <description>
          Arbitration Inter Frame Spacing (Number). This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Minimum). This encodes the values of CWMin as an exponent: CWMin = 2^ECWMin - 1. For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Maximum). This encodes the values of CWMax as an exponent: CWMax = 2^ECWMax - 1. For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxOpMax" access="readWrite" dmr:version="2.8">
        <description>
          Maximum transmit opportunity, in multiples of {{units}}. A TXOP time interval of 0 means it is limited to a single MAC protocol data unit (MPDU).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="32 microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" dmr:version="2.8">
        <description>
          Ack Policy, where False="Do Not Acknowledge" and True="Acknowledge"
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramIntervals" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} Definition of the histogram intervals for counting the transmit queue length in packets. Each value indicates the maximum value of the interval. For example, "0,1,4,8," defines the five intervals: 0 packets in queue, 1 packet in queue, 2 to 4 packets in queue, 5 to 8 packets in queue, and 9 or more packets in queue. (No value after the last comma means no upper bound.) If this parameter is set to {{empty}}, no {{param|Stats.OutQLenHistogram}} stats will be collected.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramSampleInterval" access="readWrite" dmr:version="2.8">
        <description>
          The time between recording samples of the current transmit queue in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.AC.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object contains statistics for different 802.11e access categories (priorities).
        Packet counters here count 802.11 WiFi frames.
        If there are not separate stats for each access category, (e.g., 802.11e is not used and there is only one queue), then only access category 0 = BE applies (e.g., the statistics for the single queue are in access category 0 = BE).
        The CPE MUST reset the Access Point's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the Access Point becomes operationally down due to a previous administrative down (i.e. the Access Point's Status parameter transitions to a Diasbled state) or when the Access Point becomes administratively up (i.e. the Access Point's Enable parameter transitions from false to true). Administrative and operational status is discussed in [Section 4.2.2/TR-181i2].
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category that could not be transmitted because of errors. These might be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The total number of transmitted {{units}} in this access category which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogram" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Histogram of the total length of the transmit queue of this access category in packets (1 packet, 2 packets, etc.) according to the intervals defined by {{param|#.OutQLenHistogramIntervals}}, with samples taken each {{param|#.OutQLenHistogramSampleInterval}}. Example: "12,5,1,0,2,0,0,1".
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.AccessPoint.{i}.Accounting." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        This object contains the parameters related to RADIUS accounting functionality for the access point.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables accounting functionality for the access point.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServerIPAddr" access="readWrite" dmr:version="2.5">
        <description>
          The IP Address of the RADIUS accounting server.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryServerIPAddr" access="readWrite" dmr:version="2.5">
        <description>
          The IP Address of a secondary RADIUS accounting server.
          The client can forward requests to the secondary server in the event that the primary server is down or unreachable, or after a number of tries to the primary server fail, or in a round-robin fashion. {{bibref|RFC2866}}
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ServerPort" access="readWrite" dmr:version="2.5">
        <description>
          The port number of the RADIUS server used for accounting. The default port is 1813 as defined in {{bibref|RFC2866}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1813"/>
        </syntax>
      </parameter>
      <parameter name="SecondaryServerPort" access="readWrite" dmr:version="2.5">
        <description>
          The port number of the secondary RADIUS server used for accounting. The default port is 1813 as defined in {{bibref|RFC2866}}.
          If this parameter is not implemented, the secondary RADIUS server will use the same port number as the primary RADIUS server.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="1813"/>
        </syntax>
      </parameter>
      <parameter name="Secret" access="readWrite" dmr:version="2.5">
        <description>
          The secret used for handshaking with the RADIUS accounting server {{bibref|RFC2865}}.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="SecondarySecret" access="readWrite" dmr:version="2.5">
        <description>
          The secret used for handshaking with the secondary RADIUS accounting server {{bibref|RFC2865}}.
          If this parameter is not implemented, the secondary RADIUS server will use the same secret as the primary RADIUS server.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
      <parameter name="InterimInterval" access="readWrite" dmr:version="2.5">
        <description>
          Specifies the default interim accounting interval in {{units}}, which is used for service accounting when the ''Acct-Interim-Interval'' attribute is not configured. {{bibref|RFC2869|Section 2.1}}
          The value MUST NOT be smaller than 60.  The value SHOULD NOT be smaller than  600, and careful consideration should be given to its impact on network traffic {{bibref|RFC2869|Section 5.16}}.
          A value of 0 means no interim accounting messages are sent.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="0"/>
            <range minInclusive="60"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}." access="readWrite" numEntriesParameter="EndPointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object models an 802.11 connection from the perspective of a wireless end point. Each {{object}} entry is associated with a particular {{object|#.SSID}} interface instance via the {{param|SSIDReference}} parameter, and an associated active {{object|Profile}} instance via the {{param|ProfileReference}} parameter. The active profile is responsible for specifying the actual SSID and security settings used by the end point.
        For enabled table entries, if {{param|SSIDReference}} or {{param|ProfileReference}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSIDReference"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this end point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this end point.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="ProfileReference" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This is the currently active profile, which specifies the SSID and security settings to be used by the end point.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="Profile." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SSIDReference" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}} {{param}} is determined based on the {{param|Profile.{i}.SSID}} within the associated {{param|ProfileReference}}) endpoint profile. {{param}} MUST be {{empty}} if {{param|ProfileReference}} is {{empty}} (i.e. only when an active profile is assigned can the associated SSID interface be determined).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.SSID." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ProfileNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this end point.
      </description>
      <parameter name="LastDataDownlinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the access point to the end point device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="600000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastDataUplinkRate" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The data transmit rate in {{units}} that was most recently used for transmission from the end point to the access point device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="600000"/>
            <units value="kbps"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SignalStrength" access="readOnly" dmr:version="2.0">
        <description>
          An indicator of radio signal strength of the downlink from the access point to the end point, measured in {{units}}, as an average of the last 100 packets received from the device.
        </description>
        <syntax>
          <int>
            <range minInclusive="-200" maxInclusive="0"/>
            <units value="dBm"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Retransmissions" access="readOnly" dmr:version="2.0">
        <description>
          The number of {{units}} that had to be re-transmitted, from the last 100 packets sent to the access point. Multiple re-transmissions of the same packet count as one.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="packets"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains security related parameters that apply to a WiFi end point {{bibref|802.11-2007}}.
      </description>
      <parameter name="ModesSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates which security modes this {{object|#}} instance is capable of supporting.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="None"/>
            <enumeration value="WEP-64"/>
            <enumeration value="WEP-128"/>
            <enumeration value="WPA-Personal"/>
            <enumeration value="WPA2-Personal"/>
            <enumeration value="WPA-WPA2-Personal"/>
            <enumeration value="WPA-Enterprise"/>
            <enumeration value="WPA2-Enterprise"/>
            <enumeration value="WPA-WPA2-Enterprise"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.Profile.{i}." access="readWrite" numEntriesParameter="ProfileNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        EndPoint Profile table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSID"/>
        <parameter ref="Location"/>
        <parameter ref="Priority"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this Profile.
          When there are multiple WiFi EndPoint Profiles, e.g. each instance supports a different SSID and/or different security configuration, this parameter can be used to control which of the instances are currently enabled.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this Profile.  {{enum}}
          The {{enum|Active}} value is reserved for the instance that is actively connected. The {{enum|Available}} value represents an instance that is not currently active, but is also not disabled or in error. The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Active"/>
            <enumeration value="Available"/>
            <enumeration value="Error" optional="true"/>
            <enumeration value="Disabled"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readWrite" dmr:version="2.0">
        <description>
          The profile identifier in use by the connection. The SSID is an identifier that is attached to packets sent over the wireless LAN that functions as an ID for joining a particular radio network (BSS).
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Location" access="readWrite" dmr:version="2.0">
        <description>
          Location of the profile. This value serves as a reminder from the user, describing the location of the profile. For example: "Home", "Office", "Neighbor House", "Airport", etc. An empty string is also valid.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readWrite" dmr:version="2.0">
        <description>
          The profile Priority defines one of the criteria used by the End Point to automatically select the "best" AP when several APs with known profiles are simultaneously available for association.
          In this situation, the End Point has to select the AP with the higher priority in its profile. If there are several APs with the same priority, providing different SSID or the same SSID, then the wireless end point has to select the APs according to other criteria like signal quality, SNR, etc.
          0 is the highest priority.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.Profile.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains security related parameters that apply to a WiFi End Point profile {{bibref|802.11-2007}}.
      </description>
      <parameter name="ModeEnabled" access="readWrite" dmr:version="2.0">
        <description>
          Indicates which security mode is enabled.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="##.Security.ModesSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPKey" access="readWrite" dmr:version="2.0">
        <description>
          A WEP key expressed as a hexadecimal string.
          {{param}} is used only if {{param|ModeEnabled}} is set to {{enum|WEP-64|ModeEnabled}} or {{enum|WEP-128|ModeEnabled}}.
          A 5 byte {{param}} corresponds to security mode {{enum|WEP-64|ModeEnabled}} and a 13 byte {{param}} corresponds to security mode {{enum|WEP-128|ModeEnabled}}.
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size minLength="5" maxLength="5"/>
            <size minLength="13" maxLength="13"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="PreSharedKey" access="readWrite" dmr:version="2.0">
        <description>
          A literal PreSharedKey (PSK) expressed as a hexadecimal string.
          {{param}} is only used if {{param|ModeEnabled}} is set to {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}}.
          If {{param|KeyPassphrase}} is written, then {{param}} is immediately generated. The ACS SHOULD NOT set both the {{param|KeyPassphrase}} and the {{param}} directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <hexBinary>
            <size maxLength="32"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" dmr:version="2.0">
        <description>
          A passphrase from which the {{param|PreSharedKey}} is to be generated, for {{enum|WPA-Personal|ModeEnabled}} or {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA-WPA2-Personal|ModeEnabled}} security modes.
          If {{param}} is written, then {{param|PreSharedKey}} is immediately generated. The ACS SHOULD NOT set both the {{param}} and the {{param|PreSharedKey}} directly (the result of doing this is undefined). The key is generated as specified by WPA, which uses PBKDF2 from PKCS #5: Password-based Cryptography Specification Version 2.0 {{bibref|RFC2898}}.
        </description>
        <syntax hidden="true">
          <string>
            <size minLength="8" maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MFPConfig" access="readWrite" dmr:version="2.11">
        <description>
          Management Frame Protection configuration applicable when {{param|ModeEnabled}} is set to {{enum|WPA2-Personal|ModeEnabled}} or {{enum|WPA2-Enterprise|ModeEnabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Optional"/>
            <enumeration value="Required"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.WPS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters related to Wi-Fi Protected Setup {{bibref|WPSv1.0}} for this end point.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables WPS functionality for this end point.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsSupported" access="readOnly" dmr:version="2.0">
        <description>
          WPS configuration methods supported by the device. {{enum}}
          This parameter corresponds directly to the "Config Methods" attribute of {{bibref|WPS 2.0}}.
          The {{enum|USBFlashDrive}} and {{enum|Ethernet}} are only applicable in WPS 1.0 and are deprecated in WPS 2.x. The {{enum|PhysicalPushButton}}, {{enum|VirtualPushButton}}, {{enum|PhysicalDisplay}} and {{enum|VirtualDisplay}} are applicable to WPS 2.x only.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="USBFlashDrive"/>
            <enumeration value="Ethernet"/>
            <enumeration value="Label"/>
            <enumeration value="Display"/>
            <enumeration value="ExternalNFCToken"/>
            <enumeration value="IntegratedNFCToken"/>
            <enumeration value="NFCInterface"/>
            <enumeration value="PushButton"/>
            <enumeration value="PIN"/>
            <enumeration value="PhysicalPushButton"/>
            <enumeration value="PhysicalDisplay"/>
            <enumeration value="VirtualPushButton"/>
            <enumeration value="VirtualDisplay"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsEnabled" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Indicates the WPS configuration methods enabled on the device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="ConfigMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.11">
        <description>
          {{list}} Indicates the current status of WPS in EndPoint.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Error"/>
            <enumeration value="Unconfigured"/>
            <enumeration value="Configured"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.11">
        <description>
          The Wi-Fi Simple Configuration version supported by the device, a string of the form ''m.n'' where ''m'' is the major version and ''n'' is the minor version.
          For example, a value of ''1.0'' denotes WSC 1.0 and a value of ''2.0'' denotes WSC 2.0.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PIN" access="readWrite" dmr:version="2.11">
        <description>
          Represents the Device PIN used for PIN based pairing between WPS peers. This PIN is either a four digit number or an eight digit number.
          {{hidden}}
        </description>
        <syntax hidden="true">
          <unsignedInt>
            <range minInclusive="4" maxInclusive="4"/>
            <range minInclusive="8" maxInclusive="8"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.AC.{i}." access="readOnly" minEntries="4" maxEntries="4" dmr:version="2.8">
      <description>
        This object contains parameters related to WiFi QoS for different 802.11e access categories (priorities). Access categories are: BE, BK, VI, and VO. These parameters can help control and monitor 802.11e Enhanced distributed channel access (EDCA). The size of this table is fixed, with four entries which are identified by the {{param|AccessCategory}} parameter as follows:
        * BE (Best Effort)
        * BK (Background)
        * VI (Video)
        * VO (Voice)
      </description>
      <uniqueKey>
        <parameter ref="AccessCategory"/>
      </uniqueKey>
      <parameter name="AccessCategory" access="readOnly" dmr:version="2.8">
        <description>
          This identifies the access category.
        </description>
        <syntax>
          <string>
            <enumeration value="BE"/>
            <enumeration value="BK"/>
            <enumeration value="VI"/>
            <enumeration value="VO"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="AIFSN" access="readWrite" dmr:version="2.8">
        <description>
          Arbitration Inter Frame Spacing (Number). This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Minimum). This encodes the values of CWMin as an exponent: CWMin = 2^ECWMin - 1. For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" dmr:version="2.8">
        <description>
          Exponent of Contention Window (Maximum). This encodes the values of CWMax as an exponent: CWMax = 2^ECWMax - 1. For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255, (expressed in {{units}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TxOpMax" access="readWrite" dmr:version="2.8">
        <description>
          Maximum transmit opportunity, in multiples of {{units}}. A TXOP time interval of 0 means it is limited to a single MAC protocol data unit (MPDU).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="32 microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" dmr:version="2.8">
        <description>
          Ack Policy, where False="Do Not Acknowledge" and True="Acknowledge"
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramIntervals" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} Definition of the histogram intervals for counting the transmit queue length in packets. Each value indicates the maximum value of the interval. For example, "0,1,4,8," defines the five intervals: 0 packets in queue, 1 packet in queue, 2 to 4 packets in queue, 5 to 8 packets in queue, and 9 or more packets in queue. (No value after the last comma means no upper bound.) If this parameter is set to an empty string, no {{param|Stats.OutQLenHistogram}} stats will be collected.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogramSampleInterval" access="readWrite" dmr:version="2.8">
        <description>
          The time between recording samples of the current transmit queue {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.WiFi.EndPoint.{i}.AC.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object contains statistics for different 802.11e access categories (priorities).
        Packet counters here count 802.11 WiFi frames.
        If there are not separate stats for each access category, (e.g., 802.11e is not used and there is only one queue), then only access category 0 = BE applies (e.g., the statistics for the single queue are in access category 0 = BE).
        The CPE MUST reset the EndPoint's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the EndPoint becomes operationally down due to a previous administrative down (i.e. the EndPoint's Status parameter transitions to a Diasbled state) or when the EndPoint becomes administratively up (i.e. the EndPoint's Enable parameter transitions from false to true). Administrative and operational status is discussed in [Section 4.2.2/TR-181i2].
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} transmitted in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received in this access category.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category that could not be transmitted because of errors. These might be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of outbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of inbound {{units}} in this access category which were chosen to be discarded even though no errors had been detected to prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.8">
        <description>
          The total number of transmitted {{units}} in this access category which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OutQLenHistogram" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Histogram of the total length of the transmit queue of this access category in packets (1 packet, 2 packets, etc.) according to the intervals defined by {{param|#.OutQLenHistogramIntervals}}, with samples taken each {{param|#.OutQLenHistogramSampleInterval}}. Example: "12,5,1,0,2,0,0,1"
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        Top level object for ZigBee capabilities based on the {{bibref|ZigBee2007}} specification.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ZDONumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        ZigBee interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models the ZigBee interface of a ZigBee end device, ZigBee router or ZigBee coordinator.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="ZDOReference"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables the interface. This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.7">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.7">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.7">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IEEEAddress" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.7">
        <description>
          The IEEE address assigned to this interface.  A value of "FF:FF:FF:FF:FF:FF:FF:FF"  indicates that this address is unknown.  This parameter has the same value as the {{param|.ZigBee.ZDO.{i}.IEEEAddress}} parameter of the ZDO instance {{param|ZDOReference}} is pointing to.
        </description>
        <syntax>
          <dataType ref="IEEE_EUI64"/>
        </syntax>
      </parameter>
      <parameter name="NetworkAddress" access="readOnly" dmr:version="2.7">
        <description>
          The ZigBee network address assigned to this interface.  This parameter has the same value as the {{param|.ZigBee.ZDO.{i}.NetworkAddress}} parameter of the ZDO instance {{param|ZDOReference}} is pointing to.
        </description>
        <syntax>
          <dataType ref="ZigBeeNetworkAddress"/>
        </syntax>
      </parameter>
      <parameter name="ZDOReference" access="readOnly" dmr:version="2.7">
        <description>
          The ZigBee Device Object assigned to this interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".ZigBee.ZDO." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}}  received on the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} sent transmitted out of the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received by the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} discarded by interface due to any error.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} requested for transmission which were chosen to be discarded even though no errors had been detected to prevent the {{units}} being transmitted.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received which were chosen to be discarded even though no errors had been detected to prevent their being delivered.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} requested for transmission which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received which were addressed to a multicast address at this layer and delivered by this layer to a higher layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} requested for transmission which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received which were addressed to a broadcast address at this layer and delivered by this layer to a higher layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="UnknownPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The total number of {{units}} received which were discarded because of an unknown or unsupported protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="ZigBee packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.Interface.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="AssociatedDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        This table provides information about other ZigBee devices that are directly accessible via this interface.
        {{keys}}
        It is possible that instances of this object have the same key value when the value of {{param|IEEEAddress}} parameter is "FF:FF:FF:FF:FF:FF:FF:FF" and the ZigBee Coordinators on two or more separate area networks assign the same value for the {{param|NetworkAddress}}. This is because the ZigBee specification describes only intra-area network topologies {{bibref|ZigBee2007|Section 1.1.4 Network Topology}}. As such if two or more {{object}} instances have the same key value the implemenation is undefined.
      </description>
      <uniqueKey>
        <parameter ref="IEEEAddress"/>
        <parameter ref="NetworkAddress"/>
      </uniqueKey>
      <parameter name="IEEEAddress" access="readOnly" dmr:version="2.7">
        <description>
          The IEEE address assigned to this device. A value of "FF:FF:FF:FF:FF:FF:FF:FF"  indicates that this address is unknown.
        </description>
        <syntax>
          <dataType ref="IEEE_EUI64"/>
        </syntax>
      </parameter>
      <parameter name="NetworkAddress" access="readOnly" dmr:version="2.7">
        <description>
          The ZigBee network address assigned to this device.
        </description>
        <syntax>
          <dataType ref="ZigBeeNetworkAddress"/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.7">
        <description>
          Whether or not this device is currently present in the ZigBee network as defined in {{bibref|ZigBee2007|section 2.4.4.1}}.
          The ability to list inactive devices is OPTIONAL. If the CPE includes inactive devices in this table, {{param}} MUST be set to {{false}}  for each inactive device. The length of time an inactive device remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ZDOReference" access="readOnly" dmr:version="2.7">
        <description>
          The ZigBee Device Object assigned to this interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".ZigBee.ZDO." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}." access="readOnly" numEntriesParameter="ZDONumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        ZigBee Device Object (ZDO) provides management capabilities of the ZigBee Application Support  (APS) and Network (NWK) layers of a ZigBee Device as defined in {{bibref|ZigBee2007|section 2.5}}.
        {{keys}}
        It is possible that instances of this object have the same key value when the value of {{param|IEEEAddress}} parameter is "FF:FF:FF:FF:FF:FF:FF:FF" and the ZigBee Coordinators on two or more separate area networks assign the same value for the {{param|NetworkAddress}}. This is because the ZigBee specification describes only intra-area network topologies {{bibref|ZigBee2007|Section 1.1.4 Network Topology}}. As such if two or more {{object}} instances have the same key value the implemenation is undefined
      </description>
      <uniqueKey>
        <parameter ref="IEEEAddress"/>
        <parameter ref="NetworkAddress"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IEEEAddress" access="readOnly" dmr:version="2.7">
        <description>
          The IEEE address assigned to this device. A value of "FF:FF:FF:FF:FF:FF:FF:FF"  indicates that this address is unknown.
        </description>
        <syntax>
          <dataType ref="IEEE_EUI64"/>
        </syntax>
      </parameter>
      <parameter name="NetworkAddress" access="readOnly" dmr:version="2.7">
        <description>
          The ZigBee network address assigned to this device.
        </description>
        <syntax>
          <dataType ref="ZigBeeNetworkAddress"/>
        </syntax>
      </parameter>
      <parameter name="BindingTableNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="GroupNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ApplicationEndpointNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.NodeDescriptor." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} object describes the node capabilities of the ZigBee device as defined in {{bibref|ZigBee2007|section 2.3.2.3 Node Descriptor}}.
      </description>
      <parameter name="LogicalType" access="readOnly" dmr:version="2.7">
        <description>
          The type of ZigBee device that is extracted from the Logical Type Field as defined in {{bibref|ZigBee2007|Table 2.29}}.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="ZC">
              <description>
                ZigBee Coordinator
              </description>
            </enumeration>
            <enumeration value="ZR">
              <description>
                ZigBee Router
              </description>
            </enumeration>
            <enumeration value="ZED">
              <description>
                ZigBee End Device
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ComplexDescriptorSupported" access="readOnly" dmr:version="2.7">
        <description>
          When {{true}}, specifies that the {{object|#.ComplexDescriptor}} object is supported for this ZigBee device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UserDescriptorSupported" access="readOnly" dmr:version="2.7">
        <description>
          When {{true}}, specifies that the {{object|#.UserDescriptor}} object is supported for this ZigBee device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="FrequencyBand" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the frequency bands that are supported by the underlying IEEE 802.15.4 radio utilized by the ZigBee device.
          {{list}} {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="868-868.6">
              <description>
                The 868-868.6 MHz Band
              </description>
            </enumeration>
            <enumeration value="902-928">
              <description>
                The 902-928 MHz Band
              </description>
            </enumeration>
            <enumeration value="2400-2483.5">
              <description>
                The 2400-2483.5 MHz Band
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACCapability" access="readOnly" dmr:version="2.7">
        <description>
          Specifies  the IEEE 802.15.4-2003 MAC sub-layer capabilities for this ZigBee device.
          {{list}} {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="AlternatePANCoordinator">
              <description>
                Alternate PAN Coordinator
              </description>
            </enumeration>
            <enumeration value="FFD">
              <description>
                Full Function Device
              </description>
            </enumeration>
            <enumeration value="MainsPowerSource">
              <description>
                The current power source is mains power
              </description>
            </enumeration>
            <enumeration value="OnWhenIdle">
              <description>
                The receiver is on when idle
              </description>
            </enumeration>
            <enumeration value="SecureCommunication">
              <description>
                Secure communication is enabled
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufactureCode" access="readOnly" dmr:version="2.7">
        <description>
          Specifies a manufacturer code that is allocated by the ZigBee Alliance, relating the manufacturer to the device.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumBufferSize" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the maximum buffer size, in {{units}}, of the network sub-layer data unit (NSDU) for this ZigBee device.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="128"/>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumIncomingTransferSize" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the maximum size, in {{units}}, of the application sub-layer data unit (ASDU) that can be transferred to this ZigBee device in one single message transfer.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="32768"/>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumOutgoingTransferSize" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the maximum size, in {{units}}, of the application sub-layer data unit (ASDU) that can be transferred from this ZigBee device in one single message transfer.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="32768"/>
            <units value="octets"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ServerMask" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the system server capabilities of this ZigBee device.
          {{list}} {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="PrimaryTrustCenter"/>
            <enumeration value="PrimaryBindingTableCache"/>
            <enumeration value="BackupBindingTableCache"/>
            <enumeration value="PrimaryDiscoveryCache"/>
            <enumeration value="BackupDiscoveryCache"/>
            <enumeration value="NetworkManager"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DescriptorCapability" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the descriptor capabilities of this ZigBee device.
          {{list}} {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="ExtendedActiveEndpointListAvailable"/>
            <enumeration value="ExtendedSimpleDescriptorListAvailable"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.PowerDescriptor." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} object describes the power capabilities of the ZigBee device as defined in {{bibref|ZigBee2007|section 2.3.2.4 Node Power Descriptor}}.
      </description>
      <parameter name="CurrentPowerMode" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the current sleep/power-saving mode of the ZigBee device.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Synchronized"/>
            <enumeration value="Periodic"/>
            <enumeration value="Manual"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AvailablePowerSource" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the power sources available on this ZigBee device.
          {{list}} {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Constant">
              <description>
                Constant (mains) power
              </description>
            </enumeration>
            <enumeration value="Rechargeable">
              <description>
                Rechargable battery
              </description>
            </enumeration>
            <enumeration value="Disposable">
              <description>
                Disposable battery
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentPowerSource" access="readOnly" dmr:version="2.7">
        <description>
          The current power source field specifies the current power source being utilized by the node.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Constant">
              <description>
                Constant (mains) power
              </description>
            </enumeration>
            <enumeration value="Rechargeable">
              <description>
                Rechargable battery
              </description>
            </enumeration>
            <enumeration value="Disposable">
              <description>
                Disposable battery
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentPowerSourceLevel" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the level of charge of the current power source.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Critical">
              <description>
                Critical battery state
              </description>
            </enumeration>
            <enumeration value="33">
              <description>
                Battery state is 33 percent
              </description>
            </enumeration>
            <enumeration value="66">
              <description>
                Battery state is 66 percent
              </description>
            </enumeration>
            <enumeration value="100">
              <description>
                Battery state is 100 percent
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.UserDescriptor." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7" dmr:noUniqueKeys="true">
      <description>
        The {{object}} object is an optional descriptor that describes user defined capabilities of the ZigBee device as defined in {{bibref|ZigBee2007|section 2.3.2.7 User Descriptor}}. The {{object}} object contains information that allows the user to identify the device using a user-friendly character string, such as "Bedroom TV" or "Stairs Light".
      </description>
      <parameter name="DescriptorAvailable" access="readOnly" dmr:version="2.7">
        <description>
          When {{true}}, the User Descriptor recorded has been received from the target device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the information that allows the user to identify the ZigBee device using a user-friendly character string, such as "Bedroom TV" or "Stairs light".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.ComplexDescriptor." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7" dmr:noUniqueKeys="true">
      <description>
        The {{object}} object is an optional descriptor that describes extended capabilities of the ZigBee device as defined in {{bibref|ZigBee2007|section 2.3.2.6 Complex Descriptor}}.
      </description>
      <parameter name="DescriptorAvailable" access="readOnly" dmr:version="2.7">
        <description>
          When {{true}}, the Complex Descriptor recorded has been received from the target device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Language" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the ISO 639-1 language code as defined in {{bibref|ISO639-1}}.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CharacterSet" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the ISO 646 character set as defined in {{bibref|ISO646-1991}}.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ManufacturerName" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the name of the manufacturer of the ZigBee device.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the name of the manufacturer's model of the ZigBee device.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the manufacturer's serial number of the ZigBee device.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DeviceURL" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the URL through which more information relating to the ZigBee device can be obtained.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Icon" access="readOnly" dmr:version="2.7">
        <description>
          The icon field contains an octet string which carries the data for an icon that can represent the ZigBee device.  The format of the icon MUST be a 32-by-32-pixel PNG image.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="IconURL" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the URL through which the icon for the ZigBee device can be obtained.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} object provides the configuration capabilities needed to perform the Security Management functionality defined in {{bibref|ZigBee2007|section 4 Security Management}}.
      </description>
      <parameter name="TrustCenterAddress" access="readOnly" dmr:version="2.7">
        <description>
          Specifies the IEEE address of a special device trusted by devices within a ZigBee network to distribute keys for the purpose of network and end-to-end application configuration management.
        </description>
        <syntax>
          <dataType ref="IEEE_EUI64"/>
        </syntax>
      </parameter>
      <parameter name="SecurityLevel" access="readOnly" dmr:version="2.7">
        <description>
          Specifies how an outgoing frame is to be secured, how an incoming frame purportedly has been secured; it also indicates whether or not the payload is encrypted and to what extent data authenticity over the frame is provided, as reflected by the length of the message integrity code (MIC).
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="MIC-32"/>
            <enumeration value="MIC-64"/>
            <enumeration value="MIC-128"/>
            <enumeration value="ENC"/>
            <enumeration value="ENC-MIC-32"/>
            <enumeration value="ENC-MIC-64"/>
            <enumeration value="ENC-MIC-128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TimeOutPeriod" access="readOnly" dmr:version="2.7">
        <description>
          The period of time, in {{units}}, that this ZigBee device will wait for an expected security protocol frame.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.Network." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} object provides the configuration capabilities needed to by a ZigBee Device to operate within a ZigBee Area Network as defined in {{bibref|ZigBee2007|section 2.5.2.4 Network Manager}}.
      </description>
      <parameter name="NeighborNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.Network.Neighbor.{i}." access="readOnly" numEntriesParameter="NeighborNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        The {{object}} object provides the configuration capabilities needed to by a ZigBee Device to operate within a ZigBee Area Network as defined in {{bibref|ZigBee2007|section 2.5.2.4 Network Manager}}.
      </description>
      <uniqueKey>
        <parameter ref="Neighbor"/>
      </uniqueKey>
      <parameter name="Neighbor" access="readOnly" dmr:version="2.7">
        <description>
          Neighbor of this ZigBee device. The value MUST be the path name of a row in the ZigBee.ZDO table. If the referenced row is deleted then this entry MUST be deleted.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".ZigBee.ZDO." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LQI" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The LQI field specified link quality identification (LQI) for neighbor ZigBee device.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Relationship" access="readOnly" dmr:version="2.7">
        <description>
          The relationship between the neighbor and this device.{{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Parent"/>
            <enumeration value="Child"/>
            <enumeration value="PrevChild"/>
            <enumeration value="Sibling"/>
            <enumeration value="None"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PermitJoin" access="readOnly" dmr:version="2.7">
        <description>
          An indication of whether the neighbor device is accepting join requests.{{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Accepting"/>
            <enumeration value="NotAccepting"/>
            <enumeration value="Unknown"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Depth" access="readOnly" dmr:version="2.7">
        <description>
          The tree depth of the neighbor device. A value of 0x00 indicates that the device is the ZigBee coordinator for the network.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.NodeManager." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} object describes the configuration capabilities related for remote management of the ZigBee Area Network as defined in {{bibref|ZigBee2007|section 2.5.2.6 Node Manager}}.
      </description>
      <parameter name="RoutingTableNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.NodeManager.RoutingTable.{i}." access="readOnly" numEntriesParameter="RoutingTableNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.7" dmr:noUniqueKeys="true">
      <description>
        The {{object}} object describes the route table as defined in {{bibref|ZigBee2007|table 3.51 Routing Table Entry}}.
      </description>
      <uniqueKey>
        <parameter ref="DestinationAddress"/>
      </uniqueKey>
      <parameter name="DestinationAddress" access="readOnly" dmr:version="2.7">
        <description>
          The ZigBee network address of this route.
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
            <pattern value="([0-9A-Fa-f]){4}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NextHopAddress" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          Specifies the network address of the next hop ZigBee device on the way to the destination ZigBee device.
        </description>
        <syntax>
          <dataType ref="ZigBeeNetworkAddress"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          The status of the route entry. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Active"/>
            <enumeration value="DiscoveryUnderway"/>
            <enumeration value="DiscoveryFailed"/>
            <enumeration value="Inactive"/>
            <enumeration value="ValidationUnderway"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MemoryConstrained" access="readOnly" dmr:version="2.7">
        <description>
          A flag indicating whether the device is a memory constrained concentrator.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ManyToOne" access="readOnly" dmr:version="2.7">
        <description>
          A flag indicating that the destination is a concentrator that issued a many to-one request.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RouteRecordRequired" access="readOnly" dmr:version="2.7">
        <description>
          A flag indicating that a route record command frame should be sent to the destination prior to the next data packet.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.Binding.{i}." access="readWrite" numEntriesParameter="BindingTableNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        The {{object}} object describes the configuration capabilities related to maintaining a ZigBee Device's Binding Table as defined in {{bibref|ZigBee2007|section 2.2.8.2 Binding}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables the use of this binding on the device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SourceEndpoint" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the source endpoint used in this binding entry.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="240"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SourceAddress" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the source address used in this binding entry.
        </description>
        <syntax>
          <dataType ref="IEEE_EUI64"/>
        </syntax>
      </parameter>
      <parameter name="ClusterId" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the cluster identifier used in this binding entry.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DestinationAddressMode" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the type of destination address used for this binding entry. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Group"/>
            <enumeration value="Endpoint"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DestinationEndpoint" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the destination endpoint for the binding entry. The value of this field is valid when the value of the {{param|DestinationAddressMode}} is {{enum|Endpoint|DestinationAddressMode}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="240"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IEEEDestinationAddress" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the IEEE destination address for this binding entry. The value of this field is valid when the value of the {{param|DestinationAddressMode}} is {{enum|Endpoint|DestinationAddressMode}}.
        </description>
        <syntax>
          <dataType ref="IEEE_EUI64"/>
        </syntax>
      </parameter>
      <parameter name="GroupDestinationAddress" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the group destination address for this binding entry. The value of this field is valid when the value of the {{param|DestinationAddressMode}} is {{enum|Group|DestinationAddressMode}}.
        </description>
        <syntax>
          <dataType ref="ZigBeeNetworkAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.Group.{i}." access="readWrite" numEntriesParameter="GroupNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        The {{object}} object describes the configuration capabilities related to maintaining a ZigBee Device's Group Table as defined in {{bibref|ZigBee2007|section 2.5.2.7 Group Manager}}.
      </description>
      <uniqueKey>
        <parameter ref="GroupId"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables the use of this group on the device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="GroupId" access="readWrite" dmr:version="2.7">
        <description>
          The Group Identifier for this object as defined in {{bibref|ZigBee2007|table 2.25 Group Table Entry Format}}.
        </description>
        <syntax>
          <dataType ref="ZigBeeNetworkAddress"/>
        </syntax>
      </parameter>
      <parameter name="EndpointList" access="readWrite" dmr:version="2.7">
        <description>
          The list of application endpoints assigned as a member of this {{object}} object.
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".ZigBee.ZDO.{i}.ApplicationEndpoint." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.ApplicationEndpoint.{i}." access="readWrite" numEntriesParameter="ApplicationEndpointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        The {{object}} object describes the application endpoint as defined in {{bibref|ZigBee2007|section 2.1.2 Application Framework}}.
      </description>
      <uniqueKey>
        <parameter ref="EndpointId"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables the use of this application endpoint on the device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="EndpointId" access="readWrite" dmr:version="2.7">
        <description>
          The Endpoint Identifier for this object as defined in {{bibref|ZigBee2007|section 2.1.2 Application Framework}}.
          An {{object}} with an {{param}} value of 0 is designated as the device application: This is a special application that is responsible for device operation and contains logic to manage the device's networking and general maintenance features.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="240"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.ZDO.{i}.ApplicationEndpoint.{i}.SimpleDescriptor." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} object contains the attributes of the Simple Descriptor of an application endpoint, as defined in {{bibref|ZigBee2007|section 2.3.2.5 Simple Descriptor}}.
      </description>
      <parameter name="ProfileId" access="readWrite" dmr:version="2.7">
        <description>
          Specifies the application profile that is supported on this endpoint. Application profiles are agreements for messages, message formats, andprocessing actions that enable developers to create an interoperable, distributed application employing application entities that reside on separate ZigBee devices. These application profiles enable applications to send commands, request data, and process commands and requests as defined in {{bibref|ZigBee2007|section 2.1.2.1 Application Profiles}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DeviceId" access="readOnly" dmr:version="2.7">
        <description>
          Application device identifier, as defined in {{bibref|ZigBee2007|section 2.3.2.5.3 Application Device Identifier Field}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DeviceVersion" access="readOnly" dmr:version="2.7">
        <description>
          Application device version, as defined in {{bibref|ZigBee2007|section 2.3.2.5.4 Application Device Version Field}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="InputClusterList" access="readWrite" dmr:version="2.7">
        <description>
          {{list}} Specifies the input cluster identifiers to be matched by the ZigBee coordinator by remote Zigbee device's output cluster list for this {{object}} object.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="OutputClusterList" access="readWrite" dmr:version="2.7">
        <description>
          {{list}} Specifies the output cluster identifiers to be matched by the ZigBee coordinator by remote Zigbee device's input cluster list for this {{object}} object.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.Discovery." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        This object is used for managing the discovery of ZigBee devices within a ZigBee Area Network. ZigBee Devices are discovered via the {{object|#.ZDO}} instance associated with the ZigBee Coordinator of an Area Network.
      </description>
      <parameter name="AreaNetworkNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.ZigBee.Discovery.AreaNetwork.{i}." access="readWrite" numEntriesParameter="AreaNetworkNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        This object specifies the ZigBee devices that are discovered by the {{param|Coordinator}}.
        As the ZigBee specification does not provide a discovery protocol between the CWMP proxy and the ZigBee coordinator, the {{object}} object is provisioned and not discovered.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Coordinator"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables discovery of the ZigBee devices in this {{object}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.7">
        <description>
          The date and time when this {{object}} or its member devices (i.e., the devices with ZDOs listed in {{param|ZDOList}}) were updated due to a discovery operation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.7">
        <description>
          The status of the current discovery operation.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Indeterminate">
              <description>
                The discovery operation has not been executed and there are no valid discovery results available)
              </description>
            </enumeration>
            <enumeration value="InProgress"/>
            <enumeration value="Success"/>
            <enumeration value="Error"/>
            <enumeration value="Error_Timeout" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Coordinator" access="readWrite" dmr:version="2.7">
        <description>
          The Fully Qualified Domain Name (FQDN) or IP address of the ZigBee Coordinator.  The coordinator MAY be located within the CPE. In this scenario the ACS or CPE MAY use the value of "localhost".
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ZDOReference" access="readOnly" dmr:version="2.7">
        <description>
          The ZDO object for this device that is used to discover the ZigBee capabilities of attached devices.
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".ZigBee.ZDO." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ZDOList" access="readOnly" dmr:version="2.7">
        <description>
          The list of ZDO objects discovered in this Area Network by the ZigBee Coordinator.
          {{reference}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".ZigBee.ZDO." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Layer 2 bridging configuration. Specifies bridges between different layer 2 interfaces. Bridges can be defined to include layer 2 filter criteria to selectively bridge traffic between interfaces.
        This object can be used to configure both 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2011}} bridges.
        Not all 802.1D and 802.1Q features are modeled, and some additional features not present in either 802.1D or 802.1Q are modeled.
        802.1Q {{bibref|802.1Q-2011}} bridges incorporate 802.1Q {{bibref|802.1Q-2005}} customer and 802.1ad {{bibref|802.1ad-2005}} provider bridges.
      </description>
      <parameter name="MaxBridgeEntries" access="readOnly" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|.Bridging.Bridge}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxDBridgeEntries" access="readOnly" dmr:version="2.0">
        <description>
          The maximum number of 802.1D {{bibref|802.1D-2004}} entries available in the {{object|.Bridging.Bridge}} table.  A positive value for this parameter implies support for 802.1D.
          There is no guarantee that this many 802.1D Bridges can be configured. For example, the CPE might not be able simultaneously to  support both 802.1D and 802.1Q Bridges.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxQBridgeEntries" access="readOnly" dmr:version="2.0">
        <description>
          The maximum number of 802.1Q {{bibref|802.1Q-2011}} entries available in the {{object|.Bridging.Bridge}} table. A non-zero value for this parameter implies support for 802.1Q.
          There is no guarantee that this many 802.1Q Bridges can be configured. For example, the CPE might not be able simultaneously to support both 802.1D and 802.1Q Bridges.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxVLANEntries" access="readOnly" dmr:version="2.0">
        <description>
          The maximum number of 802.1Q {{bibref|802.1Q-2011}} VLANs supported per {{object|.Bridging.Bridge}} table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxProviderBridgeEntries" access="readOnly" dmr:version="2.7">
        <description>
          The maximum number of entries available in the {{object|.Bridging.ProviderBridge}} table. A non-zero value for this parameter implies support for 802.1Q Provider Bridges.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ProviderBridgeNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxFilterEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|Filter}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgeNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Bridge.{i}." access="readWrite" numEntriesParameter="BridgeNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Bridge table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this {{object}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this {{object}}.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Standard" access="readWrite" dmr:version="2.0">
        <description>
          Selects the standard supported by this Bridge table entry.
        </description>
        <syntax>
          <string>
            <enumeration value="802.1D-2004">
              <description>
                {{bibref|802.1D-2004}}
              </description>
            </enumeration>
            <enumeration value="802.1Q-2005">
              <description>
                {{bibref|802.1Q-2005}}
              </description>
            </enumeration>
            <enumeration value="802.1Q-2011">
              <description>
                The {{object}} provides support for at least one feature defined in {{bibref|802.1Q-2011}} that was not defined in {{bibref|802.1Q-2005}}.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="PortNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VLANNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VLANPortNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Bridge.{i}.Port.{i}." access="readWrite" numEntriesParameter="PortNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Bridge Port table, which MUST contain an entry for each bridge port (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        There are two types of bridge ports: management (upward facing) and non-management (downward facing). This is determined by configuring the Boolean {{param|ManagementPort}} parameter. The CPE will automatically configure each management bridge port to appear in the interface stack above all non-management bridge ports that share the same {{object|##.Bridge}} instance.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the bridge port.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the bridge port (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then this parameter SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then this parameter SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the bridge port as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the bridge port entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          When {{param|ManagementPort}} is set to {{true}} the CPE MUST set {{param}} to reference all non-management bridge ports that are within the same {{object|##.Bridge}} instance (and update {{param}} when subsequent non-management bridge ports are added or deleted on that ''Bridge''). The ACS SHOULD NOT set {{param}} in this case.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ManagementPort" access="readWrite" dmr:version="2.0">
        <description>
          If {{true}} then the entry is a management (upward facing) bridge port rather than a non-management (downward facing) bridge port. For a given {{object|##.Bridge}} instance, each management bridge port appears in the interface stack above all non-management bridge ports. The concept of Management Port is discussed in {{bibref|802.1Q-2005|chapter 8}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" dmr:version="2.7">
        <description>
          The type of bridge port as defined in 802.1Q {{bibref|802.1Q-2011|Section 17 IEEE8021BridgePortType}}.
          Enumeration of:
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="ProviderNetworkPort">
              <description>
                Indicates this {{object}} is an S-TAG aware port of a {{object|##.ProviderBridge}}.
              </description>
            </enumeration>
            <enumeration value="CustomerNetworkPort">
              <description>
                Indicates this {{object}} is an S-TAG aware port of a {{object|##.ProviderBridge}}.
              </description>
            </enumeration>
            <enumeration value="CustomerEdgePort">
              <description>
                Indicates this {{object}} is an C-TAG aware port of a {{object|##.ProviderBridge}}.
              </description>
            </enumeration>
            <enumeration value="CustomerVLANPort">
              <description>
                Indicates this {{object}} is an C-TAG aware port of a Customer Bridge.
              </description>
            </enumeration>
            <enumeration value="VLANUnawarePort">
              <description>
                Indicates this {{object}} is a VLAN unaware member of an {{enum|802.1D-2004|#.Standard}} bridge.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultUserPriority" access="readWrite" dmr:version="2.0">
        <description>
          Bridge Port Default User Priority.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PriorityRegeneration" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items represent user priority regeneration values for each ingress user priority on this Bridge  Port.
        </description>
        <syntax>
          <list minItems="8" maxItems="8"/>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
          <default type="object" value="0,1,2,3,4,5,6,7"/>
        </syntax>
      </parameter>
      <parameter name="PortState" access="readOnly" dmr:version="2.0">
        <description>
          Bridge Port state as defined in 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2011}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Blocking"/>
            <enumeration value="Listening"/>
            <enumeration value="Learning"/>
            <enumeration value="Forwarding"/>
            <enumeration value="Broken"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="PVID" access="readWrite" dmr:version="2.0">
        <description>
          PVID (or Port VID) is the VLAN ID with which an untagged or priority tagged frame that arrives on this port will be associated (i.e. default Port VLAN ID as defined in 802.1Q {{bibref|802.1Q-2011}}).
          For an 802.1D Bridge {{bibref|802.1D-2004}}, this parameter MUST be ignored.
        </description>
        <syntax>
          <int>
            <range minInclusive="1" maxInclusive="4094"/>
          </int>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="TPID" access="readWrite" dmr:version="2.7">
        <description>
          The Tag Protocol Identifier (TPID) assigned to this {{object}}. The TPID is an EtherType value used to identify the frame as a tagged frame.
          Standard {{bibref|802.1Q-2011|Table 9.1}} TPID values are:
          *S-TAG 0x88A8 = 34984
          *C-TAG 0x8100 = 33024
          Non-Standard TPID values are:
          *S-TAG 0x9100 = 37120
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="33024"/>
        </syntax>
      </parameter>
      <parameter name="AcceptableFrameTypes" access="readWrite" dmr:version="2.0">
        <description>
          Indicates which types of frame arriving on this port will be admitted to the bridge (i.e. Bridge Port acceptable frame types as defined in 802.1Q {{bibref|802.1Q-2011}}).  {{enum}}
          For an 802.1D {{bibref|802.1D-2004}} Bridge, the value of this parameter MUST be {{enum|AdmitAll}}.
        </description>
        <syntax>
          <string>
            <enumeration value="AdmitAll"/>
            <enumeration value="AdmitOnlyVLANTagged" optional="true"/>
            <enumeration value="AdmitOnlyPrioUntagged" optional="true"/>
          </string>
          <default type="object" value="AdmitAll"/>
        </syntax>
      </parameter>
      <parameter name="IngressFiltering" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables Ingress Filtering as defined in 802.1Q {{bibref|802.1Q-2011}}. If enabled ({{true}}), causes frames arriving on this port to be discarded if the port is not in the VLAN ID's member set (which is configured via the {{object|#.VLANPort}} table).
          For an 802.1D {{bibref|802.1D-2004}} Bridge, the value of this parameter MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ServiceAccessPrioritySelection" access="readWrite" dmr:version="2.7">
        <description>
          This parameter controls the Service Access Priority selection function as described in {{bibref|802.1Q-2011|section 6.13}}.
          The parameter is applicable to deployments of {{object|##.Bridge}} instances that are referenced by {{param|###.Bridging.ProviderBridge.{i}.SVLANcomponent}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ServiceAccessPriorityTranslation" access="readWrite" dmr:version="2.7">
        <description>
          {{list}} List items represent service access priority translation values for each ingress priority on this {{object}} as described in {{bibref|802.1Q-2011|section 6.13}}.
          The parameter is applicable to deployments of {{object|##.Bridge}} instances that are referenced by {{param|###.Bridging.ProviderBridge.{i}.SVLANcomponent}}.
        </description>
        <syntax>
          <list minItems="8" maxItems="8"/>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
          <default type="object" value="0,1,2,3,4,5,6,7"/>
        </syntax>
      </parameter>
      <parameter name="PriorityTagging" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables priority tagging on this Bridge Port.
          When {{true}}, egress frames leaving this interface will be priority tagged with the frame's associated priority value, which will either be derived directly from the ingress frame or else set via {{param|.QoS.Classification.{i}.EthernetPriorityMark}}.
          When {{false}}, egress frames leaving this interface will be untagged.
          The parameter does not affect reception of ingress frames.
          Only applies on bridge ports that are untagged member of one or more VLAN's.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Bridge.{i}.Port.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Bridge.{i}.Port.{i}.PriorityCodePoint." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        {{object}} provides the management control for the processing of the Priority Code Point (PCP) field for the 802.1Q header as defined in {{bibref|802.1Q-2011|section 6.9.3 Priority Code Point Encoding}}.
        The object is applicable to deployments of  {{object|####.Bridging.ProviderBridge}} where the {{object|###.Bridge}} instance is referenced by {{param|####.Bridging.ProviderBridge.{i}.SVLANcomponent}} or {{param|####.Bridging.ProviderBridge.{i}.CVLANcomponents}} parameters.
      </description>
      <parameter name="PCPSelection" access="readWrite" dmr:version="2.7">
        <description>
          This parameter identifies the row in the {{param|PCPEncoding}} and {{param|PCPDecoding}} parameter lists. The value of 1 points to the 8P0D row in the corresponding parameter lists.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="4"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="UseDEI" access="readWrite" dmr:version="2.7">
        <description>
          This parameter controls the processing of the drop_eligible field and is described in {{bibref|802.1Q-2011|section 6.9.3}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="RequireDropEncoding" access="readWrite" dmr:version="2.7">
        <description>
          This parameter controls the processing of the encoding or decoding of the drop_eligible component in the PCP field and is described in {{bibref|802.1Q-2011|section 8.6.7}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PCPEncoding" access="readWrite" dmr:version="2.7">
        <description>
          This parameter provides the management control for the processing of the encoding of the Priority Code Point (PCP) field for the 802.1Q header as defined in {{bibref|802.1Q-2011|section 6.9.3 Priority Code Point Encoding}} and {{bibref|802.1Q-2011|Table 6-3}}.
          The list is an ordered list that contains entries for the following 4 PCP Values: "8P0D","7P1D", "6P2D" "5P3D".  Each list entry matches the following pattern:
          {{pattern}}
          The value of this parameter MUST use square brackets to protect comma separators within nested lists.  For example, this corresponds to Table 6-3 (mentioned above):
          : [7,7,6,6,5,5,4,4,3,3,2,2,1,1,0,0],[7,7,6,6,5,4,5,4,3,3,2,2,1,1,0,0],[7,7,6,6,5,4,5,4,3,2,3,2,1,1,0,0],[7,7,6,6,5,4,5,4,3,2,3,2,1,0,1,0]
        </description>
        <syntax>
          <list minItems="4" maxItems="4"/>
          <string>
            <size minLength="31" maxLength="31"/>
            <pattern value="([0-7],){15}[0-7]">
              <description>
                PCP for each priority and drop_eligible field (7, 7DE, 6, 6DE, ..., 1, 1DE, 0, 0DE)
              </description>
            </pattern>
          </string>
        </syntax>
      </parameter>
      <parameter name="PCPDecoding" access="readWrite" dmr:version="2.7">
        <description>
          This parameter provides the management control for the processing of the decoding of the Priority Code Point (PCP) field for the 802.1Q header as defined in {{bibref|802.1Q-2011|section 6.9.3 Priority Code Point Encoding}} and {{bibref|802.1Q-2011|Table 6-4}}.
          The list is an ordered list that contains entries for the following 4 PCP Values: "8P0D","7P1D", "6P2D" "5P3D".  Each list entry matches the following pattern:
          {{pattern}}
          The value of this parameter MUST use square brackets to protect comma separators within nested lists.  For example, this corresponds to Table 6-4 (mentioned above):
          : [7,0,6,0,5,0,4,0,3,0,2,0,1,0,0,0],[7,0,6,0,4,0,4,1,3,0,2,0,1,0,0,0],[7,0,6,0,4,0,4,1,2,0,2,1,1,0,0,0],[7,0,6,0,4,0,4,1,2,0,2,1,0,0,0,1]
        </description>
        <syntax>
          <list minItems="4" maxItems="4"/>
          <string>
            <size minLength="15" maxLength="15"/>
            <pattern value="([0-7],[0-1],){7}[0-7],[0-1]">
              <description>
                Priority (0-7) and drop_eligible field (0-1) for each PCP value (7, 6, ..., 1, 0).
              </description>
            </pattern>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Bridge.{i}.VLAN.{i}." access="readWrite" numEntriesParameter="VLANNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Bridge VLAN table.  If this table is supported, if MUST contain an entry for each VLAN known to the Bridge.
        This table only applies to an 802.1Q {{bibref|802.1Q-2011}} Bridge.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="VLANID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this VLAN table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.0">
        <description>
          Human-readable name for this VLAN table entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANID" access="readWrite" dmr:version="2.0">
        <description>
          VLAN ID of the entry.
        </description>
        <syntax>
          <int>
            <range minInclusive="1" maxInclusive="4094"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Bridge.{i}.VLANPort.{i}." access="readWrite" numEntriesParameter="VLANPortNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Bridge VLAN egress port and untagged port membership table.
        This table only applies to an 802.1Q {{bibref|802.1Q-2011}} Bridge.
        Note: The {{object}} table includes unique key parameters that are strong references. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="VLAN"/>
        <parameter ref="Port"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="VLAN" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  Specifies the VLAN for which port membership is expressed.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.VLAN." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  Specifies the bridge port that is member of the VLAN.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Port." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Untagged" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables untagged port membership to the VLAN and determines whether egress frames for this VLAN are sent untagged or tagged.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Filter table containing classification filter entries, each of which expresses a set of classification criterion to classify ingress frames as member of a {{object|#.Bridge}} instance or a {{object|#.Bridge.{i}.VLAN}} instance.
        Bridge VLAN classification only applies for 802.1Q {{bibref|802.1Q-2011}} Bridges.
        For enabled table entries, if {{param|Bridge}} or {{param|Interface}} is {{empty}} then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Several of this object's parameters specify DHCP option values. Some cases are version neutral (the parameter can apply to both DHCPv4 and DHCPv6), but in other cases the representation of the option is different for DHCPv4 and DHCPv6, so it is necessary to define separate DHCPv4-specific and DHCPv6-specific parameters. Therefore, an instance of this object that uses DHCP option values as filter criteria will be associated with either DHCPv4 or DHCPv6, as indicated by the {{param|DHCPType}} parameter.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this Filter table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this Filter table entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
          If the Bridge Port table is supported, but none of its entries correspond to {{param|Interface}}, or if such an entry exists  but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
          If the Bridge VLAN table is supported, but none of its entries correspond to {{param|VLANIDFilter}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Bridge" access="readWrite" dmr:version="2.0">
        <description>
          {{reference|a {{object|.Bridging.Bridge}} object in case of a 802.1D bridge or a {{object|.Bridging.Bridge.{i}.VLAN}} object in case of a 802.1Q bridge}}  Note: either way, this identifies the bridge (because each bridge has a VLAN table).
          Defines the Bridge or Bridge VLAN to which ingress frames will be classified based upon matches of the classification criteria.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Bridge. #.Bridge.{i}.VLAN." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.0">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each ingress frame on the {{param|Interface}}, the highest ordered entry that matches the filter criteria is applied. All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value.  A deletion causes {{param}} values to be compacted.  When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}  This MUST relate to the same bridge as does {{param|Bridge}}.
          Defines the Bridge Port on which ingress frame classification will occur.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Bridge.{i}.Port." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DHCPType" access="readWrite" dmr:version="2.2">
        <description>
          The DHCP protocol associated with the {{object}} instance. Affects only parameters that specify DHCP option values as filter criteria (all such parameter descriptions note this fact).  {{enum}}
          If {{param}} is {{enum|DHCPv4}}, then {{object}} parameters that are DHCPv6-specific are ignored. If {{param}} is {{enum|DHCPv6}}, then {{object}} parameters that are DHCPv4-specific are ignored.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
          </string>
          <default type="object" value="DHCPv4"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          The 802.1Q {{bibref|802.1Q-2011}} VLAN ID.
          For an 802.1D {{bibref|802.1D-2004}} Bridge, which has no concept of VLANs, the VLAN ID MUST be ''0''.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4094"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="EthertypeFilterList" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          {{list}} Each list item represents an Ethertype value.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on  Ethertype.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <unsignedInt/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="EthertypeFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge is defined to admit only those packets that match one of the {{param|EthertypeFilterList}} entries (in either the Ethernet or SNAP Type header).  If the {{param|EthertypeFilterList}} is empty, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge is defined to admit all packets except those  packets that match one of the {{param|EthertypeFilterList}} entries (in either the Ethernet or SNAP Type header).  If the  {{param|EthertypeFilterList}} is empty, packets are admitted regardless of Ethertype.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on  Ethertype.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddressFilterList" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          {{list|each representing a MAC Address}}
          Each list entry MAY optionally specify a bit-mask, where matching of a packet's MAC address is only to be done for bit positions set  to one in the mask.  If no mask is specified, all bits of the MAC Address are to be used for matching.
          For example, the list might be: ''01:02:03:04:05:06, 1:22:33:00:00:00/FF:FF:FF:00:00:00, 88:77:66:55:44:33''
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC  address.
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddressFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets  whose source MAC Address matches one of the {{param|SourceMACAddressFilterList}} entries.  If the  {{param|SourceMACAddressFilterList}} is empty, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose  source MAC Address matches one of the {{param|SourceMACAddressFilterList}} entries.  If the {{param|SourceMACAddressFilterList}} is empty, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC  address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddressFilterList" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          {{list}} Each list item specifies a MAC Address. List items MAY optionally specify a bit-mask after the MAC Address, where matching  of a packet's MAC address is only to be done for bit positions set to one in the mask.  If no mask is specified, all bits of the MAC  Address are to be used for matching.
          For example, the list might be: ''01:02:03:04:05:06, 1:22:33:00:00:00/FF:FF:FF:00:00:00, 88:77:66:55:44:33''
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddressFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets  whose destination MAC Address matches one of the {{param|DestMACAddressFilterList}} entries.  If the  {{param|DestMACAddressFilterList}} is empty, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose  destination MAC Address matches one of the {{param|DestMACAddressFilterList}} entries.  If the {{param|DestMACAddressFilterList}} is  empty, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if its DHCPv4 Vendor Class Identifier (Option 60 as defined in {{bibref|RFC2132}}) in the most recent DHCP lease acquisition or renewal matches the specified value according to the match criterion in {{param|SourceMACFromVendorClassIDMode}}. Case sensitive.
          This is a normal string, e.g. "abc" is represented as "abc" and not "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC address.
          Note: This parameter is DHCPv4-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv4|DHCPType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDFilterv6" access="readWrite" dmr:version="2.2">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if the most recent DHCPv6 Vendor Class Identifier (Option 16 as defined in {{bibref|RFC3315}}) was equal to the specified value. The option value is binary, so an exact match is REQUIRED.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC address.
          Note: This parameter is DHCPv6-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv6|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromVendorClassIDFilter}} (for {{enum|DHCPv4|DHCPType}}) or {{param|SourceMACFromVendorClassIDFilterv6}} (for {{enum|DHCPv6|DHCPType}}). If this corresponding filter parameter is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromVendorClassIDFilter}} (for {{enum|DHCPv4|DHCPType}}) or {{param|SourceMACFromVendorClassIDFilterv6}} (for {{enum|DHCPv6|DHCPType}}). If this corresponding filter parameter is {{empty}}, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC address
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDMode" access="readWrite" dmr:version="2.0">
        <description>
          {{param|SourceMACFromVendorClassIDFilter}} pattern match criterion.  {{enum}}
          For example, if {{param|SourceMACFromVendorClassIDFilter}} is "Example" then an Option 60 value of "Example device" will match with this parameter values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC  address.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCPv4 Vendor Class Identifier (Option 60 as defined in {{bibref|RFC2132}}) in the most recent DHCP lease acquisition or renewal matches the specified value according to the match criterion in {{param|DestMACFromVendorClassIDMode}}. Case sensitive.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          Note: This parameter is DHCPv4-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv4|DHCPType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDFilterv6" access="readWrite" dmr:version="2.2">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if the most recent DHCPv6 Vendor Class Identifier (Option 16 as defined in {{bibref|RFC3315}}) was equal to the specified value. The option value is binary, so an exact match is REQUIRED.
          Note: This parameter is DHCPv6-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv6|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromVendorClassIDFilter}} (for {{enum|DHCPv4|DHCPType}}) or {{param|DestMACFromVendorClassIDFilterv6}} (for {{enum|DHCPv6|DHCPType}}). If this corresponding filter parameter is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromVendorClassIDFilter}} (for {{enum|DHCPv4|DHCPType}}) or {{param|DestMACFromVendorClassIDFilterv6}} (for {{enum|DHCPv6|DHCPType}}). If this corresponding filter parameter is {{empty}}, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDMode" access="readWrite" dmr:version="2.0">
        <description>
          {{param|DestMACFromVendorClassIDFilter}} pattern match criterion.  {{enum}}
          For example, if {{param|DestMACFromVendorClassIDFilter}} is ''Example'' then an Option 60 value of "Example device" will match with  {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromClientIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if the most recent DHCP Client Identifier (via DHCP lease acquisition or renewal for DHCPv4) was equal to the specified value. The DHCP Client Identifier is Option 61 (as defined in {{bibref|RFC2132}}) for {{enum|DHCPv4|DHCPType}}, or is Option 1 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC address.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
          Note: DHCPv6 Option 1 (Client Identifier) is sometimes referred to as ''DUID''.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromClientIDFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets  whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromClientIDFilter}}.   If {{param|SourceMACFromClientIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose  source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromClientIDFilter}}.  If the  {{param|SourceMACFromClientIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC  address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromClientIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if the most recent DHCP Client Identifier (via DHCP lease acquisition or renewal for DHCPv4) was equal to the specified value. The DHCP Client Identifier is Option 61 (as defined in {{bibref|RFC2132}}) for {{enum|DHCPv4|DHCPType}}, or is Option 1 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
          Note: DHCPv6 Option 1 (Client Identifier) is sometimes referred to as ''DUID''.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromClientIDFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromClientIDFilter}}.   If {{param|DestMACFromClientIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromClientIDFilter}}.  If  the {{param|DestMACFromClientIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromUserClassIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if the most recent DHCP User Class Identifier (via DHCP lease acquisition or renewal for DHCPv4) was equal to the specified value. The DHCP User Class Identifier is Option 77 (as defined in {{bibref|RFC3004}}) for {{enum|DHCPv4|DHCPType}}, or is Option 15 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC address.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromUserClassIDFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromUserClassIDFilter}}.  If {{param|SourceMACFromUserClassIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromUserClassIDFilter}}.  If the {{param|SourceMACFromUserClassIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2011}} support classification based on source MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromUserClassIDFilter" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply. A device is considered matching if the most recent DHCP User Class Identifier (via DHCP lease acquisition or renewal for DHCPv4) was equal to the specified value. The DHCP User Class Identifier is Option 77 (as defined in {{bibref|RFC3004}}) for {{enum|DHCPv4|DHCPType}}, or is Option 15 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromUserClassIDFilterExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromUserClassIDFilter}}.  If {{param|DestMACFromUserClassIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromUserClassIDFilter}}.  If the {{param|DestMACFromUserClassIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestIP" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          Destination IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMask" access="readWrite" dmr:version="2.6">
        <description>
          Destination IP address mask, represented as an IP routing prefix using CIDR notation [RFC4632]. The IP address part MUST be {{empty}} (and, if specified, MUST be ignored).
        </description>
        <syntax>
          <dataType ref="IPPrefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIPExclude" access="readWrite" dmr:version="2.6">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) DestIP entry, if specified.
          If {{true}}, the class includes all packets except those that match the (masked) DestIP entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceIP" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          Source IP address. {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMask" access="readWrite" dmr:version="2.6">
        <description>
          Source IP address mask, represented as an IP routing prefix using CIDR notation [RFC4632]. The IP address part MUST be an empty string (and, if specified, MUST be ignored).
        </description>
        <syntax>
          <dataType ref="IPPrefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPExclude" access="readWrite" dmr:version="2.6">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) {{param|SourceIP}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the (masked) {{param|SourceIP}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          Protocol number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="255"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolExclude" access="readWrite" dmr:version="2.6">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|Protocol}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|Protocol}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestPort" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          Destination port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortRangeMax" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from {{param|DestPort}} through {{param}} (inclusive).  If specified, {{param}} MUST be greater than or equal to {{param|DestPort}}.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortExclude" access="readWrite" dmr:version="2.6">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|DestPort}} entry (or port range), if  specified.
          If {{true}}, the class includes all packets except those that match the {{param|DestPort}} entry (or port range), if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          Source port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortRangeMax" access="readWrite" dmr:version="2.6">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from {{param|SourcePort}} through {{param}} (inclusive).  If specified, {{param}} MUST be greater than or equal to SourcePort.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortExclude" access="readWrite" dmr:version="2.6">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|SourcePort}} entry (or port range), if  specified.
          If {{true}}, the class includes all packets except those that match the {{param|SourcePort}} entry (or port range), if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Bridging.ProviderBridge.{i}." access="readWrite" numEntriesParameter="ProviderBridgeNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        Provider Bridge table.
        A Provider Bridge is described in {{bibref|802.1Q-2011|section 5.10 Provider Bridge conformance}} as an entity that is comprised of one S-VLAN component and zero or more C-VLAN components. S-VLAN and C-VLAN components are modelled as instances of {{object|#.Bridge}} objects.
        When {{param|Type}} is configured with value of {{enum|PE|Type}} VLAN tags from the S-VLAN component (outer of 2 VLAN tags) are stacked on top of the VLAN tag from the C-VLAN component (inner of 2 VLAN tags).
        When {{param|Type}} is configured with value of {{enum|S-VLAN|Type}} only VLAN tags from the S-VLAN component are utilized.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables this {{object}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.7">
        <description>
          The status of this {{object}}. {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid. For example when the {{param|Type}} is configured with value of {{enum|PE|Type}} but {{param|CVLANcomponents}} is {{empty}}.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.7">
        <description>
          A non-volatile handle used to reference this instance. This parameter provides a mechanism for an ACS to label this instance for future reference. An initial unique value MUST be assigned when the CPE creates an instance of this object.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" dmr:version="2.7">
        <description>
          Selects the standard supported by this {{object}} table entry.
        </description>
        <syntax>
          <string>
            <enumeration value="S-VLAN">
              <description>
                Provider Bridge conforming to {{bibref|802.1Q-2011|5.10.1 S-VLAN Bridge conformance}}
              </description>
            </enumeration>
            <enumeration value="PE">
              <description>
                Provider Bridge conforming to {{bibref|802.1Q-2011|5.10.2 Provider Edge Bridge conformance}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="SVLANcomponent" access="readWrite" dmr:version="2.7">
        <description>
          {{reference|a {{object|#.Bridge}} instance that specifies the S-VLAN component for the {{object}}}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Bridge." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="CVLANcomponents" access="readWrite" dmr:version="2.7">
        <description>
          {{list}} {{reference|a {{object|#.Bridge}} instance that specifies a C-VLAN component for the {{object}}}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Bridge." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Point-to-Point Protocol {{bibref|RFC1661}}. This object contains the {{object|Interface}} table.
      </description>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SupportedNCPs" access="readOnly" dmr:version="2.2">
        <description>
          The Network Control Protocols (NCPs) that are supported by the device. {{enum}}
          Note that {{enum|IPv6CP}} is an IPv6 capability.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="ATCP">
              <description>
                AppleTalk Control Protocol {{bibref|RFC1378}}
              </description>
            </enumeration>
            <enumeration value="IPCP">
              <description>
                {{bibref|RFC1332}}
              </description>
            </enumeration>
            <enumeration value="IPXCP">
              <description>
                {{bibref|RFC1552}}
              </description>
            </enumeration>
            <enumeration value="NBFCP">
              <description>
                {{bibref|RFC2097}}
              </description>
            </enumeration>
            <enumeration value="IPv6CP">
              <description>
                {{bibref|RFC5072}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        PPP interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the device MUST tear down the existing PPP connection represented by this object and establish a new one.
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.
          Reset on a disabled interface is a no-op (not an error).
        </description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionStatus" access="readOnly" dmr:version="2.0">
        <description>
          Current status of the connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured"/>
            <enumeration value="Connecting"/>
            <enumeration value="Authenticating"/>
            <enumeration value="Connected"/>
            <enumeration value="PendingDisconnect"/>
            <enumeration value="Disconnecting"/>
            <enumeration value="Disconnected"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastConnectionError" access="readOnly" dmr:version="2.0">
        <description>
          The cause of failure for the last connection setup attempt.
        </description>
        <syntax>
          <string>
            <enumeration value="ERROR_NONE"/>
            <enumeration value="ERROR_ISP_TIME_OUT"/>
            <enumeration value="ERROR_COMMAND_ABORTED"/>
            <enumeration value="ERROR_NOT_ENABLED_FOR_INTERNET"/>
            <enumeration value="ERROR_BAD_PHONE_NUMBER"/>
            <enumeration value="ERROR_USER_DISCONNECT"/>
            <enumeration value="ERROR_ISP_DISCONNECT"/>
            <enumeration value="ERROR_IDLE_DISCONNECT"/>
            <enumeration value="ERROR_FORCED_DISCONNECT"/>
            <enumeration value="ERROR_SERVER_OUT_OF_RESOURCES"/>
            <enumeration value="ERROR_RESTRICTED_LOGON_HOURS"/>
            <enumeration value="ERROR_ACCOUNT_DISABLED"/>
            <enumeration value="ERROR_ACCOUNT_EXPIRED"/>
            <enumeration value="ERROR_PASSWORD_EXPIRED"/>
            <enumeration value="ERROR_AUTHENTICATION_FAILURE"/>
            <enumeration value="ERROR_NO_DIALTONE"/>
            <enumeration value="ERROR_NO_CARRIER"/>
            <enumeration value="ERROR_NO_ANSWER"/>
            <enumeration value="ERROR_LINE_BUSY"/>
            <enumeration value="ERROR_UNSUPPORTED_BITSPERSECOND"/>
            <enumeration value="ERROR_TOO_MANY_LINE_ERRORS"/>
            <enumeration value="ERROR_IP_CONFIGURATION"/>
            <enumeration value="ERROR_UNKNOWN"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AutoDisconnectTime" access="readWrite" dmr:version="2.0">
        <description>
          The time in {{units}} since the establishment of the connection after which connection termination is automatically initiated by the CPE.  This occurs irrespective of whether the connection is being used or not.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IdleDisconnectTime" access="readWrite" dmr:version="2.0">
        <description>
          The time in {{units}} that if the connection remains idle, the CPE automatically terminates the connection.  A  value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="WarnDisconnectDelay" access="readWrite" dmr:version="2.0">
        <description>
          Time in {{units}} the {{param|ConnectionStatus}} remains in the {{enum|PendingDisconnect|ConnectionStatus}} state  before transitioning to disconnecting state to drop the connection.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.0">
        <description>
          Username to be used for authentication.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.0">
        <description>
          Password to be used for authentication.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Describes the PPP encryption protocol.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="MPPE"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CompressionProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Describes the PPP compression protocol.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="Van Jacobson">
              <description>
                {{bibref|RFC1332}}
              </description>
            </enumeration>
            <enumeration value="STAC LZS">
              <description>
                {{bibref|RFC1974}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="AuthenticationProtocol" access="readOnly" dmr:version="2.0">
        <description>
          Describes the PPP authentication protocol.
        </description>
        <syntax>
          <string>
            <enumeration value="PAP"/>
            <enumeration value="CHAP"/>
            <enumeration value="MS-CHAP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxMRUSize" access="readWrite" dmr:version="2.0">
        <description>
          The maximum allowed size of frames sent from the remote peer.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="64" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1500"/>
        </syntax>
      </parameter>
      <parameter name="CurrentMRUSize" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The current MRU in use over this connection.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="64" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ConnectionTrigger" access="readWrite" dmr:version="2.0">
        <description>
          Trigger used to establish the PPP connection.  {{enum}}
          Note that the reason for a PPP connection becoming disconnected to begin with might be either external to the CPE, such as  termination by the BRAS or momentary disconnection of the physical interface, or internal to the CPE, such as use of the  {{param|IdleDisconnectTime}} and/or {{param|AutoDisconnectTime}} parameters in this object.
        </description>
        <syntax>
          <string>
            <enumeration value="OnDemand">
              <description>
                If this PPP connection is disconnected for any reason, it is to remain disconnected until the CPE has one  or more packets to communicate over this connection, at which time the CPE automatically attempts to reestablish the  connection.
              </description>
            </enumeration>
            <enumeration value="AlwaysOn">
              <description>
                If this PPP connection is disconnected for any reason, the CPE automatically attempts to reestablish the  connection (and continues to attempt to reestablish the connection as long it remains disconnected).
              </description>
            </enumeration>
            <enumeration value="Manual">
              <description>
                If this PPP connection is disconnected for any reason, it is to remain disconnected until the user of the  CPE explicitly instructs the CPE to reestablish the connection.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LCPEcho" access="readOnly" dmr:version="2.0">
        <description>
          PPP LCP Echo period in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LCPEchoRetry" access="readOnly" dmr:version="2.0">
        <description>
          Number of PPP LCP Echo retries within an echo period.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPCPEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IPCP ({{bibref|RFC1332}}) on this interface.  If this parameter is present, {{enum|IPCP|#.SupportedNCPs}} MUST be included in {{param|#.SupportedNCPs}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6CPEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IPv6CP ({{bibref|RFC5072}}) on this interface.  If this parameter is present, {{enum|IPv6CP|#.SupportedNCPs}} MUST be included in {{param|#.SupportedNCPs}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP.Interface.{i}.PPPoE." access="readOnly" minEntries="0" maxEntries="1" dmr:version="2.0">
      <description>
        PPPoE object that functionally groups PPPoE related parameters.
        PPPoE is only applicable when the lower layer provides Ethernet frames, e.g. ATM with EoA, PTM, or anything else that supports an Ethernet MAC.
      </description>
      <parameter name="SessionID" access="readOnly" dmr:version="2.0">
        <description>
          Represents the PPPoE Session ID.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ACName" access="readWrite" dmr:version="2.0">
        <description>
          PPPoE Access Concentrator.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServiceName" access="readWrite" dmr:version="2.0">
        <description>
          PPPoE Service Name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP.Interface.{i}.IPCP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        IP Control Protocol (IPCP) client object for this PPP interface {{bibref|RFC1332}}. {{object}} only applies to IPv4.
      </description>
      <parameter name="LocalIPAddress" access="readOnly" dmr:version="2.0">
        <description>
          The local IPv4 address for this connection received via IPCP.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="RemoteIPAddress" access="readOnly" dmr:version="2.0">
        <description>
          The remote IPv4 address for this connection received via IPCP.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Items represent DNS Server IPv4 address(es) received via IPCP {{bibref|RFC1877}}.
        </description>
        <syntax>
          <list maxItems="2"/>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PassthroughEnable" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the PPP Interface retrieved information is configured on the IP Interface stacked on top of this PPP Interface.
          If {{true}}, the PPP Interface retrieved information is propagated to the parameters in the referenced {{param|PassthroughDHCPPool}} object, replacing any existing configuration (including ''MinAddress'', ''MaxAddress'', ''SubnetMask'', ''IPRouters'', and ''DNSServers'').
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PassthroughDHCPPool" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}When {{param}} is set to {{empty}}, {{param|PassthroughEnable}} MUST be set to {{false}} (i.e. passthrough can not be enabled without a pool reference specified).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".DHCPv4.Server.Pool." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP.Interface.{i}.IPv6CP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        IPv6 Control Protocol (IPv6CP) client object for this PPP interface {{bibref|RFC5072}}. {{object}} only applies to IPv6.
      </description>
      <parameter name="LocalInterfaceIdentifier" access="readOnly" dmr:version="2.2">
        <description>
          The interface identifier for the local end of the PPP link, negotiated using the IPv6CP ''Interface-Identifier'' option {{bibref|RFC5072|Section 4.1}}.
          The identifier is represented as the rightmost 64 bits of an IPv6 address (the leftmost 64 bits MUST be zero and MUST be ignored by the recipient).
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="RemoteInterfaceIdentifier" access="readOnly" dmr:version="2.2">
        <description>
          The interface identifier for the remote end of the PPP link, negotiated using the IPv6CP ''Interface-Identifier'' option {{bibref|RFC5072|Section 4.1}}.
          The identifier is represented as the rightmost 64 bits of an IPv6 address (the leftmost 64 bits MUST be zero and MUST be ignored by the recipient).
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PPP.Interface.{i}.PPPoA." access="readOnly" minEntries="0" maxEntries="1" dmr:version="2.2">
      <description>
        PPPoA object that functionally groups PPPoA related parameters.
        This object is OBSOLETED because it contains no standard parameters and its existence causes confusion.
      </description>
    </object>
    <object name="Device.IP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        IP object that contains the {{object|Interface}}, {{object|ActivePort}}, and {{object|Diagnostics}} objects.
      </description>
      <parameter name="IPv4Capable" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether the device is IPv4 capable.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables the IPv4 stack, and so the use of IPv4 on the device. This affects only layer 3 and above.
          When {{false}}, IP interfaces that had been operationally up and passing IPv4 packets will now no longer be able to do so, and will be operationally down (unless also attached to an enabled IPv6 stack).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4Status" access="readOnly" dmr:version="2.2">
        <description>
          Indicates the status of the IPv4 stack.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPv6Capable" access="readOnly" dmr:version="2.2">
        <description>
          Indicates whether the device is IPv6 capable.
          Note: If {{false}}, it is expected that IPv6-related parameters, enumeration values, etc will not be implemented by the device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables the IPv6 stack, and so the use of IPv6 on the device. This affects only layer 3 and above.
          When {{false}}, IP interfaces that had been operationally up and passing IPv6 packets will now no longer be able to do so, and will be operationally down (unless also attached to an enabled IPv4 stack).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Status" access="readOnly" dmr:version="2.2">
        <description>
          Indicates the status of the IPv6 stack.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ULAPrefix" access="readWrite" dmr:version="2.2">
        <description>
          The ULA /48 prefix {{bibref|RFC4193|Section 3}}.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ActivePortNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        IP interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). This table models the layer 3 IP interface.
        Each IP interface can be attached to the IPv4 and/or IPv6 stack.  The interface's IP addresses and prefixes are listed in the {{object|IPv4Address}}, {{object|IPv6Address}} and {{object|IPv6Prefix}} tables.
        Note that support for manipulating {{param|Loopback}} interfaces is OPTIONAL, so the implementation MAY choose not to create (or allow the ACS to create) {{object}} instances of type {{enum|Loopback|Type}}.
        When the ACS administratively disables the interface, i.e. sets {{param|Enable}} to {{false}}, the interface's automatically-assigned IP addresses and prefixes MAY be retained.  When the ACS administratively enables the interface, i.e. sets {{param|Enable}} to {{true}}, these IP addresses and prefixes MUST be refreshed.  It's up to the implementation to decide exactly what this means: it SHOULD take all reasonable steps to refresh everything but if it is unable, for example, to refresh a prefix that still has a significant lifetime, it might well choose to retain rather than discard it.
        Any {{enum|Tunneled|Type}} IP interface instances instantiated by the CPE MUST NOT have any statistics, writable parameters, IP addresses or IPv6 prefixes.  Any read-only parameters, e.g. {{param|Status}}, MUST return the same information as for the corresponding {{enum|Tunnel|Type}} interface.  The reason for these rules is that {{enum|Tunneled|Type}} IP interfaces exist only in order to be the targets of references (within the data model) and do not model any concepts over and above those already modeled by the {{enum|Tunnel|Type}} IP interfaces.
        Note that {{enum|Tunnel|Type}} and {{enum|Tunneled|Type}} IP interfaces are part of a legacy mechanism that is only used for {{object|##.IPv6rd}}, {{object|##.DSLite}} and {{object|##.IPsec}} tunnels and MUST NOT be used in any other context.  For all other tunneling mechanisms {{enum|Normal|Type}} IP interfaces are stacked above technology-specific Tunnel Interfaces, e.g. above {{object|##.GRE.Tunnel.{i}.Interface}} or {{object|##.MAP.Domain.{i}.Interface}} objects.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the interface (regardless of {{param|IPv4Enable}} and {{param|IPv6Enable}}).
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPv4Enable" access="readWrite" dmr:version="2.2">
        <description>
          If set to {{true}}, attaches this interface to the IPv4 stack.  If set to {{false}}, detaches this interface from the IPv4 stack.
          Once detached from the IPv4 stack, the interface will now no longer be able to pass IPv4 packets, and will be operationally down (unless also attached to an enabled IPv6 stack).
          For an IPv4 capable device, if {{param}} is not present this interface SHOULD be permanently attached to the IPv4 stack.
          Note that {{param}} is independent of {{param|Enable}}, and that to administratively enable an interface for IPv4 it is necessary for both {{param|Enable}} and {{param}} to be {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6Enable" access="readWrite" dmr:version="2.2">
        <description>
          If set to {{true}}, attaches this interface to the IPv6 stack.  If set to {{false}}, detaches this interface from the IPv6 stack.
          Once detached from the IPv6 stack, the interface will now no longer be able to pass IPv6 packets, and will be operationally down (unless also attached to an enabled IPv4 stack).
          For an IPv6 capable device, if {{param}} is not present this interface SHOULD be permanently attached to the IPv6 stack.
          Note that {{param}} is independent of {{param|Enable}}, and that to administratively enable an interface for IPv6 it is necessary for both {{param|Enable}} and {{param}} to be {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ULAEnable" access="readWrite" dmr:version="2.2">
        <description>
          Controls whether or not ULAs {{bibref|RFC4193}} are generated and used on this interface.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Down"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          {{param}} MUST be {{empty}} and read-only when {{param|Type}} is {{enum|Loopback|Type}}, {{enum|Tunnel|Type}}, or {{enum|Tunneled|Type}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Router" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The ''Router'' instance that is associated with this IP Interface entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".Routing.Router." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the device MUST tear down the existing IP connection represented by this object and establish a new one.
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.
          Reset on a disabled interface is a no-op (not an error).
        </description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="MaxMTUSize" access="readWrite" dmr:version="2.0">
        <description>
          The maximum transmission unit (MTU); the largest allowed size of an IP packet (including IP headers, but excluding lower layer headers such as Ethernet, PPP, or PPPoE headers) that is allowed to be transmitted by or through this device.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="64" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          IP interface type. {{enum}}
          For {{enum|Loopback}}, {{enum|Tunnel}}, and {{enum|Tunneled}} IP interface objects, the {{param|LowerLayers}} parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Normal"/>
            <enumeration value="Loopback"/>
            <enumeration value="Tunnel">
              <description>
                Only used with legacy ({{enum|Tunnel}},{{enum|Tunneled}}) IP interface pairs
              </description>
            </enumeration>
            <enumeration value="Tunneled">
              <description>
                Only used with legacy ({{enum|Tunnel}},{{enum|Tunneled}}) IP interface pairs
              </description>
            </enumeration>
          </string>
          <default type="object" value="Normal"/>
        </syntax>
      </parameter>
      <parameter name="Loopback" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the IP interface becomes a loopback interface and the CPE MUST set {{param|Type}} to {{enum|Loopback|Type}}. In this case, the CPE MUST also set {{param|LowerLayers}} to {{empty}} and fail subsequent attempts at setting {{param|LowerLayers}} until the interface is no longer a loopback.
          Support for manipulating loopback interfaces is OPTIONAL.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPv4AddressNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6PrefixNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AutoIPEnable" access="readWrite" dmr:version="2.0">
        <description>
          If {{true}}, enables auto-IP on the interface {{bibref|RFC3927}}. This mechanism is only used with IPv4.
          When auto-IP is enabled on an interface, an {{object|IPv4Address}} object will dynamically be created and configured with auto-IP  parameter values. The exact conditions under which an auto-IP address is created (e.g. always when enabled or only in absence of  dynamic IP addressing) is implementation specific.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="TWAMPReflectorNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Interface.{i}.IPv4Address.{i}." access="readWrite" numEntriesParameter="IPv4AddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        IPv4 address table. Entries are auto-created and auto-deleted as IP addresses are added and deleted via DHCP, auto-IP, or IPCP. Static entries are created and configured by the ACS.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPAddress"/>
        <parameter ref="SubnetMask"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this IPv4 address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this {{object}} table entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
          This parameter can only be modified if {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readWrite" dmr:version="2.0">
        <description>
          IPv4 address.
          This parameter can only be modified if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" dmr:version="2.0">
        <description>
          Subnet mask.
          This parameter can only be modified if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AddressingType" access="readOnly" dmr:version="2.0">
        <description>
          Addressing method used to assign the IP address. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="IKEv2">
              <description>
                Assigned by IKEv2 {{bibref|RFC5996}}.
              </description>
            </enumeration>
            <enumeration value="AutoIP"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Throughput statistics for this interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" dmr:version="2.0">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
          Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" dmr:version="2.0">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
          Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Interface.{i}.TWAMPReflector.{i}." access="readWrite" numEntriesParameter="TWAMPReflectorNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object contains parameters associated with the configuration that permits this interface to be used as Two-Way Active Measurement Protocol (TWAMP) reflector as defined in {{bibref|TR-390}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Port"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the TWAMP reflector.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the TWAMP reflector.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Active"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.12">
        <description>
          The port used to listen for the TWAMP test packets.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="862"/>
        </syntax>
      </parameter>
      <parameter name="MaximumTTL" access="readWrite" dmr:version="2.12">
        <description>
          The maximum TTL of a received packet that this TWAMP reflector will reflect to the TWAMP controller.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="IPAllowedList" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} List items represent source IP addresses and subnets from which test packets MUST always be received. {{empty}} list will allow test packets to be received from any source IP address.
          Each entry in the list MUST be either an IP address, or an IP prefix specified using Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}.
          An IP prefix is specified as an IP address followed (with no intervening white space) by "/n", where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the prefix.
          IPv4 example:
          * 1.2.3.4 specifies a single IPv4 address, and 1.2.3.4/24 specifies a class C subnet with subnet mask 255.255.255.0.
          * 1.2.0.0/22 represents the 1024 IPv4 addresses from 1.2.0.0 to 1.2.3.255.
          IPv6 example:
          * fec0::220:edff:fe6a:f76 specifies a single IPv6 address.
          * 2001:edff:fe6a:f76::/64 represents the IPv6 addresses from 2001:edff:fe6a:f76:0:0:0:0 to 2001:edff:fe6a:f76:ffff:ffff:ffff:ffff.
        </description>
        <syntax>
          <list>
            <size maxLength="255"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PortAllowedList" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} List items represent source port ranges from which test packets MUST always be received. {{empty}} list will allow test packets to be received from any source port.
          Each entry in the list MUST be either a port number or a range of port numbers separated by a hypen (-).
          For example, an entry with the value: '2-40' accepts test packets from any allowed source IP addresses with a source port between 2 and 40 inclusive. An entry of '3' accepts test packets from allow source IP addresses with a port of 3.
        </description>
        <syntax>
          <list>
            <size maxLength="255"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Interface.{i}.IPv6Address.{i}." access="readWrite" numEntriesParameter="IPv6AddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This table contains the IP interface's IPv6 unicast addresses.  There MUST be an entry for each such address, including anycast addresses.
        There are several ways in which entries can be added to and deleted from this table, including:
        * Automatically via SLAAC {{bibref|RFC4862}}, which covers generation of link-local addresses (for all types of device) and global addresses (for non-router devices).
        * Automatically via DHCPv6 {{bibref|RFC3315}}, which covers generation of any type of address (subject to the configured DHCP server policy).
        * Manually via a GUI or some other local management interface.
        * Manually via factory default configuration.
        * By the ACS.
        This table MUST NOT include entries for the Subnet-Router anycast address {{bibref|RFC4291|Section 2.6.1}}.  Such entries would be identical to others but with a zero interface identifier, and would add no value.
        A loopback interface will always have address ''::1'' {{bibref|RFC4291|Section 2.5.3}} and MAY also have link-local address ''fe80::1''.
        This object is based on ''ipAddressTable'' from {{bibref|RFC4293}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this {{object}} table entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="IPAddressStatus" access="readOnly" dmr:version="2.2">
        <description>
          The status of {{param|IPAddress}}, indicating whether it can be used for communication.  See also {{param|PreferredLifetime}} and {{param|ValidLifetime}}.  {{enum}}
          This parameter is based on ''ipAddressStatus'' and ''ipAddressStatusTC'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Preferred">
              <description>
                Valid address that can appear as the destination or source address of a packet.
              </description>
            </enumeration>
            <enumeration value="Deprecated">
              <description>
                Valid but deprecated address that is not intended to be used as a source address.
              </description>
            </enumeration>
            <enumeration value="Invalid">
              <description>
                Invalid address that is not intended to appear as the destination or source address of a packet.
              </description>
            </enumeration>
            <enumeration value="Inaccessible">
              <description>
                Valid address that is not accessible because the interface to which it is assigned is not operational.
              </description>
            </enumeration>
            <enumeration value="Unknown">
              <description>
                Address status cannot be determined for some reason.
              </description>
            </enumeration>
            <enumeration value="Tentative">
              <description>
                The uniqueness of the address on the link is being verified.
              </description>
            </enumeration>
            <enumeration value="Duplicate">
              <description>
                Invalid address that has been determined to be non-unique on the link.
              </description>
            </enumeration>
            <enumeration value="Optimistic">
              <description>
                Valid address that is available for use, subject to restrictions, while its uniqueness on a link is being verified.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Invalid"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressAddr'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Mechanism via which the IP address was assigned.  {{enum}}
          This parameter is based on ''ipOrigin'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="AutoConfigured">
              <description>
                Automatically generated. For example, a link-local address as specified by SLAAC {{bibref|RFC4862|Section 5.3}}, a global address as specified by SLAAC {{bibref|RFC4862|Section 5.5}}, or generated via CPE logic (e.g. from delegated prefix as specified by {{bibref|RFC3633}}), or from ULA /48 prefix as specified by {{bibref|RFC4193}}.
              </description>
            </enumeration>
            <enumeration value="DHCPv6">
              <description>
                Assigned by DHCPv6 {{bibref|RFC3315}}.
              </description>
            </enumeration>
            <enumeration value="IKEv2">
              <description>
                Assigned by IKEv2 {{bibref|RFC5996}}.
              </description>
            </enumeration>
            <enumeration value="MAP">
              <description>
                Assigned by MAP {{bibref|RFC7597}}, i.e. is this interface's ''MAP IPv6 address''
              </description>
            </enumeration>
            <enumeration value="WellKnown">
              <description>
                Specified by a standards organization, e.g. the ''::1'' loopback address, which is defined in {{bibref|RFC4291}}.
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                For example, present in the factory default configuration (but not {{enum|WellKnown}}), created by the ACS, or created by some other management entity (e.g. via a GUI).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address prefix.
          Some addresses, e.g. addresses assigned via the DHCPv6 IA_NA option, are not associated with a prefix, and some {{enum|WellKnown|#.IPv6Prefix.{i}.Origin}} prefixes might not be modeled.  In both of these cases {{param}} will be {{null}}.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefix'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.2">
        <description>
          The time at which this address will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readWrite" dmr:version="2.2">
        <description>
          The time at which this address will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="Anycast" access="readWrite" dmr:version="2.2">
        <description>
          Indicates whether this is an anycast address {{bibref|RFC4291|Section 2.6}}.  Anycast addresses are syntactically identical to unicast addresses and so need to be configured explicitly.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressType'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Interface.{i}.IPv6Prefix.{i}." access="readWrite" numEntriesParameter="IPv6PrefixNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This table contains the interface's IPv6 prefixes.  There MUST be an entry for each such prefix, not only for prefixes learned from router advertisements.
        There are several ways in which entries can be added to and deleted from this table, including:
        * Automatically via {{bibref|RFC4861}} Router Advertisements.  See also {{object|.RouterAdvertisement}}.
        * Automatically via DHCPv6 {{bibref|RFC3315}} prefix delegation {{bibref|RFC3633}}.  See also {{object|.DHCPv6.Client}}.
        * Automatically via internal CPE logic, e.g. creation of child prefixes derived from a parent prefix.
        * Manually via a GUI or some other local management interface.
        * Manually via factory default configuration.
        * By the ACS.
        The CPE MAY choose not to create {{object}} entries for {{enum|WellKnown|Origin}} prefixes or for the ULA /48 prefix {{bibref|RFC4193}}. If an {{object}} entry exists for the ULA /48 prefix, it MUST be on a downstream interface (i.e. an interface for which the physical layer interface object has ''Upstream'' = {{false}}).
        This object is based on ''ipAddressPrefixTable'' from {{bibref|RFC4293}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Prefix"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this {{object}} table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="PrefixStatus" access="readOnly" dmr:version="2.2">
        <description>
          The status of {{param|Prefix}}, indicating whether it can be used for communication.  See also {{param|PreferredLifetime}} and {{param|ValidLifetime}}.  {{enum}}
          This parameter is based on ''ipAddressStatus'' and ''ipAddressStatusTC'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Preferred">
              <description>
                Valid prefix.
              </description>
            </enumeration>
            <enumeration value="Deprecated">
              <description>
                Valid but deprecated prefix.
              </description>
            </enumeration>
            <enumeration value="Invalid">
              <description>
                Invalid prefix.
              </description>
            </enumeration>
            <enumeration value="Inaccessible">
              <description>
                Valid prefix that is not accessible because the interface to which it is assigned is not operational.
              </description>
            </enumeration>
            <enumeration value="Unknown">
              <description>
                Prefix status cannot be determined for some reason.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Invalid"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address prefix.
          This parameter can only be modified if the {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefixPrefix'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Mechanism via which the prefix was assigned or most recently updated. {{enum}}
          Note that:
          * {{enum|PrefixDelegation}} and {{enum|RouterAdvertisement}} prefixes can exist only on upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}),
          * {{enum|AutoConfigured}} and {{enum|WellKnown}} prefixes can exist on any interface, and
          * {{enum|Static}} and {{enum|Child}} prefixes can exist only on downstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{false}}).
          Also note that a {{enum|Child}} prefix's {{param|ParentPrefix}} will always be an {{enum|AutoConfigured}}, {{enum|PrefixDelegation}}, or {{enum|RouterAdvertisement}} prefix.
          This parameter is based on ''ipAddressOrigin'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <string>
            <enumeration value="AutoConfigured">
              <description>
                Generated via internal CPE logic (e.g. the ULA /48 prefix) or derived from an internal prefix that is not modeled in any {{object}} table.
              </description>
            </enumeration>
            <enumeration value="PrefixDelegation">
              <description>
                Delegated via DHCPv6 {{bibref|RFC3633}} or some other protocol, e.g. IPv6rd {{bibref|RFC5969}}.  Also see {{param|StaticType}}.
              </description>
            </enumeration>
            <enumeration value="RouterAdvertisement">
              <description>
                Discovered via router advertisement {{bibref|RFC4861}} Prefix Information Option.
              </description>
            </enumeration>
            <enumeration value="WellKnown">
              <description>
                Specified by a standards organization, e.g. ''fe80::/10'' for link-local addresses, or ''::1/128'' for the loopback address, both of which are defined in {{bibref|RFC4291}}.
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                Created by the ACS, by some other management entity (e.g. via a GUI), or present in the factory default configuration (but not {{enum|WellKnown}}).  Unrelated to any shorter length prefix that might exist on the CPE.  Also see {{param|StaticType}}.  Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD).
              </description>
            </enumeration>
            <enumeration value="Child">
              <description>
                Derived from an associated {{enum|AutoConfigured}} or {{enum|PrefixDelegation}} parent prefix.  Also see {{param|StaticType}}, {{param|ParentPrefix}} and {{param|ChildPrefixBits}}.  Can be used for RA (Prefix Information), DHCPv6 address assignment (IA_NA) or DHCPv6 prefix delegation (IA_PD).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="StaticType" access="readWrite" dmr:version="2.2">
        <description>
          Static prefix sub-type.  For a {{enum|Static|Origin}} prefix, this can be set to {{enum|PrefixDelegation}} or {{enum|Child}}, thereby creating an unconfigured prefix of the specified type that will be populated in preference to creating a new instance.  This allows the ACS to pre-create "prefix slots" with known path names that can be referenced from elsewhere in the data model before they have been populated.  {{enum}}
          This mechanism works as follows:
          * When this parameter is set to {{enum|PrefixDelegation}} or {{enum|Child}}, the instance becomes a "prefix slot" of the specified type.
          * Such an instance can be administratively enabled ({{param|Enable}} = {{true}}) but will remain operationally disabled ({{param|Status}} = {{enum|Disabled|Status}}) until it has been populated.
          * When a new prefix of of type T is needed, the CPE will look for a matching unpopulated instance, i.e. an instance with ({{param|Origin}},{{param}},{{param|Prefix}}) = ({{enum|Static|Origin}},T,"").  If the CPE finds at least one such instance it will choose one and populate it.  If already administratively enabled it will immediately become operationally enabled.  If the CPE finds no such instances, it will create and populate a new instance with ({{param|Origin}},{{param}}) = (T,T).  If the CPE finds more than one such instance, the algorithm via which it chooses which instance to populate is implementation-specific.
          * When a prefix that was populated via this mechanism becomes invalid, the CPE will reset {{param|Prefix}} to {{empty}}.  This does not affect the value of the {{param|Enable}} parameter.
          The prefix {{param}} can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Static">
              <description>
                Prefix is a "normal" {{enum|Static|Origin}} prefix.
              </description>
            </enumeration>
            <enumeration value="Inapplicable" access="readOnly">
              <description>
                Prefix is not {{enum|Static|Origin}}, so this parameter does not apply.
              </description>
            </enumeration>
            <enumeration value="PrefixDelegation">
              <description>
                Prefix will be populated when a {{enum|PrefixDelegation|Origin}} prefix needs to be created.
              </description>
            </enumeration>
            <enumeration value="Child">
              <description>
                Prefix will be populated when a {{enum|Child|Origin}} prefix needs to be created. In this case, the ACS needs also to set {{param|ParentPrefix}} and might want to set {{param|ChildPrefixBits}} (if parent prefix is not set, or goes away, then the child prefix will become operationally disabled).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="ParentPrefix" access="readWrite" dmr:version="2.2">
        <description>
          Indicates the parent prefix from which this prefix was derived. The parent prefix is relevant only for {{enum|Child|Origin}} prefixes and for {{enum|Static|Origin}} {{enum|Child|StaticType}} prefixes (both of which will always be on downstream interfaces), i.e. for {{param|Origin}}={{enum|Child|Origin}} and for ({{param|Origin}},{{param|StaticType}}) = ({{enum|Static|Origin}},{{enum|Child|StaticType}}) prefixes.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}} (which makes sense only for a prefix whose {{param|StaticType}} is already or will be changed to {{enum|Child|StaticType}}).
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChildPrefixBits" access="readWrite" dmr:version="2.2">
        <description>
          A prefix that specifies the length of {{enum|Static|Origin}} {{enum|Child|StaticType}} prefixes and how they are derived from their {{param|ParentPrefix}}. It will be used if and only if it is not {{empty}} and is longer than the parent prefix (if it is not used, derivation of such prefixes is implementation-specific).  Any bits to the right of the parent prefix are set to the bits in this prefix.
          For example, for a parent prefix of fedc::/56, if this parameter had the value 123:4567:89ab:cdef::/64, the child /64 would be fedc:0:0:ef::/64.  For a parent prefix of fedc::/60, the child /64 would be fedc:0:0:f::/64.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="OnLink" access="readWrite" dmr:version="2.2">
        <description>
          On-link flag {{bibref|RFC4861|Section 4.6.2}} as received (in the RA) for RouterAdvertisement.  Indicates whether this prefix can be used for on-link determination.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefixOnLinkFlag'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Autonomous" access="readWrite" dmr:version="2.2">
        <description>
          Autonomous address configuration flag {{bibref|RFC4861|Section 4.6.2}} as received (in the RA) for RouterAdvertisement.  Indicates whether this prefix can be used for generating global addresses as specified by SLAAC {{bibref|RFC4862}}.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
          This parameter is based on ''ipAddressPrefixAutonomousFlag'' from {{bibref|RFC4293}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.2">
        <description>
          This parameter is based on ''ipAddressPrefixAdvPreferredLifetime'' from {{bibref|RFC4293}}. The time at which this prefix will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readWrite" dmr:version="2.2">
        <description>
          This parameter is based on ''ipAddressPrefixAdvValidLifetime'' from {{bibref|RFC4293}}.  The time at which this prefix will cease to be valid (i.e. will become invalid), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          This parameter can only be modified if {{param|Origin}} is {{enum|Static|Origin}}.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.ActivePort.{i}." access="readOnly" numEntriesParameter="ActivePortNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table lists the ports on which TCP connections are listening or established.
      </description>
      <uniqueKey>
        <parameter ref="LocalIPAddress"/>
        <parameter ref="LocalPort"/>
        <parameter ref="RemoteIPAddress"/>
        <parameter ref="RemotePort"/>
      </uniqueKey>
      <parameter name="LocalIPAddress" access="readOnly" dmr:version="2.0">
        <description>
          Connection local IP address.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="LocalPort" access="readOnly" dmr:version="2.0">
        <description>
          Connection local port.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RemoteIPAddress" access="readOnly" dmr:version="2.0">
        <description>
          The remote IP address of the source of inbound packets.
          This will be {{null}} for listening connections (only connections in {{enum|ESTABLISHED|Status}} state have remote addresses).
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="RemotePort" access="readOnly" dmr:version="2.0">
        <description>
          The remote port of the source of inbound packets.
          This will be {{null}} for listening connections (only connections in {{enum|ESTABLISHED|Status}} state have remote addresses).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Current operational status of the connection. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="LISTEN"/>
            <enumeration value="ESTABLISHED"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The IP Diagnostics object.
      </description>
      <parameter name="IPv4PingSupported" access="readOnly" dmr:version="2.8">
        <description>
          Indicates that Ping over IPv4 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6PingSupported" access="readOnly" dmr:version="2.8">
        <description>
          Indicates that Ping over IPv6 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4TraceRouteSupported" access="readOnly" dmr:version="2.8">
        <description>
          Indicates that TraceRoute over IPv4 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6TraceRouteSupported" access="readOnly" dmr:version="2.8">
        <description>
          Indicates that TraceRoute over IPv6 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4DownloadDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that Download Diagnostics over IPv4 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6DownloadDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that Download Diagnostics over IPv6 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4UploadDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that Upload Diagnostics over IPv4 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6UploadDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that Upload Diagnostics over IPv6 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4UDPEchoDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that UDPEcho Diagnostics over IPv4 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6UDPEchoDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that UDPEcho Diagnostics over IPv6 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4ServerSelectionDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that ServerSelection Diagnostics over IPv4 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6ServerSelectionDiagnosticsSupported" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that ServerSelection Diagnostics over IPv6 is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.IPPing." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object provides access to an IP-layer ping test.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_NoRouteToHost" access="readOnly">
              <description>
                The CPE can not reach the requested Ping host address
              </description>
            </enumeration>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The layer 2 or layer 3 interface over which the test is to be performed. Example: ''Device.IP.Interface.1'', ''Device.Bridge.1.Port.2''
          If {{empty}} is specified, the CPE MUST use the interface as directed by its bridging or routing policy (''Forwarding'' table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".IP.Interface. .Bridging.Bridge.{i}.Port." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the IP protocol to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Any">
              <description>
                Use either IPv4 or IPv6 depending on the system preference
              </description>
            </enumeration>
            <enumeration value="IPv4">
              <description>
                Use IPv4 for the Ping requests
              </description>
            </enumeration>
            <enumeration value="IPv6">
              <description>
                Use IPv6 for the Ping requests
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" dmr:version="2.0">
        <description>
          Host name or address of the host to ping.
          In the case where {{param}} is specified by name, and the name resolves to more than one address, it is up to the device implementation to choose which address to use.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="2.0">
        <description>
          Number of repetitions of the ping test to perform before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>
          Timeout in {{units}} for the ping test.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" dmr:version="2.0">
        <description>
          Size of the data block in bytes to be sent for each ping.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.0">
        <description>
          DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to  zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IPAddressUsed" access="readOnly" dmr:version="2.8">
        <description>
          Indicates which IP address was used to send the Ping request. The parameter is only valid if the {{param|DiagnosticsState}} is {{enum|Complete|DiagnosticsState}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the number of successful pings (those in which a successful response was received  prior to the timeout) in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the number of failed pings in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the average response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the minimum response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the maximum response time in {{units}} over all repetitions with successful  responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTimeDetailed" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          Result parameter indicating the average response time in {{units}} over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTimeDetailed" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          Result parameter indicating the minimum response time in {{units}} over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTimeDetailed" access="readOnly" activeNotify="canDeny" dmr:version="2.7">
        <description>
          Result parameter indicating the maximum response time in {{units}} over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.TraceRoute." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines access to an IP-layer trace-route test for the specified IP interface.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="DiagnosticsState">
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Canceled" optional="true"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error" access="readOnly" optional="true"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_NoRouteToHost" access="readOnly">
              <description>
                The CPE can not reach the requested TraceRoute host address
              </description>
            </enumeration>
            <enumeration value="Error_MaxHopCountExceeded" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The layer 2 or layer 3 interface over which the test is to be performed. Example: ''Device.IP.Interface.1'', ''Device.Bridge.1.Port.2''
          If {{empty}} is specified, the CPE MUST use the interface as directed by its bridging or routing policy (''Forwarding'' table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetParent=".IP.Interface. .Bridging.Bridge.{i}.Port." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the IP protocol to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Any">
              <description>
                Use either IPv4 or IPv6 depending on the system preference
              </description>
            </enumeration>
            <enumeration value="IPv4">
              <description>
                Use IPv4 for the TraceRoute
              </description>
            </enumeration>
            <enumeration value="IPv6">
              <description>
                Use IPv6 for the TraceRoute
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" dmr:version="2.0">
        <description>
          Host name or address of the host to find a route to.
          In the case where {{param}} is specified by name, and the name resolves to more than one address, it is up to the device implementation to choose which address to use.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfTries" access="readWrite" dmr:version="2.0">
        <description>
          Number of tries per hop. Set prior to running Diagnostic.  By default, the CPE SHOULD set this value to  3.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>
          Timeout in {{units}} for each hop of the trace route test.  By default the CPE SHOULD set this value to 5000.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" dmr:version="2.0">
        <description>
          Size of the data block in bytes to be sent for each trace route.  By default, the CPE SHOULD set this value to  38.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.0">
        <description>
          DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to  0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxHopCount" access="readWrite" dmr:version="2.0">
        <description>
          The maximum number of hop used in outgoing probe packets (max TTL).  By default the CPE SHOULD set this value to  30.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IPAddressUsed" access="readOnly" dmr:version="2.8">
        <description>
          Indicates which IP address was used for TraceRoute. The parameter is only valid if the {{param|DiagnosticsState}} is {{enum|Complete|DiagnosticsState}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the response time in {{units}} the most recent trace route test.  If a route  could not be determined, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RouteHopsNumberOfEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.TraceRoute.RouteHops.{i}." access="readOnly" numEntriesParameter="RouteHopsNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:noUniqueKeys="true">
      <description>
        Contains the array of hop results returned. If a route could not be determined, this array will be empty
      </description>
      <parameter name="Host" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter indicating the Host Name if DNS is able to resolve or IP Address of a hop along the discovered  route.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostAddress" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          If this parameter is not {{empty}} it will contain the last IP address of the host returned for this hop and the  {{param|Host}} will contain the Host Name returned from the reverse DNS query.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ErrorCode" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Contains the error code returned for this hop. This code is directly from the ICMP CODE field.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RTTimes" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Each list item contains one or more round trip times in {{units}} (one for each repetition) for this hop.
          A list item of 0 indicates that the corresponding response was not received. Round trip times of less than 1 {{units}} MUST be rounded up to 1.
          The number of list entries is determined by the value of {{param|#.NumberOfTries}}.
        </description>
        <syntax>
          <list minItems="1" maxItems="3">
            <size maxLength="16"/>
          </list>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.DownloadDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines the diagnostics configuration for a HTTP and FTP DownloadDiagnostics Test.
        Files received in the DownloadDiagnostics do not require file storage on the CPE device.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          Indicate the availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}} and remove all object instances from {{object|PerConnectionResult}} and {{object|IncrementalResult}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}} and remove all object instances from {{object|PerConnectionResult}} and {{object|IncrementalResult}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}} and remove all object instances from {{object|PerConnectionResult}} and {{object|IncrementalResult}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Completed" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_NoRouteToHost" access="readOnly"/>
            <enumeration value="Error_InitConnectionFailed" access="readOnly"/>
            <enumeration value="Error_NoResponse" access="readOnly"/>
            <enumeration value="Error_TransferFailed" access="readOnly"/>
            <enumeration value="Error_PasswordRequestFailed" access="readOnly"/>
            <enumeration value="Error_LoginFailed" access="readOnly"/>
            <enumeration value="Error_NoTransferMode" access="readOnly"/>
            <enumeration value="Error_NoPASV" access="readOnly"/>
            <enumeration value="Error_IncorrectSize" access="readOnly"/>
            <enumeration value="Error_Timeout" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The IP-layer interface over which the test is to be performed. Example: Device.IP.Interface.1
          If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (''Forwarding'' table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadURL" access="readWrite" dmr:version="2.0">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the CPE to perform the download on. This parameter MUST be in the form of a valid HTTP {{bibref|RFC2616}} or FTP {{bibref|RFC959}} URL.
          * When using FTP transport, FTP binary transfer MUST be used.
          * When using HTTP transport, persistent connections MUST be used and pipelining MUST NOT be used.
          * When using HTTP transport the HTTP Authentication MUST NOT be used.
          Note: For time based tests ({{param|TimeBasedTestDuration}} &gt; 0) the ACS MAY add a hint to duration of the test to the URL.  See {{bibref|TR-143a1|Section 4.3}} for more details.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadTransports" access="readOnly" dmr:version="2.0">
        <description>
          Supported ''DownloadDiagnostics'' transport protocols for a CPE device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP"/>
            <enumeration value="FTP" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadDiagnosticMaxConnections" access="readOnly" dmr:version="2.9">
        <description>
          Indicates the maximum number of connections that are supported by Download Diagnostics.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DownloadDiagnosticsMaxIncrementalResult" access="readOnly" dmr:version="2.9">
        <description>
          The maximum number of rows in {{object|IncrementalResult}} that the CPE will store.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.0">
        <description>
          The DiffServ code point for marking packets transmitted in the test.
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EthernetPriority" access="readWrite" dmr:version="2.0">
        <description>
          Ethernet priority code for marking packets transmitted in the test (if applicable).
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TimeBasedTestDuration" access="readWrite" dmr:version="2.9">
        <description>
          Controls time based testing {{bibref|TR-143a1|Section 4.3}}. When {{param}} &gt; 0, {{param}} is the duration in {{units}} of a time based test. If {{param}} is 0, the test is not based on time, but on the size of the file to be downloaded.  The default value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="999"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TimeBasedTestMeasurementInterval" access="readWrite" dmr:version="2.9">
        <description>
          The measurement interval duration in {{units}} for objects in {{object|IncrementalResult}} for a time based FTP/HTTP download test (when {{param|TimeBasedTestDuration}} &gt; 0).  The default value SHOULD be 0, which implies {{object|IncrementalResult}} collection is disabled.
          For example if {{param|TimeBasedTestDuration}} is 90 seconds and {{param}} is 10 {{units}}, there will be 9 results in {{object|IncrementalResult}}, each with a 10 {{units}} duration.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="999"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TimeBasedTestMeasurementOffset" access="readWrite" dmr:version="2.9">
        <description>
          This {{param}} works in conjunction with {{param|TimeBasedTestMeasurementInterval}} to allow the interval measurement to start a number of {{units}} after {{param|BOMTime}}. The test measurement interval in {{object|IncrementalResult}} starts at time {{param|BOMTime}} + {{param}} to allow for slow start window removal of file transfers.
          This {{param}} is in {{units}}.  The default value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.9">
        <description>
          Indicates the IP protocol version to be used.  The default value SHOULD be {{enum|Any}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Any">
              <description>
                Use either IPv4 or IPv6 depending on the system preference.
              </description>
            </enumeration>
            <enumeration value="IPv4">
              <description>
                Use IPv4 for the requests
              </description>
            </enumeration>
            <enumeration value="IPv6">
              <description>
                Use IPv6 for the requests.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfConnections" access="readWrite" dmr:version="2.9">
        <description>
          The number of connections to be used in the test.  The default value SHOULD be 1.  {{param}} MUST NOT be set to a value greater than {{param|DownloadDiagnosticMaxConnections}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IPAddressUsed" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Indicates which IP address was used to send the request.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the client sends the GET command.
          * For FTP this is the time at which the client sends the RTRV command.
          If multiple connections are used, then {{param}} is set to the earliest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the first data packet is received.
          * For FTP this is the time at which the client receives the first data packet on the data connection.
          If multiple connections are used, then {{param}} is set to the earliest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the last data packet is received.
          * For FTP this is the time at which the client receives the last packet on the data connection.
          If multiple connections are used, then {{param}} is set to the latest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestBytesReceived" access="readOnly" dmr:version="2.0">
        <description>
          The number of {{units}} received during the FTP/HTTP transaction including FTP/HTTP headers, between {{param|BOMTime}} and {{param|EOMTime}} across all connections.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" dmr:version="2.0">
        <description>
          The total number of {{units}} (at the IP layer) received on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestBytesReceivedUnderFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The number of {{units}} of the test file received between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}} across all connections.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceivedUnderFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received in between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|Interface}} object at the latest {{param|PerConnectionResult.{i}.BOMTime}} and at the earliest {{param|PerConnectionResult.{i}.EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSentUnderFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|Interface}} object at the latest {{param|PerConnectionResult.{i}.BOMTime}} and at the earliest {{param|PerConnectionResult.{i}.EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodOfFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The period of time in {{units}} between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}} of the test.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection.
          Note: Interval of 1 microsecond SHOULD be supported.
          If multiple connections are used, then {{param}} is set to the latest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is the time at which the TCP ACK to the socket opening the data connection was received.
          Note: Interval of 1 microsecond SHOULD be supported.
          If multiple connections are used, then {{param}} is set to the latest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="PerConnectionResultNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EnablePerConnectionResults" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The results must be returned in the {{object|PerConnectionResult}} table for every connection when set to {{true}}. The default value SHOULD be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IncrementalResultNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.DownloadDiagnostics.PerConnectionResult.{i}." access="readOnly" numEntriesParameter="PerConnectionResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        Results for individual connections.  This table is only populated when {{param|#.EnablePerConnectionResults}} is {{true}}.  A new object is created for each connection specified in {{param|#.NumberOfConnections}}.  Instance numbers MUST start at 1 and sequentially increment as new instances are created.  All instances are removed when {{param|#.DiagnosticsState}} is set to {{enum|Requested|#.DiagnosticsState}} or {{enum|None|#.DiagnosticsState}}.
      </description>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the client sends the GET command.
          * For FTP this is the time at which the client sends the RTRV command.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the first data packet is received.
          * For FTP this is the time at which the client receives the first data packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the last data packet is received.
          * For FTP this is the time at which the client receives the last packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The number of {{units}} of the test file received during the FTP/HTTP transaction including FTP/HTTP headers, between {{param|BOMTime}} and {{param|EOMTime}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|#.Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|#.Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is the time at which the TCP ACK to the socket opening the data connection was received.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.DownloadDiagnostics.IncrementalResult.{i}." access="readOnly" numEntriesParameter="IncrementalResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        Results for time segmented tests (tests where {{param|#.TimeBasedTestDuration}} &gt; 0 and {{param|#.TimeBasedTestMeasurementInterval}} &gt; 0).  This data is totaled across all connections in the test.  A new object is created every {{param|#.TimeBasedTestMeasurementInterval}} after that interval has completed.  Instance numbers MUST start at 1 and sequentially increment as new instances are created.  All instances are removed when {{param|#.DiagnosticsState}} is set to {{enum|Requested|#.DiagnosticsState}} or {{enum|None|#.DiagnosticsState}}.
      </description>
      <parameter name="TestBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Change in the value of {{param|#.TestBytesReceivedUnderFullLoading}} between {{param|StartTime}} and {{param|EndTime}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received on the Interface between {{param|StartTime}} and {{param|EndTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|#.Interface}} object at {{param|StartTime}} and at {{param|EndTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent on the Interface between {{param|StartTime}} and {{param|EndTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|#.Interface}} object at {{param|StartTime}} and at {{param|EndTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="StartTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The start time of this interval which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EndTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The end time of this interval which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.UploadDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines the diagnostics configuration for a HTTP or FTP UploadDiagnostics test.
        Files sent by the UploadDiagnostics do not require file storage on the CPE device, and MAY be an arbitrary stream of bytes.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" dmr:version="2.0">
        <description>
          Indicate the availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}} and remove all object instances from {{object||PerConnectionResult}} and {{object|IncrementalResult}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}} and remove all object instances from {{object|PerConnectionResult}} and {{object|IncrementalResult}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}} and remove all object instances from {{object|PerConnectionResult}} and {{object|IncrementalResult}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Completed" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_NoRouteToHost" access="readOnly"/>
            <enumeration value="Error_InitConnectionFailed" access="readOnly"/>
            <enumeration value="Error_NoResponse" access="readOnly"/>
            <enumeration value="Error_PasswordRequestFailed" access="readOnly"/>
            <enumeration value="Error_LoginFailed" access="readOnly"/>
            <enumeration value="Error_NoTransferMode" access="readOnly"/>
            <enumeration value="Error_NoPASV" access="readOnly"/>
            <enumeration value="Error_NoCWD" access="readOnly"/>
            <enumeration value="Error_NoSTOR" access="readOnly"/>
            <enumeration value="Error_NoTransferComplete" access="readOnly"/>
            <enumeration value="Error_Timeout" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The IP-layer interface over which the test is to be performed. Example: Device.IP.Interface.1
          If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (''Forwarding'' table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadURL" access="readWrite" dmr:version="2.0">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the CPE to Upload to. This parameter MUST be in the form of a valid HTTP {{bibref|RFC2616}} or FTP {{bibref|RFC959}} URL.
          * When using FTP transport, FTP binary transfer MUST be used.
          * When using HTTP transport, persistent connections MUST be used and pipelining MUST NOT be used.
          * When using HTTP transport the HTTP Authentication MUST NOT be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadTransports" access="readOnly" dmr:version="2.0">
        <description>
          Supported ''UploadDiagnostics'' transport protocols for a CPE device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP"/>
            <enumeration value="FTP" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadDiagnosticsMaxConnections" access="readOnly" dmr:version="2.9">
        <description>
          Indicates the maximum number of connections that are supported by Upload Diagnostics.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UploadDiagnosticsMaxIncrementalResult" access="readOnly" dmr:version="2.9">
        <description>
          The maximum number of rows in {{object|IncrementalResult}} that the CPE will store.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.0">
        <description>
          DiffServ code point for marking packets transmitted in the test.
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EthernetPriority" access="readWrite" dmr:version="2.0">
        <description>
          Ethernet priority code for marking packets transmitted in the test (if applicable).
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestFileLength" access="readWrite" dmr:version="2.0">
        <description>
          The size of the file (in bytes) to be uploaded to the server.
          The CPE MUST insure the appropriate number of bytes are sent.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TimeBasedTestDuration" access="readWrite" dmr:version="2.9">
        <description>
          Controls time based testing {{bibref|TR-143a1|Section 4.3}}. When {{param}} &gt; 0, {{param}} is the duration in {{units}} of a time based test. If {{param}} is 0, the test is not based on time, but on the size of the file to be uploaded.  The default value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="999"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TimeBasedTestMeasurementInterval" access="readWrite" dmr:version="2.9">
        <description>
          The measurement interval duration in {{units}} for objects in {{object|IncrementalResult}} for a time based FTP/HTTP upload test (when {{param|TimeBasedTestDuration}} &gt; 0).  The default value SHOULD be 0, which implies {{object|IncrementalResult}} collection is disabled.
          For example if {{param|TimeBasedTestDuration}} is 90 seconds and {{param}} is 10 {{units}}, there will be 9 results in {{object|IncrementalResult}}, each with a 10 {{units}} duration.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="999"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TimeBasedTestMeasurementOffset" access="readWrite" dmr:version="2.9">
        <description>
          This {{param}} works in conjunction with {{param|TimeBasedTestMeasurementInterval}} and allows the interval measurement to start a number of {{units}} after {{param|BOMTime}}. The test measurement interval in  {{object|IncrementalResult}} starts at time {{param|BOMTime}} + {{param}} to allow for slow start window removal of file transfers.
          This {{param}} is in {{units}}.  The default value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.9">
        <description>
          Indicates the IP protocol version to be used.  The default value SHOULD be {{enum|Any}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Any">
              <description>
                Use either IPv4 or IPv6 depending on the system preference.
              </description>
            </enumeration>
            <enumeration value="IPv4">
              <description>
                Use IPv4 for the requests
              </description>
            </enumeration>
            <enumeration value="IPv6">
              <description>
                Use IPv6 for the requests.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfConnections" access="readWrite" dmr:version="2.9">
        <description>
          The number of connections to be used in the test.  The default value SHOULD be 1.  {{param}} MUST NOT be set to a value greater than {{param|UploadDiagnosticsMaxConnections}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IPAddressUsed" access="readOnly" dmr:version="2.9">
        <description>
          Indicates which IP address was used to send the request.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the client sends the GET command.
          * For FTP this is the time at which the client sends the RTRV command.
          If multiple connections are used, then {{param}} is set to the earliest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the first data packet is received.
          * For FTP this is the time at which the client receives the first data packet on the data connection.
          If multiple connections are used, then {{param}} is set to the earliest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the last data packet is received.
          * For FTP this is the time at which the client receives the last packet on the data connection.
          If multiple connections are used, then {{param}} is set to the latest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestBytesSent" access="readOnly" dmr:version="2.9">
        <description>
          The number of {{units}} of the test file sent during the FTP/HTTP transaction including FTP/HTTP headers, between {{param|BOMTime}} and {{param|EOMTime}} acrosss all connections.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" dmr:version="2.0">
        <description>
          The total number of {{units}} (at the IP layer) sent on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestBytesSentUnderFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The number of {{units}} of the test file sent between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}} across all connections.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceivedUnderFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}} across all connections in the test.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|Interface}} object at the latest {{param|PerConnectionResult.{i}.BOMTime}} and at the earliest {{param|PerConnectionResult.{i}.EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSentUnderFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}} across all connections in the test.  This MAY be calculated by sampling Stats.bytesSent on the {{param|Interface}} object at the latest {{param|PerConnectionResult.{i}.BOMTime}} and at the earliest {{param|PerConnectionResult.{i}.EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodOfFullLoading" access="readOnly" dmr:version="2.9">
        <description>
          The period of time in {{units}} between the latest {{param|PerConnectionResult.{i}.BOMTime}} and the earliest {{param|PerConnectionResult.{i}.EOMTime}} of the test.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection.
          Note: Interval of 1 microsecond SHOULD be supported.
          If multiple connections are used, then {{param}} is set to the latest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is the time at which the TCP ACK to the socket opening the data connection was received.
          Note: Interval of 1 microsecond SHOULD be supported.
          If multiple connections are used, then {{param}} is set to the latest {{param}} across all connections.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="PerConnectionResultNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EnablePerConnectionResults" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The results must be returned in the {{object|PerConnectionResult}} table for every connection when set to {{true}}. The default value SHOULD be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IncrementalResultNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.UploadDiagnostics.PerConnectionResult.{i}." access="readOnly" numEntriesParameter="PerConnectionResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        Results for individual connections.  This table is only populated when {{param|#.EnablePerConnectionResults}} is {{true}}.  A new object is created for each connection specified in {{param|#.NumberOfConnections}}.  Instance numbers MUST start at 1 and sequentially increment as new instances are created.  All instances are removed when {{param|#.DiagnosticsState}} is set to {{enum|Requested|#.DiagnosticsState}} or {{enum|None|#.DiagnosticsState}}.
      </description>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the client sends the GET command.
          * For FTP this is the time at which the client sends the RTRV command.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the first data packet is received.
          * For FTP this is the time at which the client receives the first data packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the last data packet is received.
          * For FTP this is the time at which the client receives the last packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The number of {{units}} of the test file sent during the FTP/HTTP transaction including FTP/HTTP headers, between {{param|BOMTime}} and {{param|EOMTime}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|#.Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|#.Interface}} object at {{param|BOMTime}} and at {{param|EOMTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          * For HTTP this is the time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is the time at which the TCP ACK to the socket opening the data connection was received.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.UploadDiagnostics.IncrementalResult.{i}." access="readOnly" numEntriesParameter="IncrementalResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        Results for time segmented tests (tests where {{param|#.TimeBasedTestDuration}} &gt; 0 and {{param|#.TimeBasedTestMeasurementInterval}} &gt; 0).  This data is totaled across all connections in the test.  A new object is created every {{param|#.TimeBasedTestMeasurementInterval}} after that interval has completed.  Instance numbers MUST start at 1 and sequentially increment as new instances are created.  All instances are removed when {{param|#.DiagnosticsState}} is set to {{enum|Requested|#.DiagnosticsState}} or {{enum|None|#.DiagnosticsState}}.
      </description>
      <parameter name="TestBytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Change in the value of {{param|#.TestBytesSent}} between {{param|StartTime}} and {{param|EndTime}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) received on the Interface between {{param|StartTime}} and {{param|EndTime}}.  This MAY be calculated by sampling Stats.bytesReceived on the {{param|#.Interface}} object at {{param|StartTime}} and at {{param|EndTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" dmr:version="2.9">
        <description>
          The total number of {{units}} (at the IP layer) sent on the Interface between {{param|StartTime}} and {{param|EndTime}}.  This MAY be calculated by sampling Stats.bytesSent on the {{param|#.Interface}} object at {{param|StartTime}} and at {{param|EndTime}} and subtracting.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="StartTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The start time of this interval which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EndTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The end time of this interval which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.UDPEchoConfig." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object allows the CPE to be configured to perform the UDP Echo Service defined in {{bibref|RFC862}} and UDP Echo Plus Service defined in {{bibref|TR-143|Appendix A.1}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          MUST be enabled to receive UDP echo. When enabled from a disabled state all related timestamps, statistics and UDP Echo Plus counters are cleared.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference|IP-layer interface over which the CPE MUST listen and receive UDP echo requests on}}
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST listen and receive UDP echo requests on all interfaces.
          Note: Interfaces behind a NAT MAY require port forwarding rules configured in the Gateway to enable receiving the UDP packets.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SourceIPAddress" access="readWrite" dmr:version="2.0">
        <description>
          The Source IP address of the UDP echo packet. The CPE MUST only respond to a UDP echo from this source IP address.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="UDPPort" access="readWrite" dmr:version="2.0">
        <description>
          The UDP port on which the UDP server MUST listen and respond to UDP echo requests.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EchoPlusEnabled" access="readWrite" dmr:version="2.0">
        <description>
          If {{true}} the CPE will perform necessary packet processing for UDP Echo Plus packets.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EchoPlusSupported" access="readOnly" dmr:version="2.0">
        <description>
          {{true}} if UDP Echo Plus is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Incremented upon each valid UDP echo packet received.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsResponded" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Incremented for each UDP echo response sent.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The number of UDP received bytes including payload and UDP header after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesResponded" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The number of UDP responded bytes, including payload and UDP header sent after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TimeFirstPacketReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456,
          The time that the server receives the first UDP echo packet after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TimeLastPacketReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          The time that the server receives the most recent UDP echo packet.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.UDPEchoDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object defines the diagnostics configuration for a UDP Echo test {{bibref|TR-143a1|Appendix A.1}} defined in {{bibref|RFC862}} or a UDP Echo Plus test defined in {{bibref|TR-143a1|Appendix A.1}}.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Indicate the availability of diagnostic data. {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed value is {{enum|Requested}}. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic. When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}} and remove all object instances from {{object|IndividualPacketResult}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}} and remove all object instances from {{object|IndividualPacketResult}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}} and remove all object instances from {{object|IndividualPacketResult}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Completed" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.9">
        <description>
          {{reference|the IP-layer interface over which the test is to be performed|ignore}} Example: Device.IP.Interface.1
          If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (''Forwarding'' table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection. .WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection. .IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Host name or address of the host to perform tests to.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Port on the host to perform tests to.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Number of repetitions of the test to perform before reporting the results. The default value SHOULD be 1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Timeout in {{units}} for the test. That is, the amount of time to wait for the return of a packet that was sent to the {{param|Host}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Size of the data block in {{units}} to be sent for each packet.  The default value SHOULD be 24.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="bytes"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          DiffServ codepoint to be used for the test packets. The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="InterTransmissionTime" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The time in {{units}} between the {{param|NumberOfRepetitions}} of packets sent during a given test.  The default value SHOULD be 1000.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.9">
        <description>
          Indicates the IP protocol version to be used.  The default value SHOULD be {{enum|Any}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Any">
              <description>
                Use either IPv4 or IPv6 depending on the system preference.
              </description>
            </enumeration>
            <enumeration value="IPv4">
              <description>
                Use IPv4 for the requests
              </description>
            </enumeration>
            <enumeration value="IPv6">
              <description>
                Use IPv6 for the requests.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPAddressUsed" access="readOnly" dmr:version="2.9">
        <description>
          Indicates which IP address was used to send the request.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" dmr:version="2.9">
        <description>
          Result parameter indicating the number of successful packets (those in which a successful response was received prior to the timeout) in the most recent test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" dmr:version="2.9">
        <description>
          Result parameter indicating the number of failed packets (those in which a successful response was not received prior to the timeout) in the most recent test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" dmr:version="2.9">
        <description>
          Result parameter indicating the average response time in {{units}} over all repetitions with successful responses of the most recent test. If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" dmr:version="2.9">
        <description>
          Result parameter indicating the minimum response time in {{units}} over all repetitions with successful responses of the most recent test. If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" dmr:version="2.9">
        <description>
          Result parameter indicating the maximum response time in {{units}} over all repetitions with successful responses of the most recent test. If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EnableIndividualPacketResults" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The results must be returned in the {{object|IndividualPacketResult}} table for every repetition of the test when set to {{true}}. The default value SHOULD be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IndividualPacketResultNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UDPEchoDiagnosticsMaxResults" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The maximum number of rows in {{object|IndividualPacketResult}} that the CPE will store.  If a test would create more rows than {{param}} only the first {{param}} rows are present in {{object|IndividualPacketResult}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.UDPEchoDiagnostics.IndividualPacketResult.{i}." access="readOnly" numEntriesParameter="IndividualPacketResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        This object provides the results from individual UDPEchoPlus test packets collected during a test if {{param|#.EnableIndividualPacketResults}} is set to true.  When {{param|#.DiagnosticsState}} is set to {{enum|Completed|#.DiagnosticsState}} it should contain {{param|#.NumberOfRepetitions}} objects.  Instance numbers MUST start at 1 and sequentially increment as new instances are created.  The instance number should match the TestIterationNumber field of the request and response packet.  All instances are removed when {{param|#.DiagnosticsState}} is set to {{enum|Requested|#.DiagnosticsState}} or {{enum|None|#.DiagnosticsState}}.
      </description>
      <parameter name="PacketSuccess" access="readOnly" dmr:version="2.9">
        <description>
          Indicates that the response to this UDP Echo Plus packet sent was received by the client. When this value is {{true}}, then all the remaining parameters in this instance are valid. Otherwise only the values originally set by the CPE client (e.g. {{param|PacketSendTime}} and {{param|TestGenSN}}) MAY be set to valid values.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketSendTime" access="readOnly" dmr:version="2.9">
        <description>
          Time the client sent this UDP Echo Plus packet in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="PacketReceiveTime" access="readOnly" dmr:version="2.9">
        <description>
          Time the client receives the response packet in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456Z
          If this response is never received, {{param}} SHOULD be set to the Unknown Time value as specified in {{bibref|TR-106a7|Section 3.2.2}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestGenSN" access="readOnly" dmr:version="2.9">
        <description>
          The TestGenSN field in the UDPEcho Plus packet {{bibref|TR-143a1|Section A.1.4}} sent by the CPE client.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TestRespSN" access="readOnly" dmr:version="2.9">
        <description>
          The TestRespSN field in the response packet {{bibref|TR-143a1|Section A.1.4}} from the UDP Echo Plus server (i.e. {{param|#.Host}}) for this Echo Plus packet sent by the CPE client. If {{param|PacketSuccess}} is {{false}}, {{param}} SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TestRespRcvTimeStamp" access="readOnly" dmr:version="2.9">
        <description>
          The TestRespRcvTimeStamp field in the response packet {{bibref|TR-143a1|Section A.1.4}} from the UDP Echo Plus server (i.e. {{param|#.Host}}) to record the reception time of this UDP Echo Plus packet sent from the CPE client. If {{param|PacketSuccess}} is {{false}}, {{param}} SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestRespReplyTimeStamp" access="readOnly" dmr:version="2.9">
        <description>
          The TestRespReplyTimeStamp field in the response packet {{bibref|TR-143a1|Section A.1.4}} from the UDP Echo Plus server (i.e. {{param|#.Host}}) to record the server reply time of this UDP Echo Plus packet sent from the CPE client.
          That is, the time that the server returned the UDP Echo Plus packet. If {{param|PacketSuccess}} is {{false}}, {{param}} SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestRespReplyFailureCount" access="readOnly" dmr:version="2.9">
        <description>
          The count value that was set by the UDP Echo Plus server (i.e. {{param|#.Host}}) to record the number of dropped echo response packets by the server. This count is incremented if a valid echo request packet is received at a UDP EchoPlus server but for some reason cannot be responded to (e.g. due to local buffer overflow, CPU utilization, etc...).  If {{param|PacketSuccess}} is {{false}}, {{param}} SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IP.Diagnostics.ServerSelectionDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object provides access to a diagnostics test that performs either an ICMP Ping or UDP Echo ping against multiple hosts determining which one has the smallest average response time. There MUST be a ping response to the transmitted ping, or timeout, before the next ping is sent out.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When  writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in  this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the  {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one  of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are  indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to  allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by  the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result  parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to  {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test  being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this  object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Completed" access="readOnly"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.9">
        <description>
          {{reference|the IP-layer interface over which the test is to be performed|ignore}} Example: Device.IP.Interface.1
          If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (''Forwarding'' table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection. .WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection. .IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.9">
        <description>
          Indicates the IP protocol version to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Any">
              <description>
                Use either IPv4 or IPv6 depending on the system preference.
              </description>
            </enumeration>
            <enumeration value="IPv4">
              <description>
                Use IPv4 for the requests.
              </description>
            </enumeration>
            <enumeration value="IPv6">
              <description>
                Use IPv6 for the requests.
              </description>
            </enumeration>
          </string>
          <default type="factory" value="Any"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.9">
        <description>
          The protocol over which the test is to be performed.
        </description>
        <syntax>
          <string>
            <enumeration value="ICMP"/>
            <enumeration value="UDP Echo"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostList" access="readWrite" dmr:version="2.9">
        <description>
          Each entry is a Host name or address of a host to ping.
        </description>
        <syntax>
          <list maxItems="10"/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="2.9">
        <description>
          Number of repetitions of the ping test to perform for each {{param|HostList}} entry before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.9">
        <description>
          Timeout in {{units}} for each iteration of the ping test where the total number of iterations is the value of {{param|NumberOfRepetitions}} times the number of entities in the {{param|HostList}} Parameter.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FastestHost" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Result parameter indicating the Host (one of the items within the {{param|HostList}} Parameter) with the smallest average response time.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Result parameter indicating the minimum response time in {{units}} over all repetitions with successful responses of the most recent ping test for the Host identified in {{param|FastestHost}}. Success is defined by the underlying protocol used.   If there were no successful responses across all Hosts, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Result parameter indicating the average response time in {{units}} over all repetitions with successful responses of the most recent ping test for the Host identified in {{param|FastestHost}}. Success is defined by the underlying protocol used.   If there were no successful responses across all Hosts, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Result parameter indicating the maximum response time in {{units}} over all repetitions with successful responses of the most recent ping test for the Host identified in {{param|FastestHost}}. Success is defined by the underlying protocol used.   If there were no successful responses across all Hosts, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt>
            <units value="microseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IPAddressUsed" access="readOnly" dmr:version="2.9">
        <description>
          Indicates which IP address was used to send the request to the host identified in {{param|FastestHost}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LLDP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object contains Link Layer Discovery Protocol (LLDP) {{bibref|802.1AB-2009}} related objects and parameters.
      </description>
    </object>
    <object name="Device.LLDP.Discovery." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object is used for managing the discovery of LLDP devices.
        The CPE MAY, but need not, retain some or all of the information in this object across reboot.
      </description>
      <parameter name="DeviceNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LLDP.Discovery.Device.{i}." access="readOnly" numEntriesParameter="DeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        This table contains information about discovered LLDP devices.
      </description>
      <uniqueKey>
        <parameter ref="ChassisIDSubtype"/>
        <parameter ref="ChassisID"/>
      </uniqueKey>
      <parameter name="Interface" access="readOnly" dmr:version="2.8">
        <description>
          {{reference|the interface via which the LLDP device was discovered}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ChassisIDSubtype" access="readOnly" dmr:version="2.8">
        <description>
          The chassis identifier subtype, which is included in the value of the ''LLDPDU's'' Chassis ID TLV (TLV Type = 1).  The following subtype values are defined:
          * ''0'' (Reserved)
          * ''1'' (Chassis component)
          * ''2'' (Interface alias)
          * ''3'' (Port component)
          * ''4'' (MAC address)
          * ''5'' (Network address)
          * ''6'' (Interface name)
          * ''7'' (Locally assigned)
          * ''8-255'' (Reserved)
          Note: It is assumed that this integer might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, the Chassis ID is set to the representative MAC address (chassis ID subtype = 4) for ''HTIP-Ethernet Bridge''.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ChassisID" access="readOnly" dmr:version="2.8">
        <description>
          The chassis identifier, which is included in the value of the ''LLDPDU's'' Chassis ID TLV (TLV Type = 1).
          Note: It is assumed that this string might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, the Chassis ID is set to the representative MAC address. If ''LLDPDU''s are sent and received from two or more LLDP agents of the same ''HTIP-Ethernet Bridge'', this value is same in all ''LLDPDU''s.
        </description>
        <syntax>
          <string>
            <size minLength="1" maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.8">
        <description>
          {{list}}Indicates the full path names of all Host table entries, whether active or inactive, that correspond to this device.
          When the entries are added to or removed from the Host tables, the value of this parameter MUST be updated accordingly.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PortNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LLDP.Discovery.Device.{i}.Port.{i}." access="readOnly" numEntriesParameter="PortNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        This table contains information about ports on discovered LLDP devices.
      </description>
      <uniqueKey>
        <parameter ref="PortIDSubtype"/>
        <parameter ref="PortID"/>
      </uniqueKey>
      <parameter name="PortIDSubtype" access="readOnly" dmr:version="2.8">
        <description>
          The port identifier subtype, which is included in the value of the ''LLDPDU's'' Port ID TLV (TLV Type = 2).  The following subtype values are defined:
          * ''0'' (Reserved)
          * ''1'' (Interface alias)
          * ''2'' (Port component)
          * ''3'' (MAC address)
          * ''4'' (Network address)
          * ''5'' (Interface name)
          * ''6'' (Agent circuit ID)
          * ''7'' (Locally assigned)
          * ''8-255'' (Reserved)
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PortID" access="readOnly" dmr:version="2.8">
        <description>
          The port identifier, which is included in the value of the ''LLDPDU's'' Port ID TLV (TLV Type = 2).
        </description>
        <syntax>
          <string>
            <size minLength="1" maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TTL" access="readOnly" dmr:version="2.8">
        <description>
          The ''LLDPDU'' lifetime (in {{units}}), which is the value of the latest TimeToLive TLV (TLV Type = 3).
          If this value is 0, it means that the LLDP agent or the MAC service function of the port is stopped.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PortDescription" access="readOnly" dmr:version="2.8">
        <description>
          The port description, which is the value of the latest Port Description TLV (TLV Type = 4), or {{empty}} if no Port Description TLV has been received.
          Note: It is assumed that this string might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, the parameter value is likely to be one of the names defined in {{bibref|JJ-300.00|Appendix A (''List of Interface Standard Names'')}}.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddressList" access="readOnly" dmr:version="2.8">
        <description>
          The device's MAC addresses, which are included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127), or {{empty}} if no list of MAC addresses has been received.
          The parameter is relevant when there is a LLDP device which has a MAC copy function and has two or more MAC addresses.
          Note: It is assumed that it might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, the {{bibref|OUI}} in the third octet is E0271A (''TTC-OUI'') and the organizationally defined subtype in the sixth octet is 3 (''MAC Address List'').
        </description>
        <syntax>
          <list maxItems="255"/>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.8">
        <description>
          The date and time at which the last LLDPDU was received for this ({{object|#}},{{object}}).
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LLDP.Discovery.Device.{i}.Port.{i}.LinkInformation." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        The port's link information, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127).
        Note: It is assumed that this object might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, the {{bibref|OUI}} in the third octet is E0271A (''TTC-OUI'') and the organizationally defined subtype in the sixth octet is 2 (''Link Information'').
      </description>
      <parameter name="InterfaceType" access="readOnly" dmr:version="2.8">
        <description>
          The port's interface type, or 0 if no interface type has been received.
          Note: It is assumed that it might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, it's an IANA interface type {{bibref|IANAifType}}.
          For example, IANAifType defines the following interface types for wired line (UTP cable), wireless line, power line, and coaxial cable:
          * ''6'' (Wired line)
          * ''71'' (Wireless)
          * ''174'' (PLC)
          * ''236'' (Coaxial cable)
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MACForwardingTable" access="readOnly" dmr:version="2.8">
        <description>
          The port's MAC forwarding table, or the value is {{empty}} if no forwarding table was supplied.
        </description>
        <syntax>
          <list maxItems="255"/>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LLDP.Discovery.Device.{i}.DeviceInformation." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        The device information, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127).
        Note: It is assumed that this object might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, this table contains the Organizationally Specific TLV (TLV Type = 127) of ''LLDPDU'', in which the {{bibref|OUI}} in the third octet is E0271A (''TTC-OUI'') and the organizationally defined subtype in the sixth octet is 1 (''Device Information'').
      </description>
      <parameter name="DeviceCategory" access="readOnly" dmr:version="2.8">
        <description>
          Each list item indicates a device category (e.g."AV_TV" and "AV_Recorder"), or the value is {{empty}} if no device categories were provided.
          Note: It is assumed that this list might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. Standard HTIP device categories are defined in {{bibref|JJ-300.01}}. In this case, the maximum length of the list is 127 and of each item is 31, and any non-HTIP device categories SHOULD NOT conflict with standard HTIP device categories.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="2.8">
        <description>
          The manufacturer OUI, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127), or {{empty}} if no manufacturer OUI was provided.
          {{pattern}}
        </description>
        <syntax>
          <string>
            <size minLength="0" maxLength="6"/>
            <pattern value="">
              <description>
                {{empty}}
              </description>
            </pattern>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" dmr:version="2.8">
        <description>
          The model name, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127), or {{empty}} if no model name was provided.
          Note: It is assumed that this string might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}.
        </description>
        <syntax>
          <string>
            <size maxLength="31"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelNumber" access="readOnly" dmr:version="2.8">
        <description>
          The model number, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127), or {{empty}} if no model number was provided.
          Note: It is assumed that this string might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}.
        </description>
        <syntax>
          <string>
            <size maxLength="31"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorSpecificNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LLDP.Discovery.Device.{i}.DeviceInformation.VendorSpecific.{i}." access="readOnly" numEntriesParameter="VendorSpecificNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        The vendor-specific device information, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127).
        {{keys}}
        Note: It is assumed that this object might be used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. In this case, this table contains the Organizationally Specific TLV (TLV Type = 127) of ''LLDPDU'', in which the {{bibref|OUI}} in the third octet is E0271A (''TTC-OUI''), the organizationally defined subtype in the sixth octet is 1 (''Device Information''), and the device information ID in the seventh octet is 255 (''Vendor-specific extension field'').
      </description>
      <uniqueKey>
        <parameter ref="OrganizationCode"/>
        <parameter ref="InformationType"/>
      </uniqueKey>
      <parameter name="OrganizationCode" access="readOnly" dmr:version="2.8">
        <description>
          The vendor-specific organization code, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127).
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InformationType" access="readOnly" dmr:version="2.8">
        <description>
          The vendor-specific device information type, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127).
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Information" access="readOnly" dmr:version="2.8">
        <description>
          The vendor-specific device information, which is included in the value of the ''LLDPDU's'' Organizationally Specific TLV (TLV Type = 127).
        </description>
        <syntax>
          <string>
            <size maxLength="248"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        IPsec {{bibref|RFC4301}} object that supports the configuration of Encapsulating Security Payload (ESP) {{bibref|RFC4303}} and Authentication Header (AH) {{bibref|RFC4302}} in tunnel mode {{bibref|RFC4301|Section 3.2}}.
        Use of IKEv2 {{bibref|RFC5996}} is assumed.  The IPsec object does not currently support static configuration of tunnels and child Security Associations (SAs).
        See the IPsec Theory of Operation {{bibref|TR-181i2a5|Appendix IX}} for a description of the working of this IPsec data model.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables IPsec.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.5">
        <description>
          IPsec status.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AHSupported" access="readOnly" dmr:version="2.5">
        <description>
          Indicates whether or not Authentication Header (AH) {{bibref|RFC4302}} is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IKEv2SupportedEncryptionAlgorithms" access="readOnly" dmr:version="2.5">
        <description>
          Supported IKEv2 encryption algorithms {{bibref|IKEv2-params|Transform Type 1}}.  {{enum}}
          Note that these are the names from the above reference, transformed as follows:
          * Leading ''ENCR_'' (when present) discarded because they are all encryption algorithms so it's not needed.
          * Underscores changed to hyphens to preserve names used in existing data models (and because of inconsistent conventions).
          * Phrases collapsed where unambiguous, e.g. "with a(n) NN octet ICV" -&gt; "-NN".
          As additional algorithms are added to the above reference, this data model will be extended according to the above conventions.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="DES"/>
            <enumeration value="3DES"/>
            <enumeration value="RC5"/>
            <enumeration value="IDEA"/>
            <enumeration value="CAST"/>
            <enumeration value="BLOWFISH"/>
            <enumeration value="3IDEA"/>
            <enumeration value="AES-CBC"/>
            <enumeration value="AES-CTR"/>
            <enumeration value="AES-CCM-8"/>
            <enumeration value="AES-CCM-12"/>
            <enumeration value="AES-CCM-16"/>
            <enumeration value="AES-GCM-8"/>
            <enumeration value="AES-GCM-12"/>
            <enumeration value="AES-GCM-16"/>
            <enumeration value="CAMELLIA-CBC"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ESPSupportedEncryptionAlgorithms" access="readOnly" dmr:version="2.5">
        <description>
          Supported ESP encryption algorithms {{bibref|IKEv2-params|Transform Type 1}} {{bibref|RFC4835|Section 3.1.1}}.  {{enum}}
          Note that these are the names from the above reference, transformed as follows:
          * Leading ''ENCR_'' (when present) discarded because they are all encryption algorithms so it's not needed.
          * Underscores changed to hyphens to preserve names used in existing data models (and because of inconsistent conventions).
          * Phrases collapsed where unambiguous, e.g. "with a(n) NN octet ICV" -&gt; "-NN".
          * Some algorithms with apparently rather specialised application are omitted, e.g. ''ENCR_NULL_AUTH_AES_GMAC''.
          As additional algorithms are added to the above reference, this data model will be extended according to the above conventions.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="NULL"/>
            <enumeration value="DES-IV64"/>
            <enumeration value="DES"/>
            <enumeration value="3DES"/>
            <enumeration value="RC5"/>
            <enumeration value="IDEA"/>
            <enumeration value="CAST"/>
            <enumeration value="BLOWFISH"/>
            <enumeration value="3IDEA"/>
            <enumeration value="DES-IV32"/>
            <enumeration value="AES-CBC"/>
            <enumeration value="AES-CTR"/>
            <enumeration value="AES-CCM-8"/>
            <enumeration value="AES-CCM-12"/>
            <enumeration value="AES-CCM-16"/>
            <enumeration value="AES-GCM-8"/>
            <enumeration value="AES-GCM-12"/>
            <enumeration value="AES-GCM-16"/>
            <enumeration value="NULL-AUTH-AES-GMAC"/>
            <enumeration value="CAMELLIA-CBC"/>
            <enumeration value="CAMELLIA-CTR"/>
            <enumeration value="CAMELLIA-CCM-8"/>
            <enumeration value="CAMELLIA-CCM-12"/>
            <enumeration value="CAMELLIA-CCM-16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IKEv2SupportedPseudoRandomFunctions" access="readOnly" dmr:version="2.5">
        <description>
          Supported IKEv2 pseudo-random functions {{bibref|IKEv2-params|Transform Type 2}}.  {{enum}}
          Note that these are the names from the above reference, transformed as follows:
          * Leading ''PRF_'' (when present) discarded because they all pseudo-random functions so it's not needed.
          * Underscores changed to hyphens to preserve names used in existing data models.
          * Hyphen inserted after ''AES'' (or other acronym) when immediately followed by a key length.
          As additional functions are added to the above reference, this data model will be extended according to the above conventions.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HMAC-MD5"/>
            <enumeration value="HMAC-SHA1"/>
            <enumeration value="HMAC-TIGER"/>
            <enumeration value="AES-128-XCBC"/>
            <enumeration value="HMAC-SHA2-256"/>
            <enumeration value="HMAC-SHA2-384"/>
            <enumeration value="HMAC-SHA2-512"/>
            <enumeration value="AES-128-CMAC"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedIntegrityAlgorithms" access="readOnly" dmr:version="2.5">
        <description>
          Supported integrity algorithms {{bibref|IKEv2-params|Transform Type 3}}.  {{enum}}
          Note that these are the names from the above reference, transformed as follows:
          * Leading ''AUTH_'' (when present) discarded because they all authentication (integrity) algorithms so it's not needed.
          * Underscores changed to hyphens to preserve names used in existing data models.
          As additional algorithms are added to the above reference, this data model will be extended according to the above conventions.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="NONE"/>
            <enumeration value="HMAC-MD5-96"/>
            <enumeration value="HMAC-SHA1-96"/>
            <enumeration value="DES-MAC"/>
            <enumeration value="KPDK-MD5"/>
            <enumeration value="AES-XCBC-96"/>
            <enumeration value="HMAC-MD5-128"/>
            <enumeration value="HMAC-SHA1-160"/>
            <enumeration value="AES-CMAC-96"/>
            <enumeration value="AES-128-GMAC"/>
            <enumeration value="AES-192-GMAC"/>
            <enumeration value="AES-256-GMAC"/>
            <enumeration value="HMAC-SHA2-256-128"/>
            <enumeration value="HMAC-SHA2-256-192"/>
            <enumeration value="HMAC-SHA2-256-256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SupportedDiffieHellmanGroupTransforms" access="readOnly" dmr:version="2.5">
        <description>
          Supported Diffie-Hellman group transforms {{bibref|IKEv2-params|Transform Type 4}}.  {{enum}}
          Note that these are the names from the above reference, transformed as follows:
          * Name (other than ''NONE'') always starts with the type of group, currently ''MODP'' or ''ECP'' (implies ECP random).
          * This is followed by ''-NN'', where ''NN'' is the group length in bits.
          * this is followed by ''-PRIME-NN'' for groups with prime order subgroups, where ''NN'' is the subgroup length in bits.
          As additional algorithms are added to the above reference, this data model will be extended according to the above conventions.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="NONE"/>
            <enumeration value="MODP-768"/>
            <enumeration value="MODP-1024"/>
            <enumeration value="MODP-1536"/>
            <enumeration value="MODP-2048"/>
            <enumeration value="MODP-3072"/>
            <enumeration value="MODP-4096"/>
            <enumeration value="MODP-6144"/>
            <enumeration value="MODP-8192"/>
            <enumeration value="ECP-256"/>
            <enumeration value="ECP-384"/>
            <enumeration value="ECP-521"/>
            <enumeration value="MODP-1024-PRIME-160"/>
            <enumeration value="MODP-2048-PRIME-224"/>
            <enumeration value="MODP-2048-PRIME-256"/>
            <enumeration value="ECP-192"/>
            <enumeration value="ECP-224"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxFilterEntries" access="readOnly" dmr:version="2.5">
        <description>
          The maximum number of entries in the {{object|Filter}} table.
          A value of 0 means no specific limit.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxProfileEntries" access="readOnly" dmr:version="2.5">
        <description>
          The maximum number of entries in the {{object|Profile}} table.
          A value of 0 means no specific limit.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ProfileNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TunnelNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IKEv2SANumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        Global IPsec statistics.  These statistics include all IPsec traffic, i.e. all IKEv2 negotiation, IKEv2 SAs and child SAs.
        The CPE MUST reset global IPsec Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when IPsec is disabled ({{param|.IPsec.Enable}} is set to {{false}}) or when IPsec is enabled ({{param|.IPsec.Enable}} is set to {{true}}).
      </description>
      <parameter name="NegotiationFailures" access="readOnly" dmr:version="2.5">
        <description>
          The total number of times an IPsec negotiation failure has occurred.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} sent by IPsec.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} received by IPsec.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} sent by IPsec.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} received by IPsec.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="UnknownSPIErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to an unknown SPI (Security Parameter Index).
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DecryptionErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to ESP decryption errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="IntegrityErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to integrity errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ReplayErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to replay errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PolicyErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to policy errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OtherReceiveErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} discarded by IPsec due to errors other than unknown SPI, decryption, integrity, replay or policy errors. This can include packets dropped due to a lack of receive buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.5">
      <description>
        Filter table that represents the IPsec Security Policy Database (SPD) {{bibref|RFC4301|Section 4.4.1}} selection criteria.  Each (ordered) entry defines a set of selection criteria and references a {{object|#.Profile}} table entry that specifies how matching packets will be processed.
        SPD filtering is performed for all packets that might need to cross the IPsec boundary {{bibref|RFC4301|Section 3.1}}.  Given that IPsec operates at the IP level, this means that SPD filtering conceptually occurs after bridging and before routing.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables this IPsec Filter table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.5">
        <description>
          The status of this IPsec Filter table entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.5">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each packet, the highest ordered entry that matches the filter criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion. {{reference}}
          This specifies the ingress interface associated with the entry.  It MAY be a layer 1, 2 or 3 interface.  However, the types of interfaces for which filters can be instantiated is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          This specifies that all ingress interfaces are associated with the entry.  If {{true}}, the value of {{param|Interface}} is ignored since all ingress interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestIP" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Destination IP address.  {{empty}} indicates this criterion is not used, i.e. is ''ANY''.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMask" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Destination IP address mask.  If not {{empty}}, only the indicated network portion of the {{param|DestIP}} address is to be used for selection.  {{empty}} indicates that the full {{param|DestIP}} address is to be used for selection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIPExclude" access="readWrite" dmr:version="2.5">
        <description>
          If {{false}}, the rule matches only those packets that match the (masked) {{param|DestIP}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the (masked) {{param|DestIP}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceIP" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Source IP address.  {{empty}} indicates this criterion is not used, i.e. is ''ANY''.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMask" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Source IP address mask.  If not {{empty}}, only the indicated network portion of the {{param|SourceIP}} address is to be used for selection.  {{empty}} indicates that the full {{param|SourceIP}} address is to be used for selection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPExclude" access="readWrite" dmr:version="2.5">
        <description>
          If {{false}}, the rule matches only those packets that match the (masked) {{param|SourceIP}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the (masked) {{param|SourceIP}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Protocol number.  A value of -1 indicates this criterion is not used, i.e. is ''ANY''.
          Note that {{bibref|RFC4301}} refers to this as the ''Next Layer Protocol''.  It is obtained from the IPv4 ''Protocol'' or the IPv6 ''Next Header'' fields.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="255"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolExclude" access="readWrite" dmr:version="2.5">
        <description>
          If {{false}}, the rule matches only those packets that match {{param|Protocol}}, if specified.
          If {{true}}, the rule matches all packets except those that match {{param|Protocol}}, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestPort" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Destination port number.  A value of -1 indicates this criterion is not used, i.e. is ''ANY''.
          The value of this parameter is ignored for protocols that do not use ports, e.g. ICMP (1).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortRangeMax" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          If specified, indicates a destination port address range from {{param|DestPort}} through {{param}} (inclusive), in which case {{param}} MUST be greater than or equal to {{param|DestPort}}.
          A value of -1 indicates that no destination port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortExclude" access="readWrite" dmr:version="2.5">
        <description>
          If {{false}}, the rule matches only those packets that match {{param|DestPort}} (or port range), if specified.
          If {{true}}, the rule matches all packets except those that match {{param|DestPort}} (or port range), if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          Source port number.  A value of -1 indicates this criterion is not used, i.e. is ''ANY''.
          The value of this parameter is ignored for protocols that do not use ports, e.g. ICMP (1).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortRangeMax" access="readWrite" dmr:version="2.5">
        <description>
          SPD selection criterion.
          If specified, indicates a source port address range from {{param|SourcePort}} through {{param}} (inclusive), in which case {{param}} MUST be greater than or equal to {{param|SourcePort}}.
          A value of -1 indicates that no source port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortExclude" access="readWrite" dmr:version="2.5">
        <description>
          If {{false}}, the rule matches only those packets that match {{param|SourcePort}} (or port range), if specified.
          If {{true}}, the rule matches all packets except those that match {{param|SourcePort}} (or port range), if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ProcessingChoice" access="readWrite" dmr:version="2.5">
        <description>
          Indicates how packets that match this rule will be processed {{bibref|RFC4301|Section 4.4.1}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Discard">
              <description>
                Packet is not allowed to traverse the IPsec boundary; packet will be discarded
              </description>
            </enumeration>
            <enumeration value="Bypass">
              <description>
                Packet is allowed to bypass traverse the IPsec boundary without protection
              </description>
            </enumeration>
            <enumeration value="Protect">
              <description>
                Packet is afforded protection as specified by {{param|Profile}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="Bypass"/>
        </syntax>
      </parameter>
      <parameter name="Profile" access="readWrite" dmr:version="2.5">
        <description>
          The profile that defines the IPsec treatment for matching packets.  {{reference}}
          If {{param|ProcessingChoice}} is {{enum|Protect|ProcessingChoice}}, {{param}} MUST NOT be {{empty}}.  In this case, if it ever becomes {{empty}}, e.g. because the referenced profile is deleted, this IPsec Filter table entry is invalid and {{param|Status}} MUST be set to {{enum|Error_Misconfigured|Status}}.
          If {{param|ProcessingChoice}} is not {{enum|Protect|ProcessingChoice}}, {{param}} is ignored.
          Any changes to the referenced profile will have an immediate effect on any established IPsec tunnels.  Such changes will often force IKEv2 sessions and child SAs to be re-established.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Profile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.Profile.{i}." access="readWrite" numEntriesParameter="ProfileNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.5">
      <description>
        Profile table that represents the IPsec Security Policy Database (SPD) {{bibref|RFC4301|Section 4.4.1}} processing info.  Each entry defines the IPsec treatment for packets that match the {{object|#.Filter}} entries that reference the entry.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="MaxChildSAs" access="readWrite" dmr:version="2.5">
        <description>
          Controls the maximum number of child Security Association (SA) pairs that can be negotiated by a single IKEv2 session.
          If a new child SA pair is needed, but the current IKEv2 session already has {{param}} child SA pairs, an additional IKEv2 session (and therefore an additional IPsec tunnel) will be established.
          A value of 0 means no specific limit.
          Note that support for more than one child SA pair per IKEv2 session is OPTIONAL {{bibref|RFC5996|Section 1.3}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoints" access="readWrite" dmr:version="2.5">
        <description>
          The host name or IP address of the remote IPsec tunnel endpoint.  If more than one name/address is supplied, they will be tried in turn, i.e. they are in decreasing order of precedence.
        </description>
        <syntax>
          <list maxItems="4"/>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" dmr:version="2.5">
        <description>
          Identifier of the forwarding policy associated with traffic that is associated with this profile.
          The forwarding policy can be referenced by entries in the {{object|##.Routing.Router.{i}.IPv4Forwarding}} and {{object|##.Routing.Router.{i}.IPv6Forwarding}} tables, and therefore allows SPD selection criteria to influence the forwarding decision.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.5">
        <description>
          The "child" security protocol.
          This is not to be confused with {{object|#.Filter}}.{{param|#.Filter.{i}.Protocol}}, which is an SPD selector that can select packets that already have AH or ESP headers.  {{object}}.{{param}} selects whether AH or ESP will be used when encapsulating a packet.
        </description>
        <syntax>
          <string>
            <enumeration value="AH">
              <description>
                Authentication Header {{bibref|RFC4302}}; can only be selected if {{param|#.AHSupported}} is {{true}}
              </description>
            </enumeration>
            <enumeration value="ESP">
              <description>
                Encapsulating Security Payload {{bibref|RFC4303}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="ESP"/>
        </syntax>
      </parameter>
      <parameter name="IKEv2AuthenticationMethod" access="readWrite" dmr:version="2.5">
        <description>
          IKEv2 CPE authentication method {{bibref|RFC5996|Section 2.15}}. {{reference|an enabled row in the {{object|.Security.Certificate}} table or in another table that contains appropriate CPE credentials}}
          If {{empty}}, or the referenced row is disabled or deleted, the CPE chooses the authentication method based on local policy.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IKEv2AllowedEncryptionAlgorithms" access="readWrite" dmr:version="2.5">
        <description>
          Allowed IKEv2 encryption algorithms.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.IKEv2SupportedEncryptionAlgorithms"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ESPAllowedEncryptionAlgorithms" access="readWrite" dmr:version="2.5">
        <description>
          Allowed ESP encryption algorithms.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.ESPSupportedEncryptionAlgorithms"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IKEv2AllowedPseudoRandomFunctions" access="readWrite" dmr:version="2.5">
        <description>
          Allowed IKEv2 pseudo-random functions.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.IKEv2SupportedPseudoRandomFunctions"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IKEv2AllowedIntegrityAlgorithms" access="readWrite" dmr:version="2.5">
        <description>
          Allowed IKEv2 integrity algorithms.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.SupportedIntegrityAlgorithms"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AHAllowedIntegrityAlgorithms" access="readWrite" dmr:version="2.5">
        <description>
          Allowed AH integrity algorithms {{bibref|IKEv2-params|Transform Type 3}} {{bibref|RFC4835|Section 3.2}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.SupportedIntegrityAlgorithms"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ESPAllowedIntegrityAlgorithms" access="readWrite" dmr:version="2.5">
        <description>
          Allowed ESP integrity algorithms {{bibref|IKEv2-params|Transform Type 3}} {{bibref|RFC4835|Section 3.1.1}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.SupportedIntegrityAlgorithms"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IKEv2AllowedDiffieHellmanGroupTransforms" access="readWrite" dmr:version="2.5">
        <description>
          Allowed IKEv2 Diffie-Hellman group transforms.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam=".IPsec.SupportedDiffieHellmanGroupTransforms"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IKEv2DeadPeerDetectionTimeout" access="readWrite" dmr:version="2.5">
        <description>
          IKEv2 Dead Peer Detection (DPD) timeout in {{units}}.  {{bibref|RFC5996|section 2.4}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IKEv2NATTKeepaliveTimeout" access="readWrite" dmr:version="2.5">
        <description>
          IKEv2 NAT traversal (NAT-T) keepalive timeout in {{units}}.  {{bibref|RFC3948|Section 4}}
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AntiReplayWindowSize" access="readWrite" dmr:version="2.5">
        <description>
          The size of the AH or ESP Anti-Replay Window.  {{bibref|RFC4302|Section B.2}} {{bibref|RFC4303|Section A2}}
          A value of 0 means that Sequence Number Verification is disabled.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DoNotFragment" access="readWrite" dmr:version="2.5">
        <description>
          Controls the value of the ''Do Not Fragment'' (DF) bit.  {{bibref|RFC4301|Section 8.1}}
        </description>
        <syntax>
          <string>
            <enumeration value="Set"/>
            <enumeration value="Clear"/>
            <enumeration value="Copy">
              <description>
                Copy from inner header; applies only when both inner and outer headers are IPv4
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="DSCPMarkPolicy" access="readWrite" dmr:version="2.5">
        <description>
          DSCP with which to mark the outer IP header for traffic that is associated with this IPsec channel.
          A value of -1 indicates copy from the incoming packet.
          A value of -2 indicates automatic marking of DSCP.
          De-tunneled packets are never re-marked.
          Automatic DSCP marking behavior is a local matter to the CPE, possibly influenced by other Broadband Forum standards that it supports.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2" maxInclusive="63"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="IKEv2SATrafficLimit" access="readWrite" dmr:version="2.5">
        <description>
          IKEv2 SA lifetime in {{units}}, or zero if there is no traffic constraint on its expiration.
          If both {{param}} and {{param|IKEv2SATimeLimit}} are non-zero, the IKEv2 SA is deleted when the first limit is reached.
        </description>
        <syntax>
          <unsignedLong>
            <units value="bytes"/>
          </unsignedLong>
        </syntax>
      </parameter>
      <parameter name="IKEv2SATimeLimit" access="readWrite" dmr:version="2.5">
        <description>
          IKEv2 SA lifetime in {{units}}, or zero if there is no time constraint on its expiration.
          If both {{param}} and {{param|IKEv2SATrafficLimit}} are non-zero, the IKEv2 SA is deleted when the first limit is reached.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="IKEv2SAExpiryAction" access="readWrite" dmr:version="2.5">
        <description>
          Action to take when an IKEv2 SA expires, whether as a result of hitting a traffic limit or a time limit.
        </description>
        <syntax>
          <string>
            <enumeration value="Renegotiate"/>
            <enumeration value="Delete"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ChildSATrafficLimit" access="readWrite" dmr:version="2.5">
        <description>
          Child SA lifetime in {{units}}, or zero if there is no traffic constraint on its expiration.
          If both {{param}} and {{param|ChildSATimeLimit}} are non-zero, the child SA is deleted when the first limit is reached.
        </description>
        <syntax>
          <unsignedLong>
            <units value="bytes"/>
          </unsignedLong>
        </syntax>
      </parameter>
      <parameter name="ChildSATimeLimit" access="readWrite" dmr:version="2.5">
        <description>
          Child SA lifetime in {{units}}, or zero if there is no time constraint on its expiration.
          If both {{param}} and {{param|ChildSATrafficLimit}} are non-zero, the child SA is deleted when the first limit is reached.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ChildSAExpiryAction" access="readWrite" dmr:version="2.5">
        <description>
          Action to take when a Child SA expires, whether as a result of hitting a traffic limit or a time limit.
        </description>
        <syntax>
          <string>
            <enumeration value="Renegotiate"/>
            <enumeration value="Delete"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SentCPAttrNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.Profile.{i}.SentCPAttr.{i}." access="readWrite" numEntriesParameter="SentCPAttrNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.5">
      <description>
        Each instance of this object represents an IKEv2 Configuration Payload (CP) {{bibref|RFC5996|Section 3.15}} Attribute that MUST, if enabled, be sent in IKEv2 CP CFG_REQUEST messages.  All such Attributes MUST be listed.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Type"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" dmr:version="2.5">
        <description>
          CP Attribute Type as described in {{bibref|RFC5996|Section 3.15.1}} and defined in {{bibref|IKEv2-params|IKEv2 Configuration Payload Attribute Types}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="32767"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.5">
        <description>
          A hexbinary encoded CP Attribute Value as described in {{bibref|RFC5996|Section 3.15.1}} and defined in {{bibref|IKEv2-params|IKEv2 Configuration Payload Attribute Types}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.Tunnel.{i}." access="readOnly" numEntriesParameter="TunnelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.5">
      <description>
        Represents an IPsec tunnel, i.e. a virtual IP interface that models an IPsec tunnel entry point and exit point.  A {{object}} instance always references (and has the same lifetime as) a ({{enum|Tunnel|.IP.Interface.{i}.Type}},{{enum|Tunneled|.IP.Interface.{i}.Type}}) {{object|.IP.Interface}} pair.  The {{object}} instance models the IPsec-specific concepts, the {{enum|Tunnel|.IP.Interface.{i}.Type}} {{object|.IP.Interface}} instance models the generic concepts, and the {{enum|Tunneled|.IP.Interface.{i}.Type}} {{object|.IP.Interface}} instance exists only so it can be referenced by forwarding or filter rules.
        {{object}} instances are automatically created (as needed) when {{object|#.Filter}} instances are enabled and disabled.
        Each instance's {{param|Filters}} parameter references the {{object|#.Filter}} instances that require the {{object}} instance to exist.  If this list ever becomes {{empty}}, e.g. because all the referenced {{object|#.Filter}} instances have been disabled or deleted, the CPE MAY choose not to delete the {{object}} instance (and its associated ({{enum|Tunnel|.IP.Interface.{i}.Type}},{{enum|Tunneled|.IP.Interface.{i}.Type}}) {{object|.IP.Interface}} pair).  This can be desirable, because {{object|.QoS.Classification}}, {{object|.Routing.Router.{i}.IPv4Forwarding}}, {{object|.Routing.Router.{i}.IPv6Forwarding}} etc instances might be referencing the {{object|.IP.Interface}} instances.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="TunnelInterface"/>
        <parameter ref="TunneledInterface"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="TunnelInterface" access="readOnly" dmr:version="2.5">
        <description>
          The corresponding auto-created {{enum|Tunnel|Device.IP.Interface.{i}.Type}} {{object|.IP.Interface}} instance.  {{reference||delete}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TunneledInterface" access="readOnly" dmr:version="2.5">
        <description>
          The corresponding auto-created {{enum|Tunneled|Device.IP.Interface.{i}.Type}} {{object|.IP.Interface}} instance.  {{reference||delete}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Filters" access="readOnly" dmr:version="2.5">
        <description>
          The {{object|#.Filter}} instances that require this {{object}} instance to exist.  {{reference}}
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent=".IPsec.Filter." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.Tunnel.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        Statistics for this IPsec tunnel, i.e. all traffic that has passed through the tunnel, including IKEv2 negotiation, IKEv2 SA and ChildSA traffic.
        The CPE MUST reset the tunnel's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the tunnel becomes operationally down due to a previous administrative down (i.e. its associated {{param|.IP.Interface.{i}.Status}} parameter transitions to a down state after the tunnel has been disabled) or when the tunnel becomes administratively up (i.e. its associated {{param|.IP.Interface.{i}.Enable}} parameter transition from {{false}} to {{true}}).
        Note that this object does not include generic statistics that are available in the associated {{object|.IP.Interface.{i}.Stats}} object.
      </description>
      <parameter name="DecryptionErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} discarded due to ESP decryption errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="IntegrityErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} discarded due to integrity errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ReplayErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} discarded due to replay errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PolicyErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} discarded due to policy errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OtherReceiveErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} discarded due to errors other than decryption, integrity, replay or policy errors. This can include packets dropped due to a lack of receive buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.IKEv2SA.{i}." access="readOnly" numEntriesParameter="IKEv2SANumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.5" dmr:noUniqueKeys="true">
      <description>
        Represents an IKEv2 Security Association (SA), corresponding to an IKEv2 session.  Instances are automatically created and deleted as IKEv2 SAs are created and deleted.
      </description>
      <uniqueKey>
        <parameter ref="Tunnel"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.5">
        <description>
          The current operational state of the IKEv2 SA.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tunnel" access="readOnly" dmr:version="2.5">
        <description>
          The associated {{object|#.Tunnel}} instance.  {{reference}}
          Note that {{param}} is a unique key, i.e only one {{object}} instance is associated with a given {{object|#.Tunnel}} instance.  During rekeying {{bibref|RFC5996|Section 2.8}}, a new IKEv2 SA is created and inherits the existing IKEv2 SA's child SAs, then the old IKEv2 SA is deleted.  From the management point of view the new and old IKEv2 SAs are the same SA and MUST be modeled using the same {{object}} instance.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Tunnel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LocalAddress" access="readOnly" dmr:version="2.5">
        <description>
          The local IP address that this IKEv2 SA was negotiated with.  This is assigned via IKEv2 and will also be available via the associated {{object|#.Tunnel}}'s {{param|#.Tunnel.{i}.TunnelInterface}} {{object|##.IP.Interface.{i}.IPv4Address}} or {{object|##.IP.Interface.{i}.IPv6Address}} table (as appropriate).
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="RemoteAddress" access="readOnly" dmr:version="2.5">
        <description>
          The IP address of the peer that this IKEv2 SA was negotiated with.  This will be the IP address of one of the security gateways configured via {{param|#.Profile.{i}.RemoteEndpoints}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="EncryptionAlgorithm" access="readOnly" dmr:version="2.5">
        <description>
          The encryption algorithm applied to traffic carried by this IKEv2 SA.
          This will be one of the {{param|#.Profile.{i}.IKEv2AllowedEncryptionAlgorithms}} from the {{object|#.Profile}} instance via which this IKEv2 SA was created.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncryptionKeyLength" access="readOnly" dmr:version="2.5">
        <description>
          The length of the encryption key in {{units}} used for the algorithm specified in the {{param|EncryptionAlgorithm}} parameter.
          The value is 0 if the key length is implicit in the specified algorithm or there is no encryption applied.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PseudoRandomFunction" access="readOnly" dmr:version="2.5">
        <description>
          The pseudo-random function used by this IKEv2 SA.
          This will be one of the {{param|#.Profile.{i}.IKEv2AllowedPseudoRandomFunctions}} from the {{object|#.Profile}} instance via which this IKEv2 SA was created.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IntegrityAlgorithm" access="readOnly" dmr:version="2.5">
        <description>
          The integrity algorithm applied to the traffic carried by this IKEv2 SA.
          This will be one of the {{param|#.Profile.{i}.IKEv2AllowedIntegrityAlgorithms}} from the {{object|#.Profile}} instance via which this IKEv2 SA was created.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiffieHellmanGroupTransform" access="readOnly" dmr:version="2.5">
        <description>
          The Diffie-Hellman Group used by this IKEv2 SA.
          This will be one of the {{param|#.Profile.{i}.IKEv2AllowedDiffieHellmanGroupTransforms}} from the {{object|#.Profile}} instance via which this IKEv2 SA was created.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CreationTime" access="readOnly" dmr:version="2.5">
        <description>
          When this IKEv2 SA was set up.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="NATDetected" access="readOnly" dmr:version="2.5">
        <description>
          Whether NAT traversal is supported by the device and, if so, whether a NAT was detected.
        </description>
        <syntax>
          <string>
            <enumeration value="None"/>
            <enumeration value="Local"/>
            <enumeration value="Remote"/>
            <enumeration value="Unsupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReceivedCPAttrNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChildSANumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.IKEv2SA.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        Statistics for this IKEv2 Security Association (SA).
        The CPE MUST reset the IKEv2 SA's Stats parameters (unless otherwise stated in individual object or parameter descriptions) whenever the associated {{param|#.Tunnel}} instance's Stats parameters are reset.
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} handled in the outbound direction by the IKEv2 SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} handled in the inbound direction by the IKEv2 SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} handled in the outbound direction by the IKEv2 SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.5">
        <description>
          The total number of {{units}} handled in the inbound direction by the IKEv2 SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.5">
        <description>
          The total number of outbound {{units}} from this IKEv2 SA discarded for any reason. This can include {{units}} dropped due to a lack of transmit buffer space.
          Note that this refers to IKE protocol {{units}}, and not to {{units}} carried by other SAs.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DecryptionErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} to this IKEv2 SA discarded due to decryption errors.
          Note that this refers to IKEv2 protocol {{units}}, and not to {units}} carried by other SAs.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="IntegrityErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} to this IKEv2 SA discarded due to integrity errors.
          Note that this refers to IKEv2 protocol {{units}}, and not to {{units}} carried by other SAs.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OtherReceiveErrors" access="readOnly" dmr:version="2.5">
        <description>
          The total number of inbound {{units}} to this IKEv2 SA discarded for reasons other than decryption or integrity errors. This can include {{units}} dropped due to a lack of receive buffer space.
          Note that this refers to IKEv2 protocol {{units}}, and not to {{units}} carried by other SAs.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.IKEv2SA.{i}.ReceivedCPAttr.{i}." access="readWrite" numEntriesParameter="ReceivedCPAttrNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.5" dmr:noUniqueKeys="true">
      <description>
        This is a transitory table that lists all the IKEv2 Configuration Payload (CP) {{bibref|RFC5996|Section 3.15}} Attributes that have been received via CFG_REPLY messages.  Table entries are automatically created to correspond with received Attributes. However, it is a local matter to the CPE when to delete old table entries.
        If the same Attribute is received multiple times, it is up to the CPE to decide which entries to include (i.e. whether the same Attribute will be present multiple times). In order to allow for the same Attribute to be present multiple times within the table, this table has no unique key defined.
      </description>
      <parameter name="Type" access="readOnly" dmr:version="2.5">
        <description>
          CP Attribute Type as described in {{bibref|RFC5996|Section 3.15.1}} and defined in {{bibref|IKEv2-params|IKEv2 Configuration Payload Attribute Types}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="32767"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.5">
        <description>
          A hexbinary encoded CP Attribute Value as described in {{bibref|RFC5996|Section 3.15.1}} and defined in {{bibref|IKEv2-params|IKEv2 Configuration Payload Attribute Types}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.IKEv2SA.{i}.ChildSA.{i}." access="readOnly" numEntriesParameter="ChildSANumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.5">
      <description>
        Represents a child Security Association (SA) pair, i.e. an inbound child SA and an outbound child SA.
      </description>
      <uniqueKey>
        <parameter ref="InboundSPI"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="OutboundSPI"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.5">
        <description>
          The current operational state of the child SA pair.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="InboundSPI" access="readOnly" dmr:version="2.5">
        <description>
          The inbound child SA's Security Parameter Index (SPI).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OutboundSPI" access="readOnly" dmr:version="2.5">
        <description>
          The outbound child SA's Security Parameter Index (SPI).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CreationTime" access="readOnly" dmr:version="2.5">
        <description>
          The date and time when the child SA was created.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPsec.IKEv2SA.{i}.ChildSA.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        Statistics for this child Security Association (SA).
        The CPE MUST reset the child SA's Stats parameters (unless otherwise stated in individual object or parameter descriptions) whenever the parent {{object|#}} instance's Stats parameters are reset.
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} handled by the outbound child SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} handled by the inbound child SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} handled by the outbound child SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} handled by the inbound child SA.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} discarded by the outbound child SA due to any error. This can include compression errors or errors due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DecryptionErrors" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} discarded by the inbound child SA due to decryption errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="IntegrityErrors" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} discarded by the inbound child SA due to integrity errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ReplayErrors" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} discarded by the inbound child SA due to replay errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PolicyErrors" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} discarded by the inbound child SA due to policy errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="OtherReceiveErrors" access="readOnly" dmr:version="2.5">
        <description>
          The number of {{units}} discarded by the inbound child SA due to errors other than decryption, integrity, replay or policy errors. This can include decompression errors or errors due to a lack of receive buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GRE." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        This object contains parameters associated with the Generic Routing Encapsulation (GRE) Tunnel ({{bibref|RFC2784}}) with Key and Sequence Number extensions ({{bibref|RFC2890}}). This object also provides a means to treat packets that are encapsulated within a GRE Tunnel by using a set of {{object|Filter}} objects to determine the treatment of the packet.
      </description>
      <parameter name="TunnelNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GRE.Tunnel.{i}." access="readWrite" numEntriesParameter="TunnelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        GRE Tunnel table, models the GRE Tunnel instance and represents the entry point and exit point of the tunnel in relation to the WAN interface. A {{object}} object has one or more {{object|Interface}} objects that further define the sessions or flows within the tunnel.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the tunnel.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The current operational state of the tunnel.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoints" access="readWrite" dmr:version="2.8">
        <description>
          The Fully Qualified Domain Name (FQDN) or IP address of the remote GRE tunnel endpoint. If more than one name/address is supplied, they will be tried in turn, i.e. they are in decreasing order of precedence.
        </description>
        <syntax>
          <list maxItems="4"/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="KeepAlivePolicy" access="readWrite" dmr:version="2.8">
        <description>
          The mechanism used to keep the tunnel from timing out at the {{param|ConnectedRemoteEndpoint}}.
        </description>
        <syntax>
          <string>
            <enumeration value="ICMP"/>
            <enumeration value="None"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveTimeout" access="readWrite" dmr:version="2.8">
        <description>
          The tunnel keepalive timeout in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="10"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveThreshold" access="readWrite" dmr:version="2.8">
        <description>
          Number of KeepAlive messages unacknowledged by the {{param|ConnectedRemoteEndpoint}} before the {{object}} is perceived failed.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="3"/>
        </syntax>
      </parameter>
      <parameter name="DeliveryHeaderProtocol" access="readWrite" dmr:version="2.8">
        <description>
          The protocol used for the delivery header.
        </description>
        <syntax>
          <string>
            <enumeration value="IPv4"/>
            <enumeration value="IPv6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" dmr:version="2.8">
        <description>
          If the specified entries in the {{object|#.Filter}} table do not match this {{object}} object or an instance of the {{object|Interface}} object for this {{object}} object, then the value of this parameter is applied to the delivery header of the packets in this {{object}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ConnectedRemoteEndpoint" access="readOnly" dmr:version="2.8">
        <description>
          The Fully Qualified Domain Name (FQDN) name or IP address of the connected remote GRE tunnel endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GRE.Tunnel.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Statistics for this GRE tunnel, i.e. all traffic that has passed through the tunnel.
        The device MUST reset the tunnel's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the tunnel becomes operationally down due to a previous administrative down (i.e., Status parameter transitions to a disabled state after the tunnel has been disabled) or when the tunnel becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="KeepAliveSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of KeepAlive {{units}} sent out the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="KeepAliveReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of KeepAlive {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} discarded by the tunnel due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by the tunnel that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GRE.Tunnel.{i}.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        GRE Interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}). The {{object}} object models the GRE Header as defined in {{bibref|RFC2784}} and extensions to the GRE Header as defined in {{bibref|RFC2890}}. The {{object}} object provides a way to discriminate how sessions or flows are encapsulated within the GRE Tunnel. In addition the {{object}} object represents the entry point and exit point of the tunnel in relation to the LAN interface. Unless the Key Identifier of {{bibref|RFC2890}} is supported there is only one instance of this {{object}} object per tunnel.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.8">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProtocolIdOverride" access="readWrite" dmr:version="2.8">
        <description>
          The Protocol ID assigned to this {{object}}. The Protocol Id is the EtherType value used to identify the encapsulated payload. When set to {{null}} the CPE determines the Protocol Id.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="UseChecksum" access="readWrite" dmr:version="2.8">
        <description>
          When {{true}}, includes the "Checksum" field in the GRE header as defined in {{bibref|RFC2784}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="KeyIdentifierGenerationPolicy" access="readWrite" dmr:version="2.8">
        <description>
          The method used to generate the Key Identifier extension as defined in.{{bibref|RFC2890}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Provisioned"/>
            <enumeration value="CPE_Generated" optional="true">
              <description>
                The generation of the Key field is CPE specific implementation.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="KeyIdentifier" access="readWrite" dmr:version="2.8">
        <description>
          When the value of {{param|KeyIdentifierGenerationPolicy}} is {{enum|Provisioned|KeyIdentifierGenerationPolicy}} this {{param}} parameter is used to identify an individual traffic flow within a GRE tunnel, as defined in {{bibref|RFC2890}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="UseSequenceNumber" access="readWrite" dmr:version="2.8">
        <description>
          When {{true}}, includes the "SequenceNumber" field in the GRE header as defined in {{bibref|RFC2890}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GRE.Tunnel.{i}.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Statistics for this GRE tunnel interface, i.e. all traffic that has passed through the interface.
        The device MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e., the interface's Status parameter transitions to a down state after the interface has been disabled) or when the interface becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} discarded by this interface due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by this interface that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardChecksumReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Checksum errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardSequenceNumberReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Sequence Number errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.GRE.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        GRE Filter table. Entries in this table are applied against the packets that are to be encapsulated within the GRE Tunnel based on the following conditions:
        * If the value of the {{param|AllInterfaces}} is {{true}}, then this entry will be applied to all {{object|#.Tunnel}} and {{object|#.Tunnel.{i}.Interface}} instances.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel}} table then this entry is applied to all {{object|#.Tunnel.{i}.Interface}} instances of the {{object|#.Tunnel}} reference.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel.{i}.Interface}} table then this entry is applied to the {{object|#.Tunnel.{i}.Interface}} reference.
        * If no entries are matched for the packet, then the default treatment (e.g., {{param|#.Tunnel.{i}.DefaultDSCPMark}}) is applied to the packet.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables this filter.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of this filter.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.8">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each packet, the highest ordered entry that matches the filter criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.8">
        <description>
          Filter criterion. {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Tunnel. #.Tunnel.{i}.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.8">
        <description>
          Filter criterion. This specifies that all ingress GRE tunnel interfaces are associated with the entry. If {{true}}, the value of {{param|Interface}} is ignored since all ingress GRE tunnel interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDCheck" access="readWrite" dmr:version="2.8">
        <description>
          Filter criterion.
          Current outer Ethernet VLAN ID as defined in 802.1Q. A value of -1 indicates this criterion is not used for filtering.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDExclude" access="readWrite" dmr:version="2.8">
        <description>
          If {{false}}, the filter includes only those packets that match the {{param|VLANIDCheck}} entry, if specified.
          If {{true}}, the filter includes all packets except those that match the {{param|VLANIDCheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMarkPolicy" access="readWrite" dmr:version="2.8">
        <description>
          DSCP with which to mark the outer IP header for traffic that is associated with the interface criterion.
          Automatic DSCP marking behavior is a local matter to the device, possibly influenced by other Broadband Forum standards that it supports.
          * A value of -1 indicates copy from the upstream packet.
          * A value of -2 indicates automatic marking of DSCP.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2" maxInclusive="63"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object contains parameters associated with the configuration and monitoring of stateless tunnels using the Layer Two Tunneling Protocol version 3 (L2TPv3) ({{bibref|RFC3931}}).
        This object also provides a means to treat packets that are encapsulated within a L2TPv3 Tunnel by using a set of {{object|Filter}} objects to determine the treatment of the packet.
      </description>
      <parameter name="TunnelNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}." access="readWrite" numEntriesParameter="TunnelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        L2TPv3 Tunnel table, models the L2TPv3 Tunnel instance and represents the entry point and exit point of the tunnel in relation to the WAN interface.
        A {{object}} object has one or more {{object|Interface}} objects that further define the sessions or flows within the tunnel.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the tunnel.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the tunnel.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoints" access="readWrite" dmr:version="2.12">
        <description>
          The Fully Qualified Domain Name (FQDN) or IP address of the remote L2TPv3 tunnel endpoint.
          If more than one name/address is supplied, they will be tried in turn, i.e. they are in decreasing order of precedence.
        </description>
        <syntax>
          <list maxItems="4"/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="KeepAlivePolicy" access="readWrite" dmr:version="2.12">
        <description>
          The mechanism used to keep the tunnel from timing out at the {{param|ConnectedRemoteEndpoint}}.
        </description>
        <syntax>
          <string>
            <enumeration value="ICMP">
              <description>
                The version of the ICMP packet used for this {{param}} is based on the value of the {{param|DeliveryHeaderProtocol}} parameter (Either ICMP for IPv4 or ICMPv6 for IPv6).
              </description>
            </enumeration>
            <enumeration value="None"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveTimeout" access="readWrite" dmr:version="2.12">
        <description>
          The tunnel keepalive timeout in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="10"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveThreshold" access="readWrite" dmr:version="2.12">
        <description>
          Number of KeepAlive messages unacknowledged by the {{param|ConnectedRemoteEndpoint}} before the {{object}} is perceived failed.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="3"/>
        </syntax>
      </parameter>
      <parameter name="DeliveryHeaderProtocol" access="readWrite" dmr:version="2.12">
        <description>
          The protocol used for the delivery header.
        </description>
        <syntax>
          <string>
            <enumeration value="IPv4"/>
            <enumeration value="IPv6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" dmr:version="2.12">
        <description>
          If the specified entries in the {{object|#.Filter}} table do not match this {{object}} object or an instance of the {{object|Interface}} object for this {{object}} object, then the value of this parameter is applied to the delivery header of the packets in this {{object}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TunnelEncapsulation" access="readWrite" dmr:version="2.12">
        <description>
          The protocol that this {{object}} will be encapsulated
        </description>
        <syntax>
          <string>
            <enumeration value="IP"/>
            <enumeration value="UDP"/>
          </string>
          <default type="object" value="IP"/>
        </syntax>
      </parameter>
      <parameter name="ConnectedRemoteEndpoint" access="readOnly" dmr:version="2.12">
        <description>
          The Fully Qualified Domain Name (FQDN) name or IP address of the connected remote L2TPv3 tunnel endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.UDP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This {{object}} provides the parameters when the value of the {{param|##.Tunnel.{i}.TunnelEncapsulation}} parameter is {{enum|UDP|##.Tunnel.{i}.TunnelEncapsulation}}.
      </description>
      <parameter name="SourcePort" access="readWrite" dmr:version="2.12">
        <description>
          The source (local) port used to transmit PDUs. A value of 0 indicates that the port selection is performed by the device.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1701"/>
        </syntax>
      </parameter>
      <parameter name="RemotePort" access="readWrite" dmr:version="2.12">
        <description>
          The remote port used to by the remote endpoint to transmit PDUs.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1701"/>
        </syntax>
      </parameter>
      <parameter name="EnableChecksum" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables checksum processing.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        Statistics for this L2TPv3 tunnel, i.e. all traffic that has passed through the tunnel.
        The device MUST reset the tunnel's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the tunnel becomes operationally down due to a previous administrative down (i.e., Status parameter transitions to a disabled state after the tunnel has been disabled) or when the tunnel becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="KeepAliveSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of KeepAlive {{units}} sent out the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="KeepAliveReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of KeepAlive {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} discarded by the tunnel due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        L2TPv3 Interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        The {{object}} object models the L2TPv3 Header as defined in {{bibref|RFC3931}} and the transport of L2 frames across over L2TPv3 as defined in {{bibref|RFC4719}}.
        The {{object}} object provides a way to discriminate how sessions or flows are encapsulated within the L2TPv3 Tunnel.
        In addition the {{object}} object represents the entry point and exit point of the tunnel in relation to the LAN interface.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.12">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}} See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SessionID" access="readWrite" dmr:version="2.12">
        <description>
          The unique Session ID to be used in the L2TPv3 header of the tunnel.
          A Session ID with a value of -1 indicates that he CPE is to generate the session ids for this {{object}} instance.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="-1"/>
            <range minInclusive="1" maxInclusive="65535"/>
          </int>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="CookiePolicy" access="readWrite" dmr:version="2.12">
        <description>
          The policy that defines how the Cookie is handled in this {{object}} instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled">
              <description>
                The device does not perform Cooking processing.
              </description>
            </enumeration>
            <enumeration value="Configured">
              <description>
                The value of the {{param|Cookie}} parameter is transmitted in the L2TPv3 header.
              </description>
            </enumeration>
            <enumeration value="Generated">
              <description>
                The device generates the value of the Cookie transmitted in the L2TPv3 header.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Configured"/>
        </syntax>
      </parameter>
      <parameter name="Cookie" access="readWrite" dmr:version="2.12">
        <description>
          The Cookie transmitted in the L2TPv3 header. The default is to set the Cookie to the device's MAC address that is encoded in the low order 6 bytes.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Tunnel.{i}.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        Statistics for this L2TPv3 tunnel interface, i.e. all traffic that has passed through the interface.
        The device MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e., the interface's Status parameter transitions to a down state after the interface has been disabled) or when the interface becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} discarded by this interface due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by this interface that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardChecksumReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Checksum errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardSequenceNumberReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Sequence Number errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.L2TPv3.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        L2TPv3 Filter table. Entries in this table are applied against the packets that are to be encapsulated within the L2TPv3 Tunnel based on the following conditions:
        * If the value of the {{param|AllInterfaces}} is {{true}}, then this entry will be applied to all {{object|#.Tunnel}} and {{object|#.Tunnel.{i}.Interface}} instances.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel}} table then this entry is applied to all {{object|#.Tunnel.{i}.Interface}} instances of the {{object|#.Tunnel}} reference.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel.{i}.Interface}} table then this entry is applied to the {{object|#.Tunnel.{i}.Interface}} reference.
        * If no entries are matched for the packet, then the default treatment (e.g., {{param|#.Tunnel.{i}.DefaultDSCPMark}}) is applied to the packet.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this filter.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The status of this filter.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.12">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each packet, the highest ordered entry that matches the filter criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.12">
        <description>
          Filter criterion. {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Tunnel. #.Tunnel.{i}.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.12">
        <description>
          Filter criterion. This specifies that all ingress L2TPv3 tunnel interfaces are associated with the entry. If {{true}}, the value of {{param|Interface}} is ignored since all ingress L2TPv3 tunnel interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDCheck" access="readWrite" dmr:version="2.12">
        <description>
          Filter criterion.
          Current outer Ethernet VLAN ID as defined in 802.1Q. A value of -1 indicates this criterion is not used for filtering.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDExclude" access="readWrite" dmr:version="2.12">
        <description>
          If {{false}}, the filter includes only those packets that match the {{param|VLANIDCheck}} entry, if specified.
          If {{true}}, the filter includes all packets except those that match the {{param|VLANIDCheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMarkPolicy" access="readWrite" dmr:version="2.12">
        <description>
          DSCP with which to mark the outer IP header for traffic that is associated with the interface criterion.
          Automatic DSCP marking behavior is a local matter to the device, possibly influenced by other Broadband Forum standards that it supports.
          * A value of -1 indicates copy from the upstream packet.
          * A value of -2 indicates automatic marking of DSCP.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2" maxInclusive="63"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.VXLAN." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object contains parameters associated with the configuration and monitoring of stateless tunnels using the Virtual eXtensible Local Area Network (VXLAN) ({{bibref|RFC7348}}).
        This object also provides a means to treat packets that are encapsulated within a VXLAN Tunnel by using a set of {{object|Filter}} objects to determine the treatment of the packet.
      </description>
      <parameter name="TunnelNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.VXLAN.Tunnel.{i}." access="readWrite" numEntriesParameter="TunnelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        VXLAN Tunnel table, models the VXLAN Tunnel instance and represents the entry point and exit point of the tunnel in relation to the WAN interface.
        A {{object}} object has one or more {{object|Interface}} objects that further define the sessions or flows within the tunnel.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the tunnel.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the tunnel.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RemoteEndpoints" access="readWrite" dmr:version="2.12">
        <description>
          The Fully Qualified Domain Name (FQDN) or IP address of the remote VXLAN tunnel endpoint.
          If more than one name/address is supplied, they will be tried in turn, i.e. they are in decreasing order of precedence.
        </description>
        <syntax>
          <list maxItems="4"/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="KeepAlivePolicy" access="readWrite" dmr:version="2.12">
        <description>
          The mechanism used to keep the tunnel from timing out at the {{param|ConnectedRemoteEndpoint}}.
        </description>
        <syntax>
          <string>
            <enumeration value="ICMP">
              <description>
                The version of the ICMP packet used for this {{param}} is based on the value of the {{param|DeliveryHeaderProtocol}} parameter (Either ICMP for IPv4 or ICMPv6 for IPv6).
              </description>
            </enumeration>
            <enumeration value="None"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveTimeout" access="readWrite" dmr:version="2.12">
        <description>
          The tunnel keepalive timeout in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="10"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveThreshold" access="readWrite" dmr:version="2.12">
        <description>
          Number of KeepAlive messages unacknowledged by the {{param|ConnectedRemoteEndpoint}} before the {{object}} is perceived failed.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="3"/>
        </syntax>
      </parameter>
      <parameter name="DeliveryHeaderProtocol" access="readWrite" dmr:version="2.12">
        <description>
          The protocol used for the delivery header.
        </description>
        <syntax>
          <string>
            <enumeration value="IPv4"/>
            <enumeration value="IPv6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" dmr:version="2.12">
        <description>
          If the specified entries in the {{object|#.Filter}} table do not match this {{object}} object or an instance of the {{object|Interface}} object for this {{object}} object, then the value of this parameter is applied to the delivery header of the packets in this {{object}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ConnectedRemoteEndpoint" access="readOnly" dmr:version="2.12">
        <description>
          The Fully Qualified Domain Name (FQDN) name or IP address of the connected remote VXLAN tunnel endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" dmr:version="2.12">
        <description>
          The source (local) port used to transmit PDUs. A value of 0 indicates that the port selection is performed by the device. In such case, it is recommended that the UDP source port number be calculated using a hash of fields from the inner packet and that it is in the dynamic/private port range 49152-65535.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="RemotePort" access="readWrite" dmr:version="2.12">
        <description>
          The remote port used to by the remote endpoint to transmit PDUs. The well-known port allocated by IANA is 4789, but it should be configurable.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="4789"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.VXLAN.Tunnel.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        Statistics for this VXLAN tunnel, i.e. all traffic that has passed through the tunnel.
        The device MUST reset the tunnel's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the tunnel becomes operationally down due to a previous administrative down (i.e., Status parameter transitions to a disabled state after the tunnel has been disabled) or when the tunnel becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="KeepAliveSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of KeepAlive {{units}} sent out the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="KeepAliveReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of KeepAlive {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="messages"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} discarded by the tunnel due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.VXLAN.Tunnel.{i}.Interface.{i}." access="readWrite" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        VXLAN Interface table (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).
        The {{object}} object models the VXLAN Header as defined in {{bibref|RFC7348}} for the transport of L2 frames across over VXLAN.
        The {{object}} object provides a way to discriminate how multiple LAN segments are encapsulated within the VXLAN Tunnel.
        In addition the {{object}} object represents the entry point and exit point of the tunnel in relation to the LAN interface.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.12">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VNI" access="readWrite" dmr:version="2.12">
        <description>
          The unique Virtual Network Identifier (VNI) to be used in the VXLAN header of the tunnel.
          A VNI with a value of -1 indicates that the CPE is to generate the VNI for this {{object}} instance.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="-1"/>
            <range minInclusive="0" maxInclusive="16777215"/>
          </int>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.VXLAN.Tunnel.{i}.Interface.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        Statistics for this VXLAN tunnel interface, i.e. all traffic that has passed through the interface.
        The device MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e., the interface's Status parameter transitions to a down state after the interface has been disabled) or when the interface becomes administratively up (i.e. the Enable parameter transitioned from {{false}} to {{true}}).
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="bytes"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} sent by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by this interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} discarded by this interface due to any error.  This can include packets dropped due to a lack of transmit buffers.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by this interface that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardChecksumReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Checksum errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="DiscardSequenceNumberReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of {{units}} received by the tunnel interface that are discarded because of Sequence Number errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="packets"/>
          </dataType>
        </syntax>
      </parameter>
    </object>
    <object name="Device.VXLAN.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        VXLAN Filter table. Entries in this table are applied against the packets that are to be encapsulated within the VXLAN Tunnel based on the following conditions:
        * If the value of the {{param|AllInterfaces}} is {{true}}, then this entry will be applied to all {{object|#.Tunnel}} and {{object|#.Tunnel.{i}.Interface}} instances.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel}} table then this entry is applied to all {{object|#.Tunnel.{i}.Interface}} instances of the {{object|#.Tunnel}} reference.
        * If the value of {{param|AllInterfaces}} is {{false}} and the value of {{param|Interface}} parameter is a reference to a row in the {{object|#.Tunnel.{i}.Interface}} table then this entry is applied to the {{object|#.Tunnel.{i}.Interface}} reference.
        * If no entries are matched for the packet, then the default treatment (e.g., {{param|#.Tunnel.{i}.DefaultDSCPMark}}) is applied to the packet.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this filter.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The status of this filter.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.12">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each packet, the highest ordered entry that matches the filter criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.12">
        <description>
          Filter criterion. {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Tunnel. #.Tunnel.{i}.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.12">
        <description>
          Filter criterion. This specifies that all ingress VXLAN tunnel interfaces are associated with the entry. If {{true}}, the value of {{param|Interface}} is ignored since all ingress VXLAN tunnel interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDCheck" access="readWrite" dmr:version="2.12">
        <description>
          Filter criterion.
          Current outer Ethernet VLAN ID as defined in 802.1Q. A value of -1 indicates this criterion is not used for filtering.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDExclude" access="readWrite" dmr:version="2.12">
        <description>
          If {{false}}, the filter includes only those packets that match the {{param|VLANIDCheck}} entry, if specified.
          If {{true}}, the filter includes all packets except those that match the {{param|VLANIDCheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMarkPolicy" access="readWrite" dmr:version="2.12">
        <description>
          DSCP with which to mark the outer IP header for traffic that is associated with the interface criterion.
          Automatic DSCP marking behavior is a local matter to the device, possibly influenced by other Broadband Forum standards that it supports.
          * A value of -1 indicates copy from the upstream packet.
          * A value of -2 indicates automatic marking of DSCP.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2" maxInclusive="63"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MAP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        The Mapping of Address and Port (MAP) object {{bibref|RFC7597}} {{bibref|RFC7599}} {{bibref|RFC7598}}. This object applies only to gateway devices that support IPv4 on the LAN side, include a {{object|#.NAT}}, and typically have only IPv6 connectivity on the WAN side.
        See the MAP Theory of Operation {{bibref|TR-181i2a8|Appendix XV}} for a description of the working of this MAP data model.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables MAP.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="DomainNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MAP.Domain.{i}." access="readWrite" numEntriesParameter="DomainNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        MAP domain settings {{bibref|RFC7597}} {{bibref|RFC7599}}.  Each instance models a MAP domain.
        MAP supports two transport modes, both of which use NAPT44 (modified to use a restricted port range):
        * MAP-E ({{param|TransportMode}} = {{enum|Encapsulation|TransportMode}}) uses an IPv4-in-IPv6 tunnel.
        * MAP-T ({{param|TransportMode}} = {{enum|Translation|TransportMode}}) uses stateless NAT64.
        Note: There is an n:1 relationship between a MAP domain and the associated {{param|WANInterface}}, i.e. in theory multiple MAP domains can be associated with a single WAN IP interface (each domain would have its own ''End-user IPv6 prefix'' and ''MAP IPv6 address'').
        Note: The {{object}} table includes unique key parameters that are strong references. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="WANInterface"/>
        <parameter ref="IPv6Prefix"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the MAP domain.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The current operational state of the MAP domain.
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured" optional="true"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="TransportMode" access="readWrite" dmr:version="2.8">
        <description>
          The transport mode to use.
          Corresponds to the {{bibref|RFC7598}} ''S46_CONT_MAPE'' and ''S46_CONT_MAPT'' container options.
        </description>
        <syntax>
          <string>
            <enumeration value="Encapsulation">
              <description>
                MAP-E {{bibref|RFC7597}}
              </description>
            </enumeration>
            <enumeration value="Translation">
              <description>
                MAP-T {{bibref|RFC7599}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="Translation"/>
        </syntax>
      </parameter>
      <parameter name="WANInterface" access="readWrite" dmr:version="2.8">
        <description>
          The IP interface with which this MAP domain is associated.  This will always be a NAT-ted upstream (WAN) interface.
          The ''End-user IPv6 prefix'' {{param|IPv6Prefix}} is one of this IP interface's prefixes.
          The ''MAP IPv6 address'' is derived from the ''End-user IPv6 prefix'' and is one of this IP interface's IP addresses, with an {{param|##.IP.Interface.{i}.IPv6Address.{i}.Origin}} of {{enum|MAP|##.IP.Interface.{i}.IPv6Address.{i}.Origin}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPv6Prefix" access="readWrite" dmr:version="2.8">
        <description>
          The MAP domain's ''End-user IPv6 prefix''.  This MUST reference one of {{param|WANInterface}}'s prefixes.
          If the ACS configures this prefix directly, the CPE MUST use the ACS-configured prefix.  Otherwise, the CPE MUST select one of {{param|WANInterface}}'s prefixes; the selected prefix will typically have {{param|##.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} =  {{enum|PrefixDelegation|##.IP.Interface.{i}.IPv6Prefix.{i}.Origin}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BRIPv6Prefix" access="readWrite" dmr:version="2.8">
        <description>
          The MAP Border Relay (BR) address or prefix.
          * For MAP-E this is the BR address and therefore MUST be a /128 {{bibref|RFC7597}}. Note this address can be an IPv6 anycast address. This address corresponds to the {{bibref|RFC7598}} ''OPTION_S46_BR'' (Border Relay) option.
          * For MAP-T this is the BR prefix {{bibref|RFC7599}}. This address prefix corresponds to the {{bibref|RFC7598}} ''OPTION_S46_DMR'' (Default Mapping Rule) option.
          Note: There will be a corresponding {{object|.Routing.Router.{i}.IPv4Forwarding}} default rule.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMarkPolicy" access="readWrite" dmr:version="2.8">
        <description>
          DSCP with which to mark the outer IP header for traffic that is associated with this MAP domain.
          Downstream packets are never re-marked.
          Automatic DSCP marking behavior is a local matter to the device, possibly influenced by other Broadband Forum standards that it supports.
          * A value of -1 indicates copy from the incoming packet.
          * A value of -2 indicates automatic marking of DSCP.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2" maxInclusive="63"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="PSIDOffset" access="readWrite" status="deprecated" dmr:version="2.8">
        <description>
          ''Port-set ID'' (PSID) offset in {{units}}.  The number of Port-sets is 2^{{param}}.
          Corresponds to the {{bibref|RFC7598}} ''S46_PORTPARAMS'' (Port Parameters) option's ''offset'' field.
          This parameter is DEPRECATED because details changed between drafting this data model and the RFC being published.  This parameter has been moved to the proper location within the {{object|Rule.{i}.}} object.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="bits"/>
          </unsignedInt>
          <default type="object" value="6"/>
        </syntax>
      </parameter>
      <parameter name="PSIDLength" access="readWrite" status="deprecated" dmr:version="2.8">
        <description>
          The length in {{units}} of the ''Port-set id'' (PSID) configured in the {{param|PSID}} parameter.
          Corresponds to the {{bibref|RFC7598}} ''S46_PORTPARAMS'' (Port Parameters) option's ''PSID-len'' field.
          This parameter is DEPRECATED because details changed between drafting this data model and the RFC being published.  This parameter has been moved to the proper location within the {{object|Rule.{i}.}} object.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="16"/>
            <units value="bits"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PSID" access="readWrite" status="deprecated" dmr:version="2.8">
        <description>
          ''Port-set ID'' (PSID) to use in preference to the value extracted from the ''Embedded Address'' (EA) bits.
          Only the high order {{param|PSIDLength}} bits of the {{param}} value are used, so the parameter is ignored when {{param|PSIDLength}} is zero.
          Corresponds to the {{bibref|RFC7598}} ''S46_PORTPARAMS'' (Port Parameters) option's ''PSID'' field.
          This parameter is DEPRECATED because details changed between drafting this data model and the RFC being published.  This parameter has been moved to the proper location within the {{object|Rule.{i}.}} object.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IncludeSystemPorts" access="readWrite" dmr:version="2.8">
        <description>
          Whether to include low-numbered (system) ports in the Port-sets. Normally ports in the range [0:2^(16-{{param|PSIDOffset}})-1] are excluded, e.g. for the default {{param|PSIDOffset}} value of 4, ports [0:4095] are not included in the Port-sets.
          This parameter is related to {{bibref|RFC7597}}'s ''N'', which is defined as ''the number of ports (e.g., 1024) excluded from the lower end of the range''.  The parameter is relevant only when {{param|PSIDOffset}} is 0; {{false}} corresponds to ''N=1024'' and {{true}} corresponds to ''N=0''.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="RuleNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MAP.Domain.{i}.Rule.{i}." access="readWrite" numEntriesParameter="RuleNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        The MAP domain's Mapping Rules {{bibref|RFC7597}}. The rule with the longest match between its {{param|IPv6Prefix}} and the end-user {{param|#.IPv6Prefix}} is the Basic Mapping Rule (BMR). Any of the rules (including the BMR) can be a Forwarding Mapping Rule.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPv6Prefix"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="IPv4Prefix"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enable or disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of this {{object}} instance.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.8">
        <description>
          The mechanism via which the {{object}} was created.
          If the CPE supports MAP configuration via both DHCPv6 and CWMP, it is up to the implementation to determine how the two mechanisms will interact.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv6">
              <description>
                Created via a {{bibref|RFC7598}} ''S46_RULE'' option.
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                Present in the factory default configuration, created by the ACS, or created by some other management entity (e.g. via a GUI)
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="IPv6Prefix" access="readWrite" dmr:version="2.8">
        <description>
          The ''Rule IPv6 prefix''.
          The Rule IPv6 prefix is a leading part of the end-user {{param|#.IPv6Prefix}}, i.e. its length MUST be less than or equal to the length of the end-user ''IPv6Prefix'', and it MUST match the end-user ''IPv6Prefix''.
          Corresponds to the {{bibref|RFC7598}} ''S46_RULE'' option's ''ipv6-prefix'' field.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value="/0"/>
        </syntax>
      </parameter>
      <parameter name="IPv4Prefix" access="readWrite" dmr:version="2.8">
        <description>
          The ''Rule IPv4 prefix''.
          Corresponds to the {{bibref|RFC7598}} ''S46_RULE'' option's ''ipv4-prefix'' field.
        </description>
        <syntax>
          <dataType ref="IPv4Prefix"/>
          <default type="object" value="/0"/>
        </syntax>
      </parameter>
      <parameter name="EABitsLength" access="readWrite" dmr:version="2.8">
        <description>
          The length in {{units}} of the ''Embedded Address (EA) bits'' in the end-user {{param|#.IPv6Prefix}}.
          Corresponds to the {{bibref|RFC7598}} ''S46_RULE'' option's ''ea-len'' field.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="48"/>
            <units value="bits"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IsFMR" access="readWrite" dmr:version="2.8">
        <description>
          Indicates whether this rule is a ''Forwarding Mapping Rule'' (FMR), i.e. can be used for forwarding.
          Corresponds to the {{bibref|RFC7598}} ''S46_RULE'' option's ''flags'' field's ''F-Flag''.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PSIDOffset" access="readWrite" dmr:version="2.12">
        <description>
          ''Port-set ID'' (PSID) offset in {{units}}.  The number of Port-sets is 2^{{param}}.
          Corresponds to the {{bibref|RFC7598}} ''S46_PORTPARAMS'' (Port Parameters) option's ''offset'' field.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
            <units value="bits"/>
          </unsignedInt>
          <default type="object" value="6"/>
        </syntax>
      </parameter>
      <parameter name="PSIDLength" access="readWrite" dmr:version="2.12">
        <description>
          The length in {{units}} of the ''Port-set id'' (PSID) configured in the {{param|PSID}} parameter.
          Corresponds to the {{bibref|RFC7598}} ''S46_PORTPARAMS'' (Port Parameters) option's ''PSID-len'' field.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="16"/>
            <units value="bits"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PSID" access="readWrite" dmr:version="2.12">
        <description>
          ''Port-set ID'' (PSID) to use in preference to the value extracted from the ''Embedded Address'' (EA) bits.
          Only the high order {{param|PSIDLength}} bits of the {{param}} value are used, so the parameter is ignored when {{param|PSIDLength}} is zero.
          Corresponds to the {{bibref|RFC7598}} ''S46_PORTPARAMS'' (Port Parameters) option's ''PSID'' field.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MAP.Domain.{i}.Interface." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        MAP interface (a stackable interface object as described in {{bibref|TR-181i2|Section 4.2}}).  This models the LAN side MAP domain interface.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the interface.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Down}} (or {{enum|NotPresent}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.8">
        <description>
          The textual name of the interface as assigned by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readWrite" dmr:version="2.8">
        <description>
          {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
          Note: Since this interface object is a MAP domain interface, it is expected that {{param}} will not be used.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MAP.Domain.{i}.Interface.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Throughput statistics for this MAP domain interface.
        The CPE MUST reset the interface's Stats parameters (unless otherwise stated in individual object or parameter descriptions) either when the interface becomes operationally down due to a previous administrative down (i.e. the interface's {{param|#.Status}} parameter transitions to a down state after the interface is disabled) or when the interface becomes administratively up (i.e. the interface's {{param|#.Enable}} parameter transitions from {{false}} to {{true}}). Administrative and operational interface status is discussed in {{bibref|TR-181i2|section 4.2.2}}.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of bytes received on the interface, including framing characters.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets transmitted out of the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets received on the interface.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of inbound packets that contained errors preventing them from being delivered to a higher-layer protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were not addressed to a multicast or broadcast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to  prevent their being delivered. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a multicast address at this layer, including those that were discarded or not sent.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a multicast address at this layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" dmr:version="2.8">
        <description>
          The total number of packets that higher-level protocols requested for transmission and which were addressed to a broadcast address at this layer, including those that were discarded or not sent.
          Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" dmr:version="2.8">
        <description>
          The total number of received packets, delivered by this layer to a higher layer, which were addressed to a broadcast address at this layer.
          Note that IPv6 does not define broadcast addresses, so IPv6 packets will never cause this counter to increment.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.8">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported  protocol.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.CaptivePortal." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains parameters relating to the captive portal configuration on the CPE.
        The captive portal configuration defines the CPE's upstream HTTP (port 80) traffic redirect behavior.
        When the captive portal is disabled, upstream HTTP (port 80) traffic MUST be permitted to all destinations.
        When the captive portal is enabled, upstream HTTP (port 80) traffic MUST be permitted only to destinations listed in the {{param|AllowedList}}; traffic to all other destinations MUST be redirected to the {{param|URL}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the captive portal.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of the captive portal.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_URLEmpty">
              <description>
                {{param|URL}} is {{empty}}
              </description>
            </enumeration>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedList" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items represent IP addresses to which HTTP (port 80) traffic MUST always be permitted, regardless of whether the captive portal is enabled.
          Each entry in the list MUST be either an IP address, or an IP prefix specified using Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}.
          An IP prefix is specified as an IP address followed (with no intervening white space) by "/n", where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the prefix.
          IPv4 example:
          * 1.2.3.4 specifies a single IPv4 address, and 1.2.3.4/24 specifies a class C subnet with subnet mask 255.255.255.0.
          * 1.2.0.0/22 represents the 1024 IPv4 addresses from 1.2.0.0 to 1.2.3.255.
          IPv6 example:
          * fec0::220:edff:fe6a:f76 specifies a single IPv6 address.
          * 2001:edff:fe6a:f76::/64 represents the IPv6 addresses from 2001:edff:fe6a:f76:0:0:0:0 to 2001:edff:fe6a:f76:ffff:ffff:ffff:ffff.
        </description>
        <syntax>
          <list>
            <size maxLength="10000"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" dmr:version="2.0">
        <description>
          Captive portal URL to which upstream HTTP (port 80) traffic to destinations not listed in the {{param|AllowedList}} will be redirected.
          The captive portal URL MUST be an HTTP (not HTTPS) URL.
          The CPE MUST permit the captive portal URL to be set to {{empty}}, which has the effect of disabling the captive portal (if {{param|Enable}} is {{true}} and the captive portal URL is {{empty}}, {{param|Status}} MUST be {{enum|Error_URLEmpty|Status}}).
        </description>
        <syntax>
          <string>
            <size maxLength="2000"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Routing object that contains the {{object|Router}} table and {{object|RIP}} protocol object.
      </description>
      <parameter name="RouterNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.Router.{i}." access="readWrite" numEntriesParameter="RouterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object allows the handling of the routing and forwarding configuration of the device.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this ''Router'' entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this ''Router'' entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="IPv4ForwardingNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6ForwardingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.Router.{i}.IPv4Forwarding.{i}." access="readWrite" numEntriesParameter="IPv4ForwardingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Layer 3 IPv4 forwarding table.
        In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIP (i.e. RIP version 2), OSPF, DHCPv4, and IPCP.  The CPE MAY reject attempts to delete or modify a dynamic route entry.
        For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:
        * Only enabled table entries with a matching {{param|ForwardingPolicy}} are considered, i.e. those that either do not specify a {{param|ForwardingPolicy}}, or else specify a {{param|ForwardingPolicy}} that matches that of the incoming packet.
        * Next, table entries that also have a matching destination address/mask are considered, and the matching entry with the longest prefix is applied to the packet (i.e. the entry with the most specific network). An unspecified destination address is a wild-card and always matches, but with a prefix length of zero.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv4-capable interface (that is attached to the IPv4 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="DestIPAddress"/>
        <parameter ref="DestSubnetMask"/>
        <parameter ref="ForwardingPolicy"/>
        <parameter ref="GatewayIPAddress"/>
        <parameter ref="Interface"/>
        <parameter ref="ForwardingMetric"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the forwarding entry.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of the forwarding entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="StaticRoute" access="readOnly" dmr:version="2.0">
        <description>
          If {{true}}, this route is a Static route.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestIPAddress" access="readWrite" dmr:version="2.0">
        <description>
          Destination IPv4 address.  {{empty}} indicates no destination address is specified.
          A Forwarding table entry for which {{param}} and {{param|DestSubnetMask}} are both {{empty}} is a default route.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestSubnetMask" access="readWrite" dmr:version="2.0">
        <description>
          Destination subnet mask.  {{empty}} indicates no destination subnet mask is specified.
          If a destination subnet mask is specified, the {{param}} is ANDed with the destination address before comparing with the {{param|DestIPAddress}}.  Otherwise, the full destination address is used as is.
          A Forwarding table entry for which {{param|DestIPAddress}} and {{param}} are both {{empty}} is a default route.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of a set of classes or flows that have the corresponding {{param}} value as defined in the {{object|Device.QoS}} object.
          A value of -1 indicates no {{param}} is specified.
          If specified, this forwarding entry is to apply only to traffic associated with the specified classes and flows.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="GatewayIPAddress" access="readWrite" dmr:version="2.0">
        <description>
          IPv4 address of the gateway.
          Only one of {{param}} and Interface SHOULD be configured for a route.
          If both are configured, {{param}} and {{param|Interface}} MUST be consistent with each other.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Specifies the egress layer 3 interface associated with this entry. Example: Device.IP.Interface.1.
          Only one of {{param|GatewayIPAddress}} and {{param}} SHOULD be configured for a route.
          If both are configured, {{param|GatewayIPAddress}} and {{param}} MUST be consistent with each other.
          For a route that was configured by setting {{param|GatewayIPAddress}} but not {{param}}, read access to {{param}} MUST return the full hierarchical parameter name for the routes egress interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Protocol via which the IPv4 forwarding rule was learned.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv4"/>
            <enumeration value="OSPF"/>
            <enumeration value="IPCP"/>
            <enumeration value="RIP"/>
            <enumeration value="Static">
              <description>
                For example, present in the factory default configuration, created by the ACS, or created by some other management entity (e.g. via a GUI).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="ForwardingMetric" access="readWrite" dmr:version="2.0">
        <description>
          Forwarding metric.  A value of -1 indicates this metric is not used.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.Router.{i}.IPv6Forwarding.{i}." access="readWrite" numEntriesParameter="IPv6ForwardingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Layer 3 IPv6 forwarding table.
        In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIPng, OSPF, DHCPv6, and RA.  The CPE MAY reject attempts to delete or modify a dynamic route entry.
        For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:
        * Only enabled table entries with a matching {{param|ForwardingPolicy}} are considered, i.e. those that either do not specify a {{param|ForwardingPolicy}}, or else specify a {{param|ForwardingPolicy}} that matches that of the incoming packet.
        * Next, table entries that also have a matching destination prefix are considered, and the matching entry with the longest prefix length is applied to the packet (i.e. the entry with the most specific network). An unspecified destination address is a wild-card and always matches, but with a prefix length of zero.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        This object is based on ''inetCidrRouteTable'' from {{bibref|RFC4292}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="DestIPPrefix"/>
        <parameter ref="ForwardingPolicy"/>
        <parameter ref="NextHop"/>
        <parameter ref="Interface"/>
        <parameter ref="ForwardingMetric"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          Indicates the status of the forwarding entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DestIPPrefix" access="readWrite" dmr:version="2.2">
        <description>
          Destination IPv6 prefix. {{empty}} indicates that it matches all destination prefixes (i.e. equivalent to "::/0"). All bits to the right of the prefix MUST be zero, e.g. 2001:edff:fe6a:f76::/64.
          Routes with a 128-bit prefix length (/128) are host routes for a specific IPv6 destination, e.g. 2001:db8:28:2:713e:a426:d167:37ab/128.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" dmr:version="2.2">
        <description>
          Identifier of a set of classes or flows that have the corresponding {{param}} value as defined in the {{object|.QoS}} object.
          A value of -1 indicates no {{param}} is specified.
          If specified, this forwarding entry is to apply only to traffic associated with the specified classes and flows.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="NextHop" access="readWrite" dmr:version="2.2">
        <description>
          IPv6 address of the next hop.
          Only one of {{param}} and {{param|Interface}} SHOULD be configured for a route. {{empty}} indicates no {{param}} is specified.
          If both are configured, {{param}} and {{param|Interface}} MUST be consistent with each other.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} Specifies the egress layer 3 interface associated with this entry. Example: ''Device.IP.Interface.1''.
          Only one of {{param|NextHop}} and {{param}} SHOULD be configured for a route. {{empty}} indicates no {{param}} is specified.
          If both are configured, {{param|NextHop}} and {{param}} MUST be consistent with each other.
          For a route that was configured by setting {{param|NextHop}} but not {{param}}, read access to {{param}} MUST return the full hierarchical parameter name for the route's egress interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Protocol via which the IPv6 forwarding rule was learned.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv6"/>
            <enumeration value="OSPF"/>
            <enumeration value="RA">
              <description>
                Router Advertisement Route Information Option {{bibref|RFC4191}}.
              </description>
            </enumeration>
            <enumeration value="RIPng">
              <description>
                RIPng for IPv6 {{bibref|RFC2080}}
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                For example, present in the factory default configuration, created by the ACS, or created by some other management entity (e.g. via a GUI).
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="ForwardingMetric" access="readWrite" dmr:version="2.2">
        <description>
          Forwarding metric.  A value of -1 indicates this metric is not used.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ExpirationTime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which the route will expire, or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          {{param}} is provided by an underlying dynamic routing protocol, e.g. by an {{bibref|RFC4191}} route information option.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.RIP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Routing Information Protocol (RIP) object.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables RIP on the device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SupportedModes" access="readOnly" dmr:version="2.0">
        <description>
          The supported RIP protocol modes.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Send"/>
            <enumeration value="Receive"/>
            <enumeration value="Both"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.RIP.InterfaceSetting.{i}." access="readWrite" numEntriesParameter="InterfaceSettingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        IP Interface RIP configuration table.
        For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
        Note: This object only applies to RIP2; i.e. version 2 of the RIP protocol is used to accept or send over the specified {{param|Interface}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AcceptRA" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, RIP route advertisements received over {{param|Interface}} are accepted.
          When set to {{false}}, RIP route advertisements received over {{param|Interface}} are rejected.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SendRA" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, RIP route advertisements are to be sent over {{param|Interface}}.
          When set to {{false}}, no RIP route advertisements will be sent over {{param|Interface}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.RouteInformation." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        Received Router Advertisement (RA) route information {{bibref|RFC4191}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables receiving route information from the RA.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Routing.RouteInformation.InterfaceSetting.{i}." access="readOnly" numEntriesParameter="InterfaceSettingNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IP Interface RA route information table. Contains received RA route information {{bibref|RFC4191}}. As such, the data in this table cannot be modified.
      </description>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="ForwardingEntryCreated"/>
            <enumeration value="NoForwardingEntry"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SourceRouter" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 Address of the router that sent the RA that included this route info.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="PreferredRouteFlag" access="readOnly" dmr:version="2.2">
        <description>
          Flag included in a specific Route Information Option within an RA message (Prf flag), as defined in {{bibref|RFC4191|Section 2.3}}. {{enum}}
          Note that this is not the Prf flag included in the base RA message. Also see {{bibref|RFC4191|Section 2.1}} which discusses how this flag is encoded on the wire.
        </description>
        <syntax>
          <string>
            <enumeration value="High"/>
            <enumeration value="Medium"/>
            <enumeration value="Low"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Prefix" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address prefix, as received in an instance of the Route Information Option of a RA message.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="RouteLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which {{param|Prefix}} will cease to be usable for use as a forwarding entry, or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          {{param}} is received in an instance of the Route Information Option of a RA message.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.NeighborDiscovery." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        The Neighbor Discovery Protocol (NDP) object {{bibref|RFC4861}}.  This object applies only to IPv6.  It contains an {{object|InterfaceSetting}} table that defines the NDP configuration for individual IP interfaces.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Neighbor Discovery.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.NeighborDiscovery.InterfaceSetting.{i}." access="readWrite" numEntriesParameter="InterfaceSettingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Per-interface Neighbor Discovery Protocol (NDP) configuration {{bibref|RFC4861}}.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="RetransTimer" access="readWrite" dmr:version="2.2">
        <description>
          Retransmission interval in {{units}}, as defined in {{bibref|RFC4861}}. For auto-configuration purposes, {{param}} specifies the delay between consecutive Neighbor Solicitation transmissions performed during Duplicate Address Detection (DAD) {{bibref|RFC4862|Section 5.4}}, as well as the time a node waits after sending the last Neighbor Solicitation before ending the DAD process.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="1000"/>
        </syntax>
      </parameter>
      <parameter name="RtrSolicitationInterval" access="readWrite" dmr:version="2.2">
        <description>
          Retransmission interval in {{units}}, as defined in {{bibref|RFC4861}}. For auto-configuration purposes, {{param}} specifies the delay between consecutive Router Solicitation transmissions.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="4"/>
        </syntax>
      </parameter>
      <parameter name="MaxRtrSolicitations" access="readWrite" dmr:version="2.2">
        <description>
          Maximum Number of Router Solicitation Transmission messages, as defined in {{bibref|RFC4861}}. For auto-configuration purposes {{param}} specifies the Maximum Number of Router Solicitation Transmission messages to help the host to conclude that there are no routers on the link.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="3"/>
        </syntax>
      </parameter>
      <parameter name="NUDEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Neighbor Unreachability Detection (NUD) {{bibref|RFC4861|Section 7}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RSEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Router Solicitation (RS) on {{param|Interface}} {{bibref|RFC4861|Section 4.1}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.RouterAdvertisement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        The Router Advertisement (RA) object {{bibref|RFC4861}}. This object applies only to IPv6. It contains an {{object|InterfaceSetting}} table that defines the RA configuration for individual IP interfaces.
        Information received via router advertisement messages is automatically propagated to the relevant {{object|.IP.Interface}} sub-objects, e.g. to the {{object|.IP.Interface.{i}.IPv6Address}} and {{object|.IP.Interface.{i}.IPv6Prefix}} tables.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables Router Advertisement.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.RouterAdvertisement.InterfaceSetting.{i}." access="readWrite" numEntriesParameter="InterfaceSettingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Per-interface Router Advertisement (RA) configuration {{bibref|RFC4861}}. Table entries are created for use in sending Router Advertisements.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
          Defines the value of the ''IsRouter'' and ''AdvSendAdvertisements'' flags from {{bibref|RFC4861|Section 4.2}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          This is the IP interface associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ManualPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          Manually-configured prefixes that will be sent in Router Advertisement messages.  Each referenced prefix MUST have a  {{param|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} of {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} or {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}}.  Router Advertisement messages MUST include Prefix Information Options {{bibref|RFC4861}} for all ''Valid'' ({{param|.IP.Interface.{i}.IPv6Prefix.{i}.ValidLifetime}} is infinite or in the future) prefixes in this list.
          Prefixes MUST be associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8"/>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Prefixes" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          All prefixes that will be included in Router Advertisement (RA) messages sent out this interface. This list can include:
          * Prefixes from {{param|ManualPrefixes}} that are included in RA messages.
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8"/>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxRtrAdvInterval" access="readWrite" dmr:version="2.2">
        <description>
          The maximum time allowed between sending unsolicited multicast Router Advertisements from the interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="4" maxInclusive="1800"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="600"/>
        </syntax>
      </parameter>
      <parameter name="MinRtrAdvInterval" access="readWrite" dmr:version="2.2">
        <description>
          The minimum time allowed between sending unsolicited multicast Router Advertisements from the interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
          The value MUST be no greater than 3/4 * {{param|MaxRtrAdvInterval}}.
          Note: The ''1350'' maximum was derived from the RFC, based on 3/4 times the maximum value of {{param|MaxRtrAdvInterval}}. Similarly, the ''200'' default was derived from the RFC, based on 1/3 times the default value of {{param|MaxRtrAdvInterval}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="3" maxInclusive="1350"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="200"/>
        </syntax>
      </parameter>
      <parameter name="AdvDefaultLifetime" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Router Lifetime" field of Router Advertisement messages on this interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
          The value can be zero or between {{param|MaxRtrAdvInterval}} and 9000 {{units}}, but these limits can be overridden by specific documents that describe how IPv6 operates over different link layers.
          A value of zero indicates that the router is not to be used as a default router.
          Note: The ''1800'' default was derived from the RFC, based on 3 times the default value of {{param|MaxRtrAdvInterval}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="1800"/>
        </syntax>
      </parameter>
      <parameter name="AdvManagedFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Managed address configuration" (M) flag field of Router Advertisement messages on this interafce (see {{bibref|RFC4861|Section 4.2}}, and {{bibref|RFC4862}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvOtherConfigFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Other configuration" (O) flag field of Router Advertisement messages on this interface (see {{bibref|RFC4861|Section 4.2}}, and {{bibref|RFC4862}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvMobileAgentFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Home agent" (H) flag field of Router Advertisement messages on this interface (see {{bibref|RFC3775|Section 7.1}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvPreferredRouterFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Default Router Preference" (Prf) field of Router Advertisement messages on this interface, as defined in {{bibref|RFC4191|Section 2.2}}. {{enum}}
          Also see {{bibref|RFC4191|Section 2.1}} which discusses how this flag is encoded on the wire.
        </description>
        <syntax>
          <string>
            <enumeration value="High"/>
            <enumeration value="Medium"/>
            <enumeration value="Low"/>
          </string>
          <default type="object" value="Medium"/>
        </syntax>
      </parameter>
      <parameter name="AdvNDProxyFlag" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Proxy" (P) flag field of Router Advertisement messages on this interface (see {{bibref|RFC4389|Section 4.1.3.3}}).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AdvLinkMTU" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in MTU options of Router Advertisement messages on this interface. A value of zero indicates that no MTU options are included (see {{bibref|RFC4861|Section 4.6.4}}).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AdvReachableTime" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Reachable Time" field of Router Advertisement messages on this interface, in {{units}} (see {{bibref|RFC4861|Section 4.2}}).
          The value zero means unspecified (by the router).
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="3600000"/>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AdvRetransTimer" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Retrans Timer" field of Router Advertisement messages on this interface (see {{bibref|RFC4861|Section 4.2}}).
          The value zero means unspecified (by the router).
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AdvCurHopLimit" access="readWrite" dmr:version="2.2">
        <description>
          The value placed in the "Cur Hop Limit" field of Router Advertisement messages on this interface (see {{bibref|RFC4861|Section 4.2}}).
          The value zero means unspecified (by the router).
          Note: The default can be overridden with the value specified in {{bibref|RFC3232}} that was in effect at the time of implementation.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="255"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.RouterAdvertisement.InterfaceSetting.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This object specifies the options in a Router Advertisement (RA) message {{bibref|RFC4861|Section 4.6}}. {{object}} entries are created for use in sending Router Advertisements (enabled options MUST be included in RA messages sent). This includes support for sending DNS information in the RA message as described in {{bibref|RFC6106}}.
        This table is intended only for options that are not modeled elsewhere. For example, it is not appropriate for the MTU option (which is modeled via {{param|#.AdvLinkMTU}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.2">
        <description>
          Option tag (type) {{bibref|RFC4861|Section 4.6}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.2">
        <description>
          A hexbinary encoded option value {{bibref|RFC4861|Section 4.6}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPv6rd." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        Settings allowing a CPE to derive and route IPv6 Rapid Deployment (6rd) delegated prefixes as specified in {{bibref|RFC5969}}.  The 6rd mechanism is intended to be implemented only on what {{bibref|RFC5969}} refers to as ''Customer Edge Routers'', i.e. on gateway devices, that support IPv6 on the LAN side and only have IPv4 connectivity on the WAN side.
        See the 6rd Theory of Operation {{bibref|TR-181i2a2|Appendix VI}} for a description of the working of this 6rd data model.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IPv6rd.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IPv6rd.InterfaceSetting.{i}." access="readOnly" numEntriesParameter="InterfaceSettingNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        6rd {{bibref|RFC5969}} settings.
        A 6rd delegated prefix is expected to be of maximum length 64 bits, and is the concatenation of the following two items:
        * Service provider IPv6 prefix: specified via the {{param|SPIPv6Prefix}} parameter
        * IPv4 address suffix: the IPv4 address with the first {{param|IPv4MaskLength}} bits removed
        This object definition is derived from {{bibref|RFC5969}} with some minor nomenclature changes.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enable or disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="BorderRelayIPv4Addresses" access="readWrite" dmr:version="2.2">
        <description>
          List items are the IPv4 addresses (possibly anycast) of the 6rd Relay(s).
        </description>
        <syntax>
          <list maxItems="4"/>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="AllTrafficToBorderRelay" access="readWrite" dmr:version="2.2">
        <description>
          If {{true}}, the destination address for all 6rd traffic will be set (IPv4 destination address) to one of the {{param|BorderRelayIPv4Addresses}}. If {{false}}, traffic whose destination address begins with the same prefix as {{param|SPIPv6Prefix}} will be sent directly to the destination IPv4 address of the endpoint, which is in the same 6rd domain. See 6rd Theory of Operation for further explanation {{bibref|TR-181i2a2|Appendix VI}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SPIPv6Prefix" access="readWrite" dmr:version="2.2">
        <description>
          The Service Provider's 6rd IPv6 prefix for this deployment and this 6rd RG.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="IPv4MaskLength" access="readWrite" dmr:version="2.2">
        <description>
          The number of high-order {{units}} that are identical across all IPv4 addresses within a given 6rd domain. This number of {{units}} MUST be removed from the start of the IPv4 address when generating the 6rd delegated prefix.
          For example, if this value is 8, only the final 24 {{units}} of the subscriber IPv4 prefix will be used when creating the IPv6 delegated prefix, determining the destination IPv4 encapsulation address, etc.
          If the value is 0, then the whole 32 {{units}} of the IPv4 address are used in the encoding.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="32"/>
            <units value="bits"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AddressSource" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} Points to the IPv4 address that is the source of the IPv4 address embedded in the IPv6 6rd prefix, and used as the source encapsulating IPv4 address. If the value is {{empty}} or this parameter is not present, the device will use internal logic to determine which IPv4 source address to use.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv4Address." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TunnelInterface" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is an IP interface of ''Type'' {{enum|Tunnel|.IP.Interface.{i}.Type}} that is logically the tunnel entry point for upstream IPv6 traffic and is also logically the tunnel exit point for downstream IPv6 traffic (i.e. the entry point for non-tunneled upstream IPv6 traffic to enter a tunnel and become tunneled, or conversely, the exit point for downstream IPv6 traffic leaving a tunnel after being un-tunneled).
          IPv6 traffic that enters {{param}} from the LAN is expected to continue on through {{param|TunneledInterface}}, and traffic from the WAN is expected to come from {{param|TunneledInterface}} into {{param}}. {{param}} is a logical interface that can allow for classification, marking (of IPv6 headers), and policing of IPv6 traffic that will be going over a 6rd tunnel. These functions are modeled in the {{object|.QoS.}} object.
          {{param}} can be used also to represent the 6rd virtual interface defined in {{bibref|RFC5969}}.
          Note: In 6rd, IPv6 packets arriving over one or more device LAN IP interfaces are logically fed into this {{param}}. Likewise, 6rd traffic from the WAN gets logically sent from this {{param}} to LAN IP interfaces.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TunneledInterface" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is an IP interface of ''Type'' {{enum|Tunneled|.IP.Interface.{i}.Type}} that provides information about the IPv4 headers used to encapsulate the IPv6 packets.
          Encapsulated IPv6 traffic that enters {{param}} from the WAN is expected to continue on through {{param|TunnelInterface}}, and traffic from the LAN is expected to come from {{param|TunnelInterface}} into {{param}}. {{param}} is a logical interface that can allow for classification, marking (of IPv4 headers and VLAN tags), and policing of IPv4 packets that encapsulate IPv6 packets in 6rd traffic. These functions are modeled in the {{object|.QoS.}} object.
          Note: In 6rd, {{param}} traffic originating from the LAN logically feeds into a WAN-side IPv4 capable IP interface that the "IPv6 6rd tunnel" goes over. 6rd traffic that enters over this IPv4 WAN interface gets logically sent to this {{param}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSLite." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        Settings allowing a CPE to configure and route IPv6 Dual-Stack Lite (DSLite) as specified in {{bibref|DSLite}}. The DS-Lite mechanism is intended to be implemented only on gateway devices that support IPv4 on the LAN side and only have IPv6 connectivity on the WAN side.
        See the Dual-Stack Lite Theory of Operation {{bibref|TR-181i2a2|Appendix VII}} for a description of the working of this DS-Lite data model.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables DSLite.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DSLite.InterfaceSetting.{i}." access="readOnly" numEntriesParameter="InterfaceSettingNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        DSLite {{bibref|DSLite}} settings.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enable or disable this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="EndpointAssignmentPrecedence" access="readWrite" dmr:version="2.2">
        <description>
          Indicates the preferred method to be used in assigning values to {{param|EndpointName}} when both static and dynamic values are available.  See {{param|EndpointName}} for further clarification.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv6"/>
            <enumeration value="Static"/>
          </string>
          <default type="factory" value="DHCPv6"/>
        </syntax>
      </parameter>
      <parameter name="EndpointAddressTypePrecedence" access="readWrite" dmr:version="2.5">
        <description>
          Indicates the preferred method to be used to assign the address of the DS-Lite Endpoint when both {{param|EndpointName}} and {{param|EndpointAddress}} values are available and the {{enum|Static|EndpointAssignmentPrecedence}} method is used.  See {{param|EndpointName}} and {{param|EndpointAddress}} for further clarification.
        </description>
        <syntax>
          <string>
            <enumeration value="FQDN">
              <description>
                Derive from {{param|EndpointName}} via a DNS lookup.
              </description>
            </enumeration>
            <enumeration value="IPv6Address">
              <description>
                Use {{param|EndpointAddress}} directly.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="EndpointAddressInUse" access="readOnly" dmr:version="2.5">
        <description>
          Indicates the address currently in use for the tunnel concentrator (remote endpoint).  It is derived from the values of the {{param|EndpointAssignmentPrecedence}}, {{param|EndpointAddressTypePrecedence}}, {{param|EndpointName}} and {{param|EndpointAddress}} parameters.
          It is {{empty}} if no endpoint address is currently known.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="EndpointName" access="readWrite" dmr:version="2.2">
        <description>
          The Fully Qualified Domain Name (FQDN) of the tunnel concentrator (remote endpoint).
          This parameter is based on ''OPTION_DS_LITE_NAME'' from {{bibref|DSLite-options|Section 4}} and can be assigned statically (e.g. present in the factory default configuration or set by the ACS) or can be updated dynamically (via DHCPv6). If both statically and dynamically assigned, then {{param|EndpointAssignmentPrecedence}} indicates whether it is the static configuration or the DHCPv6 configuration that is actually applied to {{param}}.
          Note: {{param}} is only writable when {{param|EndpointAssignmentPrecedence}} is {{enum|Static|EndpointAssignmentPrecedence}}; otherwise, {{param}} is automatically configured via the DHCPv6 received option.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EndpointAddress" access="readWrite" dmr:version="2.2">
        <description>
          The address of the tunnel concentrator (remote endpoint).
          This parameter can only be assigned statically (e.g. present in the factory default configuration or set by the ACS).
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.2">
        <description>
          Method used to assign {{param|EndpointAddressInUse}}.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv6">
              <description>
                Assigned by DHCPv6 {{bibref|RFC3315}}.
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                For example, present in the factory default configuration, set by the ACS, or set by some other management entity (e.g. via a GUI).
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="TunnelInterface" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is an IP interface of ''Type'' {{enum|Tunnel|.IP.Interface.{i}.Type}} that is logically the tunnel entry point for upstream IPv4 traffic and is also logically the tunnel exit point for downstream IPv4 traffic (i.e. the entry point for non-tunneled upstream IPv4 traffic to enter a tunnel and become tunneled, or conversely, the exit point for downstream IPv4 traffic leaving a tunnel after being un-tunneled).
          IPv4 traffic that enters {{param}} is expected to continue on through {{param|TunneledInterface}} from the LAN, and traffic from the WAN is expected to come from TunneledInterface into TunnelInterface. TunnelInterface is a logical interface that can allow for classification, marking (of IPv4 headers), and policing of IPv4 traffic that will be going over a DS-Lite tunnel. These functions are modeled in the Device.QoS object.
          Note: In DS-Lite, IPv4 packets arriving over one or more device LAN IP interfaces are logically fed into this {{param}}. Likewise, DS-Lite traffic from the WAN gets logically sent from this {{param}} to LAN IP interfaces.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TunneledInterface" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is an IP interface of ''Type'' {{enum|Tunneled|.IP.Interface.{i}.Type}} that provides information about the IPv6 headers used to encapsulate the IPv4 packets.
          Encapsulated IPv4 traffic that enters {{param}} from the WAN is expected to continue on through {{param|TunnelInterface}}, and traffic from the LAN is expected to come from {{param|TunnelInterface}} into {{param}}. {{param}} is a logical interface that can allow for classification, marking (of IPv6 headers and VLAN tags), and policing of IPv6 packets that encapsulate IPv4 packets in DS-Lite traffic. These functions are modeled in the {{object|.QoS.}} object.
          Note: In DS-Lite, {{param}} traffic originating from the LAN logically feeds into a WAN-side IPv6 capable IP interface that the "DSLite IPv4-in-IPv6 tunnel" goes over. DS-Lite traffic that enters over this IPv6 WAN interface gets logically sent to this {{param}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Queue management configuration object.
      </description>
      <parameter name="MaxClassificationEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the Classification table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ClassificationNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxAppEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|App}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AppNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxFlowEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|Flow}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FlowNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxPolicerEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|Policer}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PolicerNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxQueueEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|Queue}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueStatsNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxShaperEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          The maximum number of entries available in the {{object|Shaper}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShaperNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultForwardingPolicy" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of the forwarding policy associated with traffic not associated with any specified  classifier.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultTrafficClass" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of the traffic class associated with traffic not associated with any specified classifier.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultPolicer" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Indicates the ''Policer'' table entry for traffic not associated with any specified classifier.
          {{empty}} indicates a null policer.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="Policer." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultQueue" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Indicates the ''Queue'' table entry for traffic not associated with any specified classifier. Note: The interpretation of {{empty}} value is implementation specific.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="Queue." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" dmr:version="2.0">
        <description>
          DSCP to mark traffic not associated with any specified classifier.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DefaultEthernetPriorityMark" access="readWrite" dmr:version="2.0">
        <description>
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark traffic not associated with any specified classifier.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2a5|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DefaultInnerEthernetPriorityMark" access="readWrite" dmr:version="2.7">
        <description>
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark traffic of the inner VLAN Tag as defined in 802.1Q, when the PDU is not associated with any specified classifier. This parameter is only applicable when the PDU has 2 VLAN Tags.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AvailableAppList" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} List items represent URNs, each indicating a protocol supported for use as a ProtocolIdentifier in the App table.  This list MAY include any of the URNs defined in {{bibref|TR-181i2|Annex A}} as well as other URNs defined elsewhere.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.Classification.{i}." access="readWrite" numEntriesParameter="ClassificationNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Classification table.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Several of this object's parameters specify DHCP option values. Some cases are version neutral (the parameter can apply to both DHCPv4 and DHCPv6), but in other cases the representation of the option is different for DHCPv4 and DHCPv6, so it is necessary to define separate DHCPv4-specific and DHCPv6-specific parameters. Therefore, an instance of this object that uses DHCP option values as classification criteria will be associated with either DHCPv4 or DHCPv6, as indicated by the {{param|DHCPType}} parameter.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this classifier.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this classifier.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.0">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each packet, the highest ordered entry that matches the classification criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DHCPType" access="readWrite" dmr:version="2.2">
        <description>
          The DHCP protocol associated with the {{object}} instance. Affects only parameters that specify DHCP option values as classification criteria (all such parameter descriptions note this fact).  {{enum}}
          If {{param}} is {{enum|DHCPv4}}, then {{object}} parameters that are DHCPv6-specific are ignored. If {{param}} is {{enum|DHCPv6}}, then {{object}} parameters that are DHCPv4-specific are ignored.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
          </string>
          <default type="object" value="DHCPv4"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion. {{reference}}
          This specifies the ingress interface associated with the entry. It MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which ''Classifications'' can be instantiated is a local matter to the CPE.
          Note that this parameter is permitted to reference ''Tunnel'' instances in order to classify upstream packets that have just been encapsulated (such packets are conceptually similar to locally-generated traffic).  For example, this parameter might reference a {{object|.GRE.Tunnel}} or a {{object|.MAP.Domain}} instance.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion. This specifies that all ingress interfaces are associated with the entry. If {{true}}, the value of {{param|Interface}} is ignored since all ingress interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestIP" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Destination IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMask" access="readWrite" dmr:version="2.0">
        <description>
          Destination IP address mask, represented as an IP routing prefix using CIDR notation [RFC4632]. The IP address part MUST be {{empty}} (and, if specified, MUST be ignored).
        </description>
        <syntax>
          <dataType ref="IPPrefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIPExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) DestIP entry, if specified.
          If {{true}}, the class includes all packets except those that match the (masked) DestIP entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceIP" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Source IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMask" access="readWrite" dmr:version="2.0">
        <description>
          Source IP address mask, represented as an IP routing prefix using CIDR notation [RFC4632]. The IP address part MUST be {{empty}} (and, if specified, MUST be ignored).
        </description>
        <syntax>
          <dataType ref="IPPrefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) {{param|SourceIP}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the (masked) {{param|SourceIP}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Protocol number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="255"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|Protocol}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|Protocol}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestPort" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Destination port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortRangeMax" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from {{param|DestPort}} through {{param}} (inclusive).  If specified, {{param}} MUST be greater than or equal to {{param|DestPort}}.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|DestPort}} entry (or port range), if  specified.
          If {{true}}, the class includes all packets except those that match the {{param|DestPort}} entry (or port range), if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Source port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortRangeMax" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from {{param|SourcePort}} through {{param}} (inclusive).  If specified, {{param}} MUST be greater than or equal to SourcePort.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|SourcePort}} entry (or port range),  if specified.
          If {{true}}, the class includes all packets except those that match the {{param|SourcePort}} entry (or port range), if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddress" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Source MAC Address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACMask" access="readWrite" dmr:version="2.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|SourceMACAddress}} is  only to be done for bit positions set to one in the mask.  A mask of ''FF:FF:FF:FF:FF:FF'' or {{empty}} indicates all bits of the  {{param|SourceMACAddress}} are to be used for classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) {{param|SourceMACAddress}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the (masked) {{param|SourceMACAddress}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddress" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Destination MAC Address.  {{empty}} indicates this criterion is not used for classification.
          The use of destination MAC address as a classification criterion is primarily useful only for bridged traffic.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACMask" access="readWrite" dmr:version="2.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|DestMACAddress}} is only to be done for bit positions set to one in the mask.  A mask of ''FF:FF:FF:FF:FF:FF'' or {{empty}} indicates all bits of the  {{param|DestMACAddress}} are to be used for classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) {{param|DestMACAddress}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the (masked) {{param|DestMACAddress}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Ethertype" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Ethertype as indicated in either the Ethernet or SNAP Type header.  A value of -1 indicates this criterion is not used for  classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthertypeExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|Ethertype}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|Ethertype}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SSAP" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          SSAP element in the LLC header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SSAPExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|SSAP}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|SSAP}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSAP" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          DSAP element in the LLC header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DSAPExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|DSAP}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|DSAP}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LLCControl" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Control element in the LLC header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="LLCControlExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|LLCControl}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|LLCControl}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SNAPOUI" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          OUI element in the SNAP header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SNAPOUIExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|SNAPOUI}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|SNAPOUI}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassID" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCPv4 Vendor Class Identifier (Option 60) as defined in {{bibref|RFC2132}}, matched according to the criterion in {{param|SourceVendorClassIDMode}}.  Case sensitive.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          {{empty}} indicates this criterion is not used for classification.
          Note: This parameter is DHCPv4-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv4|DHCPType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassIDv6" access="readWrite" dmr:version="2.2">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 Vendor Class Identifier (Option 16) as defined in {{bibref|RFC3315}}. The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
          Note: This parameter is DHCPv6-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv6|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the {{param|SourceVendorClassID}} entry (for {{enum|DHCPv4|DHCPType}}) or the {{param|SourceVendorClassIDv6}} entry (for {{enum|DHCPv6|DHCPType}}), if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the {{param|SourceVendorClassID}} entry (for {{enum|DHCPv4|DHCPType}}) or the {{param|SourceVendorClassIDv6}} entry (for {{enum|DHCPv6|DHCPType}}), if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassIDMode" access="readWrite" dmr:version="2.0">
        <description>
          SourceVendorClassID pattern match criterion.  {{enum}}
          For example, if {{param|SourceVendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}}  values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassID" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCPv4 Vendor Class Identifier (Option 60) as defined in {{bibref|RFC2132}}, matched according to the criterion in {{param|DestVendorClassIDMode}}.  Case sensitive.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          {{empty}} indicates this criterion is not used for classification.
          Note: This parameter is DHCPv4-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv4|DHCPType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassIDv6" access="readWrite" dmr:version="2.2">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 Vendor Class Identifier (Option 16) as defined in {{bibref|RFC3315}}. The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
          Note: This parameter is DHCPv6-specific. It only applies when {{param|DHCPType}} is {{enum|DHCPv6|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the {{param|DestVendorClassID}} entry (for {{enum|DHCPv4|DHCPType}}) or the {{param|DestVendorClassIDv6}} entry (for {{enum|DHCPv6|DHCPType}}), if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the {{param|DestVendorClassID}} entry (for {{enum|DHCPv4|DHCPType}}) or the {{param|DestVendorClassIDv6}} entry (for {{enum|DHCPv6|DHCPType}}), if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassIDMode" access="readWrite" dmr:version="2.0">
        <description>
          {{param|DestVendorClassID}} pattern match criterion.  {{enum}}
          For example, if {{param|DestVendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values  of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="SourceClientID" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP Client Identifier. The DHCP Client Identifier is Option 61 (as defined in {{bibref|RFC2132}}) for {{enum|DHCPv4|DHCPType}}, or is Option 1 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
          Note: DHCPv6 Option 1 (Client Identifier) is sometimes referred to as ''DUID''.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceClientIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the  {{param|SourceClientID}} entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the {{param|SourceClientID}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestClientID" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP Client Identifier. The DHCP Client Identifier is Option 61 (as defined in {{bibref|RFC2132}}) for {{enum|DHCPv4|DHCPType}}, or is Option 1 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
          Note: DHCPv6 Option 1 (Client Identifier) is sometimes referred to as ''DUID''.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestClientIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the  {{param|DestClientID}} entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the {{param|DestClientID}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceUserClassID" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP User Class Identifier. The DHCP User Class Identifier is Option 77 (as defined in {{bibref|RFC3004}}) for {{enum|DHCPv4|DHCPType}}, or is Option 15 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceUserClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the  {{param|SourceUserClassID}} entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the {{param|SourceUserClassID}} entry,  if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestUserClassID" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP User Class Identifier. The DHCP User Class Identifier is Option 77 (as defined in {{bibref|RFC3004}}) for {{enum|DHCPv4|DHCPType}}, or is Option 15 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}. The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestUserClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the  {{param|DestUserClassID}} entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the {{param|DestUserClassID}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfo" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP Vendor-specific Information, matched according to the criteria in {{param|SourceVendorSpecificInfoEnterprise}} and {{param|SourceVendorSpecificInfoSubOption}}. The DHCP Vendor-specific Information is Option 125 (as defined in {{bibref|RFC3925}}) for {{enum|DHCPv4|DHCPType}}, or is Option 17 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}.
          {{empty}} indicates this criterion is not used for classification.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the  {{param|SourceVendorSpecificInfo}} entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the {{param|SourceVendorSpecificInfo}}  entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoEnterprise" access="readWrite" dmr:version="2.0">
        <description>
          {{param|SourceVendorSpecificInfo}} Enterprise Number as defined in {{bibref|RFC3925}}.
          The default value (0) is assigned to IANA and will probably need to be replaced with an appropriate enterprise number.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoSubOption" access="readWrite" dmr:version="2.0">
        <description>
          {{param|SourceVendorSpecificInfo}} Sub Option Code as defined in {{bibref|RFC3925}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="0" maxInclusive="255"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfo" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP Vendor-specific Information, matched according to the criteria in {{param|DestVendorSpecificInfoEnterprise}} and {{param|DestVendorSpecificInfoSubOption}}. The DHCP Vendor-specific Information is Option 125 (as defined in {{bibref|RFC3925}}) for {{enum|DHCPv4|DHCPType}}, or is Option 17 (as defined in {{bibref|RFC3315}}) for {{enum|DHCPv6|DHCPType}}.
          {{empty}} indicates this criterion is not used for classification.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          Note: This parameter is DHCP version neutral. The specific DHCP version in use with this parameter is indicated by {{param|DHCPType}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the  {{param|DestVendorSpecificInfo}} entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the {{param|DestVendorSpecificInfo}}  entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoEnterprise" access="readWrite" dmr:version="2.0">
        <description>
          {{param|DestVendorSpecificInfo}} Enterprise Number as defined in {{bibref|RFC3925}}.
          The default value (0) is assigned to IANA and will probably need to be replaced with an appropriate enterprise number.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoSubOption" access="readWrite" dmr:version="2.0">
        <description>
          {{param|DestVendorSpecificInfo}} Sub Option Code as defined in {{bibref|RFC3925}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="0" maxInclusive="255"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TCPACK" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          If {{false}}, this criterion is not used for classification.
          If {{true}}, this criterion matches with all TCP segments that have the ACK control bit set.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="TCPACKExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|TCPACK}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|TCPACK}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPLengthMin" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Minimum IP Packet Length (including header) in bytes.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IPLengthMax" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Maximum IP Packet Length (including header) in bytes.
          A value of zero indicates that no maximum is specified (an umlimited maximum length).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IPLengthExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets whose length (including header) falls within the inclusive  range {{param|IPLengthMin}} through {{param|IPLengthMax}}.  A value of zero for both {{param|IPLengthMin}} and {{param|IPLengthMax}}  allows any length packet.  An equal non-zero value of {{param|IPLengthMin}} and {{param|IPLengthMax}} allows only a packet with the exact length specified.
          If {{true}}, the class includes all packets except those whose length (including header) falls within the inclusive range  {{param|IPLengthMin}} through {{param|IPLengthMax}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPCheck" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          DiffServ codepoint (defined in {{bibref|RFC2474}}).
          If set to a Class Selector Codepoint (defined in {{bibref|RFC2474}}), all DSCP values that match the first 3 bits will be considered a valid  match.
          A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="63"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DSCPExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|DSCPCheck}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|DSCPCheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMark" access="readWrite" dmr:version="2.0">
        <description>
          Classification result.
          DSCP to mark traffic with that falls into this classification entry.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityCheck" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Current Ethernet priority of a VLAN Tag as defined in {{bibref|802.1Q-2011}} or Ethernet Priority field as defined in 802.1D. If more than 1 VLAN tag is present, then this parameter represents the outer VLAN Tag. A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|EthernetPriorityCheck}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the {{param|EthernetPriorityCheck}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityMark" access="readWrite" dmr:version="2.0">
        <description>
          Classification result.
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark traffic with that falls into this classification entry associated with the {{param|EthernetPriorityCheck}}.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="InnerEthernetPriorityCheck" access="readWrite" dmr:version="2.7">
        <description>
          Classification criterion.
          Current Ethernet priority of the inner VLAN Tag as defined in 802.1Q. This parameter is only applicable when the PDU has 2 VLAN Tags. A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="InnerEthernetPriorityExclude" access="readWrite" dmr:version="2.7">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|InnerEthernetPriorityCheck}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the {{param|InnerEthernetPriorityCheck}} entry, if  specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="InnerEthernetPriorityMark" access="readWrite" dmr:version="2.7">
        <description>
          Classification result.
          Ethernet priority code to mark traffic with that falls into this classification entry associated with the {{param|InnerEthernetPriorityCheck}}.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetDEICheck" access="readWrite" dmr:version="2.7">
        <description>
          Classification criterion.
          Current Ethernet Drop eligible Indication (DEI) of the VLAN tag as defined in 802.1Q. If 2 VLAN Tags are present, then this parameter represents the outer VLAN tag. A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetDEIExclude" access="readWrite" dmr:version="2.7">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|EthernetDEICheck}} entry, if  specified.
          If {{true}}, the class includes all packets except those that match the {{param|EthernetDEICheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDCheck" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Current Ethernet VLAN ID as defined in 802.1Q.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the class includes only those packets that match the {{param|VLANIDCheck}} entry, if specified.
          If {{true}}, the class includes all packets except those that match the {{param|VLANIDCheck}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="OutOfBandInfo" access="readWrite" dmr:version="2.0">
        <description>
          Classification criterion.
          Allows traffic to be distinguished based on out-of-band information such as physical port or application ID.  Primarily intended for,  but not restricted to, locally sourced traffic.
          If specified, this entry applies to traffic with matching out-of-band information.  A value of -1 indicates this criterion is not  used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" dmr:version="2.0">
        <description>
          Classification result.
          Identifier of the forwarding policy associated with traffic that falls in this classification.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TrafficClass" access="readWrite" dmr:version="2.0">
        <description>
          Classification result.
          Identifier of the traffic class associated with traffic that falls in this classification.  If specified, at least one {{object|#.Queue}} table entry MUST include this traffic class in its {{param|#.Queue.{i}.TrafficClasses}} parameter (which is a comma-separated list).
          A value of -1 indicates a null traffic class.
          {{param}} and {{param|App}} are mutually exclusive and one of the two MUST be specified.  If {{param}} is {{null}}, {{param|App}} MUST be specified, and vice versa.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="Policer" access="readWrite" dmr:version="2.0">
        <description>
          Classification result. {{reference}}
          Indicates the ''Policer'' table entry for traffic that falls in this classification.
          {{empty}} indicates a null policer.
          {{param}} MAY optionally be specified in conjunction with {{param|TrafficClass}}. {{param}} and {{param|App}} are mutually exclusive.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Policer." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="App" access="readWrite" dmr:version="2.0">
        <description>
          Classification result. {{reference}}
          Indicates the ''App'' table entry for traffic that falls in this classification.
          {{empty}} indicates a null ''App''.
          {{param|TrafficClass}} and {{param}} are mutually exclusive and one of the two MUST be specified.  If {{param|TrafficClass}} is null, {{param}} MUST be specified, and vice versa.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.App." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.App.{i}." access="readWrite" numEntriesParameter="AppNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Application table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this App table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this App table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolIdentifier" access="readWrite" dmr:version="2.0">
        <description>
          URN identifying the protocol associated with the given application.  A set of defined URNs is given in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.0">
        <description>
          Human-readable name associated with this entry in the App table.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DefaultForwardingPolicy" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of the forwarding policy associated with traffic associated with this App table entry, but not  associated with any specified flow.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DefaultTrafficClass" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of the traffic class associated with traffic associated with this App table entry, but not associated with any specified flow.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DefaultPolicer" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Indicates the ''Policer'' table entry for traffic associated with this {{object}} table entry, but not associated with any specified flow.
          {{empty}} indicates a null policer.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Policer." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" dmr:version="2.0">
        <description>
          DSCP to mark traffic associated with this App table entry, but not associated with any specified flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DefaultEthernetPriorityMark" access="readWrite" dmr:version="2.0">
        <description>
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark traffic associated with this App table entry, but not  associated with any specified flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2a5|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DefaultInnerEthernetPriorityMark" access="readWrite" dmr:version="2.7">
        <description>
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark the inner VLAN Tags as defined in 802.1Q with this {{object}} table entry where the packet is not associated with any specified flow. This parameter is only applicable when the PDU has 2 VLAN Tags.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.Flow.{i}." access="readWrite" numEntriesParameter="FlowNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Flow table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this Flow table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this Flow table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" dmr:version="2.0">
        <description>
          URN identifying the type of flow to be associated with the specified policer.  A set of defined URNs is given in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="TypeParameters" access="readWrite" dmr:version="2.0">
        <description>
          List of name-value pairs representing additional criteria to identify the flow type.  The use and interpretation is specific to the particular FlowType URN.Encoded using the "x-www-form-urlencoded" content type defined in {{bibref|HTML4.01}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.0">
        <description>
          Human-readable name associated with this entry in the Flow table.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="App" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Indicates the ''App'' table entry associated with this flow.  {{empty}} indicates the flow table is not associated with any App table entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.App." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of the forwarding policy associated with this flow.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TrafficClass" access="readWrite" dmr:version="2.0">
        <description>
          Identifier of the traffic class associated with this flow.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Policer" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Indicates the ''Policer'' table entry for traffic that falls in this flow.
          {{empty}} indicates a null policer.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Policer." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DSCPMark" access="readWrite" dmr:version="2.0">
        <description>
          DSCP to mark traffic with that falls into this flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityMark" access="readWrite" dmr:version="2.0">
        <description>
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark traffic with that falls into this flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2a5|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="InnerEthernetPriorityMark" access="readWrite" dmr:version="2.7">
        <description>
          Ethernet priority code (as defined in {{bibref|802.1Q-2011}}) to mark the inner VLAN Tags with for traffic that falls into this flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-181i2|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.Policer.{i}." access="readWrite" numEntriesParameter="PolicerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Policer table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this policer.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this policer.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="CommittedRate" access="readWrite" dmr:version="2.0">
        <description>
          Committed rate allowed for this policer in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="CommittedBurstSize" access="readWrite" dmr:version="2.0">
        <description>
          Committed Burstsize in bytes.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ExcessBurstSize" access="readWrite" dmr:version="2.0">
        <description>
          Excess Burstsize in bytes.
          Applied for a {{enum|SingleRateThreeColor|MeterType}} meter.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PeakRate" access="readWrite" dmr:version="2.0">
        <description>
          Peak rate allowed for this Meter in {{units}}.
          Applied for {{enum|TwoRateThreeColor|MeterType}} meters.
        </description>
        <syntax>
          <unsignedInt>
            <units value="bits per second"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PeakBurstSize" access="readWrite" dmr:version="2.0">
        <description>
          Peak Burstsize in bytes.
          Applied for {{enum|TwoRateThreeColor|MeterType}} meters.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MeterType" access="readWrite" dmr:version="2.0">
        <description>
          Identifies the method of traffic measurement to be used for this policer.  {{enum}}
          {{enum|SimpleTokenBucket}} makes use of {{param|CommittedRate}} and {{param|CommittedBurstSize}}.
          {{enum|SingleRateThreeColor}} makes use of {{param|CommittedRate}}, {{param|CommittedBurstSize}}, and {{param|ExcessBurstSize}} as  defined in {{bibref|RFC2697}}.
          {{enum|TwoRateThreeColor}} makes use of {{param|CommittedRate}}, {{param|CommittedBurstSize}}, {{param|PeakRate}}, and  {{param|PeakBurstSize}} as defined in {{bibref|RFC2698}}.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="PossibleMeterTypes"/>
          </string>
          <default type="object" value="SimpleTokenBucket"/>
        </syntax>
      </parameter>
      <parameter name="PossibleMeterTypes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates supported meter types.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="SimpleTokenBucket"/>
            <enumeration value="SingleRateThreeColor"/>
            <enumeration value="TwoRateThreeColor"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConformingAction" access="readWrite" dmr:version="2.0">
        <description>
          Instructions for how to handle traffic that is conforming.  {{pattern}}
          {{pattern|Null}} corresponds with no action.
          ''&lt;DSCP Value&gt;'' is an unsigned integer that corresponds with a mark action overwriting the traffic's DSCP with the configured  DSCP.
          ''&lt;:Ethernet Priority&gt;'' is a colon (":") followed by an unsigned integer (no white space).  It corresponds with a mark action  overwriting the traffic's Ethernet Priority with the configured Ethernet Priority.
          ''&lt;DSCP Value:Ethernet Priority&gt;'' is an unsigned integer followed by a colon (":") and a second unsigned integer (no white  space).  It corresponds with a mark action overwriting the traffic's DSCP and Ethernet Priority with the configured values.
          For example, "24" specifies a DSCP value of 24, ":3" specifies an Ethernet Priority of 3, and "24:3" specifies both.
        </description>
        <syntax>
          <string>
            <pattern value="Null"/>
            <pattern value="Drop"/>
            <pattern value="[0-9]|[1-5][0-9]|6[0-3]">
              <description>
                &lt;DSCP Value&gt;
              </description>
            </pattern>
            <pattern value=":[0-7]">
              <description>
                &lt;Ethernet Priority&gt;
              </description>
            </pattern>
            <pattern value="([0-9]|[1-5][0-9]|6[0-3]):[0-7]">
              <description>
                &lt;DSCP Value:Ethernet Priority&gt;
              </description>
            </pattern>
          </string>
          <default type="object" value="Null"/>
        </syntax>
      </parameter>
      <parameter name="PartialConformingAction" access="readWrite" dmr:version="2.0">
        <description>
          Instructions for how to handle traffic that is partially conforming (colored yellow).  {{pattern}}
          {{pattern|Null}} corresponds with no action.
          ''&lt;DSCP Value&gt;'' is an unsigned integer that corresponds with a mark action overwriting the traffic's DSCP with the configured  DSCP.Only applies for three-color meters.
          ''&lt;:Ethernet Priority&gt;'' is a colon (":") followed by an unsigned integer (no white space).  It corresponds with a mark action  overwriting the traffic's Ethernet Priority with the configured Ethernet Priority.
          ''&lt;DSCP Value:Ethernet Priority&gt;'' is an unsigned integer followed by a colon (":") and a second unsigned integer (no white  space).  It corresponds with a mark action overwriting the traffic's DSCP and Ethernet Priority with the configured values.
          For example, "24" specifies a DSCP value of 24, ":3" specifies an Ethernet Priority of 3, and "24:3" specifies both.
        </description>
        <syntax>
          <string>
            <pattern value="Null"/>
            <pattern value="Drop"/>
            <pattern value="[0-9]|[1-5][0-9]|6[0-3]">
              <description>
                &lt;DSCP Value&gt;
              </description>
            </pattern>
            <pattern value=":[0-7]">
              <description>
                &lt;Ethernet Priority&gt;
              </description>
            </pattern>
            <pattern value="([0-9]|[1-5][0-9]|6[0-3]):[0-7]">
              <description>
                &lt;DSCP Value:Ethernet Priority&gt;
              </description>
            </pattern>
          </string>
          <default type="object" value="Drop"/>
        </syntax>
      </parameter>
      <parameter name="NonConformingAction" access="readWrite" dmr:version="2.0">
        <description>
          Instructions for how to handle traffic that is non-conforming.  {{pattern}}
          {{pattern|Null}} corresponds with no action.
          ''&lt;DSCP Value&gt;'' is an unsigned integer that corresponds with a mark action overwriting the traffic's DSCP with the configured  DSCP.
          ''&lt;:Ethernet Priority&gt;'' is a colon (":") followed by an unsigned integer (no white space).  It corresponds with a mark action  overwriting the traffic's Ethernet Priority with the configured Ethernet Priority.
          ''&lt;DSCP Value:Ethernet Priority&gt;'' is an unsigned integer followed by a colon (":") and a second unsigned integer (no white  space).  It corresponds with a mark action overwriting the traffic's DSCP and Ethernet Priority with the configured values.
          For example, "24" specifies a DSCP value of 24, ":3" specifies an Ethernet Priority of 3, and "24:3" specifies both.
        </description>
        <syntax>
          <string>
            <pattern value="Null"/>
            <pattern value="Drop"/>
            <pattern value="[0-9]|[1-5][0-9]|6[0-3]">
              <description>
                &lt;DSCP Value&gt;
              </description>
            </pattern>
            <pattern value=":[0-7]">
              <description>
                &lt;Ethernet Priority&gt;
              </description>
            </pattern>
            <pattern value="([0-9]|[1-5][0-9]|6[0-3]):[0-7]">
              <description>
                &lt;DSCP Value:Ethernet Priority&gt;
              </description>
            </pattern>
          </string>
          <default type="object" value="Drop"/>
        </syntax>
      </parameter>
      <parameter name="TotalCountedPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TotalCountedBytes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Total number of Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ConformingCountedPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of conforming Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ConformingCountedBytes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of conforming Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PartiallyConformingCountedPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of partially conforming Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PartiallyConformingCountedBytes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of partially conforming Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="NonConformingCountedPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of non-conforming Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="NonConformingCountedBytes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of non-conforming Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.Queue.{i}." access="readWrite" numEntriesParameter="QueueNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Queue table. Each entry is associated with a set of traffic classes, which are specified via the {{param|TrafficClasses}} parameter, and is configured with weight, precedence, drop algorithm, scheduler algorithm etc as appropriate for the traffic classes. An entry can be associated either with all egress interfaces (in which case an actual queue will be instantiated on each egress interface on which traffic of that traffic class can be generated) or else with a single specified egress interface.
        For enabled table entries, if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this queue.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this queue.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="TrafficClasses" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} Each list item identifies the set of traffic classes associated with this queue.
          Traffic is sent to this queue if a {{object|#.Classification}}, {{object|#.App}} or {{object|#.Flow}} table entry specifies a traffic class, e.g. via the {{param|#.Classification.{i}.TrafficClass}} parameter.
          If more than one queue on a given egress interface is associated with a given traffic class, the implementation will choose which queue to send traffic of this class to.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <unsignedInt/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Specifies the egress interface for which the specified queue MUST exist.
          This MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which ''Queues'' can be instantiated is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.0">
        <description>
          Indicates that the specified queue MUST exist for all egress interfaces (i.e. this queue entry is to apply to all egress interfaces). If {{true}}, the value of {{param|Interface}} is ignored since all egress interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="HardwareAssisted" access="readOnly" dmr:version="2.0">
        <description>
          Indicates whether ''all'' the queues corresponding to this table entry are hardware assisted. If any of the queues corresponding to this table entry are not hardware assisted, the parameter value MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="BufferLength" access="readOnly" dmr:version="2.0">
        <description>
          Number of bytes in the buffer.
          Queue buffer size for all egress interfaces for which this queue exists.  If the buffer size is not the same for all such egress  interfaces, this parameter MUST be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Weight" access="readWrite" dmr:version="2.0">
        <description>
          Weight of this queue in case of {{enum|WFQ|SchedulerAlgorithm}} or {{enum|WRR|SchedulerAlgorithm}}, but only  used for queues of equal precedence.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Precedence" access="readWrite" dmr:version="2.0">
        <description>
          Precedence of this queue relative to others. Lower numbers imply greater precedence.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="REDThreshold" access="readWrite" dmr:version="2.0">
        <description>
          Random Early Detection threshold, used only when {{param|DropAlgorithm}} is {{enum|RED|DropAlgorithm}}.
          This is the minimum threshold (''min_th'') and is measured as a percentage of the queue size.  If the value is set to zero, the CPE  MUST choose a sensible value, e.g. 5 (but the value MUST still read back as zero).
          In this version of the data model, there is no way to set the maximum threshold (''max_th'').  The CPE MUST choose a sensible value,  e.g. three times the minimum threshold.
          In this version of the data model, there is no way to set the RED weight (''w_q'').  The CPE MUST choose a sensible value, e.g.  0.002.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="100"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="REDPercentage" access="readWrite" dmr:version="2.0">
        <description>
          Random Early Detection percentage, used only when {{param|DropAlgorithm}} is {{enum|RED|DropAlgorithm}}.
          This is the maximum value of the packet marking probability (''max_p'').  If the value is set to zero, the CPE MUST choose a sensible  value, e.g. 10 (but the value MUST still read back as zero).
          In this version of the data model, there is no way to set the RED weight (''w_q'').  The CPE MUST choose a sensible value, e.g.  0.002.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="100"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DropAlgorithm" access="readWrite" dmr:version="2.0">
        <description>
          Dropping algorithm used for this queue if congested.
        </description>
        <syntax>
          <string>
            <enumeration value="RED">
              <description>
                Random Early Detection {{bibref|RED}}
              </description>
            </enumeration>
            <enumeration value="DT">
              <description>
                Drop Tail
              </description>
            </enumeration>
            <enumeration value="WRED">
              <description>
                Weighted RED
              </description>
            </enumeration>
            <enumeration value="BLUE">
              <description>
                {{bibref|BLUE}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="DT"/>
        </syntax>
      </parameter>
      <parameter name="SchedulerAlgorithm" access="readWrite" dmr:version="2.0">
        <description>
          Scheduling Algorithm used by scheduler.
        </description>
        <syntax>
          <string>
            <enumeration value="WFQ">
              <description>
                Weighted Fair Queueing
              </description>
            </enumeration>
            <enumeration value="WRR">
              <description>
                Weighted Round Robin
              </description>
            </enumeration>
            <enumeration value="SP">
              <description>
                Strict Priority
              </description>
            </enumeration>
          </string>
          <default type="object" value="SP"/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" dmr:version="2.0">
        <description>
          Rate to shape this queue's traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the egress will be on a PPP or IP link with a specified ''ShapingRate'', the percentage is calculated relative to this rate.  Otherwise, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" dmr:version="2.0">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping)  this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.QueueStats.{i}." access="readWrite" numEntriesParameter="QueueStatsNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Queue statistics table. This table is managed by the ACS, which will create entries only for those {Queue, Interface} combinations for which statistics are to be collected.
        Note: The {{object}} table includes unique key parameters that are strong references. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Queue"/>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this object.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this object.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled">
              <description>
                Enabled and {Queue,Interface} is valid
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                Enabled but {Queue,Interface} is invalid
              </description>
            </enumeration>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Queue" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Indicates ''Queue'' entry with which this object is associated.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Queue." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Specifies the egress interface for which this object contains statistics.
          This MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which ''QueueStats'' can be instantiated is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="OutputPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of packets output through the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OutputBytes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of bytes output through the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DroppedPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of packets dropped by the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DroppedBytes" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of bytes dropped by the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="QueueOccupancyPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Queue occupancy in packets (gives a measure of queue latency).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="QueueOccupancyPercentage" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Queue occupancy measured as a {{units}}, i.e. 100 * queue occupancy in bytes / queue size in bytes (gives a measure of queue usage).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.QoS.Shaper.{i}." access="readWrite" numEntriesParameter="ShaperNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Shaper table. Used to shape the queue(s) associated with {{param|Interface}}. In case of a single queue for that interface, determines the egress rate of the queue. In case of multiple queues for that interface (possibly with per queue shaping rates), determines the aggregate egress rate on that interface.
        For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this shaper.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this shaper.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}The interface object associated with this ''Shaper'' entry. It MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which ''Shapers'' can be instantiated is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" dmr:version="2.0">
        <description>
          Rate to shape the associated interface connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" dmr:version="2.0">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping)  this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LANConfigSecurity." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains generic device configuration information.
      </description>
      <parameter name="ConfigPassword" access="readWrite" dmr:version="2.0">
        <description>
          A password to allow LAN access to protected auto-configuration services.
          If the CPE supports TR-064 (LAN-side DSL CPE Configuration Protocol), this parameter is to be used as the ''dslf-config'' password  (as defined in TR-064).
          If the CPE has a user interface with password protection enabled, this parameter is also to be used as the user password for  password-protected operations.  However, this parameter MUST NOT be used to set the user password if the parameter  {{param|.UserInterface.PasswordUserSelectable}} is {{true}}.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Hosts." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object provides information about each of the hosts on the LAN, including those whose IP address was allocated by the CPE using DHCP as well as hosts with statically allocated IP addresses. It can also include non-IP  hosts.
      </description>
      <parameter name="HostNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Hosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Host table.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="PhysAddress"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" status="deprecated" dmr:version="2.0">
        <description>
          {{datatype|expand}}
          This parameter is DEPRECATED because {{object}} is a transient object.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="PhysAddress" access="readOnly" dmr:version="2.0">
        <description>
          Unique physical identifier of the host. For many layer 2 technologies this is typically a MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.0">
        <description>
          Current IP Address of the host. {{empty}} if no address is available.
          If more than one IP address for this host is known, the CPE will choose a ''primary'' address.  All known IP addresses can be listed in the {{object|IPv4Address}} and {{object|IPv6Address}} tables.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="AddressSource" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          Indicates whether the IP address of the host was allocated by the CPE using DHCP, was assigned to the host statically, or was assigned using automatic IP address allocation.  {{enum}}
          This parameter is DEPRECATED because only {{enum|None}} and {{enum|DHCP}} made sense (the CPE doesn't know whether the address is {{enum|Static}} or {{enum|AutoIP}}).  The {{enum|DHCP}} case is now handled via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="AutoIP"/>
            <enumeration value="None"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DHCPClient" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} Each list item is the DHCPv4 or DHCPv6 server's client entry that corresponds to the host.
        </description>
        <syntax>
          <list maxItems="2"/>
          <string>
            <pathRef refType="strong" targetParent=".DHCPv4.Server.Pool.{i}.Client. .DHCPv6.Server.Pool.{i}.Client." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          DHCP lease time remaining in {{units}}.  A value of -1 indicates an infinite lease.  The value MUST be 0 (zero) if the {{param|AddressSource}} is not {{enum|DHCP|AddressSource}}.
          This parameter is DEPRECATED because DHCP lease/lifetime information can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AssociatedDevice" access="readOnly" dmr:version="2.2">
        <description>
          {{noreference}}The value MUST the path name of the ''AssociatedDevice'' (or equivalent) table row that models the host, or {{null}} if there is no such table.
          For example: ''Device.WiFi.AccessPoint.1.AssociatedDevice.2''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer1Interface" access="readOnly" dmr:version="2.0">
        <description>
          {{noreference}}The value MUST be the path name of a row in a layer 1 interface table.  If the layer 1 device isn’t known, then {{param}} will be {{null}}.
          For example: ''Device.Ethernet.Interface.2''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer3Interface" access="readOnly" dmr:version="2.0">
        <description>
          {{reference}}  If the entry represents a non-IP device, then {{param}} will be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          Vendor Class Identifier DHCP option (Option 60) of the host.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          A hexbinary string, Client Identifier DHCP option (Option 61) for the specific IP connection of the client.  The option value is binary, so an exact match is REQUIRED.
          It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readOnly" status="deprecated" dmr:version="2.0">
        <description>
          A hexbinary string, User Class Identifier DHCP option (Option 77) of the host.
          It MAY be defined when {{param|AddressSource}} is {{enum|DHCP|AddressSource}}. {{empty}} indicates this option is not used.
          Note: DHCPv4 Option values are limited to a length of 255, while DHCPv6 Option values can have a maximum length of 65535.
          This parameter is DEPRECATED because host-supplied DHCP options can be accessed via the {{param|DHCPClient}} reference.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readOnly" dmr:version="2.0">
        <description>
          The device's host name or {{empty}} if unknown.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.0">
        <description>
          Whether or not the host is currently present on the LAN.  The method of presence detection is a local matter to  the CPE.
          The ability to list inactive hosts is OPTIONAL.  If the CPE includes inactive hosts in this table, {{param}} MUST be set to {{false}}  for each inactive host.  The length of time an inactive host remains listed in this table is a local matter to the CPE.
          Entries in Device.Hosts.Host SHOULD NOT be removed when they become inactive if there are {{object|WANStats}} statistics collected for the entry in the past seven days.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ActiveLastChange" access="readOnly" dmr:version="2.10">
        <description>
          The datetime when {{param|Active}} last changed from {{true}} to {{false}} or from {{false}} to {{true}}.  The initial detection of a host SHOULD be treated as a transition from {{false}} to {{true}}, showing the datetime when the host was first detected.
          The ability to list inactive hosts is OPTIONAL. The length of time an inactive host remains listed in this table is a local matter to the CPE.
          Entries in Device.Hosts.Host SHOULD NOT be removed when they become inactive if there are {{object|WANStats}} statistics collected for the entry in the past seven days.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="IPv4AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Hosts.Host.{i}.IPv4Address.{i}." access="readOnly" numEntriesParameter="IPv4AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        The host's known IPv4 addresses.  This includes any addresses assigned via DHCP, which can also be accessed via the {{param|#.DHCPClient}} reference.
      </description>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.2">
        <description>
          IPv4 address.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Hosts.Host.{i}.IPv6Address.{i}." access="readOnly" numEntriesParameter="IPv6AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        The host's known IPv6 addresses.  This includes any addresses assigned via DHCP, which can also be accessed via the {{param|#.DHCPClient}} reference.
      </description>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Hosts.Host.{i}.WANStats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        These count bytes or packets at the IP layer sent to the WAN, or received from the WAN.
      </description>
      <parameter name="BytesSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of bytes transmitted to the WAN from the Host device at the IP layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of bytes received from the WAN and sent to the Host device at the IP layer.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of IP packets transmitted to the WAN from the Host device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.12">
        <description>
          The total number of IP packets received from the WAN and sent to the Host device.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" dmr:version="2.12">
        <description>
          The total number of outbound IP packets to the WAN from the Host device that could not be transmitted because of errors. These may be due to the number of retransmissions exceeding the retry limit, or from other causes.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="RetransCount" access="readOnly" dmr:version="2.12">
        <description>
          The total number of transmitted IP packets to the WAN from the Host device which were retransmissions. Two retransmissions of the same packet results in this counter incrementing by two.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The total number of outbound IP packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted. One possible reason for discarding such a packet could be to free up buffer space.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Properties for Domain Name Service (DNS).
      </description>
      <parameter name="SupportedRecordTypes" access="readOnly" dmr:version="2.2">
        <description>
          The DNS record types that are supported by the device. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="A">
              <description>
                {{bibref|RFC1035}}
              </description>
            </enumeration>
            <enumeration value="AAAA">
              <description>
                {{bibref|RFC3596}}
              </description>
            </enumeration>
            <enumeration value="SRV">
              <description>
                {{bibref|RFC2782}}
              </description>
            </enumeration>
            <enumeration value="PTR">
              <description>
                {{bibref|RFC1035}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.Client." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Client properties for Domain Name Service (DNS). The DNS client resolves FQDN on behalf of device internal (client) applications.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DNS client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the DNS client. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.Client.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This table contains the DNS Server IP address to be used by the DHCP Client (it does ''not'' model a DNS Server). Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS.
      </description>
      <uniqueKey>
        <parameter ref="DNSServer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="2.0">
        <description>
          DNS server IP addresses.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This parameter specifies the IP interface over which the DNS query is sent.
          If {{empty}} is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Method used to assign the {{param|DNSServer}} address.  {{enum}}
          Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have {{param}} set to {{enum|DHCPv4}}, {{enum|DHCPv6}}, {{enum|IPCP}}, or {{enum|RouterAdvertisement}}, as the case may be. Manually created table entires will have their {{param}} set to {{enum|Static}}.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" status="deprecated">
              <description>
                Replaced by {{enum|DHCPv4}}.
              </description>
            </enumeration>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
            <enumeration value="RouterAdvertisement"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.Relay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        DNS Relay object. The DNS proxy (or relay) function allows the forwarding of local network DNS queries to local or external DNS server(s) {{bibref|RFC5625}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DNS Relay function.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the DNS relay. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.Relay.Forwarding.{i}." access="readWrite" numEntriesParameter="ForwardNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        DNS Server forwarding policy to be used by the DNS Relay.  Entries are either automatically created as result of DHCP (v4 or v6), IPCP, or RA received DNS server information, or are statically configured by the ACS.
        Note: Management of re-directing queries to the device embedded DNS server is not defined in this version of the specification.
      </description>
      <uniqueKey>
        <parameter ref="DNSServer"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="2.0">
        <description>
          DNS server IP addresses.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Specifies the IP interface over which the DNS query is sent.
          If {{empty}} is specified, the CPE MUST use its routing policy (IP Forwarding table entries), if necessary, to determine the appropriate interface.
          Note: {{param}} is only writable when {{param|Type}} is {{enum|Static|Type}}; otherwise, {{param}} is automatically configured as result of DHCP, IPCP, or RA received DNS server information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Method used to assign the {{param|DNSServer}} address.  {{enum}}
          Table entries that are automatically created as result of DHCP, IPCP, or RA received DNS server information will have {{param}} set to {{enum|DHCPv4}}, {{enum|DHCPv6}}, {{enum|IPCP}}, or {{enum|RouterAdvertisement}}, as the case may be. Manually created table entires will have their {{param}} set to {{enum|Static}}.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" status="deprecated">
              <description>
                Replaced by {{enum|DHCPv4}}.
              </description>
            </enumeration>
            <enumeration value="DHCPv4"/>
            <enumeration value="DHCPv6"/>
            <enumeration value="RouterAdvertisement"/>
            <enumeration value="IPCP"/>
            <enumeration value="Static"/>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.Diagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The DNS Diagnostics object containing the {{object|NSLookupDiagnostics}} test.
      </description>
    </object>
    <object name="Device.DNS.Diagnostics.NSLookupDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines access to an IP-layer NS Lookup test for the specified IP interface.
        When initiated, the NS Lookup test will contact {{param|DNSServer}} and look up {{param|HostName}} {{param|NumberOfRepetitions}} times.
        There will be a {{object|Result}} instance for each time the device performs a DNS lookup, which is determined by the value of {{param|NumberOfRepetitions}}.
        Any previous {{object|Result}} instances are removed when a new test is initiated.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates availability of diagnostic data. {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the DiagnosticsState to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the Error values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code "8 DIAGNOSTICS COMPLETE" in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_DNSServerNotResolved" access="readOnly">
              <description>
                Unable to resolve DNSServer Name
              </description>
            </enumeration>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This parameter specifies the IP-layer interface over which the test is to be performed (i.e. the source IP address to use when performing the test).
          If {{empty}} is specified, the CPE MUST use its routing policy (Forwarding table entries), if necessary, to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the Host Name that NS Lookup is to look for. The current domain name MUST be used unless the name is a fully qualified name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DNSServer" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the DNS Server name or IP address that NS Lookup is to use for the lookup. The name of this server will be resolved using the default DNS server unless an IP address is provided.
          If {{empty}} is specified, the device's default DNS server will be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" dmr:version="2.0">
        <description>
          Timeout in {{units}} that indicates that a request has failed.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" dmr:version="2.0">
        <description>
          The number of times the device SHOULD repeat the execution of the NSLookup using the same input parameters.  If the diagnostics test fails the CPE MAY terminate the test without completing the full number of repetitions.
          Each repetition will use a Result instance to hold the NSLookup result data.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Number of successfully executed repetitions.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ResultNumberOfEntries" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{numentries}}
          Total number of Result entries from the most recent invocation of the test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.Diagnostics.NSLookupDiagnostics.Result.{i}." access="readOnly" numEntriesParameter="ResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0" dmr:noUniqueKeys="true">
      <description>
        Results from the most recent invocation of the test, one instance per repetition.
      </description>
      <parameter name="Status" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result Parameter to represent whether the NS Lookup was successful or not.
          Errors for individual Result instances do not get bubbled up to {{param|#.DiagnosticsState}}.
          A failure on a specific attempt does not mean that the overall test failed, but a failure on all attempts means that {{param|#.DiagnosticsState}} SHOULD be {{enum|Error_Other|#.DiagnosticsState}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Success"/>
            <enumeration value="Error_DNSServerNotAvailable"/>
            <enumeration value="Error_HostNameNotResolved"/>
            <enumeration value="Error_Timeout"/>
            <enumeration value="Error_Other"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AnswerType" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter to represent whether the answer is Authoritative or not.
        </description>
        <syntax>
          <string>
            <enumeration value="None">
              <description>
                Indicates that the NS Lookup failed to find the host.
              </description>
            </enumeration>
            <enumeration value="Authoritative"/>
            <enumeration value="NonAuthoritative"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostNameReturned" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter to represent the fully qualified name for the Host Name in the calling parameter (e.g. HostName.DomainName); if no response was provided, then this parameter is {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPAddresses" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Indicates the IP Address results returned by the NS Lookup; if no response was provided, then this parameter is {{empty}}.
        </description>
        <syntax>
          <list maxItems="10"/>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DNSServerIP" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Result parameter to represent the actual DNS Server IP address that the NS Lookup used.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ResponseTime" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Response time (for the first response packet) in {{units}}, or 0 if no response was received.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.SD." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        This object contains the DNS Service Discovery {{bibref|DNS-SD}} object and parameters necessary to discover services and their associated devices.
        Upon reboot the the contents of the service table are repopulated. When the DNS.SD service is disabled, the contents of the service table is implementation specific.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.6">
        <description>
          The parameter, when {{true}}, enables the discovery of DNS-SD services hosted by other devices.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServiceNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AdvertisedInterfaces" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|the {{object|##.IP.Interface}} object instance from which DNS-SD services are advertised}}
          If this parameter is not supported by an implementation then DNS-SD services are advertised on all LAN interfaces.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="##.IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.SD.Service.{i}." access="readOnly" numEntriesParameter="ServiceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        The {{object}} table contains discovered DNS-SD services. DNS.SD service information is provided in DNS RR SRV records {{bibref|RFC2782}}. The Service Instance Name {{bibref|DNS-SD|Section 4.1 Structured Instance Names}} further specifies information about the service name (RFC2782 Service field) and domain name (RFC2782 Name field) in the form:
        Service Instance Name = &lt;InstanceName&gt; . &lt;Service&gt; . &lt;Domain&gt;
        &lt;Service&gt; = _&lt;ApplicationProtocol&gt; . _&lt;TransportProtocol&gt;
        RFC2782 Service field will always be equal to &lt;InstanceName&gt;. &lt;Service&gt;
        RFC2782 Name field will always be equal to &lt;Domain&gt;
        For example, an SSH service might have:
        *{{param|InstanceName}} = "Secure Shell (SSH))"
        *{{param|ApplicationProtocol}} = "ssh"
        *{{param|TransportProtocol}} = "TCP"
        *{{param|Domain}} = "example.com"
        *{{param|Port}} = 22
        *{{param|Target}} = "ssh.example.com."
      </description>
      <uniqueKey>
        <parameter ref="InstanceName"/>
        <parameter ref="ApplicationProtocol"/>
        <parameter ref="TransportProtocol"/>
        <parameter ref="Domain"/>
      </uniqueKey>
      <parameter name="InstanceName" access="readOnly" dmr:version="2.6">
        <description>
          Human-readable instance name {{bibref|DNS-SD|Section 4.1.1 Instance Names}} (i.e. The "&lt;{{param}}&gt;" portion of the '"Service Instance Name'").
        </description>
        <syntax>
          <string>
            <size maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ApplicationProtocol" access="readOnly" dmr:version="2.6">
        <description>
          The Application Protocol, without the leading underscore, associated with the service (e.g., daap) as defined by the DNS-SD service {{bibref|DNS-SD|Section 7 Application Protocol Names}}.
        </description>
        <syntax>
          <string>
            <size maxLength="15"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TransportProtocol" access="readOnly" dmr:version="2.6">
        <description>
          The Transport Protocol associated with the service as defined by the DNS-SD service {{bibref|DNS-SD|Section 4.1.2 Service Names}}.
        </description>
        <syntax>
          <string>
            <enumeration value="TCP"/>
            <enumeration value="UDP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Domain" access="readOnly" dmr:version="2.6">
        <description>
          The value extracted from the Name field of the DNS SRV record {{bibref|RFC2782}} which represents the fully qualified domain name (FQDN) associated with the service as defined by the DNS-SD service {{bibref|DNS-SD|Section 4.1.3 Domain Names}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readOnly" dmr:version="2.6">
        <description>
          The value extracted from the Port field of the DNS SRV record {{bibref|RFC2782}} that is used to contact the service.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Target" access="readOnly" dmr:version="2.6">
        <description>
          The fully qualified domain name (FQDN) with the trailing dot "." of the target host implementing the service as in the DNS SRV record {{bibref|RFC2782}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.6">
        <description>
          The status of the discovered {{object}} at {{param|LastUpdate}} time. {{enum}}
          The ability to instantiate an inactive {{object}} is OPTIONAL.
          The time an inactive {{object}} remains listed in this table is a local matter to the device.
        </description>
        <syntax>
          <string>
            <enumeration value="LeaseActive">
              <description>
                The {{object}} has received a response record with TTL &gt; 0 and the {{param|#.Service.{i}.TimeToLive}} has not expired yet. The {{object}} is considered active.
              </description>
            </enumeration>
            <enumeration value="GoodbyeReceived">
              <description>
                The device has received a response record containing TTL=0 indicating a goodbye message and the {{param|#.Service.{i}.TimeToLive}} has not expired yet. The {{object}} is considered inactive.
              </description>
            </enumeration>
            <enumeration value="LeaseExpired">
              <description>
                The {{param|#.Service.{i}.TimeToLive}} has expired. The {{object}} is considered inactive
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.6">
        <description>
          The date and time at which the last advertisement for this {{object}} was received.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference|all Host table entries, active or inactive, that correspond to this discovered DNS.SD service. As such, when entries are added or removed from the Host tables the value of this parameter MUST be updated accordingly|ignore}}
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".LANDevice.{i}.Hosts.Host. .Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TimeToLive" access="readOnly" dmr:version="2.6">
        <description>
          The value extracted from the TTL field of the DNS SRV record {{bibref|RFC2782}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="2147483647"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readOnly" dmr:version="2.6">
        <description>
          The value extracted from the Priority field of the DNS SRV record {{bibref|RFC2782}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Weight" access="readOnly" dmr:version="2.6">
        <description>
          A server selection mechanism. The value extracted from the Weight field of the DNS SRV record {{bibref|RFC2782}} that specifies the relative weight for entries with the same {{param|Priority}}.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TextRecordNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DNS.SD.Service.{i}.TextRecord.{i}." access="readOnly" numEntriesParameter="TextRecordNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6" dmr:noUniqueKeys="true">
      <description>
        This object maintains an instance of a (key/value pairs) of the service. The information is extracted from DNS TXT records {{bibref|RFC1035}} of the discovered service.
        When multiple instances of the {{object}} table have the same value for the {{param|Key}} parameter, the implementation is CPE specific.
      </description>
      <parameter name="Key" access="readOnly" dmr:version="2.6">
        <description>
          The key that identifies the text record
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.6">
        <description>
          The value of the text record.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.NAT." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Properties for Network Address Translation (NAT).
        The entire {{object}} object only applies to IPv4.
      </description>
      <parameter name="InterfaceSettingNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortMappingNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.NAT.InterfaceSetting.{i}." access="readWrite" numEntriesParameter="InterfaceSettingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        NAT settings for an associated IP Interface on which NAT is enabled.
        For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the {{object}} entry, indicating if NAT is enabled for the referenced IP Interface instance.   On creation, an {{object}} entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Enabled_NATForcedDisabled">
              <description>
                NAT enabled but forced by a third party to be operationally disabled, e.g. because a {{object|##.MAP.Domain}} is enabled but there is no Basic Mapping Rule {{bibref|RFC7597}}.
              </description>
            </enumeration>
            <enumeration value="Enabled_PortMappingDisabled">
              <description>
                NAT enabled but port mapping has been operationally disabled by a third party, e.g. because this is REQUIRED by the current {{object|##.Firewall}} level.
              </description>
            </enumeration>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The associated IP interface on which NAT is to be enabled.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.NAT.PortMapping.{i}." access="readWrite" numEntriesParameter="PortMappingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Port mapping table.
        This table MUST contain all NAT port mappings associated with this connection, including static and dynamic port mappings programmatically created via local control protocol, such as UPnP.
        This table MUST NOT contain dynamic NAT binding entries associated with the normal operation of NAT.
        If the CPE hosts a firewall, it is assumed that it will appropriately configure the firewall for the port mapping.
        For enabled table entries, if {{param|InternalClient}} is {{empty}}, or if {{param|Interface}} is not a valid reference and {{param|AllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="RemoteHost"/>
        <parameter ref="ExternalPort"/>
        <parameter ref="Protocol"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the port mapping instance.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
          Note: There is no guarantee that the {{param}} value on automatically-created {{object}} instances will be retained. This is because automatically-created {{object}} instances can be transitory.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} Specifies the IP interface to which this port mapping applies.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AllInterfaces" access="readWrite" dmr:version="2.0">
        <description>
          Indicates whether this port mapping applies to all IP interfaces that support port mappings. If {{true}}, the value of {{param|Interface}} is ignored since all supported IP interfaces are indicated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LeaseDuration" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Determines the time to live, in {{units}}, of a port mapping lease, where "time to live" means the number of  seconds before the port mapping expires.
          A value of 0 means the port mapping is static. Support for dynamic (non-static) port mappings is OPTIONAL.  That is, the only value  for {{param}} that MUST be supported is 0.
          For a dynamic (non-static) port mapping, when this parameter is read, the value represents the time remaining on the port mapping  lease.  That is, for a dynamic port mapping, the value counts down toward 0.  When a dynamic port mapping lease expires, the CPE MUST  automatically terminate that port mapping, and MUST automatically delete the corresponding {{object}} table entry.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RemoteHost" access="readWrite" dmr:version="2.0">
        <description>
          This parameter is the IP address of the source of inbound packets.  {{empty}} indicates a "wildcard", i.e. any IP address (this will be {{empty}} in most cases).  CPE are REQUIRED only to support {{empty}}.
          When {{param}} is {{empty}}, all traffic sent to the {{param|ExternalPort}} on the WAN interface of the gateway is forwarded to the {{object|.IP.Interface}} associated with the {{param|InternalClient}} on the {{param|InternalPort}}.
          When {{param}} is specified as one external IP address, the NAT will only forward inbound packets from this {{param}} to the {{param|InternalClient}}, all other packets will be dropped.
          If a CPE supports non-empty values for {{param}}, it MAY additionally support the ability to have more than one port mapping with the same {{param|ExternalPort}} and {{param|Protocol}}, but with differing values of {{param}}.
          When wildcard values are used for {{param}} and/or {{param|ExternalPort}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param}}, explicit {{param|ExternalPort}}
          # Explicit {{param}}, zero {{param|ExternalPort}}
          # Empty {{param}}, explicit {{param|ExternalPort}}
          # Empty {{param}}, zero {{param|ExternalPort}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ExternalPort" access="readWrite" dmr:version="2.0">
        <description>
          The external port (or the first port of a range of external ports) that the NAT gateway would listen on for traffic to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the WAN interface SHOULD be forwarded to the {{object|.IP.Interface}} associated with the {{param|InternalClient}} on the {{param|InternalPort}}.
          A value of zero ({{null}}) represents a "wildcard", i.e. any port number.  If this value is {{null}}, traffic on all external ports (that are not otherwise mapped) will be forwarded to {{param|InternalClient}}, and the value(s) of  {{param|InternalPort}} on {{param|InternalClient}} are ignored.
          When wildcard values are used for {{param|RemoteHost}} and/or {{param}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param|RemoteHost}}, explicit {{param}}
          # Explicit {{param|RemoteHost}}, zero {{param}}
          # Empty {{param|RemoteHost}}, explicit {{param}}
          # Empty {{param|RemoteHost}}, zero {{param}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ExternalPortEndRange" access="readWrite" dmr:version="2.0">
        <description>
          Indicates the last port of the external port range that starts with {{param|ExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|ExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|ExternalPort}}.
          If {{param|ExternalPort}} is zero (wildcard), the value of this parameter MUST be ignored.
          If specified, the value of this parameter MUST be greater than or equal to the value of {{param|ExternalPort}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" dmr:version="2.0">
        <description>
          The port on {{param|InternalClient}} that the gateway SHOULD forward traffic to.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.0">
        <description>
          The protocol of the port mapping.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="TCP"/>
            <enumeration value="UDP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InternalClient" access="readWrite" dmr:version="2.0">
        <description>
          The IP address or DNS host name of an internal client (on the LAN).
          Support for an IP address is mandatory.  If {{param}} is specified as an IP address and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with the original IP address.
          Support for DNS host names is OPTIONAL.  If {{param}} is specified as a DNS host name and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with this LAN device.  In this case, it is the responsibility of the CPE to maintain the name-to-address mapping in the event of IP address changes.  This can be accomplished, for example, by assigning the DNS host name via use of DHCP option 12 (Host Name) or option 81 (FQDN).  Note that the ACS can learn the host name associated with a given LAN device via the {{object|.Hosts.Host.}} table.
          Read access to this parameter MUST always return the exact value that was last set by the ACS.  For example, if the internal client is set to a DNS host name, it MUST read back as a DNS host name and not as an IP address.
          It MUST be possible to set the {{param}} to the broadcast IP address 255.255.255.255 for UDP mappings. This is to enable multiple NAT clients to use the same well-known port simultaneously.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readWrite" dmr:version="2.0">
        <description>
          User-readable description of this port mapping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Properties for Port Control Protocol (PCP) {{bibref|RFC6887}}.
        See the PCP Theory of Operation {{bibref|TR-181i2a8|Appendix XIV}} for a description of the working of this PCP data model.
      </description>
      <parameter name="SupportedVersions" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} Each list item denotes a PCP version supported by the PCP Client. Currently known versions are 0, 1 and 2.
          This parameter is based on Version from {{bibref|RFC6887}}.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PreferredVersion" access="readWrite" dmr:version="2.8">
        <description>
          This is the version to be used in the first exchange with a new PCP Server.
          The factory default MUST be the highest supported version, as described in {{bibref|RFC6887|Section 9}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="OptionList" access="readOnly" dmr:version="2.8">
        <description>
          {{list}} The list of the PCP Options supported by the PCP Client.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}." access="readWrite" numEntriesParameter="ClientNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Client properties for Port Control Protocol (PCP). The PCP Client interacts with a PCP Server as defined in {{bibref|RFC6887}} for internal device applications or LAN device applications via Interworking functions.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="WANInterface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the PCP Client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="WANInterface" access="readOnly" dmr:version="2.8">
        <description>
          {{reference|the interface stack instance representing the WAN interface this client operates on}} See {{object|.InterfaceStack.}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of the PCP Client. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MAPEnable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the MAP OpCode.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PEEREnable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the PEER OpCode.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ANNOUNCEEnable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the ANNOUNCE OpCode.
          When {{false}} the PCP Client does not support unsolicited ANNOUNCE messages.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="THIRDPARTYEnable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the THIRD_PARTY Option.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="THIRDPARTYStatus" access="readOnly" dmr:version="2.8">
        <description>
          Indicates whether THIRD_PARTY Option is enabled or not. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FILTEREnable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the FILTER option.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}.PCPProxy." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Properties for the Port Control Protocol (PCP) Proxy, as specified in {{bibref|PCPProxy}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the PCP Proxy for this PCP Client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="HighestVersion" access="readOnly" dmr:version="2.8">
        <description>
          A string identifying the highest version of PCP that the proxy supports.
          This parameter is based on Version from {{bibref|RFC6887}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of the PCP Proxy for this PCP Client. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}.UPnPIWF." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.8">
      <description>
        Properties for the interworking function between UPnP IGD (Internet Gateway Device) and PCP, as specified in {{bibref|RFC6970}}.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables the UPnP IGD-PCP Interworking Function for this PCP Client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of the UPnP IGD-PCP Interworking Function for this PCP Client. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        This table contains the PCP Servers to be used by the PCP Client. Entries are either statically configured or automatically created via DHCP options OPTION_V4_PCP_SERVER and OPTION_V6_PCP_SERVER, as per {{bibref|RFC7291}}.
        Each OPTION_V4_PCP_SERVER or OPTION_V6_PCP_SERVER option corresponds to a {{object}} instance.  If an option returns multiple addresses then that {{object}} instance has multiple addresses.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="ServerNameOrAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables this PCP Server.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of the PCP Server. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Connecting"/>
            <enumeration value="Error_Timeout"/>
            <enumeration value="Error_HostNameNotResolved"/>
            <enumeration value="Error_NetworkFailure"/>
            <enumeration value="Error_NotAuthorized"/>
            <enumeration value="Error_Unsupported"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.8">
        <description>
          Method used to assign {{param|ServerNameOrAddress}} and create this table entry. {{enum}}
          Note: In the {{enum|DHCPv4}} and {{enum|DHCPv6}} cases, if more than one IP address is received {{param|ServerNameOrAddress}} will be the first address and {{param|AdditionalServerAddresses}} will be the remaining addresses.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCPv4">
              <description>
                {{param|ServerNameOrAddress}} is an IPv4 address that was received via OPTION_V4_PCP_SERVER
              </description>
            </enumeration>
            <enumeration value="DHCPv6">
              <description>
                {{param|ServerNameOrAddress}} is an IPv6 address that was received via OPTION_V6_PCP_SERVER
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                {{param|ServerNameOrAddress}} is an FQDN, IPv4 address or IPv6 address that was created by the ACS, by some other management entity (e.g. via a GUI), or is present in the factory default configuration
              </description>
            </enumeration>
          </string>
          <default type="object" value="Static"/>
        </syntax>
      </parameter>
      <parameter name="ServerNameOrAddress" access="readWrite" dmr:version="2.8">
        <description>
          The FQDN or IP address of the PCP Server, assigned as described under {{param|Origin}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerAddressInUse" access="readOnly" dmr:version="2.8">
        <description>
          The IP address currently in use for the PCP Server, derived from the value of {{param|ServerNameOrAddress}}.
          {{empty}} indicates that no PCP Server address is currently known.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="AdditionalServerAddresses" access="readOnly" dmr:version="2.8">
        <description>
          PCP Server addresses in addition to {{param|ServerNameOrAddress}}.  This can be non-empty only if {{param|Origin}} is {{enum|DHCPv4|Origin}} or {{enum|DHCPv6|Origin}} and if more than one PCP Server address was received.
        </description>
        <syntax>
          <list/>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ExternalIPAddress" access="readOnly" dmr:version="2.8">
        <description>
          The external IP address of the PCP-controlled device hosting this server.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="CurrentVersion" access="readOnly" dmr:version="2.8">
        <description>
          This is the version of PCP resulting from client-server Version Negotiation.
          This parameter is based on Version from {{bibref|RFC6887}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaximumFilters" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the maximum number of inbound filters allowed to be associated with a mapping entry on this server.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortQuota" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the maximum number of ports allocated to this PCP Client on this server.
          A value of 0 means that there is no limitation.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the preferred lifetime (in {{units}}) to be used for mappings with this server when no preference is selected by an application/user.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Capabilities" access="readOnly" dmr:version="2.8">
        <description>
          Indicates the capabilities supported by the PCP Server. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="NAT44"/>
            <enumeration value="StatelessNAT64"/>
            <enumeration value="StatefulNAT64"/>
            <enumeration value="A+PPortRangeRouter"/>
            <enumeration value="SupportsPORTSETOption"/>
            <enumeration value="IPv4Firewall"/>
            <enumeration value="IPv6Firewall"/>
            <enumeration value="NPTv6"/>
            <enumeration value="DSCPReMarkingFunction"/>
            <enumeration value="FLOWDATAAwareFunction"/>
            <enumeration value="ILNPTranslator"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InboundMappingNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OutboundMappingNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}.Server.{i}.InboundMapping.{i}." access="readWrite" numEntriesParameter="InboundMappingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Inbound Mapping table.
        This table contains all Inbound Mappings requested by this PCP Client on this PCP Server. Such a mapping is created by a PCP request with OpCode MAP, as described in {{bibref|RFC6887|Section 11}}.
        These requests can be issued from internal device applications, from static configuration or from other LAN device applications via interworking functions such as UPnP IGD or PCP proxies.  The {{param|Origin}} parameter indicates which mechanism requested the mapping.
        For non-{{enum|Static|Origin}} mappings (here ''Static'' refers to the mechanism that created the mapping, not to the {{param|Lifetime}}), the ACS MAY modify the {{param||Enable}} parameter but MUST NOT modify any other parameters in the mapping or its sub-objects.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="InternalPort"/>
        <parameter ref="ProtocolNumber"/>
        <parameter ref="ThirdPartyAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of this entry. {{enum}}
          The {{enum|Error_PCPErrorCodeReceived}} value indicates that the PCP Client received an error code from the PCP Server.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_PCPErrorCodeReceived"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="ErrorCode" access="readOnly" dmr:version="2.8">
        <description>
          Provides the PCP error code when {{param|Status}} is {{enum|Error_PCPErrorCodeReceived|Status}}. Error code values are defined in {{bibref|RFC6887|Section 7.4}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.8">
        <description>
          Mechanism via which the mapping was requested. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Internal">
              <description>
                Requested via internal device application
              </description>
            </enumeration>
            <enumeration value="UPnP_IWF">
              <description>
                Requested via UPnP IGD interworking function
              </description>
            </enumeration>
            <enumeration value="PCP_Proxy">
              <description>
                Requested via PCP proxy
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                Requested via static configuration, i.e. created by the ACS, by some other management entity (e.g. via a GUI), or is present in the factory default configuration
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Lifetime" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          Determines the time to live, in {{units}}, of this Inbound Mapping lease, i.e. the remaining time before this port mapping expires.
          A value of 0 means that the port mapping is permanent (referred to as a static mapping in {{bibref|RFC6887}}).
          When a dynamic Inbound Mapping lease expires, the CPE MUST automatically delete the corresponding {{object}} table entry.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuggestedExternalIPAddress" access="readWrite" dmr:version="2.8">
        <description>
          The external IPv4 or IPv6 Address that the PCP-controlled device will listen on for incoming packets to be forwarded to the PCP Client.
          This is useful for refreshing an Inbound Mapping, especially after the PCP Server loses state. If the PCP client does not know the external address, or does not have a preference, it MUST use {{empty}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SuggestedExternalPort" access="readWrite" dmr:version="2.8">
        <description>
          The external port (or the first port of a range of external ports) that the PCP-controlled device will listen on for incoming packets. Those inbound packets will be forwarded to {{param|InternalPort}}. If the PCP client does not know the external port, or does not have a preference, it MUST use 0.
          This is useful for refreshing an Inbound Mapping, especially after the PCP Server loses state. If the PCP Client does not know the external port, or does not have a preference, it MUST use 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="SuggestedExternalPortEndRange" access="readWrite" dmr:version="2.8">
        <description>
          Indicates the last port of the external port range that starts with {{param|SuggestedExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|SuggestedExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|SuggestedExternalPort}}.
          If {{param|SuggestedExternalPort}} is zero (wildcard), the value of {{param}} MUST be ignored.
          If specified, the value of this parameter MUST be zero or be greater than or equal to the value of {{param|SuggestedExternalPort}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" dmr:version="2.8">
        <description>
          The port on this PCP Client's {{param|##.WANInterface}} that the PCP-controlled device forwards incoming packets to.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ProtocolNumber" access="readWrite" dmr:version="2.8">
        <description>
          The protocol number of the {{object}}. Values are taken from {{bibref|IANA-protocolnumbers}}.
          The value -1 means ''all protocols''.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="255"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ThirdPartyAddress" access="readWrite" dmr:version="2.8">
        <description>
          Under certain conditions, the PCP Client can create a PCP mapping on behalf of another device, by using the THIRD_PARTY option, as specified in {{bibref|RFC6887|Section 7.3}}. In that case, {{param}} is the IP address of the device for which the PCP operation is requested.
          For non-third-party mappings, {{param}} SHOULD be {{empty}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readWrite" dmr:version="2.8">
        <description>
          User-readable description of this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AssignedExternalIPAddress" access="readOnly" dmr:version="2.8">
        <description>
          The external IPAddress returned by the PCP Server. The IP address that the PCP-controlled device is listening on for incoming packets to a corresponding PCP Client.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AssignedExternalPort" access="readOnly" dmr:version="2.8">
        <description>
          The external port returned by the PCP Server. The external port (or the first port of a range of external ports) that the PCP-controlled device is listening on for incoming packets to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the External interface of the PCP-controlled device is forwarded to the on the {{param|InternalPort}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AssignedExternalPortEndRange" access="readOnly" dmr:version="2.8">
        <description>
          Indicates the last port of the external port range that starts with {{param|AssignedExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|AssignedExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|AssignedExternalPort}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" dmr:version="2.8">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}.Server.{i}.InboundMapping.{i}.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Filter table.
        This table contains all Filters restricting this Inbound Mapping, as defined in {{bibref|RFC6887|}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RemoteHostIPAddress" access="readWrite" dmr:version="2.8">
        <description>
          Permitted remote peer IP address for this filter.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PrefixLength" access="readWrite" dmr:version="2.8">
        <description>
          Indicates how many bits of {{param|RemoteHostIPAddress}} are relevant for this filter.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="128"/>
          </unsignedInt>
          <default type="object" value="128"/>
        </syntax>
      </parameter>
      <parameter name="RemotePort" access="readWrite" dmr:version="2.8">
        <description>
          Permitted remote peer port number for this filter.
          The value 0 indicates ''all ports''.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RemotePortEndRange" access="readOnly" dmr:version="2.8">
        <description>
          Indicates the last port of the remote port range that starts with {{param|RemotePort}}.
          If an external port range is specified, then the behavior described for {{param|RemotePort}} applies to all ports within the range.
          A value of zero (0) indicates that no remote port range is specified, i.e. that the range consists only of {{param|RemotePort}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PCP.Client.{i}.Server.{i}.OutboundMapping.{i}." access="readWrite" numEntriesParameter="OutboundMappingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.8">
      <description>
        Outbound Mapping table.
        This table contains all Outbound Mappings requested by this PCP Client on this PCP Server. Such a mapping is created by a PCP request with OpCode PEER, as described in {{bibref|RFC6887|Section 12}}.
        These requests can be issued from internal device applications, from static configuration or from other LAN device applications via interworking functions such as UPnP IGD or PCP proxies. The {{param|Origin}} parameter indicates which mechanism requested the mapping.
        For non-{{enum|Static|Origin}} mappings (here ''Static'' refers to the mechanism that created the mapping, not to the {{param|Lifetime}}), the ACS MAY modify the {{param||Enable}} parameter but MUST NOT modify any other parameters in the mapping or its sub-objects.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="InternalPort"/>
        <parameter ref="ProtocolNumber"/>
        <parameter ref="ThirdPartyAddress"/>
        <parameter ref="RemoteHostIPAddress"/>
        <parameter ref="RemotePort"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.8">
        <description>
          Enables or disables this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.8">
        <description>
          The status of this entry. {{enum}}
          The {{enum|Error_PCPErrorCodeReceived}} value indicates that the PCP Client received an error code from the PCP Server.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_PCPErrorCodeReceived"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="ErrorCode" access="readOnly" dmr:version="2.8">
        <description>
          Provides the PCP Error code when {{param|Status}} is {{enum|Error_PCPErrorCodeReceived|Status}}. Error code values are defined in {{bibref|RFC6887|Section 7.4}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.8">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Origin" access="readOnly" dmr:version="2.8">
        <description>
          Mechanism via which the mapping was requested. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Internal">
              <description>
                Requested via internal device application
              </description>
            </enumeration>
            <enumeration value="UPnP_IWF">
              <description>
                Requested via UPnP IGD interworking function
              </description>
            </enumeration>
            <enumeration value="PCP_Proxy">
              <description>
                Requested via PCP proxy
              </description>
            </enumeration>
            <enumeration value="Static">
              <description>
                Requested via static configuration, i.e. created by the ACS, by some other management entity (e.g. via a GUI), or is present in the factory default configuration
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Lifetime" access="readWrite" dmr:version="2.8">
        <description>
          Determines the time to live, in {{units}}, of this Outbound Mapping lease, i.e. the remaining time before this port mapping expires.
          A value of 0 means that the port mapping is permanent (referred to as a static mapping in {{bibref|RFC6887}}).
          When a dynamic Outbound Mapping lease expires, the CPE MUST automatically delete the corresponding {{object}} table entry.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuggestedExternalIPAddress" access="readWrite" dmr:version="2.8">
        <description>
          The external IPv4 or IPv6 Address that the PCP-controlled device will use to send outgoing packets covered by this mapping.
          This is useful for refreshing a mapping, especially after the PCP Server has lost state. If the PCP Client does not know the external address, or does not have a preference, it MUST use {{empty}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SuggestedExternalPort" access="readWrite" dmr:version="2.8">
        <description>
          The external port that the PCP-controlled device will use to send outgoing packets covered by this mapping.
          This is useful for refreshing a mapping, especially after the PCP Server has lost state. If the PCP Client does not know the external port, or does not have a preference, it MUST use 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="RemoteHostIPAddress" access="readWrite" dmr:version="2.8">
        <description>
          The remote peer's IP address, as seen from the PCP Client, for this Outbound Mapping.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" dmr:version="2.8">
        <description>
          The port on PCP Client WAN Interface that the PCP-controlled device SHOULD listen to for this mapping.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RemotePort" access="readWrite" dmr:version="2.8">
        <description>
          The remote peer's port, as seen from the PCP Client, for this Outbound Mapping.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ProtocolNumber" access="readWrite" dmr:version="2.8">
        <description>
          The protocol number of the {{object}}. Values are taken from the {{bibref|IANA-protocolnumbers}}.
          The value -1 means ''all protocols''.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="255"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ThirdPartyAddress" access="readWrite" dmr:version="2.8">
        <description>
          Under certain conditions, the PCP Client can create a PCP mapping on behalf of another device, by using the THIRD_PARTY option, as specified in {{bibref|RFC6887|Section 7.3}}. In that case, {{param}} is the IP address of the device for which the PCP operation is requested.
          For non-third-party mappings, {{param}} SHOULD be {{empty}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readWrite" dmr:version="2.8">
        <description>
          User-readable description of this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AssignedExternalIPAddress" access="readOnly" dmr:version="2.8">
        <description>
          The external IP address returned by the PCP Server. The IP address that the PCP-controlled device uses to send outgoing packets corresponding to this mapping.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AssignedExternalPort" access="readOnly" dmr:version="2.8">
        <description>
          The external port returned by the PCP Server. The port that the PCP-controlled device uses to send outgoing packets corresponding to this mapping.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        The Dynamic Host Configuration Protocol (DHCP) IPv4 object {{bibref|RFC2131}}. This entire object applies to IPv4 only. It contains the {{object|Client}}, {{object|Server}}, and {{object|Relay}} objects.
      </description>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Client.{i}." access="readWrite" numEntriesParameter="ClientNumberOfEntries" enableParameter="Enable" minEntries="1" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object contains DHCP client settings for an associated ''IP Interface'' indicated by {{param|Interface}}.
        For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DHCP Client entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The IP Interface associated with the ''Client'' entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this table entry. {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="DHCPStatus" access="readOnly" dmr:version="2.0">
        <description>
          The DHCP Client status as defined in {{bibref|RFC2131}}. {{enum}}
          Note: This value is only relevant when the DHCP Client is operationally enabled (i.e. when {{param|Status}} is {{enum|Enabled|Status}}).
        </description>
        <syntax>
          <string>
            <enumeration value="Init"/>
            <enumeration value="Selecting"/>
            <enumeration value="Requesting"/>
            <enumeration value="Rebinding"/>
            <enumeration value="Bound"/>
            <enumeration value="Renewing"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Renew" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the DHCP client will renew its DHCP lease.
        </description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.0">
        <description>
          IPv4 Address option received from the DHCP Server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readOnly" dmr:version="2.0">
        <description>
          Subnet mask option received from the DHCP Server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}.
          Value is information received via DHCP Option 1.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IPRouters" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Items represent IP Router IPv4 Address(es) received from the DHCP server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}.
          Value is information received via DHCP Options 3, 33 or 121.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Items represent DNS Server IPv4 Address(es) received from the DHCP server. {{empty}} when {{param|Status}} is not equal to {{enum|Bound|DHCPStatus}}.
          Value is information received via DHCP Option 6.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          DHCP lease time remaining in {{units}}. A value of -1 indicates an infinite lease.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPServer" access="readOnly" dmr:version="2.0">
        <description>
          The IPv4 address of the current DHCP server.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PassthroughEnable" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, the DHCP Client retrieved IP address information is configured on the referenced  {{param|Interface}} object.
          If {{true}}, the DHCP Client retrieved information is propagated to the parameters in the referenced {{param|PassthroughDHCPPool}} object, replacing any existing configuration (including ''MinAddress'', ''MaxAddress'', ''SubnetMask'', ''IPRouters'', and ''DNSServers'').
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PassthroughDHCPPool" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}}When {{param}} is set to {{empty}}, {{param|PassthroughEnable}} MUST be set to {{false}} (i.e. passthrough can not be enabled without a pool reference specified).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.Server.Pool." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SentOptionNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReqOptionNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Client.{i}.SentOption.{i}." access="readWrite" numEntriesParameter="SentOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Each instance of this object represents a DHCP option that MUST, if enabled, be sent in DHCP client requests.  All  sent DHCP options MUST be listed.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this SentOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.0">
        <description>
          Option tag as defined in {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.0">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Client.{i}.ReqOption.{i}." access="readWrite" numEntriesParameter="ReqOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Each instance of this object represents a DHCP option that MUST, if enabled, be requested in DHCP client requests.  All requested DHCP options MUST be listed.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this ReqOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.0">
        <description>
          Position of the option in the DHCP client request.  A value of ''1'' indicates the first entry.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is  changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.0">
        <description>
          Option tag as defined in {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.0">
        <description>
          A hexbinary encoded, most recently received DHCP option value.
          If no option value has been received, then the value MUST represent {{empty}}.
          Received DHCP option values MAY, but need not, persist across CPE reboots.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        DHCP server configuration.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DHCP server.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PoolNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server.Pool.{i}." access="readWrite" numEntriesParameter="PoolNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        DHCP conditional serving pool table.
        Each instance of this object defines a DHCP conditional serving pool. Client requests are associated with pools based on criteria such as source interface, supplied DHCP options, and MAC address.
        Overlapping pool ranges MUST be supported.
        For enabled table entries, if {{param|Interface}} is not a valid reference, or {{param|MinAddress}}, {{param|MaxAddress}}, or {{param|SubnetMask}} is not a valid value, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the Pool entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.0">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For  each DHCP request, the highest ordered entry that matches the association criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be  compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The IP Interface associated with the ''Pool'' entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in {{bibref|RFC2132}}, matched according to the criterion in {{param|VendorClassIDMode}}.  Case sensitive.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDMode" access="readWrite" dmr:version="2.0">
        <description>
          {{param|VendorClassID}} pattern match criterion.  {{enum}}
          For example, if {{param|VendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of  {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in {{bibref|RFC2132}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ClientIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|ClientID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|ClientID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in {{bibref|RFC3004}}.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="UserClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          Hardware address (MAC address) of the physical interface of the DHCP client.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrMask" access="readWrite" dmr:version="2.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|Chaddr}} is only to be  done for bit positions set to one in the mask.  A mask of FF:FF:FF:FF:FF:FF  or {{empty}} indicates all bits of the {{param|Chaddr}}  are to be used for conditional serving classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the (masked) {{param|Chaddr}} entry, if specified.
          If {{true}}, matching packets are those that do not match the (masked) {{param|Chaddr}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="MinAddress" access="readWrite" dmr:version="2.0">
        <description>
          Specifies first IPv4 address in the pool to be assigned by the DHCP server on the LAN interface.
          The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="MaxAddress" access="readWrite" dmr:version="2.0">
        <description>
          Specifies last IPv4 address in the pool to be assigned by the DHCP server on the LAN interface.
          The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="ReservedAddresses" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items represent addresses marked reserved from the address allocation pool.
        </description>
        <syntax>
          <list maxItems="32"/>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the client's network subnet mask.
          The parameter value can be overwritten by dynamic values retrieved via a DHCP client with  {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to {{true}}.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items represent DNS servers offered to DHCP clients.  Support for more than three DNS Servers is OPTIONAL.
          The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to  {{true}}.
        </description>
        <syntax>
          <list maxItems="4"/>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="DomainName" access="readWrite" dmr:version="2.0">
        <description>
          Sets the domain name to provide to clients on the LAN interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPRouters" access="readWrite" dmr:version="2.0">
        <description>
          {{list}} List items represent addresses of routers on this subnet.  Also known as default gateway.  Support for more than one Router address is OPTIONAL.
          The parameter value can be overwritten by dynamic values retrieved via a DHCP client with {{param|##.Client.{i}.PassthroughEnable}} or a PPP interface with {{param|.PPP.Interface.{i}.IPCP.PassthroughEnable}} equal to  {{true}}.
        </description>
        <syntax>
          <list maxItems="4"/>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="LeaseTime" access="readWrite" dmr:version="2.0">
        <description>
          Specifies the lease time in {{units}} of client assigned addresses.  A value of -1 indicates an infinite lease.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
          <default type="object" value="86400"/>
        </syntax>
      </parameter>
      <parameter name="StaticAddressNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server.Pool.{i}.StaticAddress.{i}." access="readWrite" numEntriesParameter="StaticAddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        DHCP static address table.
        Entries in this table correspond to what {{bibref|RFC2131}} calls "manual allocation", where a client's IP address is assigned by the network administrator, and DHCP is used simply to convey the assigned address to the client.
        Each instance of this object specifies a hardware address (MAC address) and an IP address within the pool.  When serving from this pool, this IP address MUST, if available, be assigned to the DHCP client with this hardware address, and MUST NOT be assigned to any other client.
        Note that it is possible that an IP address in this table is present in one or more of the other conditional serving pools, in which case it is possible that such an address will be assigned to a different client.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Chaddr"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the StaticAddress table entry.
          Disabling an entry does not return the IP address to the pool.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" dmr:version="2.0">
        <description>
          Hardware address (MAC address) of the physical interface of the DHCP client.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Yiaddr" access="readWrite" dmr:version="2.0">
        <description>
          IPv4 address to be assigned by the DHCP server to the DHCP client with the specified hardware address (MAC address).
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server.Pool.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object specifies the DHCP options that MUST, if enabled, be returned to clients whose DHCP requests are  associated with this pool.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this Option table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.0">
        <description>
          Option tag as defined in {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.0">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server.Pool.{i}.Client.{i}." access="readOnly" numEntriesParameter="ClientNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        DHCPv4 client table.
        This table lists details of DHCPv4 clients that matched the filter criteria of this {{object|#}} entry.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Chaddr"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          Note: There is no guarantee that the {{param}} value on automatically-created {{object}} instances will be retained. This is because automatically-created {{object}} instances can be transitory.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readOnly" dmr:version="2.2">
        <description>
          MAC address of the DHCPv4 client.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.2">
        <description>
          Whether or not the DHCPv4 client is currently present on the LAN.  The method of presence detection is a local matter to  the CPE.
          The ability to list inactive DHCPv4 clients is OPTIONAL.  If the CPE includes inactive DHCPv4 clients in this table, {{param}} MUST be set to {{false}}  for each inactive DHCPv4 client.  The length of time an inactive DHCPv4 client remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv4AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server.Pool.{i}.Client.{i}.IPv4Address.{i}." access="readOnly" numEntriesParameter="IPv4AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IPv4 addresses assigned to this client.
      </description>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.2">
        <description>
          IPv4 address.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" dmr:version="2.2">
        <description>
          The time at which the DHCP lease will expire or {{null}} if not known. For an infinite lease, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Server.Pool.{i}.Client.{i}.Option.{i}." access="readOnly" numEntriesParameter="OptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2" dmr:noUniqueKeys="true">
      <description>
        DHCPv4 options supplied by this client, e.g. ''VendorClassID'' (Option 60), ''ClientID'' (option 61) or ''UserClassID'' (Option 77).
      </description>
      <parameter name="Tag" access="readOnly" dmr:version="2.2">
        <description>
          Option tag as defined in {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.2">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="255"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Relay." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        DHCP Relay Agent (conditional relaying).
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the DHCP Relay Agent function.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the DHCP relay. {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardingNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv4.Relay.Forwarding.{i}." access="readWrite" numEntriesParameter="ForwardingNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        DHCP Relay Agent Forwarding table.
        For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables the Forwarding entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.0">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each DHCP request, the highest ordered entry that matches the association criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be  compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The IP Interface associated with the ''Forwarding'' entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in {{bibref|RFC2132}}, matched according to the criterion in {{param|VendorClassIDMode}}.  Case sensitive.
          This is a normal string, e.g. "abc" is represented as "abc" and not say "616263" hex. However, if the value includes non-printing characters then such characters have to be represented using XML escapes, e.g. #x0a for line-feed.
          {{empty}} indicates this criterion is not used as a relay classification criterion.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDMode" access="readWrite" dmr:version="2.0">
        <description>
          {{param|VendorClassID}} pattern match criterion.  {{enum}}
          For example, if {{param|VendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of  {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact"/>
            <enumeration value="Prefix"/>
            <enumeration value="Suffix"/>
            <enumeration value="Substring"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in {{bibref|RFC2132}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used as a relay classification criterion.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ClientIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|ClientID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|ClientID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in {{bibref|RFC3004}}.
          {{empty}} indicates this criterion is not used as a relay classification criterion.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="255"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="UserClassIDExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" dmr:version="2.0">
        <description>
          Pool association criterion.
          Hardware address (MAC address) of the physical interface of the DHCP client.
          {{empty}} indicates this criterion is not used as a relay classification criterion.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrMask" access="readWrite" dmr:version="2.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|Chaddr}} is only to be done for bit positions set to one in the mask.  A mask of FF:FF:FF:FF:FF:FF or {{empty}} indicates all bits of the {{param|Chaddr}} are to be used for relay classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrExclude" access="readWrite" dmr:version="2.0">
        <description>
          If {{false}}, matching packets are those that match the (masked) {{param|Chaddr}} entry, if specified.
          If {{true}}, matching packets are those that do not match the (masked) {{param|Chaddr}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LocallyServed" access="readWrite" dmr:version="2.0">
        <description>
          If {{true}}, incoming DHCP requests will be forwarded to the CPE DHCP Server. If {{false}}, incoming DHCP requests will be forwarded to the {{param|DHCPServerIPAddress}} configured for this forwarding entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DHCPServerIPAddress" access="readWrite" dmr:version="2.0">
        <description>
          IPv4 address of the DHCP server, where the request has to be sent to when there is a conditional match with this forwarding entry and {{param|LocallyServed}} is {{false}}. If {{param|LocallyServed}} is {{false}} and this parameter is not  configured, then the DHCP request is dropped.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        The Dynamic Host Configuration Protocol (DHCP) IPv6 object {{bibref|RFC3315}}. This entire object applies to IPv6 only. It contains the {{object|Client}} and {{object|Server}} objects.
      </description>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Client.{i}." access="readWrite" numEntriesParameter="ClientNumberOfEntries" enableParameter="Enable" minEntries="1" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This object contains DHCPv6 client settings for an associated ''IP Interface'' indicated by {{param|Interface}}.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack), then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference.  If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}.  However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} The IP Interface associated with the {{object}} entry. This will reference an IPv6-capable interface (that is attached to the IPv6 stack), otherwise the table entry will be inoperable.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this table entry. {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readOnly" dmr:version="2.2">
        <description>
          The client's DHCP Unique Identifier (DUID) {{bibref|RFC3315|Section 9}}. {{param}} is set by the CPE.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="130"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="RequestAddresses" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables inclusion of the ''Identity Association (IA) for Non-Temporary Address'' option OPTION_IA_NA(3) {{bibref|RFC3315|Section 22.4}} in Solicit messages.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="RequestPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables inclusion of the ''Identity Association (IA) for Prefix Delegation'' option OPTION_IA_PD(25) {{bibref|RFC3633|Section 10}} in Solicit messages.
          Note that this is only appropriate for an upstream interface on a requesting router, e.g. for an RG WAN interface.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="RapidCommit" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables inclusion of the ''Rapid Commit'' option OPTION_RAPID_COMMIT(14) {{bibref|RFC3315|Section 22.14}} in Solicit messages.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Renew" access="readWrite" dmr:version="2.2">
        <description>
          When set to {{true}}, the {{object}} will renew its DHCPv6-supplied information (i.e. the CPE will do a renew or information request as needed, updating both stateful and stateless parameter values discovered by this Client instance).
        </description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SuggestedT1" access="readWrite" dmr:version="2.2">
        <description>
          T1 value, in {{units}}, that the client SHOULD use when sending IA options, e.g. OPTION_IA_NA {{bibref|RFC3315|Section 22.4}} and OPTION_IA_PD {{bibref|RFC3633|Section 10}}.
          A value of -1 indicates that no T1 value is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SuggestedT2" access="readWrite" dmr:version="2.2">
        <description>
          T2 value, in {{units}}, that the client SHOULD use when sending IA options, e.g. OPTION_IA_NA {{bibref|RFC3315|Section 22.4}} and OPTION_IA_PD {{bibref|RFC3633|Section 10}}.
          A value of -1 indicates that no T2 value is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SupportedOptions" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} The options that the client is able to process in server responses.  This list MUST include both top-level and encapsulated options, e.g. if the client is able to process OPTION_IA_NA (3) with an encapsulated OPTION_IAADDR (5), the list would be expected to include both 3 and 5.
        </description>
        <syntax>
          <list/>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RequestedOptions" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} An ordered list of the top-level options (i.e. not encapsulated options) that the client will explicitly request from the server.
          This parameter is intended only for options that are not necessary for the basic operation of the protocol, and are not modeled elsewhere.  For example, it is appropriate for OPTION_DNS_SERVERS {{bibref|RFC3646}} but is not appropriate for OPTION_SERVERID (which is part of the protocol), OPTION_IA_NA (which is modeled via {{param|RequestAddresses}}) or OPTION_IA_PD (which is modeled via {{param|RequestPrefixes}}).  However, the CPE MUST NOT reject an attempt to set this parameter to a value that includes options that it regards as inappropriate; instead, it MUST accept the requested options and handle them as best it can.
          Loosely speaking, these are the options that the client will include in OPTION_ORO {{bibref|RFC3315}} but the client is free to decide (in accordance with {{bibref|RFC3315}}) in which messages to request which option, whether also to request additional options, whether not to request inappropriate options, and in which order to request any options that are also in {{param|SupportedOptions}}.
        </description>
        <syntax>
          <list/>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SentOptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReceivedOptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Client.{i}.Server.{i}." access="readOnly" numEntriesParameter="ServerNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This is a transitory table that lists the discovered DHCPv6 servers (it does ''not'' model a local DHCP server). Table entries are automatically created to correspond with these servers. However, it is a local matter to the CPE when to delete old table entries.
      </description>
      <uniqueKey>
        <parameter ref="SourceAddress"/>
      </uniqueKey>
      <parameter name="SourceAddress" access="readOnly" dmr:version="2.2">
        <description>
          The IP address from which the message most recently received from this server was sent.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readOnly" dmr:version="2.2">
        <description>
          The server's DHCP Unique Identifier (DUID) {{bibref|RFC3315|Section 9}} as received via OPTION_SERVERID.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="130"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="InformationRefreshTime" access="readOnly" dmr:version="2.2">
        <description>
          The OPTION_INFORMATION_REFRESH_TIME value {{bibref|RFC4242}} that was most recently received from this server, converted to the ''dateTime'' at which the associated information will expire.  If no such option has been received, the parameter value MUST be the "Unknown Time" {{null}}.  If the information will never expire, the parameter value MUST be infinite time 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Client.{i}.SentOption.{i}." access="readWrite" numEntriesParameter="SentOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        The top-level options and option values (including any encapsulated options) that the client will send to the server.
        This table is intended only for options that are not part of the basic operation of the protocol, and whose values are simple, do not often change and are not modeled elsewhere.  For example, it is appropriate for OPTION_USER_CLASS (whose value is a list of user classes) but is not appropriate for OPTION_RECONF_MSG (which is part of the protocol), OPTION_IA_NA (which is modeled via {{param|#.RequestAddresses}}) or OPTION_RAPID_COMMIT (which is modeled via {{param|#.RapidCommit}}).
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.2">
        <description>
          A hexbinary encoded option data {{bibref|RFC3315|Section 22.1}}.
          Note: The length of the option data is ''option-len'' octets, as specified in {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Client.{i}.ReceivedOption.{i}." access="readOnly" numEntriesParameter="ReceivedOptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2" dmr:noUniqueKeys="true">
      <description>
        This is a transitory table that lists all the options received from all servers. Table entries are automatically created to correspond with received options. However, it is a local matter to the CPE when to delete old table entries.
        If the same option is received multiple times, whether from one or more servers, it is up to the CPE to decide which entries to include (i.e. whether the same option will be present multiple times). In order to allow for the same option to be present multiple times within the table, this table has no unique key defined.
      </description>
      <parameter name="Tag" access="readOnly" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.2">
        <description>
          A hexbinary encoded option data {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="Server" access="readOnly" dmr:version="2.2">
        <description>
          {{reference}} This is the server that sent the option to the client. Each {{object}} entry MUST have an associated server.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Server." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.2">
      <description>
        DHCPv6 server configuration.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables the DHCPv6 server function.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PoolNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server.Pool.{i}." access="readWrite" numEntriesParameter="PoolNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        DHCPv6 server pool table.
        Each instance of this object defines a DHCPv6 server pool. Client requests are associated with pools based on criteria such as source interface, supplied DHCPv6 options, and source address.
        Overlapping pool ranges MUST be supported.
        For enabled table entries, if {{param|Interface}} is not a valid reference to an IPv6-capable interface (that is attached to the IPv6 stack) then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Order"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.2">
        <description>
          Position of the {{object}} entry in the order of precedence.  A value of ''1'' indicates the first entry considered (highest precedence).  For each DHCPv6 request, the highest ordered entry that matches the association criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} The IP Interface associated with the {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DUID" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 Client Identifier (Option 1) {{bibref|RFC3315|Section 22.2}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used.
          Note: DHCPv6 Option 1 (DUID) is sometimes referred to as ''Client Identifier''.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="130"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DUIDExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the {{param|DUID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|DUID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 Vendor Class Identifier (Option 16) {{bibref|RFC3315|Section 22.16}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion.
          A hexbinary string used to identify one or more LAN devices, value of the DHCPv6 User Class Identifier (Option 15) {{bibref|RFC3315|Section 22.15}}.
          {{empty}} indicates this criterion is not used.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="UserClassIDExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceAddress" access="readWrite" dmr:version="2.2">
        <description>
          Pool association criterion.
          Source address (link-layer address) of DHCPv6 messages sent from the DHCPv6 client.  This criterion is only likely to be useful if this is a link-layer address.
          {{empty}} indicates this criterion is not used for serving.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceAddressMask" access="readWrite" dmr:version="2.2">
        <description>
          Bit-mask for the source address, where matching of a packet's source address with the {{param|SourceAddress}} is only to be done for bit positions set to one in the mask.  A mask of {{empty}} indicates all bits of the {{param|SourceAddress}} are to be used.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceAddressExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, matching packets are those that match the (masked) {{param|SourceAddress}} entry, if specified.
          If {{true}}, matching packets are those that do not match the (masked) {{param|SourceAddress}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IANAEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IANA offers.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IANAManualPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          Manually-configured prefixes from which IA_NA addresses will be assigned.  Each referenced prefix MUST have a  {{param|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} of {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} or {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}}.  All clients that request IA_NA and match filter criteria on this {{param|Interface}} MUST be offered IA_NA addresses from all of the ''Valid'' ({{param|.IP.Interface.{i}.IPv6Prefix.{i}.ValidLifetime}} is infinite or in the future) /64 prefixes in this list.
          Prefixes MUST be associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8"/>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IANAPrefixes" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          All prefixes from which IA_NA addresses will be assigned. This list can include:
          * Prefixes from {{param|IANAManualPrefixes}} that are used for IA_NA offers.
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8"/>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IAPDEnable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables IAPD offers.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IAPDManualPrefixes" access="readWrite" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          Manually-configured prefixes from which IA_PD prefixes will be derived.  This list can include:
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|PrefixDelegation|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}).
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} = {{enum|Static|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} or {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.StaticType}} associated with with the interface instance referenced by {{param|Interface}}.
          All clients that request IA_PD and match filter criteria on this {{param|Interface}} MUST be offered IA_PD prefixes derived from all of the ''Valid'' ({{param|.IP.Interface.{i}.IPv6Prefix.{i}.ValidLifetime}} is infinite or in the future) prefixes in this list.
        </description>
        <syntax>
          <list maxItems="8"/>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IAPDPrefixes" access="readOnly" dmr:version="2.2">
        <description>
          {{list}} {{reference}}
          All prefixes for which IA_PD prefixes will be assigned. This list can include:
          * Prefixes from {{param|IAPDManualPrefixes}} that are used for IA_PD offers.
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|PrefixDelegation|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with upstream interfaces (i.e. interfaces for which the physical layer interface object has ''Upstream'' = {{true}}).
          * Prefixes with {{param|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} = {{enum|Child|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} or {{enum|AutoConfigured|.IP.Interface.{i}.IPv6Prefix.{i}.Origin}} associated with the interface instance referenced by {{param|Interface}}.
        </description>
        <syntax>
          <list maxItems="8"/>
          <string>
            <pathRef refType="strong" targetParent=".IP.Interface.{i}.IPv6Prefix." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IAPDAddLength" access="readWrite" dmr:version="2.2">
        <description>
          The RECOMMENDED minimum number of bits to add to {{param|IAPDManualPrefixes}} or {{param|IAPDPrefixes}} in order to determine the length of prefixes that are offered in an IA_PD.  The device is responsible for ensuring that it does not delegate a prefix longer than /64.  The device can have additional logic that is used (in conjunction with this parameter) to determine the actual length of prefixes offered in an IA_PD.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server.Pool.{i}.Client.{i}." access="readOnly" numEntriesParameter="ClientNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        DHCPv6 client table.
        This table lists details of DHCPv6 clients that matched the filter criteria of this {{object|#}} entry.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SourceAddress"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
          Note: There is no guarantee that the {{param}} value on automatically-created {{object}} instances will be retained. This is because automatically-created {{object}} instances can be transitory.
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="SourceAddress" access="readOnly" dmr:version="2.2">
        <description>
          Source address of the DHCPv6 client.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" dmr:version="2.2">
        <description>
          Whether or not the DHCPv6 client is currently present on the LAN.  The method of presence detection is a local matter to  the CPE.
          The ability to list inactive DHCPv6 clients is OPTIONAL.  If the CPE includes inactive DHCPv6 clients in this table, {{param}} MUST be set to {{false}}  for each inactive DHCPv6 client.  The length of time an inactive DHCPv6 client remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6PrefixNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Address.{i}." access="readOnly" numEntriesParameter="IPv6AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IPv6 addresses assigned to this client via IA_NA.
      </description>
      <uniqueKey>
        <parameter ref="IPAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this address will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this address will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Prefix.{i}." access="readOnly" numEntriesParameter="IPv6PrefixNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        IPv6 prefixes delegated to this client via IA_PD.
      </description>
      <uniqueKey>
        <parameter ref="Prefix"/>
      </uniqueKey>
      <parameter name="Prefix" access="readOnly" dmr:version="2.2">
        <description>
          IPv6 address prefix.
        </description>
        <syntax>
          <dataType ref="IPv6Prefix"/>
        </syntax>
      </parameter>
      <parameter name="PreferredLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this prefix will cease to be preferred (i.e. will become deprecated), or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ValidLifetime" access="readOnly" dmr:version="2.2">
        <description>
          The time at which this prefix will cease to be valid (i.e. will become invalid), or {{null}} if unknown. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server.Pool.{i}.Client.{i}.Option.{i}." access="readOnly" numEntriesParameter="OptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2" dmr:noUniqueKeys="true">
      <description>
        DHCPv6 options supplied by this client, e.g. ''DUID'' (Option 1), ''UserClassID'' (Option 15) or ''VendorClassID'' (option 16).
      </description>
      <parameter name="Tag" access="readOnly" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.2">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DHCPv6.Server.Pool.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        This object specifies the DHCPv6 options that MUST, if enabled, be offered to clients whose DHCPv6 requests are associated with this pool. If {{param|PassthroughClient}} is specified, and the referenced client has a value for a given option then the {{param|PassthroughClient}} option value will be sent instead of {{param|Value}}. Otherwise, {{param|Value}} will be sent.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" dmr:version="2.2">
        <description>
          Option tag (code) {{bibref|RFC3315|Section 22.1}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.2">
        <description>
          A hexbinary encoded option value.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PassthroughClient" access="readWrite" dmr:version="2.2">
        <description>
          {{reference}} Indicates whether this {{object}} entry is configured for passthrough.
          If {{param}} is specified, and the referenced client (since boot) has received a value from an associated upstream DHCPv6 server for the given {{param|Tag}} option, then the referenced client's option value will be sent instead of {{param|Value}}. Otherwise, {{param|Value}} will be sent.
          {{empty}} indicates that passthrough is not configured for this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="###.Client." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE8021x." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        IEEE 802.1x object {{bibref|802.1x-2004}}, where {{object|Supplicant}} models authentication supplicants.
      </description>
      <parameter name="SupplicantNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE8021x.Supplicant.{i}." access="readWrite" numEntriesParameter="SupplicantNumberOfEntries" enableParameter="Enable" minEntries="1" maxEntries="unbounded" dmr:version="2.0">
      <description>
        802.1x supplicant authentication provisioning and status information associated with an interface to be authenticated (e.g. an {{object|.Ethernet.Link}} instance).
        For enabled table entries, if {{param|Interface}} is not a valid reference then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
        Note: The {{object}} table includes a unique key parameter that is a strong reference. If a strongly referenced object is deleted, the CPE will set the referencing parameter to {{empty}}. However, doing so under these circumstances might cause the updated {{object}} row to then violate the table's unique key constraint; if this occurs, the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}} and disable the offending {{object}} row.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          This parameter controls whether this resource will utilize the 802.1x protocol as a supplicant for device  authentication purposes.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The current operational status of this 802.1x supplicant.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} The interface on which authentication is to be performed. Example:  Device.Ethernet.Link.1
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PAEState" access="readOnly" dmr:version="2.0">
        <description>
          The current supplicant state machine as defined in {{bibref|802.1x-2004|9.5.1}}, Supplicant PAE (Port Access Entity) State.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Disconnected"/>
            <enumeration value="Logoff"/>
            <enumeration value="Connecting"/>
            <enumeration value="Authenticating"/>
            <enumeration value="Authenticated"/>
            <enumeration value="Held"/>
            <enumeration value="Restart"/>
            <enumeration value="ForceAuth"/>
            <enumeration value="ForceUnauth"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EAPIdentity" access="readWrite" dmr:version="2.0">
        <description>
          The identity to be exchanged between the supplicant and authenticator.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxStart" access="readWrite" dmr:version="2.0">
        <description>
          The maximum number of times the device will attempt to send an EAP start message before authentication fails as defined in {{bibref|802.1x-2004|9.5.1}}, maxStart.
          This is in support of {{bibref|802.1x-2004|Section 8.4.6}}, Migration Considerations.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="10"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="StartPeriod" access="readWrite" dmr:version="2.0">
        <description>
          The period in {{units}} a supplicant will wait before the device will attempt to re-send an EAP start message as defined in {{bibref|802.1x-2004|9.5.1}}, startPeriod.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="HeldPeriod" access="readWrite" dmr:version="2.0">
        <description>
          The hold-off period in {{units}} a supplicant will wait before re-attempting authentication as defined in {{bibref|802.1x-2004|9.5.1}}, heldPeriod.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AuthPeriod" access="readWrite" dmr:version="2.0">
        <description>
          The period in {{units}} after which a request will be considered timed out as defined in {{bibref|802.1x-2004|9.5.1}}, authPeriod.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AuthenticationCapabilities" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the authentication methods supported by the device.  {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="EAP-TLS"/>
            <enumeration value="EAP-MD5"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StartFailurePolicy" access="readWrite" dmr:version="2.0">
        <description>
          The action to be taken when authentication has failed, when the network fails to respond to the supplicant's start message, and the retries have been exceeded (since network does not yet support 802.1x).  {{enum}}
          This is in support of {{bibref|802.1x-2004|Section 8.4.6}}, Migration Considerations.
        </description>
        <syntax>
          <string>
            <enumeration value="FailAuthentication"/>
            <enumeration value="AssumeAuthentication"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AuthenticationSuccessPolicy" access="readWrite" dmr:version="2.0">
        <description>
          The action to be taken when authentication succeeds and a connection has already received an address and/or policy settings.  {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="NoAction"/>
            <enumeration value="RenewConnection"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the device MUST reset the session by performing an initial authentication attempt as defined in {{bibref|802.1x-2004|9.6.1.3}}, Initialize Port by sending out the EAP start message.
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the resource in  order to avoid interruption of a user service such as an ongoing voice call.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Disconnect" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, the device MUST disconnect (forced unauthentication) the resource.
          The device MUST initiate the disconnect after completion of the current CWMP session.  The device MAY delay re-authentication of the  resource in order to avoid interruption of a user service such as an ongoing voice call.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE8021x.Supplicant.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        802.1x Authentication Supplicant EAP statistics information for this resource.
      </description>
      <parameter name="ReceivedFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAPOL frames of any type that have been received by this Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAPOL frames received.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAPOL frames of any type that have been transmitted by this Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAPOL frames transmitted.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedStartFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAPOL Start frames that have been transmitted by this Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAPOL Start frames transmitted.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedLogoffFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAPOL Logoff frames that have been transmitted by this Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAPOL Logoff frames transmitted.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedResponseIdFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAP Resp/Id frames that have been transmitted; {{bibref|802.1x-2004|9.5.2}}, EAP Resp/Id frames transmitted.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedResponseFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of valid EAP Response frames (other than Resp/Id frames) that have been transmitted by this  Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAP Resp frames transmitted.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ReceivedRequestIdFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAP Req/Id frames that have been received by this Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAP Req/Id frames received.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ReceivedRequestFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAP Request frames (other than Rq/Id frames) that have been received by this Supplicant; {{bibref|802.1x-2004|9.5.2}}, EAP Req frames received.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ReceivedInvalidFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAPOL frames that have been received by this Supplicant in which the frame type is not recognized; {{bibref|802.1x-2004|9.5.2}}, EAP Req frames received.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ReceivedLengthErrorFrames" access="readOnly" dmr:version="2.0">
        <description>
          The number of EAPOL frames that have been received by this Supplicant in which the Packet Body Length field is invalid; {{bibref|802.1x-2004|9.5.2}}, EAP length error frames received.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="LastFrameVersion" access="readOnly" dmr:version="2.0">
        <description>
          The protocol version number carried in the most recently received EAPOL frame; {{bibref|802.1x-2004|9.5.2}}, Last EAPOL frame version
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastFrameSourceMACAddress" access="readOnly" dmr:version="2.0">
        <description>
          The source MAC address carried in the most recently received EAPOL frame; {{bibref|802.1x-2004|9.5.2}}, Last EAPOL frame source.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE8021x.Supplicant.{i}.EAPMD5." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        802.1x Authentication Supplicant provisioning information used for MD5 shared secret exchange. This object will not exist if EAP-MD5 is not a supported authentication type.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          This parameter enables or disables the supplicant's support for EAP-MD5.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SharedSecret" access="readWrite" dmr:version="2.0">
        <description>
          The shared secret to be exchanged between the supplicant and authenticator.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE8021x.Supplicant.{i}.EAPTLS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        802.1x Authentication Supplicant provisioning information used for TLS certificate authentication. This object will not exist if the EAP-TLS is not a supported authentication type.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          This parameter enables or disables the supplicant's support for EAP-TLS.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MutualAuthenticationEnable" access="readWrite" dmr:version="2.0">
        <description>
          The parameter controls if the supplicant will authenticate the authenticator.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Users." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Users object that contains the {{object|User}} table.
      </description>
      <parameter name="UserNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Users.User.{i}." access="readWrite" numEntriesParameter="UserNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object contains parameters relating to the user characteristics.
      </description>
      <uniqueKey>
        <parameter ref="Username"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables/disables this user object instance.
          If the User being configured is currently accessing the device then a disable MUST apply to the next user session and the current user session MUST NOT be abruptly terminated.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="RemoteAccessCapable" access="readWrite" dmr:version="2.0">
        <description>
          Allows this user to remotely access the UserInterface via the mechanism defined in {{object|.UserInterface.RemoteAccess.}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.0">
        <description>
          Name of the current user. MUST NOT be {{empty}} for an enabled entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.0">
        <description>
          The user's password.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Language" access="readWrite" dmr:version="2.0">
        <description>
          String describing the default language for the local configuration interface, specified according to {{bibref|RFC3066}}.
          If {{empty}}, {{param|.UserInterface.CurrentLanguage}} is used.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SmartCardReaders." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        SmartCardReaders object that contains the {{object|SmartCardReader}} table.
      </description>
      <parameter name="SmartCardReaderNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SmartCardReaders.SmartCardReader.{i}." access="readOnly" numEntriesParameter="SmartCardReaderNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        This object describes the characteristics of the smart card reader.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this smart card reader.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates the status of this smart card reader.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled">
              <description>
                Indicates the smart card reader is enabled and functioning properly.
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                Indicates the smart card reader is enabled and not functioning properly.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.0">
        <description>
          Human-readable name associated with this smart card reader.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, resets the SmartCard Reader and the associated SmartCard.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ResetTime" access="readOnly" dmr:version="2.0">
        <description>
          The time at which this SmartCard Reader was reset.
          Reset can be caused by:
          * {{param|Status}} transition from Disabled to Enabled
          * {{param|Reset}} set to {{true}}.
          * An internal reset of the SmartCard Reader (including a reboot of the device).
          Unknown Time value indicates that this SmartCard Reader has never been reset, which can only happen if it has never been enabled.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="DecryptionFailedCounter" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Counter incremented once each time decryption cannot be carried out.
          This counter relates to the smart card reader, not to the smart card itself, i.e. it is reset when the {{param|Reset}} parameter is used and not when a Smart Card is inserted or removed.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DecryptionFailedNoKeyCounter" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Counter incremented once each time the key is not available to decrypt it.  This is a subset of the more general {{param|DecryptionFailedCounter}} within the same object and thus will always be less than that parameter.
          This counter relates to the smart card reader, not to the smart card itself, i.e. it is reset when the {{param|Reset}} parameter is used and not when a Smart Card is inserted or removed.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SmartCardReaders.SmartCardReader.{i}.SmartCard." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Status of currently associated smart card.
      </description>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Status of the Smart Card.
        </description>
        <syntax>
          <string>
            <enumeration value="None">
              <description>
                Indicates that no Smart Card is inserted.
              </description>
            </enumeration>
            <enumeration value="Running">
              <description>
                Indicates a Smart Card is present and working normally.
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                Indicates the Smart Card is present and in an error condition.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.0">
        <description>
          Smart Card Type. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a2|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <string>
            <enumeration value="CA"/>
            <enumeration value="DRM"/>
            <enumeration value="UICC"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Application" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates Smart Card Application(s).  {{param}} is only relevant when {{param|Type}} has a value of UICC, otherwise it is {{empty}}. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a2|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="SIM"/>
            <enumeration value="USIM"/>
            <enumeration value="ISIM"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.0">
        <description>
          The Smart Card Serial Number or {{empty}} if the Smart Card serial Number is not available, e.g. in the case of IPTV due to restrictions of the Service Delivery Platform.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATR" access="readOnly" dmr:version="2.0">
        <description>
          The Smart Card answer to a reset action. Issued by the Smart Card upon reset.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains all UPnP related objects and parameters including Device and Discovery related objects and parameters.
      </description>
    </object>
    <object name="Device.UPnP.Device." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines the UPnP devices and UPnP services that are implemented by the CPE.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP support.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPMediaServer" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP Media Server.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPMediaRenderer" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP Media Renderer.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPWLANAccessPoint" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP Wireless Access Point.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPQoSDevice " access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP QoS Device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPQoSPolicyHolder" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP QoS Policy Holder.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPIGD" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP IGD.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPDMBasicMgmt" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP-DM Basic Management.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPDMConfigurationMgmt" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP-DM Configuration Management.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UPnPDMSoftwareMgmt" access="readWrite" dmr:version="2.0">
        <description>
          Enables/Disables UPnP-DM Software Management.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Device.Capabilities." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object defines what UPnP capabilities this device has.
      </description>
      <parameter name="UPnPArchitecture" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the major version of the supported UPnP architecture.
          If UPnP 1.1 is supported the value is 1.  If UPnP 2.0 is supported the value is 2.
          A value of 0 indicates no UPnP support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPArchitectureMinorVer" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the minor version of the supported UPnP architecture.
          If UPnP 1.1 is supported the value is 1.  If UPnP 2.0 is supported the value is 0.
          If {{param|UPnPArchitecture}} is 0 then this parameter SHOULD be ignored.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPMediaServer" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP Media Server.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPMediaRenderer" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP Media Renderer.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPWLANAccessPoint" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP Wireless Access Point.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPBasicDevice" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP Basic Device.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPQoSDevice" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP Qos Device.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPQoSPolicyHolder" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP Qos Policy Holder.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPIGD" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP IGD.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPDMBasicMgmt" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP-DM Basic Management.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPDMConfigurationMgmt" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP-DM Configuration Management.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPnPDMSoftwareMgmt" access="readOnly" dmr:version="2.0">
        <description>
          Numeric value indicating the supported revision for UPnP-DM Software Management.
          A value of 0 indicates no support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Discovery." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        UPnP {{bibref|UPnP-DAv1}} SSDP discovered root devices, embedded devices and embedded services.
        The CPE MAY, but need not, retain some or all of the information in this object across reboots.
      </description>
      <parameter name="RootDeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DeviceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ServiceNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Discovery.RootDevice.{i}." access="readOnly" numEntriesParameter="RootDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        UPnP root device table. This table contains an entry for each UPnP root device that has been discovered via SSDP.
      </description>
      <uniqueKey>
        <parameter ref="UUID"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the UPnP root device. {{enum}}
          The ability to list inactive UPnP root devices is OPTIONAL. The length of time an inactive device remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="LeaseActive">
              <description>
                Device is active and UPnP lease has not expired.
              </description>
            </enumeration>
            <enumeration value="LeaseExpired">
              <description>
                Device is inactive because UPnP lease has expired.
              </description>
            </enumeration>
            <enumeration value="ByebyeReceived">
              <description>
                Device is inactive because byebye message was received.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" dmr:version="2.0">
        <description>
          This UPnP root device's UUID (Universally Unique IDentifier) {{bibref|RFC4122}}, extracted from any of its USN (Unique Service Name) headers. This is a 36-byte string that uniquely identifies the device, the following is an example:
          : ''02c29d2a-dbfd-2d91-99c9-306d537e9856''
          {{pattern}}
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
            <pattern value="[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="USN" access="readOnly" dmr:version="2.0">
        <description>
          The value of the USN (Unique Service Name) header for this UPnP root device. Three discovery messages are sent for root devices, and this SHOULD be the value of the USN header of the following form:
          : ''uuid:device-UUID::urn:domain-name:device:deviceType:v''
          SSDP is an unreliable protocol and it is possible that no discovery message containing the USN header of the above form was ever received. If so, one of the other two forms MAY be used:
          : ''uuid:device-UUID::upnp:rootdevice''
          : ''uuid:device-UUID'' (for root device UUID)
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTime" access="readOnly" dmr:version="2.0">
        <description>
          The UPnP root device lease time in {{units}}, extracted from the CACHE-CONTROL header.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Location" access="readOnly" dmr:version="2.0">
        <description>
          The value of the LOCATION header for this UPnP root device, which is the URL of the root device's DDD (Device Description Document).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Server" access="readOnly" dmr:version="2.0">
        <description>
          The value of the SERVER header for this UPnP root device, which is a string of the following form:
          : ''OS/version UPnP/udaversion product/version''
          where '''UPnP''' is a literal string, '''udaversion''' is the version of the UPnP Device Architecture.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the full path names of all Host table entries, whether active or inactive, that correspond to this UPnP root device.
          As such entries are added to or removed from the Host tables, the value of this parameter MUST be updated accordingly.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.6">
        <description>
          The date and time at which the last advertisement from this {{object}} was received.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Discovery.Device.{i}." access="readOnly" numEntriesParameter="DeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        UPnP embedded device table. This table contains an entry for each UPnP embedded device that has been discovered via SSDP.
      </description>
      <uniqueKey>
        <parameter ref="UUID"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the UPnP embedded device. {{enum}}
          The ability to list inactive UPnP embedded devices is OPTIONAL. The length of time an inactive device remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="LeaseActive">
              <description>
                Device is active and UPnP lease has not expired.
              </description>
            </enumeration>
            <enumeration value="LeaseExpired">
              <description>
                Device is inactive because UPnP lease has expired.
              </description>
            </enumeration>
            <enumeration value="ByebyeReceived">
              <description>
                Device is inactive because byebye message was received.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" dmr:version="2.0">
        <description>
          This UPnP embedded device's UUID (Universally Unique IDentifier) {{bibref|RFC4122}}, extracted from any of its USN (Unique Service Name) headers. This is a 36-byte string that uniquely identifies the device, the following is an example:
          : ''02c29d2a-dbfd-2d91-99c9-306d537e9856''
          {{pattern}}
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
            <pattern value="[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="USN" access="readOnly" dmr:version="2.0">
        <description>
          The value of the USN (Unique Service Name) header for this UPnP embedded device. Two discovery messages are sent for embedded devices, and this SHOULD be the value of the USN header of the following form:
          : ''uuid:device-UUID::urn:domain-name:device:deviceType:v''
          SSDP is an unreliable protocol and it is possible that no discovery message containing the USN header of the above form was ever received. If so, the other form MAY be used:
          : ''uuid:device-UUID''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTime" access="readOnly" dmr:version="2.0">
        <description>
          The UPnP embedded device lease time in {{units}}, extracted from the CACHE-CONTROL header.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Location" access="readOnly" dmr:version="2.0">
        <description>
          The value of the LOCATION header for this UPnP embedded device, which is the URL of the root device's DDD (Device Description Document).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Server" access="readOnly" dmr:version="2.0">
        <description>
          The value of the SERVER header for this UPnP embedded device, which is a string of the following form:
          : ''OS/version UPnP/udaversion product/version''
          where '''UPnP''' is a literal string, '''udaversion''' is the version of the UPnP Device Architecture.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the full path names of all Host table entries, whether active or inactive, that correspond to this UPnP embedded device.
          As such entries are added to or removed from the Host tables, the value of this parameter MUST be updated accordingly.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.6">
        <description>
          The date and time at which the last advertisement from this {{object}} was received.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Discovery.Service.{i}." access="readOnly" numEntriesParameter="ServiceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        UPnP embedded service table. This table contains an entry for each UPnP embedded service that has been discovered via SSDP.
      </description>
      <uniqueKey>
        <parameter ref="USN"/>
      </uniqueKey>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          The status of the UPnP embedded service. {{enum}}
          The ability to list inactive UPnP embedded services is OPTIONAL. The length of time an inactive service remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="LeaseActive">
              <description>
                Service is active and UPnP lease has not expired.
              </description>
            </enumeration>
            <enumeration value="LeaseExpired">
              <description>
                Service is inactive because UPnP lease has expired.
              </description>
            </enumeration>
            <enumeration value="ByebyeReceived">
              <description>
                Service is inactive because byebye message was received.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="USN" access="readOnly" dmr:version="2.0">
        <description>
          The value of the USN (Unique Service Name) header for this UPnP embedded service. This is of the following form:
          : ''uuid:device-UUID::urn:domain-name:service:serviceType:v''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTime" access="readOnly" dmr:version="2.0">
        <description>
          The UPnP embedded service lease time in {{units}}, extracted from the CACHE-CONTROL header.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Location" access="readOnly" dmr:version="2.0">
        <description>
          The value of the LOCATION header for this UPnP embedded service, which is the URL of the root device's DDD (Device Description Document).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Server" access="readOnly" dmr:version="2.0">
        <description>
          The value of the SERVER header for this UPnP embedded service, which is a string of the following form:
          : ''OS/version UPnP/udaversion product/version''
          where '''UPnP''' is a literal string, '''udaversion''' is the version of the UPnP Device Architecture.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the full path names of all Host table entries, whether active or inactive, that correspond to this UPnP embedded service.
          As such entries are added to or removed from the Host tables, the value of this parameter MUST be updated accordingly.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.6">
        <description>
          The date and time at which the last advertisement from this {{object}} was received.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ParentDevice" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|the {{object|#.RootDevice}} or {{object|#.Device}} table entries that embeds this {{object}}}} This parameter is populated by extracting the "device-UUID" from the service's USN and matching the value against the root device or embedded device UUID value.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.RootDevice. #.Device." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Description." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.6">
      <description>
        This object contains information from the  Description Document discovered from the UPnP Devices and Services.
      </description>
      <parameter name="DeviceDescriptionNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DeviceInstanceNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ServiceInstanceNumberOfEntries" access="readOnly" dmr:version="2.6">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Description.DeviceDescription.{i}." access="readOnly" numEntriesParameter="DeviceDescriptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This table contains information read from the Device Description Document of discovered root devices.
        The CPE MAY, but need not, retain some or all of the information in this table after the associated SSDP advertisement (objects in the  UPnP.Discovery. object tables) expires.
        In case the SSDP advertisement expires and the CPE deletes the related instances from the tables in UPnP.Discovery., the reference to such instances MUST be set to the empty string.
      </description>
      <uniqueKey>
        <parameter ref="URLBase"/>
      </uniqueKey>
      <parameter name="URLBase" access="readOnly" dmr:version="2.6">
        <description>
          The value extracted from the URLBase element in the Device Description Document of the discovered root device. If the URLBase element in the root device's Device Description Document is empty or absent, the URL from which the device description was retrieved (e.g. the LOCATION from the SSDP message) is utilized as the URLBase.
          Note: the URLBase element is not recommended by {{bibref|UPnP-DAv1}} and is not permitted by {{bibref|UPnP-DAv11}}, so the value of {{param}} will usually be the URL from which the device description was retrieved.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpecVersion" access="readOnly" dmr:version="2.6">
        <description>
          The UPnP Device Architecture version extracted from the specVersion element in the Device Description Document of the discovered root device. The {{param}} is encoded as "major revison.minor revision". {{pattern}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pattern value="\d+\.\d+"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" dmr:version="2.6">
        <description>
          {{list}} {{reference|the Host table entries associated with the root device from which the device description was retrieved|ignore}}
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".LANDevice.{i}.Hosts.Host. .Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Description.DeviceInstance.{i}." access="readOnly" numEntriesParameter="DeviceInstanceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This table contains the information from Device Description Document retrieved for a discovered UPnP root or embedded device.
      </description>
      <uniqueKey>
        <parameter ref="UDN"/>
      </uniqueKey>
      <parameter name="UDN" access="readOnly" dmr:version="2.6">
        <description>
          Unique Device Name of this device represented as a UUID for the device.
          This value is extracted from the UDN element in the Device Description Document with the leading uuid: removed.
        </description>
        <syntax>
          <dataType ref="UUID"/>
        </syntax>
      </parameter>
      <parameter name="ParentDevice" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|a {{object}} table entry (if this is an embedded device) or {{empty}} (if this is a root device)}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.DeviceInstance." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DiscoveryDevice" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|a {{object|##.Discovery.RootDevice}} table entry (if this is a root device) or a {{object|##.Discovery.Device}} table entry (if this is an embedded device)}}
          This {{param}} value can be {{empty}} because the referenced object has been deleted or the CPE was unable to retrieve the Description Document due to some out-of-band error. The determination to delete this {{object}} or use {{empty}} is implementation specific.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.Discovery.Device. ##.Discovery.RootDevice." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceType" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP deviceType element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FriendlyName" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP friendlyName element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceCategory" access="readOnly" dmr:version="2.8">
        <description>
          Each list item is the value of an element in the Device Description Document for this {{object}} that indicates a device category (e.g. "AV_TV" and "AV_Recorder"), or the value is {{empty}} if no such element is provided by the device.
          Note: It is assumed that the ''htip:X_DeviceCategory'' Device Description Document element is used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}. Standard HTIP device categories are defined in {{bibref|JJ-300.01}}. In this case, the maximum length of the list is 127 and of each item is 31, and any non-HTIP device categories SHOULD NOT conflict with standard HTIP device categories.
          Note: {{param}} is different from {{param|DeviceType}} and is included here for the purpose of HTIP usage.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Manufacturer" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP manufacturer element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" dmr:version="2.8">
        <description>
          The value of an element in the Device Description Document for this {{object}} that indicates the manufacturer OUI if this value is provided by the device; or {{empty}} if this value is not provided by the device.
          {{pattern}}
          Note: It is assumed that the ''htip:X_ManufacturerOUI'' element is used for HTIP (Home-network Topology Identifying Protocol) {{bibref|JJ-300.00}} and {{bibref|G.9973}}.
        </description>
        <syntax>
          <string>
            <size minLength="0" maxLength="6"/>
            <pattern value=""/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerURL" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP manufacturerURL element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelDescription" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP modelDescription element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP modelName element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelNumber" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP modelNumber element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelURL" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP modelURL element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP serialNumber element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UPC" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP UPC element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="12"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PresentationURL" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP presentationURL element in the Device Description Document for this {{object}} and MUST be an absolute URL.
          The way to obtain an absolute URL from the presentationURL element is specified in {{bibref|UPnP-DAv1}} and {{bibref|UPnP-DAv11}}.
          If the presentationURL is not provided by the device then this value MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.UPnP.Description.ServiceInstance.{i}." access="readOnly" numEntriesParameter="ServiceInstanceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.6">
      <description>
        This table contains the information from Device Description Document retrieved for a discovered UPnP service.
      </description>
      <uniqueKey>
        <parameter ref="ParentDevice"/>
        <parameter ref="ServiceId"/>
      </uniqueKey>
      <parameter name="ParentDevice" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|a {{object|#.DeviceInstance}} table entry}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="#.DeviceInstance." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServiceId" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP serviceId element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the service.
          If the UPnP serviceId is not provided by the UPnP service, this {{object}} MUST be deleted.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServiceDiscovery" access="readOnly" dmr:version="2.6">
        <description>
          {{reference|a {{object|##.Discovery.Service}} table entry}}
          This {{param}} value can be {{empty}} because the referenced object has been deleted or the CPE was unable to retrieve the Description Document due to some out-of-band error. The determination to delete this {{object}} or use {{empty}} is implementation specific.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.Discovery.Service." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServiceType" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP serviceType element in the Device Description Document for this {{object}}, or {{empty}} if this value is not provided by the service.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SCPDURL" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP SCPDURL element in the Device Description Document for this {{object}} and MUST be an absolute URL.
          The way to obtain an absolute URL from the SCPDURL element is specified in {{bibref|UPnP-DAv1}} and {{bibref|UPnP-DAv11}}.
          If the SCPDURL is not provided by the device then this value MUST be {{empty}}.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ControlURL" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP controlURL element in the Device Description Document for this {{object}} and MUST be an absolute URL.
          The way to obtain an absolute URL from the controlURL element is specified in {{bibref|UPnP-DAv1}} and {{bibref|UPnP-DAv11}}.
          If the controlURL is not provided by the device then this value MUST be {{empty}}
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="EventSubURL" access="readOnly" dmr:version="2.6">
        <description>
          The value of the UPnP eventSubURL element in the Device Description Document for this {{object}} and MUST be an absolute URL.
          The way to obtain an absolute URL from the eventSubURLL element is specified in {{bibref|UPnP-DAv1}} and {{bibref|UPnP-DAv11}}.
          If the eventSubURL is not provided by the device then this value MUST be {{empty}}
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DLNA." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object contains all DLNA related objects and parameters.
      </description>
    </object>
    <object name="Device.DLNA.Capabilities." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        DLNA capabilities.
      </description>
      <parameter name="HNDDeviceClass" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the supported DLNA Home Network Device Classes {{bibref|DLNA-NDIG|Table 4-1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DeviceCapability" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the supported DLNA Device Capabilities {{bibref|DLNA-NDIG|Table 4-2}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HIDDeviceClass" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the supported DLNA Home Infrastructure Device Classes {{bibref|DLNA-NDIG|Table 4-4}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ImageClassProfileID" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the DLNA Image Class Profile IDs supported by this device, from Tables 5-2 and 5-3 of {{bibref|DLNA-NDIG}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AudioClassProfileID" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the DLNA Audio Class Profile IDs supported by this device, from Tables 5-4 through 5-10 of {{bibref|DLNA-NDIG}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AVClassProfileID" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the DLNA AV Class Profile IDs supported by this device, from Tables 5-11 through 5-15 of {{bibref|DLNA-NDIG}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MediaCollectionProfileID" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the DLNA Media Collection Profile IDs supported by this device {{bibref|DLNA-NDIG|Table 5-16}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PrinterClassProfileID" access="readOnly" dmr:version="2.0">
        <description>
          {{list}} Indicates the DLNA Printer Class Profile IDs supported by this device {{bibref|DLNA-NDIG|Table 5-17}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.SelfTestDiagnostics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This diagnostics test is vendor-specific and MAY include testing hardware, software, and/or firmware.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Indicates availability of diagnostic data. {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the DiagnosticsState to Requested.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the Error values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code "8 DIAGNOSTICS COMPLETE" in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly"/>
            <enumeration value="Requested"/>
            <enumeration value="Complete" access="readOnly"/>
            <enumeration value="Error_Internal" access="readOnly"/>
            <enumeration value="Error_Other" access="readOnly"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Results" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          Results of self-test (vendor specific).
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Firewall." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        Firewall configuration object. The {{param|Config}} parameter enables and disables the Firewall, and can select either a predefined configuration ({{enum|High|Config}} or {{enum|Low|Config}}) or an explicitly-defined {{enum|Advanced|Config}} configuration.
        For an {{enum|Advanced|Config}} configuration, {{param|AdvancedLevel}} controls the currently active Firewall Level, and the Firewall Levels are defined in the {{object|Level}}, {{object|Chain}} and {{object|Chain.{i}.Rule}} tables.
        The Firewall rules modeled by this object operate only on the forwarding path. This means that they affect only routed traffic, and do not affect traffic that is destined for or generated by the CPE.  Note that any {{object|#.NAT}} processing on the ingress packet occurs before Firewall rules are applied so, for example, the Firewall rules will see the translated destination IP address and port in a downstream packet that has passed through the NAT.
        See {{bibref|TR-181i2a2|Appendix VIII}} for an example {{enum|Advanced|Config}} configuration.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables the Firewall.
          Firewalls often implement additional Denial of Service and other vulnerability protections, such as those described in {{bibref|ICSA-Baseline}}. If a {{enum|Stateful|Type}} Firewall is enabled, then it is assumed that all implemented stateful protections are enabled, unless they are overridden by some other part of the data model.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Config" access="readWrite" dmr:version="2.0">
        <description>
          How this firewall is configured. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a2|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <string>
            <enumeration value="High">
              <description>
                The firewall implements the "Traffic Denied Inbound" and "Minimally Permit Common Services Outbound" components of the ICSA residential certification's Required Services Security Policy {{bibref|ICSA-Residential}}.  If DoS and vulnerability protections are implemented {{bibref|ICSA-Baseline}}, these are enabled.
              </description>
            </enumeration>
            <enumeration value="Low">
              <description>
                All Outbound traffic and pinhole-defined Inbound traffic is allowed.  If DoS and vulnerability protections are implemented {{bibref|ICSA-Baseline}}, these are enabled.
              </description>
            </enumeration>
            <enumeration value="Off" status="deprecated">
              <description>
                All Inbound and Outbound traffic is allowed, and the CPE is only protected by NAT settings (if supported and enabled).  If DoS and vulnerability protections are implemented {{bibref|ICSA-Baseline}}, these are disabled.
                This value is DEPRECATED because it is the same as setting {{param|Enable}} to {{false}}.
              </description>
            </enumeration>
            <enumeration value="Advanced" optional="true">
              <description>
                Advanced firewall configuration applies, as specified by {{param|AdvancedLevel}}.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdvancedLevel" access="readWrite" dmr:version="2.2">
        <description>
          Selects the currently active Firewall Level.
          {{param}} only applies when {{param|Config}} is {{enum|Advanced|Config}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".Firewall.Level." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" dmr:version="2.2">
        <description>
          Firewall Type. {{enum}}
          A {{enum|Stateless}} Firewall treats each packet individually and thus has no concept of sessions.  Therefore a {{enum|Stateless}} Firewall cannot distinguish between unsolicited downstream traffic and downstream traffic in response to outbound messages.  This means that it has to accept all incoming downstream traffic.  Furthermore, because a {{enum|Stateless}} Firewall treats each packet individually, it does not provide any DoS or vulnerability protections.
          A {{enum|Stateful}} Firewall maintains state about previous packets and thus supports sessions.  Therefore a {{enum|Stateful}} Firewall can distinguish between solicited and unsolicited downstream traffic.  In a {{enum|Stateful}} Firewall, explicitly configured rules only apply to unsolicited traffic, and can not cause packets received in response to an upstream request to be dropped.  Furthermore, because a {{enum|Stateful}} Firewall maintains state, it can provide DoS and vulnerability protections.
          A device that has a {{enum|Stateless}} Firewall depends on the NAT to provide protection against unsolicited downstream IPv4 traffic.  This is because, as noted above, a {{enum|Stateless}} Firewall has to be configured to accept all incoming downstream traffic.  For IPv6 there is no NAT, so a {{enum|Stateless}} Firewall can not provide simple security protections against unsolicited downstream IPv6 traffic.
        </description>
        <syntax>
          <string>
            <enumeration value="Stateless">
              <description>
                The Firewall only implements stateless packet inspection.
              </description>
            </enumeration>
            <enumeration value="Stateful">
              <description>
                The Firewall implements stateful packet inspection.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.0">
        <description>
          A string identifying the firewall settings version currently used in the CPE, or {{empty}} if the firewall settings are not associated with a version.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" dmr:version="2.0">
        <description>
          The time at which the firewall settings most recently changed.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LevelNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChainNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Firewall.Level.{i}." access="readWrite" numEntriesParameter="LevelNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Firewall Level table. When an {{enum|Advanced|#.Config}} configuration is selected, {{param|#.AdvancedLevel}} selects the currently active entry in this table. Each {{object}} table entry references the {{object|#.Chain}} that contains the rules for this level.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.2">
        <description>
          Human-readable name associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readWrite" dmr:version="2.2">
        <description>
          Human-readable description associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.2">
        <description>
          Position of the {{object}} entry for user interface display; levels can be presented according to an increasing or decreasing level of security.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all greater-valued {{param}} entries is incremented to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Chain" access="readOnly" dmr:version="2.2">
        <description>
          The Chain containing Firewall Level Rules associated with this {{object}} entry.
          On creation of a new {{object}} entry, the device will automatically create a new {{object|#.Chain}} table entry that this {{param}} parameter will reference.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".Firewall.Chain." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PortMappingEnabled" access="readWrite" dmr:version="2.2">
        <description>
          Indicates whether NAT port mapping is enabled or disabled when this is the active Level.  For a {{enum|Stateless|#.Type}} Firewall this can be set to {{false}} to force any port mappings to be operationally disabled (for a {{enum|Stateful|#.Type}} Firewall this is not necessary because the same effect can be achieved via Firewall rules).
          This parameter affects all the interfaces on which NAT is enabled.  It operationally enables or disables port mapping functionality and therefore does not affect the individual {{param|##.NAT.PortMapping.{i}.Enable}} settings.  Note that the current NAT status and NAT port mapping status are indicated by the {{param|##.NAT.InterfaceSetting.{i}.Status}} parameter.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DefaultPolicy" access="readWrite" dmr:version="2.2">
        <description>
          Default action for packets not matching any of the level rules. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Drop">
              <description>
                The firewall discards packets matching this rule.
              </description>
            </enumeration>
            <enumeration value="Accept">
              <description>
                The firewall forwards packets matching this rule.
              </description>
            </enumeration>
            <enumeration value="Reject" optional="true">
              <description>
                The firewall discards packets matching this rule, and sends an ICMP message to the originating host.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Drop"/>
        </syntax>
      </parameter>
      <parameter name="DefaultLogPolicy" access="readWrite" dmr:version="2.2">
        <description>
          Enable or disable logging, in a {{object|##.DeviceInfo.VendorLogFile}}, of packets not matching any of the level rules.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Firewall.Chain.{i}." access="readWrite" numEntriesParameter="ChainNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Firewall Chain table. Each entry contains an ordered list of {{object|Rule}} objects which can themselves reference other {{object}} instances. A hierarchy of rules can therefore be created.
        A given Firewall Chain's rules are all created by the same entity, as indicated by the {{param|Creator}} parameter.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.2">
        <description>
          Human-readable name associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Creator" access="readOnly" dmr:version="2.2">
        <description>
          Creator of this {{object}} entry and of its {{object|Rule}}s. {{enum}}
          Note that this is the entity that originally created the {{object}} entry.  The value of this parameter does not change if the {{object}} entry or one of its rules is subsequently changed by another entity.
        </description>
        <syntax>
          <string>
            <enumeration value="Defaults">
              <description>
                The {{object}} entry is present in the factory default configuration.
              </description>
            </enumeration>
            <enumeration value="PortMapping">
              <description>
                The {{object}} entry was created as a side-effect of a {{bibref|UPnP-IGD:1}} or {{bibref|TR-064}} port mapping.
              </description>
            </enumeration>
            <enumeration value="WANIPv6FirewallControl">
              <description>
                The {{object}} entry was created by {{bibref|UPnP-IGD:2}} WANIPv6FirewallControl.
              </description>
            </enumeration>
            <enumeration value="ACS">
              <description>
                The {{object}} entry was created by the Auto Configuration Server.
              </description>
            </enumeration>
            <enumeration value="UserInterface">
              <description>
                The {{object}} entry was created by device user interface or command line interface.
              </description>
            </enumeration>
            <enumeration value="Other">
              <description>
                The {{object}} entry was created by another entity.
              </description>
            </enumeration>
          </string>
          <default type="object" value="ACS"/>
        </syntax>
      </parameter>
      <parameter name="RuleNumberOfEntries" access="readOnly" dmr:version="2.2">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Firewall.Chain.{i}.Rule.{i}." access="readWrite" numEntriesParameter="RuleNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.2">
      <description>
        Firewall Rule table. Each entry defines a Firewall packet selection rule. The {{param|Target}} parameter defines the action to perform for traffic matching this rule: the packet can be dropped, accepted, rejected or passed to another {{object|#}}.
        This table MUST NOT contain dynamic Firewall rules associated with {{enum|Stateful|##.Type}} Firewall sessions.
        All entries are created by the creator of the parent {{object|#}}, as indicated by its {{param|#.Creator}} parameter.  {{object}} entries in a {{object|#}} with a {{param|#.Creator}} of {{enum|Defaults|#.Creator}}, {{enum|ACS|#.Creator}}, {{enum|UserInterface|#.Creator}} or (maybe) {{enum|Other|#.Creator}} are referred to as ''Static'' {{object}}s.  Whether or not a {{object}} in a {{object|#}} with {{param|#.Creator}} {{enum|Other|#.Creator}} is regarded as ''Static'' is a local matter to the CPE.  Some of this object's parameter descriptions refer to whether a {{object}} is ''Static'' when specifying whether or not the parameter value can be modified.
        For enabled table entries, if {{param|SourceInterface}} is not a valid reference and {{param|SourceAllInterfaces}} is {{false}}, or if {{param|DestInterface}} is not a valid reference and {{param|DestAllInterfaces}} is {{false}}, then the table entry is inoperable and the CPE MUST set {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.2">
        <description>
          Enables or disables this {{object}} entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.2">
        <description>
          The status of this {{object}} entry.  {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.2">
        <description>
          Position of the {{object}} entry in the order of precedence. A value of ''1'' indicates the first entry considered (highest precedence). For each packet, the highest ordered entry that matches the rule criteria is applied. All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the {{param}} value for the existing entry and all lower {{param}} entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes {{param}} values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value of {{param}} on creation of a {{object}} table entry MUST be one greater than the largest current value (initially assigned the lowest precedence).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.2">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readWrite" dmr:version="2.2">
        <description>
          Human-readable description associated with this {{object}} entry.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Target" access="readWrite" dmr:version="2.2">
        <description>
          Action to perform for traffic matching this {{object}} entry. {{enum}}
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <string>
            <enumeration value="Drop">
              <description>
                The firewall discards packets matching this rule.
              </description>
            </enumeration>
            <enumeration value="Accept">
              <description>
                The firewall forwards packets matching this rule.
              </description>
            </enumeration>
            <enumeration value="Reject" optional="true">
              <description>
                The firewall discards packets matching this rule, and sends an ICMP message to the originating host.
              </description>
            </enumeration>
            <enumeration value="Return" optional="true">
              <description>
                The firewall doesn't consider the remaining rules (if any) in the current chain.
              </description>
            </enumeration>
            <enumeration value="TargetChain" optional="true">
              <description>
                The rules in the chain referenced by the {{param|TargetChain}} parameter are matched.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Drop"/>
        </syntax>
      </parameter>
      <parameter name="TargetChain" access="readWrite" dmr:version="2.2">
        <description>
          Specifies the chain to process when {{param|Target}} equals {{enum|TargetChain|Target}}.  If there are no matching rules in the referenced chain, processing continues with the next rule in this chain (if any).  In other words, {{enum|TargetChain|Target}} behaves like a subroutine call.
          {{empty}} indicates no {{param}} is specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent=".Firewall.Chain." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Log" access="readWrite" dmr:version="2.2">
        <description>
          Enable or disable logging, in a {{object|###.DeviceInfo.VendorLogFile}}, of packets matching this {{object}}.
          If the {{object}} is not ''Static'' (as explained in the object description), whether changes to this parameter persist across re-boot is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="CreationDate" access="readOnly" dmr:version="2.2">
        <description>
          Date and time when this {{object}} entry was created.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ExpiryDate" access="readWrite" dmr:version="2.2">
        <description>
          The time at which this {{object}} entry will expire, or {{null}} if not known. For an infinite lifetime, the parameter value MUST be 9999-12-31T23:59:59Z.
          The only value that MUST be supported is 9999-12-31T23:59:59Z (i.e. support for rules that expire is OPTIONAL).
          When a rule expires, the CPE MUST automatically terminate that rule and MUST automatically delete the corresponding {{object}} table entry.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="9999-12-31T23:59:59Z"/>
        </syntax>
      </parameter>
      <parameter name="SourceInterface" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion. {{reference}}
          This specifies the ingress interface associated with the entry. It MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which Rules can be instantiated is a local matter to the CPE.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceInterfaceExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the {{param|SourceInterface}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the {{param|SourceInterface}} entry, if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceAllInterfaces" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion. This specifies that all ingress interfaces are associated with the entry. If {{true}}, the values of {{param|SourceInterface}} and {{param|SourceInterfaceExclude}} are ignored since all ingress interfaces are indicated.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestInterface" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion. {{reference}}
          This specifies the egress interface associated with the entry. It MAY be a layer 1, 2 or 3 interface, however, the types of interfaces for which Rules can be instantiated is a local matter to the CPE.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestInterfaceExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the {{param|DestInterface}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the {{param|DestInterface}} entry, if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestAllInterfaces" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion. This specifies that all egress interfaces are associated with the entry. If {{true}}, the values of {{param|DestInterface}} and {{param|DestInterfaceExclude}} are ignored since all ingress interfaces are indicated.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPVersion" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          IP Protocol Version (e.g. 4 for IPv4 and 6 for IPv6). A value of -1 indicates this criterion is not used for matching.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="15"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestIP" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          Destination IP address. {{empty}} indicates this criterion is not used for matching.
          Note that Firewall rules are applied after any {{object|###.NAT}} processing, so if NAT is enabled on the source interface this is always the translated address.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMask" access="readWrite" dmr:version="2.2">
        <description>
          Destination IP address mask, represented as an IP routing prefix using CIDR notation [RFC4632]. The IP address part MUST be {{empty}} (and, if specified, MUST be ignored).
        </description>
        <syntax>
          <dataType ref="IPPrefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIPExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the (masked) {{param|DestIP}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the (masked) {{param|DestIP}} entry, if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceIP" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          Source IP address. {{empty}} indicates this criterion is not used for matching.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMask" access="readWrite" dmr:version="2.2">
        <description>
          Source IP address mask, represented as an IP routing prefix using CIDR notation [RFC4632]. The IP address part MUST be {{empty}} (and, if specified, MUST be ignored).
        </description>
        <syntax>
          <dataType ref="IPPrefix"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the (masked) {{param|SourceIP}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the (masked) {{param|SourceIP}} entry, if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          Protocol number. A value of -1 indicates this criterion is not used for matching.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="255"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the {{param|Protocol}} entry, if specified.
          If {{true}}, the rule matches all packets except those that match the {{param|Protocol}} entry, if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestPort" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          Destination port number. A value of -1 indicates this criterion is not used for matching.
          Note that Firewall rules are applied after any {{object|###.NAT}} processing, so if NAT is enabled on the source interface this is always the translated port number.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortRangeMax" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          If specified, indicates the {{object}} criterion is to include the port range from {{param|DestPort}} through {{param}} (inclusive). If specified, {{param}} MUST be greater than or equal to {{param|DestPort}}.
          A value of -1 indicates that no port range is specified.
          Note that Firewall rules are applied after any {{object|###.NAT}} processing, so if NAT is enabled on the source interface this is always the translated port number.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the {{param|DestPort}} entry (or port range), if specified.
          If {{true}}, the rule matches all packets except those that match the {{param|DestPort}} entry (or port range), if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          Source port number. A value of -1 indicates this criterion is not used for matching.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortRangeMax" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          If specified, indicates the {{object}} criterion is to include the port range from {{param|SourcePort}} through {{param}} (inclusive). If specified, {{param}} MUST be greater than or equal to {{param|SourcePort}}.
          A value of -1 indicates that no port range is specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="65535"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the {{param|SourcePort}} entry (or port range), if specified.
          If {{true}}, the rule matches all packets except those that match the {{param|SourcePort}} entry (or port range), if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" dmr:version="2.2">
        <description>
          {{object}} criterion.
          DiffServ codepoint (defined in {{bibref|RFC2474}}).
          If set to a Class Selector Codepoint (defined in {{bibref|RFC2474}}), all DSCP values that match the first 3 bits will be considered a valid match.
          A value of -1 indicates this criterion is not used for matching.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="63"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DSCPExclude" access="readWrite" dmr:version="2.2">
        <description>
          If {{false}}, the rule matches only those packets that match the {{param|DSCP}} entry, if specified.
          If {{true}}, the rule matchess all packets except those that match the {{param|DSCP}} entry, if specified.
          This parameter can only be modified if the {{object}} is ''Static'' (as explained in the object description).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PeriodicStatistics." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.0">
      <description>
        This object configures collection of periodic statistics for the device.
        Periodic statistics are measured over a sample interval (which can be aligned with absolute time) and are made available to the ACS as a comma-separated list of the most recent &lt;n&gt; samples.
        This object provides a single set of global settings that affect the entire device unless overridden locally.
      </description>
      <parameter name="MinSampleInterval" access="readOnly" dmr:version="2.0">
        <description>
          Minimum sample interval in {{units}} that the CPE is able to support.
          A value of 0 indicates no specific minimum sample interval.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxReportSamples" access="readOnly" dmr:version="2.0">
        <description>
          Maximum number of samples of each statistic that the CPE is able to store and report.
          A value of 0 indicates no specific maximum number of samples.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SampleSetNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PeriodicStatistics.SampleSet.{i}." access="readWrite" numEntriesParameter="SampleSetNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Periodic statistics sample set table.  Each sample set has its own sample interval etc.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables collection of periodic statistics for this sample set.
          When collection of periodic statistics is enabled, any stored samples are discarded, and the first sample interval begins immediately.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.0">
        <description>
          Indicates availability of Sample statistics. {{enum}}
          The {{enum|Trigger}} value is only used for triggering the ACS to fetch the collected data and can only be used when {{param|FetchSamples}} is in the range [1:{{param|ReportSamples}}].
          The transition from {{enum|Enabled}} to {{enum|Trigger}} to {{enum|Enabled}} MUST be instantaneous and so will result in only a single value change for notification purposes.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled">
              <description>
                Collection is disabled.
              </description>
            </enumeration>
            <enumeration value="Enabled">
              <description>
                Collection is enabled.
              </description>
            </enumeration>
            <enumeration value="Trigger">
              <description>
                Collection is enabled and the ACS SHOULD now fetch the collected data.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.0">
        <description>
          The name of this sample set, which uniquely distinguishes each sample set.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SampleInterval" access="readWrite" dmr:version="2.0">
        <description>
          The sample interval in {{units}}. Each statistic is measured over this sample interval.
          The CPE MAY reject a request to set {{param}} to less than {{param|.PeriodicStatistics.MinSampleInterval}}.
          Sample intervals MUST begin every {{param}} {{units}}, with no delay between samples.
          If {{param}} is changed while collection of periodic statistics is enabled, any stored samples are discarded, and the first sample interval begins immediately.
          For example, if {{param|ReportSamples}} is 24 and {{param}} is 3600 (an hour), the CPE can store up to a day's worth of samples for each statistic.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="3600"/>
        </syntax>
      </parameter>
      <parameter name="ReportSamples" access="readWrite" dmr:version="2.0">
        <description>
          The number of samples that the CPE will store and report for each statistic.
          The CPE MUST permit {{param}} to be set to at least {{param|.PeriodicStatistics.MaxReportSamples}}.
          If {{param}} is changed while collection of periodic statistics is enabled, the CPE will truncate or extend its statistics buffers as appropriate, but statistics collection MUST NOT otherwise be affected.
          For example, if {{param}} is 24 and {{param|SampleInterval}} is 3600 (an hour), the CPE can store up to a day's worth of samples for each statistic.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
          <default type="object" value="24"/>
        </syntax>
      </parameter>
      <parameter name="TimeReference" access="readWrite" dmr:version="2.0">
        <description>
          An absolute time reference in UTC to determine when sample intervals will complete.  Each sample interval MUST complete at this reference time plus or minus an integer multiple of {{param|SampleInterval}}.
          {{param}} is used only to set the "phase" of the sample and fetch intervals.  The actual value of {{param}} can be arbitrarily far into the past or future.
          This time reference also determines when the {{param|Status}} {{enum|Enabled|Status}} to {{enum|Trigger|Status}} to {{enum|Enabled|Status}} transitions that are controlled by {{param|FetchSamples}} will occur.  If collection of periodic statistics is enabled and {{param|FetchSamples}} is in the range [1:{{param|ReportSamples}}] then each such {{param|Status}} transition MUST occur at this reference time plus or minus an integer multiple of {{param|FetchSamples}} * {{param|SampleInterval}} (the fetch interval).
          If {{param}} is changed while collection of periodic statistics is enabled, any stored samples are discarded, and the first sample interval begins immediately.
          The Unknown Time value defined in {{bibref|TR-106a2}} indicates that no particular time reference is specified.  That is, the CPE MAY locally choose the time reference, and is required only to adhere to the specified sample and fetch intervals.
          If absolute time is not available to the CPE, its sample and fetch interval behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
          For example, if {{param|SampleInterval}} is 3600 (an hour) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then sample intervals will complete on each UTC hour (00:00, 01:00, 02:00 etc).
          If, in addition, {{param|FetchSamples}} is 24, then the fetch interval is 86400 (a day) and {{param|Status}} {{enum|Enabled|Status}} to {{enum|Trigger|Status}} to {{enum|Enabled|Status}} transitions will occur every day at UTC midnight.
          Note that, if {{param}} is set to a time other than the Unknown Time, the first sample interval (which has to begin immediately) will almost certainly be shorter than {{param|SampleInterval}}).  This is why {{param}} is defined in terms of when sample intervals complete rather than start.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="0001-01-01T00:00:00Z"/>
        </syntax>
      </parameter>
      <parameter name="FetchSamples" access="readWrite" dmr:version="2.0">
        <description>
          The number of sample intervals to be collected before transitioning {{param|Status}} from {{enum|Enabled|Status}} to {{enum|Trigger|Status}} to {{enum|Enabled|Status}}.
          If this SampleSet is enabled and {{param}} is in the range [1:{{param|ReportSamples}}] then {{param|Status}} MUST transition from {{enum|Enabled|Status}} to {{enum|Trigger|Status}} to {{enum|Enabled|Status}} on completion of every {{param}} sample intervals.  Otherwise, the transition MUST NOT occur.
          For example, if {{param|ReportSamples}} is 25 and {{param}} is 24, then the CPE will store 25 values for each monitored parameter and the above {{param|Status}} transition will occur as the CPE stores each 24th of 25 sample intervals, which means that the ACS could delay for up to two sample intervals before reading the stored values and would still not miss any samples (see also {{param|ForceSample}}).
          To disable this trigger mechanism and still collect sampled statistics, {{param}} can be set to either 0 or a value greater than {{param|ReportSamples}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ForceSample" access="readWrite" dmr:version="2.0">
        <description>
          When set to {{true}}, forces statistics for the current sample to be calculated and updated in the data model.  Setting it to {{false}} has no effect. {{hidden}}
          If this is the first time that {{param}} has been set to {{true}} during the current sample interval, this MUST cause a new value to be added to each of the periodic statistics comma-separated list parameters, and the {{param|ReportEndTime}} and all {{param|SampleSeconds}} parameters MUST be updated accordingly.
          If this is not the first time that {{param}} has been set to {{true}} during the current sample interval, then the new values that were added as described in the previous paragraph, and the {{param|ReportEndTime}} and all {{param|SampleSeconds}} parameters, MUST be updated accordingly.
          Note that {{param}} just provides a "sneak preview" of the current sample.  It does not create a new sample and it does not interfere with the sample interval schedule.
          At the end of each sample interval, if {{param}} was set to {{true}} during the sample interval then the new values that were added as described above, and the {{param|ReportEndTime}} and all {{param|SampleSeconds}} parameters, will be updated accordingly.  In other words, the partial sample data that was created when {{param}} was set to {{true}} will be updated one last time at the end of the sample interval.
        </description>
        <syntax command="true">
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ReportStartTime" access="readOnly" dmr:version="2.0">
        <description>
          The absolute time at which the sample interval for the first stored sample (for each statistic) started.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ReportEndTime" access="readOnly" dmr:version="2.0">
        <description>
          The absolute time at which the sample interval for the last stored sample (for each statistic) ended.
          If {{param|ForceSample}} has been used to force statistics for the current sample to be calculated and updated in the data model, then {{param}} MUST be updated to reflect the actual time over which stored data was collected.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SampleSeconds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Each entry indicates the number of {{units}} during which data was collected during the sample interval.
          Individual {{param}} values can be less than {{param|SampleInterval}}, for several reasons, including:
          : {{param|TimeReference}} has been set to a time other than the Unknown Time and the current sample interval started part of the way through a scheduled sample interval.
          : {{param|ForceSample}} has been used to force statistics for the current sample to be calculated and updated in the data model.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ParameterNumberOfEntries" access="readOnly" dmr:version="2.0">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.PeriodicStatistics.SampleSet.{i}.Parameter.{i}." access="readWrite" numEntriesParameter="ParameterNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.0">
      <description>
        Periodic statistics parameter table for this sample set.  This table contains entries for parameters whose values are to be sampled.
        Note that the comma-separated lists in this object (SampleSeconds, SuspectData and Values) only ever change (a) when first enabled, (b) when ForceSample is set to true (a "sneak preview" of the current sample), or (c) at the end of the sample interval.
      </description>
      <uniqueKey>
        <parameter ref="Reference"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.3">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.0">
        <description>
          Enables or disables this object instance.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Reference" access="readWrite" dmr:version="2.0">
        <description>
          {{reference}} This is the parameter being monitored by the Periodic Statistics mechanism.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="parameter"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SampleMode" access="readWrite" dmr:version="2.0">
        <description>
          Controls how this parameter's value is sampled. {{enum}}
          Parameters of non-numeric types can only support {{enum|Current}}.  The value of the {{param}} MUST be ignored for such parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="Current">
              <description>
                Sampled value is current value
              </description>
            </enumeration>
            <enumeration value="Change">
              <description>
                Sampled value is change in value since start of sample interval
              </description>
            </enumeration>
          </string>
          <default type="object" value="Current"/>
        </syntax>
      </parameter>
      <parameter name="CalculationMode" access="readWrite" dmr:version="2.0">
        <description>
          Controls how this parameter's statistic is calculated from the sampled value(s). {{enum}}
          Parameters of non-numeric types can only support {{enum|Latest}}.  The value of the {{param}} MUST be ignored for such parameters.
          {{param|SampleMode}} MUST be applied before {{param}}, i.e. the inputs to the calculation will have already accounted for {{param|SampleMode}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Latest">
              <description>
                Statistic is sampled value at end of sample interval
              </description>
            </enumeration>
            <enumeration value="Minimum">
              <description>
                Statistic is minimum sampled value during sample interval
              </description>
            </enumeration>
            <enumeration value="Maximum">
              <description>
                Statistic is maximum sampled value during sample interval
              </description>
            </enumeration>
            <enumeration value="Average">
              <description>
                Statistic is average (mean) sampled value during sample interval
              </description>
            </enumeration>
          </string>
          <default type="object" value="Latest"/>
        </syntax>
      </parameter>
      <parameter name="LowThreshold" access="readWrite" dmr:version="2.0">
        <description>
          The low threshold value that controls the calculation of {{param|Failures}}.
          A value equal to {{param|HighThreshold}} disables the threshold/failure mechanism.
          Parameters of non-numeric types cannot support the threshold/failure mechanism. The value of this parameter MUST be ignored for such parameters.
        </description>
        <syntax>
          <int/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="HighThreshold" access="readWrite" dmr:version="2.0">
        <description>
          The high threshold value that controls the calculation of {{param|Failures}}.
          A value equal to {{param|LowThreshold}} disables the threshold/failure mechanism.
          Parameters of non-numeric types cannot support the threshold/failure mechanism. The value of this parameter MUST be ignored for such parameters.
        </description>
        <syntax>
          <int/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="SampleSeconds" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Each entry indicates the number of {{units}} during which data was collected for this parameter during the sample interval.
          Individual {{param}} values can be less than {{param|.PeriodicStatistics.SampleSet.{i}.SampleInterval}}, for several reasons, including:
          : Any of the reasons for which {{param|.PeriodicStatistics.SampleSet.{i}.SampleSeconds}} values might be less than {{param|.PeriodicStatistics.SampleSet.{i}.SampleInterval}}.
          : The parameter doesn't exist, or was created or deleted during a sample interval.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SuspectData" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Each entry is 0 if the sampled value is believed to be valid, or 1 if an event that might affect the validity of the sampled value occurred during the sample interval.
          For example, if the parameter value were to be reset during the sample interval then it would be appropriate to set {{param}} to 1.
        </description>
        <syntax>
          <list/>
          <unsignedInt>
            <range maxInclusive="1"/>
          </unsignedInt>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Values" access="readOnly" activeNotify="canDeny" dmr:version="2.0">
        <description>
          {{list}} Each entry indicates the value of the referenced parameter, as determined by {{param|SampleMode}}, during the sample interval.
          The statistics values in this comma-separated lists MUST be in time order, with the oldest one first and the most recent one last.
          If the {{param|SampleMode}} parameter is not present, or is inappropriate for the referenced parameter, the statistics values MUST be collected in Current mode.
        </description>
        <syntax>
          <list/>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Failures" access="readOnly" dmr:version="2.0">
        <description>
          Counts the number of times (since this object instance was last enabled) that a newly-calculated sample value (accounting for {{param|SampleMode}}) transitioned from the "in range" state to the "out of range" state, or between the "out of range (low)" and "out of range (high)" states.  The states are defined as follows:
          * "in range" : current value is greater than {{param|LowThreshold}} and less than {{param|HighThreshold}}.
          * "out of range" : current value is less than or equal to {{param|LowThreshold}}, or greater than or equal to {{param|HighThreshold}}.
          * "out of range (low)" : current value is less than or equal to {{param|LowThreshold}}.
          * "out of range (high)" : current value is greater than or equal to {{param|HighThreshold}}.
          Note that, if {{param|LowThreshold}} and {{param|HighThreshold}} are both the same, the threshold/failure mechanism is disabled, so the value of this parameter will not increment.
          This parameter can be incremented at any time during a sample interval, and might be incremented more than once during a single sample interval. For this reason, the CPE SHOULD place a locally specified limit on the frequency at which it will notify the ACS of such changes, as described in {{bibref|TR-069a2|Section 3.2.1}}.
          Parameters of non-numeric types cannot support the threshold/failure mechanism.  The value of this parameter MUST be ignored for such parameters.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FaultMgmt." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters relating to Fault/Alarm Management.
      </description>
      <parameter name="SupportedAlarmNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxCurrentAlarmEntries" access="readOnly" dmr:version="2.4">
        <description>
          The maximum number of entries allowed in the {{object|.FaultMgmt.CurrentAlarm.{i}.}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CurrentAlarmNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HistoryEventNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExpeditedEventNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueuedEventNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FaultMgmt.SupportedAlarm.{i}." access="readOnly" numEntriesParameter="SupportedAlarmNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        Supported Alarm Entries which can be raised by the device.
        The instance numbers for this table SHOULD be maintained across firmware upgrades of the device.
      </description>
      <uniqueKey>
        <parameter ref="EventType"/>
        <parameter ref="ProbableCause"/>
        <parameter ref="SpecificProblem"/>
        <parameter ref="PerceivedSeverity"/>
      </uniqueKey>
      <parameter name="EventType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the type of event.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProbableCause" access="readOnly" dmr:version="2.4">
        <description>
          Qualifies the alarm and provides further information than {{param|EventType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpecificProblem" access="readOnly" dmr:version="2.4">
        <description>
          Provides further qualification on the alarm beyond {{param|EventType}} and {{param|ProbableCause}}.
          This is vendor defined and will be {{empty}} if the device doesn't support unique indexing of the table using {{param}}.
          The string can be set to "*" to indicate the default case if only a subset of {{param}} are to be contained within the table.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PerceivedSeverity" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the relative level of urgency for operator attention, see {{bibref|ITU-X.733}}. {{enum}}
          This will be {{empty}} if the device doesn't support unique indexing of the table using {{param}}.
          The string can be set to "*" to indicate the default case if only a subset of {{param}} are to be contained within the table.
        </description>
        <syntax>
          <string>
            <enumeration value="">
              <description>
                {{empty}}
              </description>
            </enumeration>
            <enumeration value="*"/>
            <enumeration value="Cleared"/>
            <enumeration value="Critical"/>
            <enumeration value="Major"/>
            <enumeration value="Minor"/>
            <enumeration value="Warning"/>
            <enumeration value="Indeterminate"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReportingMechanism" access="readWrite" dmr:version="2.4">
        <description>
          Indicates the reporting mechanism setting of the alarm. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="0 Expedited">
              <description>
                The device inserts the alarm into the {{object|.FaultMgmt.ExpeditedEvent.{i}.}} table and the {{object|.FaultMgmt.ExpeditedEvent.{i}.}} table.
              </description>
            </enumeration>
            <enumeration value="1 Queued">
              <description>
                The device inserts the alarm into the {{object|.FaultMgmt.QueuedEvent.{i}.}} table and the {{object|.FaultMgmt.QueuedEvent.{i}.}} table.
              </description>
            </enumeration>
            <enumeration value="2 Logged">
              <description>
                The device inserts the alarm into the {{object|.FaultMgmt.HistoryEvent.{i}.}} table.
              </description>
            </enumeration>
            <enumeration value="3 Disabled">
              <description>
                The device ignores the alarm.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FaultMgmt.CurrentAlarm.{i}." access="readOnly" numEntriesParameter="CurrentAlarmNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        Contains all currently active alarms (whose {{param|.FaultMgmt.SupportedAlarm.{i}.PerceivedSeverity}} is not {{enum|Cleared|.FaultMgmt.SupportedAlarm.{i}.PerceivedSeverity}}).
        Newly raised alarms result in a new entry in this table being added, any changes to the alarm as a result of an update event are updated in the existing table entry, and a clear event raised against an alarm results in the alarm being removed from this table.
        If maximum entries as indicated by {{param|.FaultMgmt.MaxCurrentAlarmEntries}} is reached, the next event overrides the object with the oldest {{param|AlarmChangedTime}}.
        When a new alarm replaces an existing alarm, then all parameter values for that instance are considered as changed for the purposes of value change notifications to the ACS (even if their new values are identical to those of the prior alarm).
      </description>
      <uniqueKey>
        <parameter ref="AlarmIdentifier"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="EventType"/>
        <parameter ref="ProbableCause"/>
        <parameter ref="SpecificProblem"/>
      </uniqueKey>
      <parameter name="AlarmIdentifier" access="readOnly" dmr:version="2.4">
        <description>
          Identifies one Alarm Entry in the Alarm List.  This value MUST be uniquely allocated by the device to the alarm instance during the lifetime of the individual alarm.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AlarmRaisedTime" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the date and time when the alarm was first raised by the device.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="AlarmChangedTime" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the date and time when the alarm was last changed by the device.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ManagedObjectInstance" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the instance of the Informational Object Class in which the alarm occurred by carrying the Distinguished Name (DN) of this object instance. The format of the DN is specific to the application that is using this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="512"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EventType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the type of event.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProbableCause" access="readOnly" dmr:version="2.4">
        <description>
          Qualifies the alarm and provides further information than {{param|EventType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpecificProblem" access="readOnly" dmr:version="2.4">
        <description>
          Provides further qualification on the alarm beyond {{param|EventType}} and {{param|ProbableCause}}.
          This is vendor defined and will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PerceivedSeverity" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the relative level of urgency for operator attention, see {{bibref|ITU-X.733}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Critical"/>
            <enumeration value="Major"/>
            <enumeration value="Minor"/>
            <enumeration value="Warning"/>
            <enumeration value="Indeterminate"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalText" access="readOnly" dmr:version="2.4">
        <description>
          This provides a textual string which is vendor defined.
          This will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalInformation" access="readOnly" dmr:version="2.4">
        <description>
          This contains additional information about the alarm and is vendor defined.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FaultMgmt.HistoryEvent.{i}." access="readOnly" numEntriesParameter="HistoryEventNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        Alarm events added or updated in {{object|.FaultMgmt.CurrentAlarm.{i}.}} are simultaneously entered into the this table. This table also contains alarm clearing events.
        Active alarms at the time of a power failure or reboot might not get an alarm clearing event.
        This object has a fixed number of entries with instance numbers from 1 to {{param|.FaultMgmt.HistoryEventNumberOfEntries}}.
        If maximum instance number {{param|.FaultMgmt.HistoryEventNumberOfEntries}} is reached, the next event overrides the object with instance number 1.  Subsequent entries override objects at sequentially increasing instance numbers.  This logic provides for automatic "rolling" of records.
      </description>
      <uniqueKey>
        <parameter ref="EventTime"/>
        <parameter ref="AlarmIdentifier"/>
      </uniqueKey>
      <parameter name="EventTime" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the date and time when the alarm event occurs.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="AlarmIdentifier" access="readOnly" dmr:version="2.4">
        <description>
          Identifies one Alarm Entry in the Alarm List.  This value MUST be uniquely allocated by the device to the alarm instance during the lifetime of the individual alarm.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NotificationType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the reason for the specific alarm notification event. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="NewAlarm"/>
            <enumeration value="ChangedAlarm"/>
            <enumeration value="ClearedAlarm"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManagedObjectInstance" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the instance of the Informational Object Class in which the alarm occurred by carrying the Distinguished Name (DN) of this object instance. The format of the DN is specific to the application that is using this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="512"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EventType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the type of event.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProbableCause" access="readOnly" dmr:version="2.4">
        <description>
          Qualifies the alarm and provides further information than {{param|EventType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpecificProblem" access="readOnly" dmr:version="2.4">
        <description>
          Provides further qualification on the alarm beyond {{param|EventType}} and {{param|ProbableCause}}.
          This is vendor defined and will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PerceivedSeverity" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the relative level of urgency for operator attention, see {{bibref|ITU-X.733}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Cleared"/>
            <enumeration value="Critical"/>
            <enumeration value="Major"/>
            <enumeration value="Minor"/>
            <enumeration value="Warning"/>
            <enumeration value="Indeterminate"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalText" access="readOnly" dmr:version="2.4">
        <description>
          This provides a textual string which is vendor defined.
          This will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalInformation" access="readOnly" dmr:version="2.4">
        <description>
          This contains additional information about the alarm and is vendor defined.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FaultMgmt.ExpeditedEvent.{i}." access="readOnly" numEntriesParameter="ExpeditedEventNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        Alarm events added or updated in {{object|.FaultMgmt.CurrentAlarm.{i}.}} are simultaneously entered into the this table if their corresponding entry in {{object|.FaultMgmt.SupportedAlarm.{i}.}} has {{param|.FaultMgmt.SupportedAlarm.{i}.ReportingMechanism}} set to {{enum|0 Expedited|.FaultMgmt.SupportedAlarm.{i}.ReportingMechanism}}. This table also contains alarm clearing events.
        This object has a fixed number of entries with instance numbers from 1 to {{param|.FaultMgmt.ExpeditedEventNumberOfEntries}}.
        Initially the table starts with all instances having {{param|EventTime}} set to the Unknown Time value, as defined in {{bibref|TR-106a4}}.
        If maximum instance number {{param|.FaultMgmt.ExpeditedEventNumberOfEntries}} is reached, the next event overrides the object with instance number 1.  Subsequent entries override objects at sequentially increasing instance numbers.  This logic provides for automatic "rolling" of records.
        When a new alarm replaces an existing alarm, then all parameter values for that instance are considered as changed for the purposes of value change notifications to the ACS (even if their new values are identical to those of the prior alarm).
      </description>
      <uniqueKey>
        <parameter ref="AlarmIdentifier"/>
      </uniqueKey>
      <parameter name="EventTime" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the date and time when the alarm event occurs.
          For an unpopulated entry, the value is the Unknown Time as defined in {{bibref|TR-106a4}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="AlarmIdentifier" access="readOnly" dmr:version="2.4">
        <description>
          Identifies one Alarm Entry in the Alarm List.  This value MUST be uniquely allocated by the device to the alarm instance during the lifetime of the individual alarm.
          For an unpopulated entry, the value is {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NotificationType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the reason for the specific alarm notification event. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="NewAlarm"/>
            <enumeration value="ChangedAlarm"/>
            <enumeration value="ClearedAlarm"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManagedObjectInstance" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the instance of the Informational Object Class in which the alarm occurred by carrying the Distinguished Name (DN) of this object instance. The format of the DN is specific to the application that is using this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="512"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EventType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the type of event.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProbableCause" access="readOnly" dmr:version="2.4">
        <description>
          Qualifies the alarm and provides further information than {{param|EventType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpecificProblem" access="readOnly" dmr:version="2.4">
        <description>
          Provides further qualification on the alarm beyond {{param|EventType}} and {{param|ProbableCause}}.
          This is vendor defined and will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PerceivedSeverity" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the relative level of urgency for operator attention, see {{bibref|ITU-X.733}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Cleared"/>
            <enumeration value="Critical"/>
            <enumeration value="Major"/>
            <enumeration value="Minor"/>
            <enumeration value="Warning"/>
            <enumeration value="Indeterminate"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalText" access="readOnly" dmr:version="2.4">
        <description>
          This provides a textual string which is vendor defined.
          This will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalInformation" access="readOnly" dmr:version="2.4">
        <description>
          This contains additional information about the alarm and is vendor defined.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FaultMgmt.QueuedEvent.{i}." access="readOnly" numEntriesParameter="QueuedEventNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        Alarm events added or updated in {{object|.FaultMgmt.CurrentAlarm.{i}.}} are simultaneously entered into the this table if their corresponding entry in {{object|.FaultMgmt.SupportedAlarm.{i}.}} has {{param|.FaultMgmt.SupportedAlarm.{i}.ReportingMechanism}} set to {{enum|1 Queued|.FaultMgmt.SupportedAlarm.{i}.ReportingMechanism}}. This table also contains alarm clearing events.
        This object has a fixed number of entries with instance numbers from 1 to {{param|.FaultMgmt.QueuedEventNumberOfEntries}}.
        Initially the table starts with all instances having {{param|EventTime}} set to the Unknown Time value, as defined in {{bibref|TR-106a4}}.
        If maximum instance number {{param|.FaultMgmt.QueuedEventNumberOfEntries}} is reached, the next event overrides the object with instance number 1.  Subsequent entries override objects at sequentially increasing instance numbers.  This logic provides for automatic "rolling" of records.
        When a new alarm replaces an existing alarm, then all parameter values for that instance are considered as changed for the purposes of value change notifications to the ACS (even if their new values are identical to those of the prior alarm).
      </description>
      <uniqueKey>
        <parameter ref="AlarmIdentifier"/>
      </uniqueKey>
      <parameter name="EventTime" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the date and time when the alarm event occurs.
          For an unpopulated entry, the value is the Unknown Time as defined in {{bibref|TR-106a4}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="AlarmIdentifier" access="readOnly" dmr:version="2.4">
        <description>
          Identifies one Alarm Entry in the Alarm List.  This value MUST be uniquely allocated by the device to the alarm instance during the lifetime of the individual alarm.
          For an unpopulated entry, the value is {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NotificationType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the reason for the specific alarm notification event. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="NewAlarm"/>
            <enumeration value="ChangedAlarm"/>
            <enumeration value="ClearedAlarm"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManagedObjectInstance" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the instance of the Informational Object Class in which the alarm occurred by carrying the Distinguished Name (DN) of this object instance. The format of the DN is specific to the application that is using this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="512"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EventType" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the type of event.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProbableCause" access="readOnly" dmr:version="2.4">
        <description>
          Qualifies the alarm and provides further information than {{param|EventType}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SpecificProblem" access="readOnly" dmr:version="2.4">
        <description>
          Provides further qualification on the alarm beyond {{param|EventType}} and {{param|ProbableCause}}.
          This is vendor defined and will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PerceivedSeverity" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the relative level of urgency for operator attention, see {{bibref|ITU-X.733}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Cleared"/>
            <enumeration value="Critical"/>
            <enumeration value="Major"/>
            <enumeration value="Minor"/>
            <enumeration value="Warning"/>
            <enumeration value="Indeterminate"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalText" access="readOnly" dmr:version="2.4">
        <description>
          This provides a textual string which is vendor defined.
          This will be {{empty}} if the device doesn't support inclusion of this information.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AdditionalInformation" access="readOnly" dmr:version="2.4">
        <description>
          This contains additional information about the alarm and is vendor defined.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains general information related to managing security features on the device.
      </description>
      <parameter name="CertificateNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.Security.Certificate.{i}." access="readOnly" numEntriesParameter="CertificateNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        This table provides information about all types of public key-based credentials, such as X.509 certificates, see {{bibref|RFC5280}}.
      </description>
      <uniqueKey>
        <parameter ref="SerialNumber"/>
        <parameter ref="Issuer"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables this certificate.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LastModif" access="readOnly" dmr:version="2.4">
        <description>
          The last modification time of this certificate.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" dmr:version="2.4">
        <description>
          The Serial Number field in an X.509 certificate, see {{bibref|RFC5280}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Issuer" access="readOnly" dmr:version="2.4">
        <description>
          The Issuer field in an X.509 certificate, see {{bibref|RFC5280}}; i.e. the Distinguished Name (DN) of the entity who has signed the certificate.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NotBefore" access="readOnly" dmr:version="2.4">
        <description>
          The beginning of the certificate validity period; i.e. the Not Before field in an X.509 certificate, see {{bibref|RFC5280}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="NotAfter" access="readOnly" dmr:version="2.4">
        <description>
          The end of the certificate validity period; i.e., the Not After field in an X.509 certificate, see {{bibref|RFC5280}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Subject" access="readOnly" dmr:version="2.4">
        <description>
          The Distinguished Name (DN) of the entity associated with the Public Key; i.e., the Subject field in an X.509 certificate, see {{bibref|RFC5280}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SubjectAlt" access="readOnly" dmr:version="2.4">
        <description>
          {{list}} Each item is a DNS Name.
          The Subject Alternative Names extension field in an X.509 certificate, see {{bibref|RFC5280}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SignatureAlgorithm" access="readOnly" dmr:version="2.4">
        <description>
          The algorithm used in signing the certificate; i.e. the Signature Algorithm field in an X.509 certificate, see {{bibref|RFC5280}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object is the container for all Femto related component objects, to prevent pollution of the so-called global namespace of the BBF with FAP specific objects.
      </description>
    </object>
    <object name="Device.FAP.GPS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains the parameters relating to the GPS scan.
      </description>
      <parameter name="ScanOnBoot" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables GPS scans during the device start up.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="true"/>
        </syntax>
      </parameter>
      <parameter name="ScanPeriodically" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables periodic GPS scans.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PeriodicInterval" access="readWrite" dmr:version="2.4">
        <description>
          When {{param|ScanPeriodically}} is {{true}}, this value indicates the interval in {{units}} which GPS scan is performed.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicTime" access="readWrite" dmr:version="2.4">
        <description>
          An absolute time reference in UTC to determine when the CPE will initiate the periodic GPS scan. Each GPS scan MUST occur at (or as soon as possible after) this reference time plus or minus an integer multiple of the {{param|PeriodicInterval}}.
          {{param}} is used only to set the "phase" of the GPS scan. The actual value of {{param}} can be arbitrarily far into the past or future.
          For example, if {{param|PeriodicInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then periodic GPS scans will occur every day at UTC midnight. These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-106a4|Section 3.2}} indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified PeriodicInformInterval.
          If absolute time is not available to the CPE, its periodic GPS scan behavior MUST be the same as if {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ContinuousGPS" access="readWrite" dmr:version="2.4">
        <description>
          Whether or not the device SHOULD maintain a continuous GPS lock (e.g. as a frequency stability source).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ScanTimeout" access="readWrite" dmr:version="2.4">
        <description>
          Specifies the time-out value in {{units}} since the scan started after which the scan will time out. A timed out scan is to be reported as {{enum|Error_TIMEOUT|ScanStatus}} with {{param|ErrorDetails}} indicating "Timed out"
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ScanStatus" access="readOnly" dmr:version="2.4">
        <description>
          Indicates the current status of this scan.
        </description>
        <syntax>
          <string>
            <enumeration value="Indeterminate">
              <description>
                The scan has not been executed and there are no valid scan results available
              </description>
            </enumeration>
            <enumeration value="InProgress"/>
            <enumeration value="Success"/>
            <enumeration value="Error"/>
            <enumeration value="Error_TIMEOUT"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ErrorDetails" access="readOnly" dmr:version="2.4">
        <description>
          Provides more detail when the {{param|ScanStatus}} is either {{enum|Error|ScanStatus}} or {{enum|Error_TIMEOUT|ScanStatus}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastScanTime" access="readOnly" activeNotify="forceDefaultEnabled" dmr:version="2.4">
        <description>
          The date and time when the last GPS scan completed.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastSuccessfulScanTime" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          Specifies the date and time, when the GPS scan last completed successfully.
          This value is retained across reboot and is only reset after another scan completes successfully or {{param|GPSReset}} is set to {{true}}.
          The values for {{param|LockedLatitude}}, {{param|LockedLongitude}} and {{param|NumberOfSatellites}} correspond to this time. If a scan has never succeeded before, the value will be the Unknown Time value, as defined in {{bibref|TR-106a4|Section 3.2}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LockedLatitude" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          This parameter specifies the latitude of the device's position in degrees, multiplied by 1 million. The positive value signifies the direction, north of the equator. The negative value signifies the direction, south of the equator.
          Range is from: 90d00.00' South (-90,000,000) to 90d00.00' North (90,000,000).
          Example: A latitude of 13d19.43' N would be represented as 13,323,833, derived as (13*1,000,000)+((19.43*1,000,000)/60). Latitude of 50d00.00' S would be represented as value -50,000,000.
          This value is retained across reboots and is only reset after another scan completes successfully or {{param|GPSReset}} is set to {{true}}. If a scan has never succeeded before, the value 0 is reported.
        </description>
        <syntax>
          <int>
            <range minInclusive="-90000000" maxInclusive="90000000"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="LockedLongitude" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          This parameter specifies the longitude of the device's position in degrees, multiplied by 1 million. The positive value signifies the direction, east of the prime meridian. The negative value signifies the direction, west of the prime meridian.
          Range is from: 180d00.00' West (-180,000,000) to 180d00.00' East (180,000,000).
          Example: A longitude of 13d19.43' E would be represented as 13,323,833, derived as (13*1,000,000)+((19.43*1,000,000)/60). A longitude of 50d00.00' W would be represented as value -50,000,000.
          This value is retained across reboots and is only reset after another scan completes successfully or {{param|GPSReset}} is set to {{true}}. If a scan has never succeeded before, the value 0 is reported.
        </description>
        <syntax>
          <int>
            <range minInclusive="-180000000" maxInclusive="180000000"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="NumberOfSatellites" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The number of satellites that were locked during the test execution. The greater the number of satellites the better the precision of the results.
          This value is retained across reboots and is only reset after another scan completes successfully or {{param|GPSReset}} is set to {{true}}. If a scan has never succeeded before, the value 0 is reported.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="GPSReset" access="readWrite" dmr:version="2.4">
        <description>
          Setting this to {{true}} will cause a reset on the GPS Hardware. Setting this to {{false}} has no effect.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.GPS.ContinuousGPSStatus." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        When {{param|#.ContinuousGPS}} is {{true}}, the parameters in this object contain the GPS status as it is continuously monitored.
        When {{param|#.ContinuousGPS}} is {{false}}, the parameters in this object are not being updated and their values are not accurate.
      </description>
      <parameter name="CurrentFix" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The value is {{true}} if the location fix is currently valid (i.e. GPS receiver is currently tracking satellite signals), otherwise it is {{false}}. After a reboot the value is {{false}} until the GPS receivers has a valid current position.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="GotFix" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The value is {{true}} if {{param|CurrentFix}} has transitioned to {{true}} at least once since {{param|#.ContinuousGPS}} was enabled, otherwise it is {{false}}. After a reboot the value is {{false}} until {{param|CurrentFix}} has transitioned to {{true}} again.
          The GPS coordinates ({{param|Latitude}}, {{param|Longitude}}, and {{param|Elevation}}) are not valid until {{param}} has a value of {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TimingGood" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The value is {{true}} if the timing synchronization is good, otherwise it is {{false}}. After a reboot the value is {{false}} until the timing is synchronized again.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Latitude" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          This parameter represents the most recent latitude reading for the device's position in degrees, multiplied by 1 million. The positive value signifies the direction, north of the equator. The negative value signifies the direction, south of the equator.
          Range is from: 90 deg 00.00' South (-90,000,000) to 90 deg 00.00' North (90,000,000).
          Example: A latitude of 13 deg 19.43' N would be represented as 13,323,833, derived as (13*1,000,000)+((19.43*1,000,000)/60). Latitude of 50 deg 00.00' S would be represented as value -50,000,000.
          {{param}} is not valid until {{param|GotFix}} is {{true}}.
          If the parameter has never been set before, the value 0 is reported. The value SHOULD be maintained over a reboot.
        </description>
        <syntax>
          <int>
            <range minInclusive="-90000000" maxInclusive="90000000"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Longitude" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          This parameter represents the most recent longitude reading for the device's position in degrees, multiplied by 1 million. The positive value signifies the direction, east of the prime meridian. The negative value signifies the direction, west of the prime meridian.
          Range is from: 180d00.00' West (-180,000,000) to 180d00.00' East (180,000,000).
          Example: A longitude of 13d19.43' E would be represented as 13,323,833, derived as (13*1,000,000)+((19.43*1,000,000)/60). A longitude of 50d00.00' W would be represented as value -50,000,000.
          {{param}} is not valid until {{param|GotFix}} is {{true}}.
          If the parameter has never been set before, the value 0 is reported. The value SHOULD be maintained over a reboot.
        </description>
        <syntax>
          <int>
            <range minInclusive="-180000000" maxInclusive="180000000"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Elevation" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          This parameter represents the most recent elevation reading for the device's position in {{units}}, relative to the WGS84 ellipsoid. The positive value signifies the direction, above sea level. The negative value signifies the direction, below sea level.
          Range is from: 5,000.000 meters below sea level (-5,000,000) to 25,000.000 meters above sea level (25,000,000).
          {{param}} is not valid until {{param|GotFix}} is {{true}}.
          If the parameter has never been set before, the value 0 is reported. The value SHOULD be maintained over a reboot.
        </description>
        <syntax>
          <int>
            <range minInclusive="-5000000" maxInclusive="25000000"/>
            <units value="millimeters"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="LastFixTime" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          Represents the date and time when the last GPS Fix was acquired.
          The Unknown Time value defined in {{bibref|TR-106a4|Section 3.2}} is used when {{param|GotFix}} is {{false}}. This applies too after a reboot of the device until a valid location is determined and {{param|GotFix}} transsitions to {{true}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastFixDuration" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          Number of {{units}} of continuous GPS fix time. After a reboot this value is reset to 0.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FirstFixTimeout" access="readWrite" dmr:version="2.4">
        <description>
          Number of {{units}} to wait for first GPS fix before declaring a GPS fault.
          A value of -1 means that there is no timeout and no fault logging.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="SatellitesTracked" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The number of satellites the receiver is tracking.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SatelliteTrackingInterval" access="readWrite" dmr:version="2.4">
        <description>
          The interval in {{units}} at which the GPS tracking information gets reported.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="60" maxInclusive="3600"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ReceiverStatus" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          The output of the GPS receiver's status.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LocationType" access="readOnly" activeNotify="canDeny" dmr:version="2.4">
        <description>
          Indicates whether the {{param|Latitude}}, {{param|Longitude}}, and {{param|Elevation}} values are determined via a GPS Fix (where the value of this parameter would be {{enum|Real}}) or via some other means (where the value of this parameter would be {{enum|Reference}}).
        </description>
        <syntax>
          <string>
            <enumeration value="Real"/>
            <enumeration value="Reference"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LockTimeOutDuration" access="readWrite" dmr:version="2.4">
        <description>
          The timer duration, in {{units}}, for which the device waits for GPS to acquire lock.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="120" maxInclusive="86400"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.GPS.AGPSServerConfig." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters for the configuration of the Assisted Global Positioning System (A-GPS) server. See also {{bibref|3GPP-TS.25.171|Section 3.2}}
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables the {{object}} entry.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServerURL" access="readWrite" dmr:version="2.4">
        <description>
          A-GPS server host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerPort" access="readWrite" dmr:version="2.4">
        <description>
          The port to use when communicating to the A-GPS Server.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.4">
        <description>
          Username to be used by the device to authenticate with the A-GPS server. This string is set to {{empty}} if no authentication is used.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.4">
        <description>
          Password to be used by the device to authenticate with the A-GPS server. This string is set to {{empty}} if no authentication is used.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReferenceLatitude" access="readWrite" dmr:version="2.4">
        <description>
          This parameter specifies the reference latitude for an A-GPS request position in degrees, multiplied by 1 million. The positive value signifies the direction, north of the equator. The negative value signifies the direction, south of the equator.
          Range is from: 90d00.00' South (-90,000,000) to 90d00.00' North (90,000,000).
          Example: A latitude of 13d19.43' N would be represented as 13,323,833, derived as (13*1,000,000)+((19.43*1,000,000)/60).  Latitude of 50d00.00' S would be represented as value -50,000,000.
        </description>
        <syntax>
          <int>
            <range minInclusive="-90000000" maxInclusive="90000000"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ReferenceLongitude" access="readWrite" dmr:version="2.4">
        <description>
          This parameter specifies the reference longitude for an A-GPS request position in degrees, multiplied by 1 million. The positive value signifies the direction, east of the prime meridian. The negative value signifies the direction, west of the prime meridian.
          Range is from: 180d00.00' West (-180,000,000) to 180d00.00' East (180,000,000).
          Example: A longitude of 13d19.43' E would be represented as 13,323,833, derived as (13*1,000,000)+((19.43*1,000,000)/60). A longitude of 50d00'00'' W would be represented as value -50,000,000.
        </description>
        <syntax>
          <int>
            <range minInclusive="-180000000" maxInclusive="180000000"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ServerInUse" access="readOnly" dmr:version="2.4">
        <description>
          The value is {{true}} if the device has successfully contacted and received A-GPS info from the A-GPS server, otherwise the value is {{false}}.
          After a reboot the value is {{false}} until the server could be contacted again.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.PerfMgmt." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters relating to Performance Management in a Femto-related environment.
      </description>
      <parameter name="ConfigNumberOfEntries" access="readOnly" dmr:version="2.4">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.PerfMgmt.Config.{i}." access="readWrite" numEntriesParameter="ConfigNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.4">
      <description>
        This object contains parameters relating to File Management configuration for uploading of Performance Files to a designated File Server. Each table entry can be referenced by zero or more radio-specific objects contained in the FAPService instances. The periodic upload will upload data for all of the radio-specific objects that reference it.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="URL"/>
        <parameter ref="PeriodicUploadInterval"/>
        <parameter ref="PeriodicUploadTime"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables or disables this entry.  If this entry is disabled then its periodic uploads are not performed.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.4">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" dmr:version="2.4">
        <description>
          URL specifying the destination file location. HTTP and HTTPS transports MUST be supported. Other transports MAY be supported.
          This argument specifies only the destination file location, and does not indicate in any way the name or location of the local file to be uploaded.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.4">
        <description>
          Username to be used by the device to authenticate with the file server. This string is set to {{empty}} if no authentication is used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.4">
        <description>
          Password to be used by the device to authenticate with the file server. This string is set to {{empty}} if no authentication is used.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PeriodicUploadInterval" access="readWrite" dmr:version="2.4">
        <description>
          The duration in {{units}} of the interval for which the device MUST create a Performance File and attempt to upload the file to {{param|URL}} if {{param|Enable}} is {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicUploadTime" access="readWrite" dmr:version="2.4">
        <description>
          An absolute time reference in UTC to determine when the device will initiate the periodic file upload. Each file upload MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicUploadInterval}}.
          {{param}} is used only to set the "phase" of the periodic uploads. The actual value of {{param}} can be arbitrarily far into the past or future.
          For example, if {{param|PeriodicUploadInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then periodic file uploads will occur every day at UTC midnight. These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value as defined in {{bibref|TR-106a4|Section 3.2}} indicates that no particular time reference is specified. That is, the device MAY locally choose the time reference, and is REQUIRED only to adhere to the specified {{param|PeriodicUploadInterval}}.
          If absolute time is not available to the device, its periodic file upload behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object defines the data model for the following Femtozone APIs.
        * Femto Awareness
        * SMS
        * MMS
        * Terminal Location
        Femto Awareness, SMS, MMS, and Terminal Location APIs are defined in the Release 1 API Specifications of the Service SIG in the Femto Forum (non public document).
        {{bibref|TR-262|appendix I}} provides the "Theory of Operation" for the usage of this object.
      </description>
      <parameter name="Version" access="readOnly" dmr:version="2.4">
        <description>
          Version of Femto Application Platform running on this device
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable the Femto ApplicationPlatform
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.4">
        <description>
          Current state of the Femto Application Platform.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled">
              <description>
                The Femto Application Platform is not available
              </description>
            </enumeration>
            <enumeration value="Enabled">
              <description>
                The Femto Application Platform is available
              </description>
            </enumeration>
            <enumeration value="Reset">
              <description>
                The FemtoApplicationPlatform is in the process of being reset and will transition to the {{enum|Disabled}} state when the reset operation is completed
              </description>
            </enumeration>
            <enumeration value="Initializing">
              <description>
                The FemtoApplicationPlatform is being initialized and will transition to the {{enum|Enabled}} state once the initialization is completed
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxNumberOfApplications" access="readOnly" dmr:version="2.4">
        <description>
          Determines how many Femtozone Applications can be supported by the Femto Application Platform simultaneously.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CurrentNumberofApplications" access="readOnly" dmr:version="2.4">
        <description>
          Specifies how many Femtozone Applications are currently communicating with the Femto Application Platform.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Capabilities." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the capabilities of the Femtozone Application Platform and the Femtozone APIs.
      </description>
      <parameter name="PresenceApplicationSupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the Femto Application Platform supports Presence-Based Femtozone Applications
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="FemtoAwarenessAPISupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the Femto Awareness API is supported on this device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SMSAPISupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the SMS API is supported on this device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SubscribeToNotificationsOfSMSSentToApplicationSupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the SubscribeToNotificationsOfSMSSentToApplication functionality is supported by the FAP SMS API.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QuerySMSDeliveryStatusSupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the QuerySMSDeliveryStatus functionality is supported by the FAP SMS API.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MMSAPISupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the MMS API is supported on this device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueryMMSDeliveryStatusSupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the QueryMMSDeliveryStatus functionality is supported by the FAP MMS API.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SubscribeToNotificationsOfMMSSentToApplicationSupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the SubscribeToNotificationsOfMMSSentToApplication functionality is supported by the FAP MMS API.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TerminalLocationAPISupport" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the Terminal Location API is supported on this device.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AuthenticationMethodsSupported" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the supported methods that 3rd Party Applications can use to authenticate with the Femto Application Platform at initialization. Comma separated list of strings.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Basic"/>
            <enumeration value="Digest"/>
            <enumeration value="DigitalSignature"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AccessLevelsSupported" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the supported access levels that 3rd Party Applications can request when authenticating with the Femto Application Platform at initialization. This access level is with respect to resources within the Femto Application Platform only (not to be confused with Access Mode parameter in .FAPService.{i}.AccessMgmt).
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Guest"/>
            <enumeration value="Standard"/>
            <enumeration value="Restricted"/>
            <enumeration value="Administrator"/>
            <enumeration value="Debug"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SendSMSTargetAddressType" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the supported types of addresses SMSs can be sent to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="TelUri"/>
            <enumeration value="AnonymousReference"/>
            <enumeration value="All"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SendMMSTargetAddressType" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the supported types of addresses MMSs can be sent to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="TelUri"/>
            <enumeration value="AnonymousReference"/>
            <enumeration value="All"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Control." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the operation of the Femtozone APIs.
      </description>
      <parameter name="AuthenticationMethod" access="readWrite" dmr:version="2.4">
        <description>
          Specifies how 3rd Party Applications have to authenticate against Femto APIs in order to use it. {{reference}}
          '''''Note:''''' The credentials are not part of the data model and have to be supplied externally.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <enumerationRef targetParam="#.Capabilities.AuthenticationMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TunnelInst" access="readWrite" dmr:version="2.4">
        <description>
          This is the reference to the IPsec tunnel instance to be used by the Application Platform traffic.
          If InternetGatewayDevice:1 {{bibref|TR-098}} or Device:1 {{bibref|TR-181i1}}) is used as root data model the {{param}} MUST point to a row in the ''.FAP.Tunnel.IKESA.{i}.'' table.
          If the root data model used is Device:2 {{bibref|TR-181i2}} than the {{param}} MUST point to an tunnel instance defined in this data model.
          If the referenced object is deleted, the parameter value MUST be set to an empty string.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Control.FemtoAwareness." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the Femto Awareness API.
      </description>
      <parameter name="APIEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable FemtoAwareness API exposure on FAP
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueueEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable Request queueing for the API
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Queueing " access="readWrite" dmr:version="2.4">
        <description>
          Determines how FAP handles simultaneous requests from different Applications to Femto Awareness API.
        </description>
        <syntax>
          <string>
            <enumeration value="FiFo"/>
            <enumeration value="Priority"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxAPIUsersNumber" access="readWrite" dmr:version="2.4">
        <description>
          Determines the Max Number of different Applications that can send Requests to Femto Awareness API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FemtozoneID" access="readWrite" dmr:version="2.4">
        <description>
          Specifies Identifier of the Femtozone.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NotificationsUserIdentifierMSISDN" access="readWrite" dmr:version="2.4">
        <description>
          Specifies whether the Mobile Station International Subscriber Directory Number (MSISDN) has to be used as UserIdentifier in Femto Awareness Notifications. A value of {{true}} means that the MSISDN is send as user identifier, a value of {{false}} means that an anonymous reference is used.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SubscribeToNotificationsResponseCallbackData" access="readWrite" dmr:version="2.4">
        <description>
          Specifies whether the OPTIONAL Argument "Callback Data" has to be used in Responses to Requests to "Subscribe To Femto Awareness Notifications".
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueryFemtocellResponseTimezone" access="readWrite" dmr:version="2.4">
        <description>
          Specifies whether the OPTIONAL Argument "Timezone" has to be used in Responses to Requests to "Query Femtocell Status".
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Control.SMS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the SMS API.
      </description>
      <parameter name="APIEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable SMS API exposure on FAP
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueueEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable Request queueing for the API
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Queueing " access="readWrite" dmr:version="2.4">
        <description>
          Determines how FAP handles simultaneous requests from different Applications to SMS API.
        </description>
        <syntax>
          <string>
            <enumeration value="FiFo"/>
            <enumeration value="Priority"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxAPIUsersNumber" access="readWrite" dmr:version="2.4">
        <description>
          Determines the Max Number of different Applications that can send Requests to SMS API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinSendSMSTimeInterval" access="readWrite" dmr:version="2.4">
        <description>
          Determines the Minimum Time Interval in {{units}} between two consecutive Send SMS Requests by the same Application.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="3599"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EnableQuerySMSDeliveryStatus" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable "QuerySMSDeliveryStatus" Operation on SMS API. When disabled, QuerySMSDeliveryStatus Requests to SMS API are ignored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EnableSubscribeToNotificationsOfMessageSentToApplication" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable "SubscribeToNotificationsOfMessageSentToApplication" Operation on SMS API. When disabled, SubscribeTo NotificationsOfMessageSentToApplication Requests to SMS API are ignored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Control.MMS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the MMS API.
      </description>
      <parameter name="APIEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable MMS API exposure on FAP
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueueEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable Request queueing for the API
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Queueing " access="readWrite" dmr:version="2.4">
        <description>
          Determines how FAP handles simultaneous requests from different Applications to MMS API.
        </description>
        <syntax>
          <string>
            <enumeration value="FiFo"/>
            <enumeration value="Priority"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxAPIUsersNumber" access="readWrite" dmr:version="2.4">
        <description>
          Determines the Max Number of different Applications that can send Requests to MMS API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MinSendMMSTimeInterval" access="readWrite" dmr:version="2.4">
        <description>
          Determines the Minimum Time Interval in {{units}} between two consecutive Send MMS Requests by the same Application.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="3599"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EnableQueryMMSDeliveryStatus" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable "QuerySMSDeliveryStatus" Operation on MMS API. When disabled, QuerySMSDeliveryStatus Requests to MMS API are ignored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EnableSubscribeToNotificationsOfMessageSentToApplication" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable "SubscribeTo NotificationsOfMessageSentToApplication" Operation on MMS API. When disabled, SubscribeTo NotificationsOfMessageSentToApplication Requests to MMS API are ignored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Control.TerminalLocation." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the TerminalLocation API.
      </description>
      <parameter name="APIEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable TerminalLocation API exposure on FAP
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueueEnable" access="readWrite" dmr:version="2.4">
        <description>
          Enable or disable Request queueing for the API
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Queueing " access="readWrite" dmr:version="2.4">
        <description>
          Determines how FAP handles simultaneous requests from different Applications to TerminalLocation API.
        </description>
        <syntax>
          <string>
            <enumeration value="FiFo"/>
            <enumeration value="Priority"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxAPIUsersNumber" access="readWrite" dmr:version="2.4">
        <description>
          Determines the Max Number of different Applications that can send Requests to TerminalLocation API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueryMobileLocationResponseAddress" access="readWrite" dmr:version="2.4">
        <description>
          Specifies Terminal Address  Format to be used in QueryMobileLocation Responses.
        </description>
        <syntax>
          <string>
            <enumeration value="TelUri"/>
            <enumeration value="AnonymousReference"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="QueryMobileLocationResponseLongitudeLatitude" access="readWrite" dmr:version="2.4">
        <description>
          Include or exclude FAP Longitude and Latitude arguments in Responses to QueryMobileLocation Requests.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueryMobileLocationResponseAltitude" access="readWrite" dmr:version="2.4">
        <description>
          Include or exclude FAP Altitude argument in Responses to QueryMobileLocation Requests .
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="QueryMobileLocationResponseTimestamp" access="readWrite" dmr:version="2.4">
        <description>
          Specifies Response Timestamp in {{units}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="86399"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Monitoring." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the monitoring of the Femtozone Application Platform and the Femtozone APIs.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.4">
        <description>
          Enables and disables this entry.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MonitoringInterval" access="readWrite" dmr:version="2.4">
        <description>
          Specifies the interval in {{units}} used to collect the monitoring measurements.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AuthenticationRequestsReceived" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the total number of authentication requests received by the Femto Application Platform. The counter will be reset whenever the device reboots or the {{param|Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AuthenticationRequestsRejected" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of authentication requests received by the Femto Application Platform that were rejected. The counter will be reset whenever the device reboots or the {{param|Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Monitoring.FemtoAwareness." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the Monitoring of the FemtoAwareness API.
      </description>
      <parameter name="APIAvailable" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the FemtoAwareness API is currently available on this device (the API could be disabled or could have exhausted its resources)
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="APIUsers" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of Applications using the Femto Awareness API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueState" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the state of the Femto Awareness API Queue.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Ready"/>
            <enumeration value="Flushed"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="QueueNum" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of requests waiting in the Femto Awareness API Queue.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueReceived" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the Femto Awareness API Queue that have been received. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueDiscarded" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the Femto Awareness API Queue that have been discarded. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Monitoring.SMS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the Monitoring of the SMS API.
      </description>
      <parameter name="APIAvailable" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the SMS API is currently available on this device (the API could be disabled or could have exhausted its resources)..
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="APIUsers" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of Applications using the SMS API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueState" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the state of the SMS API Queue.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Ready"/>
            <enumeration value="Flushed"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="QueueNum" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of requests waiting in the SMS API Queue.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueReceived" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the SMS API Queue that have been received. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueDiscarded" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the SMS API Queue that have been discarded. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Monitoring.MMS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the Monitoring of the MMS API.
      </description>
      <parameter name="APIAvailable" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the MMS API is currently available on this device (the API could be disabled or could have exhausted its resources)..
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="APIUsers" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of Applications using the MMS API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueState" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the state of the MMS API Queue.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Ready"/>
            <enumeration value="Flushed"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="QueueNum" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of requests waiting in the MMS API Queue.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueReceived" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the MMS API Queue that have been received. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueDiscarded" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the MMS API Queue that have been discarded. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.FAP.ApplicationPlatform.Monitoring.TerminalLocation." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.4">
      <description>
        This object contains parameters related to the Monitoring of the TerminalLocation API.
      </description>
      <parameter name="APIAvailable" access="readOnly" dmr:version="2.4">
        <description>
          Specifies whether the TerminalLocation API is currently available on this device (the API could be disabled or could have exhausted its resources)..
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="APIUsers" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of Applications using the Terminal Location API.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueState" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the state of the Terminal Location API Queue.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Ready"/>
            <enumeration value="Flushed"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="QueueNum" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the current number of requests waiting in the Terminal Location API Queue.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="QueueReceived" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the Terminal Location API Queue that have been received. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueDiscarded" access="readOnly" dmr:version="2.4">
        <description>
          Specifies the number of requests in the Terminal Location API Queue that have been discarded. The counter will be reset whenever the device reboots or the {{param|#.Enable}} parameter is set to {{true}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.5">
      <description>
        This object provides bulk data collection capabilities and global collection settings that affect the entire device.
        Bulk Data utilizes various solutions (e.g., IPDR, HTTP) to collect data from devices and transfer the data to a collection server.
        The IPDR solution is based on a service specification described in {{bibref|TR-232}}.
        The HTTP solution is based on transfer mechanisms described in {{bibref|TR-157a10|Annex A}}.
        The Bulk Data Collection Profiles are measured over a reporting interval (which can be aligned with absolute time) and are made available to the collection server.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables all collection profiles.
          If {{false}}, bulk data will not be collected or reported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.5">
        <description>
          Indicates the status of the Bulk Data Collection mechanism.
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled">
              <description>
                Bulk Data Collection is enabled and working as intended.
              </description>
            </enumeration>
            <enumeration value="Disabled">
              <description>
                Bulk Data Collection is disabled.
              </description>
            </enumeration>
            <enumeration value="Error" optional="true">
              <description>
                Bulk Data Collection is enabled, but there is an error condition preventing the successful collection of bulk data.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="MinReportingInterval" access="readOnly" dmr:version="2.5">
        <description>
          Minimum reporting interval in {{units}} that the CPE is capable of supporting.
          A value of 0 indicates no minimum reporting interval.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Protocols" access="readOnly" dmr:version="2.5">
        <description>
          Represents the IPDR and transport protocols that this device is capable of supporting.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Streaming">
              <description>
                IPDR Streaming Protocol {{bibref|IPDR-SP}}
              </description>
            </enumeration>
            <enumeration value="File">
              <description>
                IPDR File Transfer Protocol {{bibref|IPDR-FTP}}
              </description>
            </enumeration>
            <enumeration value="HTTP">
              <description>
                Hypertext Transfer Protocol {{bibref|RFC2616}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncodingTypes" access="readOnly" dmr:version="2.5">
        <description>
          Represents the Encoding Types for the protocols that this device is capable of supporting.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="XML">
              <description>
                Used with the IPDR Streaming and File Protocols. {{bibref|IPDR-XML}}
              </description>
            </enumeration>
            <enumeration value="XDR">
              <description>
                Used with the IPDR Streaming and File Protocols. {{bibref|IPDR-XDR}}
              </description>
            </enumeration>
            <enumeration value="CSV">
              <description>
                Comma Separated Values. Used with the HTTP Protocol. {{bibref|RFC4180}}
              </description>
            </enumeration>
            <enumeration value="JSON">
              <description>
                JavaScript Object Notation. Used with the HTTP Protocol {{bibref|RFC7159}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ParameterWildCardSupported" access="readOnly" dmr:version="2.10">
        <description>
          When {{true}}, the Device supports the use of wildcards to determine the parameters that are reported using a Profile.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxNumberOfProfiles" access="readOnly" dmr:version="2.5">
        <description>
          The maximum number of profiles that can exist at any given time.  Specifically, the maximum number of {{object|Profile.{i}.}} instances that the ACS can create.
          If the value of this parameter is -1, then it means that the CPE doesn't have a limit to the number of profiles that can exist.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="MaxNumberOfParameterReferences" access="readOnly" dmr:version="2.5">
        <description>
          The maximum number of parameters that can be referenced via the bulk data collection mechanism.  Specifically, the maximum number of parameters that can be referenced via {{param|Profile.{i}.Parameter.{i}.Reference}} across all Profile and Parameter instances (including the expansion of partial paths within the Reference parameter).
          If the value of this parameter is -1, then it means that the CPE doesn't have a limit to the number of parameter that can be referenced via the bulk data collection mechanism.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ProfileNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData.Profile.{i}." access="readWrite" numEntriesParameter="ProfileNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.5">
      <description>
        A set of Bulk Data Collection profiles.
        Each profile represents a bulk data report, including its own timing configuration, communications configuration, and set of parameters.  This allows the ACS to configure multiple reports to be generated at different times for different sets of data.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.5">
        <description>
          Enables or disables this specific bulk data profile.
          If {{false}}, this profile will not be collected or reported.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.5">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          The name of the profile.
        </description>
        <syntax>
          <string>
            <size maxLength="255"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRetainedFailedReports" access="readWrite" dmr:version="2.10">
        <description>
          The number of failed reports to be retained and transmitted (in addition to the current report) at the end of the current reporting interval.
          If the value of the {{param|EncodingType}} parameter is modified any outstanding failed reports are deleted.
          If the CPE cannot retain the number of failed reports from previous reporting intervals while transmitting the report of the current reporting interval, then the oldest failed reports are deleted until the CPE is able to transmit the report from the current reporting interval.
          A value of 0 indicates that failed reports are not to be retained for transmission in the next reporting interval.
          A value of -1 indicates that the CPE will retain as many failed reports as possible.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.5">
        <description>
          The Bulk Data Protocol being used for this collection profile.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="#.Protocols"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EncodingType" access="readWrite" dmr:version="2.5">
        <description>
          The Bulk Data encoding type being used for this collection profile.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="#.EncodingTypes"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReportingInterval" access="readWrite" dmr:version="2.5">
        <description>
          The reporting interval in {{units}}. Each report is generated based on this interval and {{param|TimeReference}}.
          The CPE MAY reject a request to set {{param}} to less than {{param|#.MinReportingInterval}}.
          Reporting intervals MUST begin every {{param}} {{units}}.
          If {{param}} is changed while collection is enabled, the first reporting interval begins immediately.
          For example, if {{param}} is 86400 (a day) and if {{param|TimeReference}} is set to UTC midnight on some day (in the past, present, or future) then the CPE will generate (and transmit, if the {{param|Protocol}} parameter is set to {{enum|Streaming|#.Protocols}}) its report at midnight every 24 hours.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="86400"/>
        </syntax>
      </parameter>
      <parameter name="TimeReference" access="readWrite" dmr:version="2.5">
        <description>
          An absolute time reference in UTC to determine when will be transmitted.  Each reporting interval MUST complete at this reference time plus or minus an integer multiple of {{param|ReportingInterval}}, unless unable to due to higher prioritized operations.
          {{param}} is used only to set the "phase" of the reporting intervals.  The actual value of {{param}} can be arbitrarily far into the past or future.
          If {{param}} is changed while collection of bulk data is enabled, the first reporting interval begins immediately.
          The Unknown Time value as defined in {{bibref|TR-106a2}} indicates that no particular time reference is specified. That is, the CPE MAY locally choose the time reference, and is required only to adhere to the specified reporting intervals.
          If absolute time is not available to the CPE, its reporting interval behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
          For example, if {{param|ReportingInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then the CPE will generate (and transmit, if in a "ITPush" mode) its report at midnight every 24 hours.
          Note that, if {{param}} is set to a time other than the Unknown Time, the first reporting interval (which has to begin immediately) will almost certainly be shorter than {{param|ReportingInterval}}).  This is why {{param}} is defined in terms of when reporting intervals complete rather than start.
        </description>
        <syntax>
          <dateTime/>
          <default type="object" value="0001-01-01T00:00:00Z"/>
        </syntax>
      </parameter>
      <parameter name="StreamingHost" access="readWrite" dmr:version="2.5">
        <description>
          This is the host name or IP Address of the IPDR Collector to be used by the CPE to stream bulk data records if this collection profile is configured for the IPDR Streaming Protocol {{bibref|IPDR-SP}} (the {{param|Protocol}} parameter has a value of {{enum|Streaming|#.Protocols}}).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StreamingPort" access="readWrite" dmr:version="2.5">
        <description>
          This is the port number of the IPDR Collector to be used by the CPE to stream bulk data records if this collection profile is configured for the IPDR Streaming Protocol {{bibref|IPDR-SP}} (the {{param|Protocol}} parameter has a value of {{enum|Streaming|#.Protocols}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="4737"/>
        </syntax>
      </parameter>
      <parameter name="StreamingSessionID" access="readWrite" dmr:version="2.5">
        <description>
          This is the unique identification of an IPDR Session to be used when this collection profile is configured for the IPDR Streaming Protocol {{bibref|IPDR-SP}} (the {{param|Protocol}} parameter has a value of {{enum|Streaming|#.Protocols}}).
          An ACS MUST NOT configure multiple IPDR Streaming Protocol collection profiles with the same {{param}}.  Doing so MUST cause the CPE to fail the SetParameterValues.
          Within the IPDR Streaming Protocol specification the Session ID has a type of a single 'char', but we are restricting the range even further (ASCII values of '0' - '9' and 'A' - 'Z'.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="48" maxInclusive="57"/>
            <range minInclusive="65" maxInclusive="90"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FileTransferURL" access="readWrite" dmr:version="2.5">
        <description>
          This is the URL within the CPE that is used by an IPDR Collector to retrieve the IPDRDocs when this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FileTransferUsername" access="readWrite" dmr:version="2.5">
        <description>
          Username used for authentication of the {{param|FileTransferURL}}.
          This is the {{param}} that the IPDR Collector uses to access the CPE when this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FileTransferPassword" access="readWrite" dmr:version="2.5">
        <description>
          Password used for authentication of the {{param|FileTransferURL}}.
          This is the {{param}} that the IPDR Collector uses to access the CPE when this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ControlFileFormat" access="readWrite" dmr:version="2.5">
        <description>
          If this collection profile is configured for the IPDR File Transfer Protocol {{bibref|IPDR-FTP}} (the {{param|Protocol}} parameter has a value of {{enum|File|#.Protocols}}) then the control file names will be of the following format:
          : &lt;ControlFilePrefix&gt;_&lt;ControlFilePolicy&gt;.&lt;ControlFileSuffix&gt;
          Where the following rules apply:
          * ControlFilePrefix MUST NOT contain an underscore '_' or any other character not suitable for a file name.
          * ControlFilePolicy MUST contain one or more 'N' characters, where the number of 'N' characters denotes the number of digits in the sequence number, including leading zeros as necessary to match the number of 'N' characters.
          * ControlFileSuffix is a file extension.
          For example, BulkData_NNNN.log where "BulkData" would be the prefix, "NNNN" would be the policy, and "log" would be the suffix.  Files adhering to this file format would look like: BulkData_0000.log, BulkData_0001.log, etc.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ParameterNumberOfEntries" access="readOnly" dmr:version="2.5">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData.Profile.{i}.Parameter.{i}." access="readWrite" numEntriesParameter="ParameterNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.5" dmr:noUniqueKeys="true">
      <description>
        Bulk data parameter table.
        Each entry in this table represents a parameter (or set of parameters if a partial path is provided) to be collected and reported.
      </description>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          Name of the parameter in the report body.
          If the value of this parameter is {{empty}}, then the value of the {{param|Reference}} parameter is used as the name.
          When the value {{param|Reference}} parameter contains wildcards and/or partial parameter names, the rules for determining the value of this parameter are specified in {{bibref|TR-157a10|Annex A.3.2.1}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reference" access="readWrite" dmr:version="2.5">
        <description>
          Represents the parameter(s) that are part of this Bulk Data collection profile. The value MUST be a path name of a parameter or an object.
          When the {{param|##.ParameterWildCardSupported}} parameter has a value of {{true}}, patterns for instance identifiers are permitted with wildcards (an "*" character) in place of instance identifiers; any attempt to set the value otherwise MUST be rejected by the CPE.
          In the case where a partial parameter path is specified, the sub-objects of the resolved pattern and contained parameters will be part of the bulk data collected and reported. If the path name refers to an object then it MUST end with a '.'.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="any"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData.Profile.{i}.CSVEncoding." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10">
      <description>
        This object defines the properties to be used when the {{object|##.Profile}} object's {{param|#.EncodingType}} parameter value is {{enum|CSV|##.EncodingTypes}}.
      </description>
      <parameter name="FieldSeparator" access="readWrite" dmr:version="2.10">
        <description>
          Field separator to use when encoding CSV data.
        </description>
        <syntax>
          <string/>
          <default type="object" value=","/>
        </syntax>
      </parameter>
      <parameter name="RowSeparator" access="readWrite" dmr:version="2.10">
        <description>
          Row separator to use when encoding CSV data.
        </description>
        <syntax>
          <string/>
          <default type="object" value="&#13;&#10;"/>
        </syntax>
      </parameter>
      <parameter name="EscapeCharacter" access="readWrite" dmr:version="2.10">
        <description>
          Escape character to use when encoding CSV data.
        </description>
        <syntax>
          <string/>
          <default type="object" value="&quot;"/>
        </syntax>
      </parameter>
      <parameter name="ReportFormat" access="readWrite" dmr:version="2.10">
        <description>
          This parameter describes the formatting used for reports defined by this profile as described in {{bibref|TR-157a10|Annex A.3.4}}.
          Note: This parameter is encoded as a token in the BBF-Report-Format header field and MUST NOT include spaces or other characters excluded from token characters defined in {{bibref|RFC2616}}.
        </description>
        <syntax>
          <string>
            <enumeration value="ParameterPerRow">
              <description>
                Reports are formatted with each parameter formatted as a row entry.
              </description>
            </enumeration>
            <enumeration value="ParameterPerColumn">
              <description>
                Reports are formatted with each parameter formatted as a column entry.
              </description>
            </enumeration>
          </string>
          <default type="object" value="ParameterPerColumn"/>
        </syntax>
      </parameter>
      <parameter name="RowTimestamp" access="readWrite" dmr:version="2.10">
        <description>
          The format of the timestamp to use for data inserted into the row.
        </description>
        <syntax>
          <string>
            <enumeration value="Unix-Epoch">
              <description>
                Timestamp is inserted using the UNIX epoch time (milliseconds since Jan 1, 1970 UTC) timestamp format. If the CPE is unable to acquire a time, then the time that has elapsed since the last reboot of the device is used.
              </description>
            </enumeration>
            <enumeration value="ISO-8601">
              <description>
                Timestamp is inserted using the ISO-8601 timestamp format. If the CPE is unable to acquire a time, then the processing described by the dateTime type in {{bibref|TR-069|Table 12}} is followed.
              </description>
            </enumeration>
            <enumeration value="None">
              <description>
                Timestamp is not inserted in the row.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Unix-Epoch"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData.Profile.{i}.JSONEncoding." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10">
      <description>
        This object defines the properties to be used when the {{object|##.Profile}} object's {{param|#.EncodingType}} parameter value is {{enum|JSON|##.EncodingTypes}}.
      </description>
      <parameter name="ReportFormat" access="readWrite" dmr:version="2.10">
        <description>
          This parameter describes the formatting used for the report as described in {{bibref|TR-157a10|Annex A.3.5}}.
          Note: This parameter is encoded as a token in the BBF-Report-Format header field and MUST NOT include spaces or other characters excluded from token characters defined in {{bibref|RFC2616}}.
        </description>
        <syntax>
          <string>
            <enumeration value="ObjectHierarchy">
              <description>
                Reports are formatted with each object in the object hierarchy of the data model encoded as a corresponding hierarchy of JSON Objects with the parameters of the object specified as name/value pairs of the JSON Object.
              </description>
            </enumeration>
            <enumeration value="NameValuePair">
              <description>
                Reports are formatted with each parameter of the data model encoded as a corresponding array of JSON Objects with the parameters specified as name/value pairs.
              </description>
            </enumeration>
          </string>
          <default type="object" value="ObjectHierarchy"/>
        </syntax>
      </parameter>
      <parameter name="ReportTimestamp" access="readWrite" dmr:version="2.10">
        <description>
          The format of timestamp to use for the JSON Object named "CollectionTime" as described in {{bibref|TR-157a10}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Unix-Epoch">
              <description>
                Timestamp is inserted using the UNIX epoch time (milliseconds since Jan 1, 1970 UTC) timestamp format. If the CPE is unable to acquire a time, then the time that has elapsed since the last reboot of the device is used.
              </description>
            </enumeration>
            <enumeration value="ISO-8601">
              <description>
                Timestamp is inserted using the ISO-8601 timestamp format. If the CPE is unable to acquire a time, then the processing described by the dateTime type in {{bibref|TR-069|Table 12}} is followed.
              </description>
            </enumeration>
            <enumeration value="None">
              <description>
                Timestamp is not inserted.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Unix-Epoch"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData.Profile.{i}.HTTP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10">
      <description>
        This object defines the properties to be used when transporting bulk data using the HTTP/HTTPS protocol. This object is used when the {{param|#.Protocol}} parameter has a value of {{enum|HTTP|##.Protocols}}. For authentication purposes the CPE MUST support HTTP Basic and Digest Access Authentication as defined in {{bibref|RFC2616}}.
      </description>
      <parameter name="URL" access="readWrite" dmr:version="2.10">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the collection server to receive the Bulk Data transmitted by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.10">
        <description>
          Username used to authenticate the CPE when making a connection to the collection server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.10">
        <description>
          Password used to authenticate the CPE when making a connection to the collection server.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CompressionsSupported" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the HTTP Compression mechanism(s) supported by this CPE for the purposes of transferring bulk data.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="GZIP">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Compress">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Deflate">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Compression" access="readWrite" dmr:version="2.10">
        <description>
          The value of this parameter represents the HTTP Compression mechanism to be used by the CPE when transferring data to the collection server.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="CompressionsSupported" nullValue="None"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="MethodsSupported" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the HTTP method(s) supported by this CPE for the purposes of transferring bulk data.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="POST">
              <description>
                As defined in {{bibref|RFC2616|Section 9.5}}
              </description>
            </enumeration>
            <enumeration value="PUT">
              <description>
                As defined in {{bibref|RFC2616|Section 9.6}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Method" access="readWrite" dmr:version="2.10">
        <description>
          The value of this parameter represents the HTTP method to be used by the CPE when transferring data to the collection server.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="MethodsSupported"/>
          </string>
          <default type="object" value="POST"/>
        </syntax>
      </parameter>
      <parameter name="UseDateHeader" access="readWrite" dmr:version="2.10">
        <description>
          When {{true}}, the CPE encodes the HTTP Date Header {{bibref|RFC2616|Section 14.18}} in the HTTP client request.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="RetryEnable" access="readWrite" dmr:version="2.10">
        <description>
          When {{true}}, the CPE retries unsuccessful attempts to transfer data.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="RetryMinimumWaitInterval" access="readWrite" dmr:version="2.10">
        <description>
          Configures the data transfer retry wait interval, in seconds, as specified in {{bibref|TR-157a10|Annex A.2.2.1}}.
          The device MUST use a random value between {{param}}  and ({{param}} * {{param|RetryIntervalMultiplier}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="5"/>
        </syntax>
      </parameter>
      <parameter name="RetryIntervalMultiplier" access="readWrite" dmr:version="2.10">
        <description>
          Configures the retry interval multiplier as specified in {{bibref|TR-157a10|Annex A.2.2.1}}.
          This value is expressed in units of 0.001.  Hence the values of the multiplier range between 1.000 and 65.535.
          The device MUST use a random value between {{param|RetryMinimumWaitInterval}}  and ({{param|RetryMinimumWaitInterval}} * {{param}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="2000"/>
        </syntax>
      </parameter>
      <parameter name="RequestURIParameterNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PersistAcrossReboot" access="readWrite" dmr:version="2.12">
        <description>
          Determines whether or not data transfers that have failed are required to be persisted across reboots.
          If {{param}} is {{true}}, then failed data transfers MUST be persisted across reboots.
          If {{param}} is {{false}}, then failed data transfers are not required to be persisted across reboots.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BulkData.Profile.{i}.HTTP.RequestURIParameter.{i}." access="readWrite" numEntriesParameter="RequestURIParameterNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.10" dmr:noUniqueKeys="true">
      <description>
        This object represents an instance of a parameter to be used in the report header used as part of the HTTP Request-URI transmitted by the CPE to the collection server using the Request-URI in addition to the parameters required by {{bibref|TR-157a10|Annex A.2.1}}.
      </description>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          Name of the Request-URI parameter.
          If {{param}} is {{empty}}, the name of the Request-URI parameter is the value of {{param|Reference}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reference" access="readWrite" dmr:version="2.10">
        <description>
          The value MUST be the path name of a parameter to be used as the Request-URI parameter.
          If the value of this parameter is empty, then this object is not encoded in the report header.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.XMPP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        The {{object}} represents the XMPP capabilities of the device as described in {{bibref|TR-069a5|Appendix III}}.
      </description>
      <parameter name="ConnectionNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SupportedServerConnectAlgorithms" access="readOnly" dmr:version="2.11">
        <description>
          The algorithms supported by the CPE for resolving XMPP server addresses and ports. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="DNS-SRV">
              <description>
                Use the preferred connection algorithm as specified in {{bibref|RFC6120|Section 3.2.1}} where the value of the {{param|Connection.{i}.Domain}} parameter is used to look up the server address and port to use.
              </description>
            </enumeration>
            <enumeration value="DNS">
              <description>
                Use the fallback connection mechanism as specified in {{bibref|RFC6120|Section 3.2.2}}, where the value of the {{param|Connection.{i}.Domain}} parameter is used to look up the server address, and the port is the ''xmpp-client'' port (5222).
              </description>
            </enumeration>
            <enumeration value="ServerTable">
              <description>
                Use the instances of the {{object|Connection.{i}.Server}} table based on the values of the {{param|Connection.{i}.Server.{i}.Priority}} and {{param|Connection.{i}.Server.{i}.Weight}} parameters as the basis for reconnect. Instances MUST be reachable and reachable instances with the lowest value MUST be preferred.
              </description>
            </enumeration>
            <enumeration value="WebSocket">
              <description>
                Use the discovery and connection algorithm as specified in {{bibref|RFC7395|Section 4}} where the value of the {{param|Connection.{i}.Domain}} parameter is used to create a secure HTTP request to discover the URL to use for the XMPP over WebSocket connection.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.XMPP.Connection.{i}." access="readWrite" numEntriesParameter="ConnectionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        The {{object}} represents a XMPP connection between the device and a server. The {{param|Username}}, {{param|Domain}} and {{param|Resource}} comprise the full identity (JabberID) of this {{object}} for this device.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Username"/>
        <parameter ref="Domain"/>
        <parameter ref="Resource"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables this {{object}}.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.7">
        <description>
          The proposed local-part of the Jabber ID of this {{object}}, and the value to be used to authenticate this {{object}} when making a connection to the Server using the procedure outlined in {{bibref|RFC6120|Section 6}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.7">
        <description>
          Password used to authenticate this {{object}} when making a connection to the {{object|Server}} using the procedure outlined in {{bibref|RFC6120|Section 6}}.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the  value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a  factory reset.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Domain" access="readWrite" dmr:version="2.7">
        <description>
          The proposed domain-part of the Jabber ID of this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Resource" access="readWrite" dmr:version="2.7">
        <description>
          The proposed resource-part of the Jabber ID of this {{object}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="JabberID" access="readOnly" dmr:version="2.7">
        <description>
          The complete Jabber ID as determined by the first-hop XMPP server at time of connection establishment.  This Jabber ID will usually be the standard concatentation of the local-part (Username), domain-part (Domain), and resource-part (Resource) as defined in {{bibref|RFC6120|Section 2.1}} (local-part@domain-part/resource-part), but since the Jabber ID is owned by the first-hop XMPP Server there are cases where the value will be different.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.7">
        <description>
          The current operational state of this {{object}} (see {{bibref|TR-181i2|Section 4.2.2}}).  {{enum}}
          When {{param|Enable}} is {{false}} then {{param}} SHOULD normally be {{enum|Disabled}} or {{enum|Error}} if there is a fault condition on the interface).
          When {{param|Enable}} is changed to {{true}} then {{param}} SHOULD change to {{enum|Enabled}} if and only if the interface is able to transmit and receive PDUs; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Enabled}} if still operable when the expected actions have completed);  it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled"/>
            <enumeration value="Disabled"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="Connecting"/>
            <enumeration value="ServerNotPresent"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error_AuthenticationFailure"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChangeDate" access="readOnly" dmr:version="2.7">
        <description>
          The date and time at which this {{object}} entered into its current operational state.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ServerConnectAlgorithm" access="readWrite" dmr:version="2.7">
        <description>
          The algorithm the {{object}} uses when connecting with the associated lists of servers.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="#.SupportedServerConnectAlgorithms"/>
          </string>
          <default type="object" value="DNS-SRV"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveInterval" access="readWrite" dmr:version="2.7">
        <description>
          The number of {{units}} that keep alive events as specified in {{bibref|RFC6120|Section 4.6.1}} are sent by this {{object}}.
          A value of 0 disables the keep alive functionality. A value of -1 indicates that the keep alive interval is a vendor specific implementation.
          {{bibref|RFC6120|Section 4.6.4}} recommends not checking more frequently than every 5 minutes (or 300 {{units}}).
        </description>
        <syntax>
          <long>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </long>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ServerConnectAttempts" access="readWrite" dmr:version="2.7">
        <description>
          The number of times that this {{object}} attempts to connect to a given IP address before moving on to the current server's next IP address, or to the next server if the current server has no more IP addresses.
          If {{param}}, {{param|ServerRetryInitialInterval}}, {{param|ServerRetryIntervalMultiplier}} and {{param|ServerRetryMaxInterval}} all have their default values, the maximum reconnection wait intervals, in ''minutes'', will be ''{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 512, 512, 512, 512, 512}''.  After the initial attempt there are 15 further attempts, making a total of 16.  The maximum reconnection wait interval is reached on the 10th retry, i.e. the 11th attempt.
          NOTE: If this {{object}} fails to connect to any of the servers' IP addresses, fallback behavior SHOULD be as specified in {{bibref|RFC6120|Section 3.2}}.
          NOTE: If the value of this parameter is 0, server connection and reconnection behavior is implementation-dependent.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="16"/>
        </syntax>
      </parameter>
      <parameter name="ServerRetryInitialInterval" access="readWrite" dmr:version="2.7">
        <description>
          The maximum first reconnection wait interval, in {{units}}, as specified in {{bibref|TR-069a5|Annex K XMPP Connection Request}}.
          The Device MUST use a random value between ''0'' and {{param}} as the first reconnection wait interval.
          NOTE: If the value of the {{param|ServerConnectAttempts}} parameter is 0, the value of this parameter is ignored.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="60"/>
        </syntax>
      </parameter>
      <parameter name="ServerRetryIntervalMultiplier" access="readWrite" dmr:version="2.7">
        <description>
          The reconnection interval multiplier as specified in {{bibref|TR-069a5|Annex K XMPP Connection Request}}. This value is expressed in units of 0.001. Hence the values of the multiplier range between 1.000 and 65.535.
          For the ''n''th reconnection wait interval, the Device MUST use a random value, in ''seconds'', between ''0'' and {{param|ServerRetryInitialInterval}} * ({{param}} / 1000) ** (''n'' - ''1'').
          NOTE: If the value of the {{param|ServerConnectAttempts}} parameter is 0, the value of this parameter is ignored.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="2000"/>
        </syntax>
      </parameter>
      <parameter name="ServerRetryMaxInterval" access="readWrite" dmr:version="2.7">
        <description>
          The maximum reconnection wait interval, in {{units}}.
          If the ''n''th reconnection wait interval calculated from {{param|ServerRetryInitialInterval}} and {{param|ServerRetryIntervalMultiplier}} exceeds the value of this parameter, then the Device MUST use the value of this parameter as the next reconnection wait interval.
          NOTE: If the value of the {{param|ServerConnectAttempts}} parameter is 0, the value of this parameter is ignored.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="30720"/>
        </syntax>
      </parameter>
      <parameter name="UseTLS" access="readWrite" dmr:version="2.7">
        <description>
          This parameter allows an ACS to configure whether or not this XMPP Connection is required to use TLS independent of whether or not the XMPP Server that is being connected to is configured for TLS "mandatory-to-negotiate".
          If the value of {{param}} is {{true}} then the CPE will initiate TLS negotiation if not required to by the XMPP Server.
          If the value of {{param}} is {{false}} then the CPE will not initiate TLS negotiation if not required to by the XMPP Server.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="TLSEstablished" access="readOnly" dmr:version="2.7">
        <description>
          This parameter represents the TLS state of this XMPP Connection.
          If this XMPP Connection is established and is secured by TLS then the value of this parameter is {{true}}.
          If this XMPP Connection is either not established or established but not secured by TLS then the value of this parameter is {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.7">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.XMPP.Connection.{i}.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.7">
      <description>
        The {{object}} represents an XMPP server to be used for a {{object|##.Connection}}.
        This table is only relevant when {{param|##.Connection.{i}.ServerConnectAlgorithm}} is set to {{enum|ServerTable|##.Connection.{i}.ServerConnectAlgorithm}}.  If {{param|##.Connection.{i}.ServerConnectAlgorithm}} is set to {{enum|DNS-SRV|##.Connection.{i}.ServerConnectAlgorithm}} then any instances of this table are ignored by this {{object|##.Connection}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="ServerAddress"/>
        <parameter ref="Port"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.7">
        <description>
          Enables or disables this {{object}}.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.7">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readWrite" dmr:version="2.7">
        <description>
          The priority of this {{object}} that is used by the {{object|##.Connection}} when determining the {{object}} to connect. The {{object|##.Connection}} MUST contact the {{object}} with the lowest-numbered priority that the {{object|##.Connection}} can reach as defined in {{bibref|RFC2782}}. The selection of {{object}}s with the same {{param}} value utilizes the {{param|Weight}} parameter to determine which {{object}} is selected by the {{object|##.Connection}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Weight" access="readWrite" dmr:version="2.7">
        <description>
          This parameter specifies a relative weight for entries with the same {{param|Priority}}. The mechanism is defined in {{bibref|RFC2782}}. A value of -1 indicates that the implementation of this parameter is specific to the Vendor.
        </description>
        <syntax>
          <long>
            <range minInclusive="-1" maxInclusive="65535"/>
          </long>
        </syntax>
      </parameter>
      <parameter name="ServerAddress" access="readWrite" dmr:version="2.7">
        <description>
          Fully Qualified Domain Name (FQDN) or IP address of the XMPP server for this {{object|##.Connection}}.
          If the value of this Parameter is a FQDN that resolves to multiple addresses then each address SHOULD be attemtped (in an implemnetation-specific order) until a connection can be made or all addresses are exhausted, in which case the next {{object}} instance (based on {{param|Priority}} and {{param|Weight}}) SHOULD be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.7">
        <description>
          Port number of the XMPP server for this {{object|##.Connection}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="5222"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.XMPP.Connection.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.7">
      <description>
        XMPP Connection statistics information for this resource.
      </description>
      <parameter name="ReceivedMessages" access="readOnly" dmr:version="2.7">
        <description>
          The number of XMPP stanzas (iq, presence, or message) that have been received on this {{object|##.Connection}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedMessages" access="readOnly" dmr:version="2.7">
        <description>
          The number of XMPP stanzas (iq, presence, or message) that have been transmitted by this {{object|##.Connection}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ReceivedErrorMessages" access="readOnly" dmr:version="2.7">
        <description>
          The number of XMPP stanzas (iq, presence, or message) that have been received on this {{object|##.Connection}} where the type attribute had a value of "error".
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TransmittedErrorMessages" access="readOnly" dmr:version="2.7">
        <description>
          The number of XMPP stanzas (iq, presence, or message) that have been transmitted by this {{object|##.Connection}} where the type attribute had a value of "error".
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the management functions for the 1905 capabilities as defined in {{bibref|IEEE1905.1a}}.
      </description>
      <parameter name="Version" access="readOnly" dmr:version="2.9">
        <description>
          1905 profile version number of the AL as would be sent in a Higher Layer response message as defined in {{bibref|IEEE1905.1a|Table 6-37: 1905 profile version TLV}}.
        </description>
        <syntax>
          <string>
            <enumeration value="1905.1"/>
            <enumeration value="1905.1a"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the management functions for the 1905 Abstraction Layer as defined in {{bibref|IEEE1905.1a|Section 4.4 Abstraction Layer}}.
      </description>
      <parameter name="IEEE1905Id" access="readOnly" dmr:version="2.9">
        <description>
          1905 AL MAC Address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.9">
        <description>
          The current operational state of the 1905 Abstraction Layer. {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Up">
              <description>
                NOT RECOMMENDED for use; if used it  means {{enum|Enabled}}
              </description>
            </enumeration>
            <enumeration value="Down">
              <description>
                NOT RECOMMENDED for use; if used it  means {{enum|Disabled}}
              </description>
            </enumeration>
            <enumeration value="Unknown">
              <description>
                NOT RECOMMENDED for use; if used it  means {{enum|Error}}
              </description>
            </enumeration>
            <enumeration value="Dormant">
              <description>
                NOT RECOMMENDED for use; if used it  means {{enum|Error}}
              </description>
            </enumeration>
            <enumeration value="NotPresent">
              <description>
                NOT RECOMMENDED for use; if used it  means {{enum|Error}}
              </description>
            </enumeration>
            <enumeration value="LowerLayerDown">
              <description>
                NOT RECOMMENDED for use; if used it  means {{enum|Error}}
              </description>
            </enumeration>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          This parameter is NOT RECOMMENDED to be used because IEEE1905 is not an interface.  The accumulated time in {{units}} since the 1905 Abstraction Layer entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readOnly" dmr:version="2.9">
        <description>
          This parameter is NOT RECOMMENDED to be used because IEEE1905 is not an interface.  {{list}} {{reference}} See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetParent="#.AL.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RegistrarFreqBand" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} See {{bibref|IEEE1905.1a|Table 6-25: SupportedFreqBand TLV}}. {{enum}}
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <enumeration value="802.11 2.4 GHz"/>
            <enumeration value="802.11 5 GHz"/>
            <enumeration value="802.11 60 GHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        The 1905 interface table (described in {{bibref|IEEE1905.1a|sub-clause 5 Abstraction Layer Management}}).
      </description>
      <uniqueKey>
        <parameter ref="InterfaceId"/>
      </uniqueKey>
      <parameter name="InterfaceId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of this interface.  This is the value of the intfAddress parameter defined in {{bibref|IEEE1905.1a|Table 5-2: intfDescriptor elements}}
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.9">
        <description>
          This parameter is NOT RECOMMENDED to be used because it is not a parameter defined in a 1905 ALME primitive or protocol TLV.  The current operational state of the interface (see {{bibref|TR-181i2|Section 4.2.2}}). {{enum}}
          It SHOULD change to {{enum|Up}} if and only if the interface is able to transmit and receive network traffic; it SHOULD normally be {{enum|Down}} when the interface cannot transmit and receive network traffic; it SHOULD change to {{enum|Dormant}} if and only if the interface is operable but is waiting for external actions before it can transmit and receive network traffic (and subsequently change to {{enum|Up}} if still operable when the expected actions have completed); it SHOULD change to {{enum|LowerLayerDown}} if and only if the interface is prevented from entering the {{enum|Up}} state because one or more of the interfaces beneath it is down; it SHOULD remain in the {{enum|Error}} state if there is an error or other fault condition detected on the interface; it SHOULD remain in the {{enum|NotPresent}} state if the interface has missing (typically hardware) components; it SHOULD change to {{enum|Unknown}} if the state of the interface can not be determined for some reason.
          This parameter is based on ''ifOperStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Up"/>
            <enumeration value="Down"/>
            <enumeration value="Unknown"/>
            <enumeration value="Dormant"/>
            <enumeration value="NotPresent"/>
            <enumeration value="LowerLayerDown"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          This parameter is NOT RECOMMENDED to be used because it is not a parameter defined in a 1905 ALME primitive or protocol TLV.  The accumulated time in {{units}} since the interface entered its current operational state.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LowerLayers" access="readOnly" dmr:version="2.9">
        <description>
          This parameter is NOT RECOMMENDED to be used because it is not a parameter defined in a 1905 ALME primitive or protocol TLV.  {{list}} {{reference|an interface object that is stacked immediately below this interface object}}  See {{bibref|TR-181i2|Section 4.2.1}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceStackReference" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Path name of an interface object described by this 1905 {{object}}. Referenced interface object MUST have a MACAddress and the InterfaceId MUST be the same as the interface object MACAddress.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MediaType" access="readOnly" dmr:version="2.9">
        <description>
          Media type of this {{object}}. This is derived from the value of the intfType parameter defined in {{bibref|IEEE1905.1a|Tables 5.2: intfDescriptor elements}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="IEEE 802.3u">
              <description>
                IEEE 802.3u Fast Ethernet
              </description>
            </enumeration>
            <enumeration value="IEEE 802.3ab">
              <description>
                IEEE 802.3ab Gigabit Ethernet
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11b">
              <description>
                IEEE 802.11b (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11g">
              <description>
                IEEE 802.11g (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11a">
              <description>
                IEEE 802.11a (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11n 2.4">
              <description>
                IEEE 802.11n (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11n 5.0">
              <description>
                IEEE 802.11n (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11ac">
              <description>
                IEEE 802.11ac (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11ad">
              <description>
                IEEE 802.11ad (60GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11af">
              <description>
                IEEE 802.11af
              </description>
            </enumeration>
            <enumeration value="IEEE 1901 Wavelet">
              <description>
                IEEE 1901 Wavelet
              </description>
            </enumeration>
            <enumeration value="IEEE 1901 FFT">
              <description>
                IEEE 1901 FFT
              </description>
            </enumeration>
            <enumeration value="MoCAv1.1">
              <description>
                MoCAv1.1
              </description>
            </enumeration>
            <enumeration value="Generic PHY"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GenericPhyOUI" access="readOnly" dmr:version="2.9">
        <description>
          OUI of the Generic Phy networking technology of the local interface that would be included in a Generic Phy Device Information Type TLV defined in {{bibref|IEEE1905.1a|Tables 6-29: Generic Phy Device Information type TLV}}.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GenericPhyVariant" access="readOnly" dmr:version="2.9">
        <description>
          Variant Index of the Generic Phy networking technology of the local interface that would be included in a Generic Phy Device Information Type TLV defined in {{bibref|IEEE1905.1a|Tables 6-29: Generic Phy Device Information type TLV}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="GenericPhyURL" access="readOnly" dmr:version="2.9">
        <description>
          URL to Generic Phy XML Description of the Generic Phy networking technology of the local interface that would be included in a Generic Phy Device Information Type TLV defined in {{bibref|IEEE1905.1a|Table 6-29: Generic Phy device information type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SetIntfPowerStateEnabled" access="readWrite" dmr:version="2.9">
        <description>
          Enables or disables the Abstraction Layer's ability to set the power state for the interface. Boolean can be {{true}} for "enabled" and {{false}} for "disabled".
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PowerState" access="readWrite" dmr:version="2.9">
        <description>
          The Power State of this {{object}}. This is derived from the value of the powerState parameter as defined in {{bibref|IEEE1905.1a|Tables 5.3: ALME-SET-INTF-PWR-STATE.request parameters and Table 5.7: ALME-GET-INTF-PWR-STATE.response parameters}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="On"/>
            <enumeration value="Power_Save">
              <description>
                not used when written
              </description>
            </enumeration>
            <enumeration value="Off"/>
            <enumeration value="Unsupported">
              <description>
                not used when written
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorPropertiesNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.Interface.{i}.VendorProperties.{i}." access="readOnly" numEntriesParameter="VendorPropertiesNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        This object defines the vendor specific properties (vendorSpecificInfo field) of this {{object|##.Interface}} as defined in {{bibref|IEEE1905.1a|Table 5-2: intfDescriptor elements}}.
      </description>
      <parameter name="OUI" access="readOnly" dmr:version="2.9">
        <description>
          Organizationally unique identifier of a manufacturer of this {{object|##.Interface}}.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros according to {{bibref|IEEE1905.1a|Table 5-20: VendorSpecificInfo information element}}.  {{pattern}}
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Information" access="readOnly" dmr:version="2.9">
        <description>
          A hexbinary string used to to provide vendor specific information about this {{object|##.Interface}}. This is the value of the vendorSpecificInfo parameter defined in {{bibref|IEEE1905.1a|Table 5-20: VendorSpecificInfo information element}}.
        </description>
        <syntax>
          <hexBinary>
            <size maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.Interface.{i}.Link.{i}." access="readOnly" numEntriesParameter="LinkNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object defines the 1905 neighbors and link properties.
      </description>
      <uniqueKey>
        <parameter ref="InterfaceId"/>
        <parameter ref="IEEE1905Id"/>
      </uniqueKey>
      <parameter name="InterfaceId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the interface of the Neighbor for this {{object}}. This value comes from the neighbor’s Topology discovery message as defined in {{bibref|IEEE1905.1a|Table 6-9: MAC address typeTLV}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="IEEE1905Id" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the 1905 AL entity of the Neighbor device on this {{object}}. This value comes from the neighbor’s Topology discovery message as defined in {{bibref|IEEE1905.1a|Table 6-8: AL MAC address type TLV}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MediaType" access="readOnly" dmr:version="2.9">
        <description>
          Media type of this {{object}}. This value is derived from the neighbor’s Topology response message 1905 device information type TLV Media Type field as defined in {{bibref|IEEE1905.1a|Table 6-12: Media type}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="IEEE 802.3u">
              <description>
                IEEE 802.3u Fast Ethernet
              </description>
            </enumeration>
            <enumeration value="IEEE 802.3ab">
              <description>
                IEEE 802.3ab Gigabit Ethernet
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11b">
              <description>
                IEEE 802.11b (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11g">
              <description>
                IEEE 802.11g (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11a">
              <description>
                IEEE 802.11a (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11n 2.4">
              <description>
                IEEE 802.11n (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11n 5.0">
              <description>
                IEEE 802.11n (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11ac">
              <description>
                IEEE 802.11ac (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11ad">
              <description>
                IEEE 802.11ad (60GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11af">
              <description>
                IEEE 802.11af
              </description>
            </enumeration>
            <enumeration value="IEEE 1901 Wavelet">
              <description>
                IEEE 1901 Wavelet
              </description>
            </enumeration>
            <enumeration value="IEEE 1901 FFT">
              <description>
                IEEE 1901 FFT
              </description>
            </enumeration>
            <enumeration value="MoCAv1.1">
              <description>
                MoCAv1.1
              </description>
            </enumeration>
            <enumeration value="Generic PHY"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GenericPhyOUI" access="readOnly" dmr:version="2.9">
        <description>
          OUI of the Generic Phy networking technology of the interface of the Neighbor for this {{object|#.Link}}. This value is from a Generic Phy response message field as defined in {{bibref|IEEE1905.1a|Tables 6-29: Generic Phy Device Information type TLV}}.
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GenericPhyVariant" access="readOnly" dmr:version="2.9">
        <description>
          Variant Index of the Generic Phy networking technology of the interface of the Neighbor for this {{object|#.Link}}. This value is from a Generic Phy response message variant index field as defined in {{bibref|IEEE1905.1a|Tables 6-29: Generic Phy Device Information type TLV}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="GenericPhyURL" access="readOnly" dmr:version="2.9">
        <description>
          URL to Generic Phy XML Description of the Generic Phy networking technology of the interface of the Neighbor for this {{object|#.Link}}. This value is from a Generic Phy response message URL to Generic Phy field as defined in {{bibref|IEEE1905.1a|Table 6-29: Generic Phy device information type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.Interface.{i}.Link.{i}.Metric." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the metrics for this {{object|##.Link}} as defined in {{bibref|IEEE1905.1a|Tables 6-18: 1905 transmitter link metrics and Table 6-20: 1905 receiver link metrics}}.
      </description>
      <parameter name="IEEE802dot1Bridge" access="readOnly" dmr:version="2.9">
        <description>
          Indicates whether or not the 1905 link includes one or more IEEE 802.1 bridges. If {{false}}, the 1905 link does not include an IEEE 802.1 bridge. If {{true}}, the 1905 link does include one or more IEEE 802.1 bridges.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Estimated number of lost {{units}} on the transmit side of the link {{bibref|IEEE1905.1a|Table 6-18: 1905 transmitter link metrics}} during a measurement period.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketErrorsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Estimated number of lost {{units}} on the receive side of the link {{bibref|IEEE1905.1a|Table 6-20: 1905 receiver link metrics}} during a measurement period.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="TransmittedPackets" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Estimated number of {{units}} sent to the Neighbor on this {{object|##.Link}}, in the same measurement period used to estimate {{param|PacketErrors}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          Estimated number of {{units}} received from this Neighbor on this {{object|##.Link}} {{bibref|IEEE1905.1a|Table 6-20: 1905 receiver link metrics}}, in the same measurement period used to estimate {{param|PacketErrors}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="MACThroughputCapacity" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The maximum MAC throughput in {{units}} between this {{object|###.Interface}} and the Neighbor on this {{object|##.Link}} that is estimated at this {{object|###.Interface}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mb/s"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LinkAvailability" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The estimated average {{units}} of time that the {{object|##.Link}} is available for data transmissions.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PHYRate" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The Physical Layer (PHY) rate in {{units}} between this {{object|###.Interface}} and the Neighbor on this {{object|##.Link}} that is estimated at this {{object|###.Interface}}.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mb/s"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RSSI" access="readOnly" activeNotify="canDeny" dmr:version="2.9">
        <description>
          The estimated Received Signal Strength Indicator (RSSI) ratio in {{units}} between this {{object|###.Interface}} and the Neighbor on this {{object|##.Link}} that is estimated at the receive side of this {{object|###.Interface}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.ForwardingTable." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the rules to forward PDUs between interfaces within the 1905 Abstraction Layer.
      </description>
      <parameter name="SetForwardingEnabled" access="readWrite" dmr:version="2.9">
        <description>
          Abstraction Layer ability to set, modify, and remove {{object|ForwardingRule}} entries for interfaces. Boolean can be {{true}} for "enabled" and {{false}} for "disabled".
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ForwardingRuleNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.ForwardingTable.ForwardingRule.{i}." access="readWrite" numEntriesParameter="ForwardingRuleNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        The 1905 fowarding rule for the ALME-SET-FWD-RULE.request and ALME-GET-FWD-RULES.response with classification criteria as defined in {{bibref|IEEE1905.1a|Table 5-9: ClassificationSet elements}}.
      </description>
      <parameter name="InterfaceList" access="readWrite" dmr:version="2.9">
        <description>
          The list of interfaces to which a frame satisfying the following classification criteria should be forwarded (intfAddressList parameter as defined in {{bibref|IEEE1905.1a|Table 5-8: ALME-SET-FWD-RULE.request parameters and Table 5-12: fwdRuleList elements}}). {{list}} Each list item MUST be the path name of an object, which MUST be a row of an {{object|##.Interface}} object. If the referenced item is deleted, the corresponding item MUST be removed from the list. {{noreference}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.Interface." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="MACDestinationAddress" access="readWrite" dmr:version="2.9">
        <description>
          Classification criterion.
          The destination MAC address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACDestinationAddressFlag" access="readWrite" dmr:version="2.9">
        <description>
          If {{false}}, the classification criterion {{param|MACDestinationAddress}} is ignored.  If {{true}}, the classification criterion {{param|MACDestinationAddress}} is used.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="MACSourceAddress" access="readWrite" dmr:version="2.9">
        <description>
          Classification criterion.
          The source MAC address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACSourceAddressFlag" access="readWrite" dmr:version="2.9">
        <description>
          If {{false}}, the classification criterion {{param|MACSourceAddress}} is ignored.  If {{true}}, the classification criterion {{param|MACSourceAddress}} is used.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="EtherType" access="readWrite" dmr:version="2.9">
        <description>
          Classification criterion.
          Ether Type Field in a frame.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EtherTypeFlag" access="readWrite" dmr:version="2.9">
        <description>
          If {{false}}, the classification criterion {{param|EtherType}} is ignored.  If {{true}}, the classification {{param|EtherType}} is used.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Vid" access="readWrite" dmr:version="2.9">
        <description>
          Classification criterion.
          IEEE 802.1Q VLAN ID in a frame.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4095"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="VidFlag" access="readWrite" dmr:version="2.9">
        <description>
          If {{false}}, the classification criterion {{param|Vid}} is ignored.  If {{true}}, the classification {{param|Vid}} is used.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PCP" access="readWrite" dmr:version="2.9">
        <description>
          Classification criterion.
          IEEE 802.1Q Priority Code Point field.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PCPFlag" access="readWrite" dmr:version="2.9">
        <description>
          If {{false}}, the classification criterion {{param|PCP}} is ignored.  If {{true}}, the classification {{param|PCP}} is used.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the 1905 Network Topology capabilities of this device.
      </description>
      <parameter name="Enable" access="readWrite" dmr:version="2.9">
        <description>
          Enables or disables the 1905 Network Topology reporting (via TR-069). When {{true}}, the device clears and (re)populates the {{object|IEEE1905Device}} and {{object|ChangeLog}} tables. When {{false}}, the contents of the {{object|IEEE1905Device}} and {{object|ChangeLog}} tables have no meaning.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.9">
        <description>
          When {{param|Enable}} is set to {{true}}, this parameter indicates the transient phase of the discovery of the {{object}}.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Incomplete">
              <description>
                Indicates that the device is populating the topology object during the transient phase.
              </description>
            </enumeration>
            <enumeration value="Available">
              <description>
                Indicates that the transient phase is over and the device is maintaining and updating the topology object as changes occur.
              </description>
            </enumeration>
            <enumeration value="Error_Misconfigured">
              <description>
                NOT RECOMMENDED for use; if used, indicates that a necessary configuration value is undefined or invalid.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxChangeLogEntries" access="readWrite" dmr:version="2.9">
        <description>
          The maximum number of entries allowed in the {{object|ChangeLog}} table.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" dmr:version="2.9">
        <description>
          {{reference}} If the {{object|ChangeLog}} is modified the parameter is modified to reflect the last entry added to the {{object|ChangeLog}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="ChangeLog." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IEEE1905DeviceNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChangeLogNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.ChangeLog.{i}." access="readOnly" numEntriesParameter="ChangeLogNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        This object represents log entries for changes in the 1905 Network Topology. The Change Log is a First In First Out queue where the oldest entries (defined by values of the {{param|TimeStamp}} parameter) are deleted once the log is full.
      </description>
      <parameter name="TimeStamp" access="readOnly" dmr:version="2.9">
        <description>
          Date and Time at which the entry was added to the {{object}} table.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EventType" access="readOnly" dmr:version="2.9">
        <description>
          Type of event for this entry. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="NewNeighbor">
              <description>
                Entry represents a discovery of a Neighbor.
              </description>
            </enumeration>
            <enumeration value="LostNeighbor">
              <description>
                Entry represents the loss of a Neighbor.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReporterDeviceId" access="readOnly" dmr:version="2.9">
        <description>
          1905 AL MAC Address of device which reported the change.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="ReporterInterfaceId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the interface of the reporting device on which the change has been detected.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="NeighborType" access="readOnly" dmr:version="2.9">
        <description>
          Type of Neighbor for this event. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="IEEE1905"/>
            <enumeration value="Non-IEEE1905"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NeighborId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the Neighbor of this event. If the value of the {{param|EventType}} parameter is {{enum|NewNeighbor|EventType}}, then the value of this parameter represents the MAC Address of the new Neighbor that joined the network; if the value of the {{param|EventType}} parameter is {{enum|LostNeighbor|EventType}}, then the value of this parameter represents the MAC Address of the Neighbor that left the network.
          If value of the {{param|NeighborType}} parameter is {{enum|IEEE1905|NeighborType}}, then the value of this parameter is the 1905 AL MAC Address of the Neighbor.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}." access="readOnly" numEntriesParameter="IEEE1905DeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents an instance of discovered 1905 Devices in the network (received Topology discovery message as defined in {{bibref|IEEE1905.1a|Clause 6.3.1}}).
      </description>
      <uniqueKey>
        <parameter ref="IEEE1905Id"/>
      </uniqueKey>
      <parameter name="IEEE1905Id" access="readOnly" dmr:version="2.9">
        <description>
          1905 AL MAC Address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.9">
        <description>
          1905 profile version number in Higher Layer Response message as defined in {{bibref|IEEE1905.1a|Table 6-37: 1905 profile version TLV}}.
        </description>
        <syntax>
          <string>
            <enumeration value="1905.1"/>
            <enumeration value="1905.1a"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RegistrarFreqBand" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} of frequency bands identified as supported for a registrar role in an AP-autoconfiguration response message as defined in {{bibref|IEEE1905.1a|Table 6-25: SupportedFreqBand TLV}} {{enum}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <enumeration value="802.11 2.4 GHz"/>
            <enumeration value="802.11 5 GHz"/>
            <enumeration value="802.11 60 GHz"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FriendlyName" access="readOnly" dmr:version="2.9">
        <description>
          Friendly Name String received in Higher Layer response message as defined in {{bibref|IEEE1905.1a|Table 6-30: Device Identification Type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerName" access="readOnly" dmr:version="2.9">
        <description>
          Manufacturer Name String received in Higher Layer response message as defined in {{bibref|IEEE1905.1a|Table 6-30: Device Identification Type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerModel" access="readOnly" dmr:version="2.9">
        <description>
          Manufacturer Model String received in Higher Layer response message as defined in {{bibref|IEEE1905.1a|Table 6-30: Device Identification Type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ControlURL" access="readOnly" dmr:version="2.9">
        <description>
          Control URL received in Higher Layer response message as defined in defined in {{bibref|IEEE1905.1a|Table 6-31: Control URL Type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorPropertiesNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv4AddressNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InterfaceNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NonIEEE1905NeighborNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IEEE1905NeighborNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="L2NeighborNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgingTupleNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IPv4Address.{i}." access="readOnly" numEntriesParameter="IPv4AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents represents all IPv4 addresses reported for a MAC address (AL or interface) in a Higher Layer response message for the IEEE1905Device as defined in {{bibref|IEEE1905.1a|Table 6-32: IPv4 type TLV}}.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
        <parameter ref="IPv4Address"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="IPv4Address" access="readOnly" dmr:version="2.9">
        <description>
          IPv4 Address.
        </description>
        <syntax>
          <dataType ref="IPv4Address"/>
        </syntax>
      </parameter>
      <parameter name="IPv4AddressType" access="readOnly" dmr:version="2.9">
        <description>
          The IPv4 Address Type of this {{param|IPv4Address}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Unknown"/>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="Auto-IP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DHCPServer" access="readOnly" dmr:version="2.9">
        <description>
          Either IPv4 address of DHCPv4 server or IPv6 address of DHCPv6 server.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IPv6Address.{i}." access="readOnly" numEntriesParameter="IPv6AddressNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents represents all IPv6 addresses reported for a MAC address (AL or interface) in a Higher Layer response message for the IEEE1905Device as defined in {{bibref|IEEE1905.1a|Table 6-34: IPv6 type TLV}}.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
        <parameter ref="IPv6Address"/>
      </uniqueKey>
      <parameter name="MACAddress" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="IPv6Address" access="readOnly" dmr:version="2.9">
        <description>
          IPv6 Address.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressType" access="readOnly" dmr:version="2.9">
        <description>
          The IPv6 Address Type of this {{param|IPv6Address}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Unknown"/>
            <enumeration value="LinkLocal"/>
            <enumeration value="DHCP"/>
            <enumeration value="Static"/>
            <enumeration value="SLAAC"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPv6AddressOrigin" access="readOnly" dmr:version="2.9">
        <description>
          "::" or the IPv6 address of the origin of this IPv6 address.
        </description>
        <syntax>
          <dataType ref="IPv6Address"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.VendorProperties.{i}." access="readOnly" numEntriesParameter="VendorPropertiesNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        This object represents vendor specific information received in a message with a Vendor specific TLV (as defined in in {{bibref|IEEE1905.1a|Table 6-7: Vendor specific TLV}}).
      </description>
      <parameter name="MessageType" access="readOnly" dmr:version="2.9">
        <description>
          The Message type of a message received from this IEEE1905Device that contained a Vendor specific TLV, as defined in {{bibref|IEEE1905.1a|Table 6-4: Message type}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="OUI" access="readOnly" dmr:version="2.9">
        <description>
          This is the value of the Vendor specific OUI defined in {{bibref|IEEE1905.1a|Table 6-7: Vendor specific TLV}}.  {{pattern}}
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Information" access="readOnly" dmr:version="2.9">
        <description>
          A hexbinary string used to provide vendor specific information. This is the value of the Vendor specific information parameter defined in {{bibref|IEEE1905.1a|Table 6-7: Vendor specific TLV}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="0" maxLength="65535"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.Interface.{i}." access="readOnly" numEntriesParameter="InterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents an instance of an interface for the {{object|##.IEEE1905Device}}.
      </description>
      <uniqueKey>
        <parameter ref="InterfaceId"/>
      </uniqueKey>
      <parameter name="InterfaceId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the interface. This comes from the Topology response message as defined in {{bibref|IEEE1905.1a|Table 6-10: 1905 device information type TLV}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MediaType" access="readOnly" dmr:version="2.9">
        <description>
          Media type of this {{object}}. This comes from the Topology response message as defined in {{bibref|IEEE1905.1a|Table 6-10: 1905 device information type TLV}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="IEEE 802.3u">
              <description>
                IEEE 802.3u Fast Ethernet
              </description>
            </enumeration>
            <enumeration value="IEEE 802.3ab">
              <description>
                IEEE 802.3ab Gigabit Ethernet
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11b">
              <description>
                IEEE 802.11b (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11g">
              <description>
                IEEE 802.11g (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11a">
              <description>
                IEEE 802.11a (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11n 2.4">
              <description>
                IEEE 802.11n (2.4GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11n 5.0">
              <description>
                IEEE 802.11n (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11ac">
              <description>
                IEEE 802.11ac (5GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11ad">
              <description>
                IEEE 802.11ad (60GHz)
              </description>
            </enumeration>
            <enumeration value="IEEE 802.11af">
              <description>
                IEEE 802.11af
              </description>
            </enumeration>
            <enumeration value="IEEE 1901 Wavelet">
              <description>
                IEEE 1901 Wavelet
              </description>
            </enumeration>
            <enumeration value="IEEE 1901 FFT">
              <description>
                IEEE 1901 FFT
              </description>
            </enumeration>
            <enumeration value="MoCAv1.1">
              <description>
                MoCAv1.1
              </description>
            </enumeration>
            <enumeration value="Generic PHY"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PowerState" access="readOnly" dmr:version="2.9">
        <description>
          The Power State of this {{object}}. "{{enum|Off}}" is used for interfaces identified in a Power Off Interface TLV as defined in {{bibref|IEEE1905.1a|Table 6-38}}. "{{enum|On}}" is used for all other interfaces. "{{enum|Power_Save}}" and "{{enum|Unsupported}}" are not used at this time. Updated as a result of a received Interface Power Change response with “request completed” or “alternate change made” Interface Power Change status as defined in {{bibref|IEEE1905.1a|Table 6-40: Interface Power Change status TLV}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="On"/>
            <enumeration value="Power_Save"/>
            <enumeration value="Off"/>
            <enumeration value="Unsupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GenericPhyOUI" access="readOnly" dmr:version="2.9">
        <description>
          {{param}} of this {{object|#.Interface}}. {{pattern}}
        </description>
        <syntax>
          <string>
            <size minLength="6" maxLength="6"/>
            <pattern value="[0-9A-F]{6}"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="GenericPhyVariant" access="readOnly" dmr:version="2.9">
        <description>
          Variant Index of the Generic Phy networking technology of this {{object|#.Interface}}. This value is from a Generic Phy response message variant index field as defined in {{bibref|IEEE1905.1a|Table 6-29: Generic Phy device information type TLV}}.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="GenericPhyURL" access="readOnly" dmr:version="2.9">
        <description>
          URL to Generic Phy XML Description of the Generic Phy networking technology of this {{object|#.Interface}}. This value is from a Generic Phy response message URL to generic phy field as defined in {{bibref|IEEE1905.1a|Table 6-29: Generic Phy device information type TLV}}.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NetworkMembership" access="readOnly" dmr:version="2.9">
        <description>
          MACAddress Field from Media specific information for an 802.11 interface provided in a Topology response message 1905 device information type TLV as defined in {{bibref|IEEE1905.1a|Table 6-13: IEEE 802.11 specific information}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Role" access="readOnly" dmr:version="2.9">
        <description>
          Field from Media specific information for an 802.11 interface provided in a Topology response message 1905 device information type TLV as defined in {{bibref|IEEE1905.1a|Table 6-13: IEEE 802.11 specific information}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="AP"/>
            <enumeration value="non-AP/non-PCP STA"/>
            <enumeration value="Wi-Fi P2P Client"/>
            <enumeration value="Wi-Fi P2P Group Owner"/>
            <enumeration value="802.11adPCP"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="APChannelBand" access="readOnly" dmr:version="2.9">
        <description>
          Hexadecimal digit. Field from Media specific information for an 802.11 interface provided in a Topology response message 1905 device information type TLV as defined in {{bibref|IEEE1905.1a|Table 6-13: IEEE 802.11 specific information}}
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="FrequencyIndex1" access="readOnly" dmr:version="2.9">
        <description>
          Field from Media specific information for an 802.11 interface provided in a Topology response message 1905 device information type TLV as defined in {{bibref|IEEE1905.1a|Table 6-13: IEEE 802.11 specific information}}
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="FrequencyIndex2" access="readOnly" dmr:version="2.9">
        <description>
          Field from Media specific information for an 802.11 interface provided in a Topology response message 1905 device information type TLV as defined in {{bibref|IEEE1905.1a|Table 6-13: IEEE 802.11 specific information}}
        </description>
        <syntax>
          <hexBinary>
            <size minLength="1" maxLength="1"/>
          </hexBinary>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}." access="readOnly" numEntriesParameter="NonIEEE1905NeighborNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents an instance of a Non-IEEE1905 Neighbor for the {{object|##.IEEE1905Device}}. These fields come from a Topology response message as defined in {{bibref|IEEE1905.1a|Table 6-14: Non-1905 neighbor device TLV}}.
      </description>
      <uniqueKey>
        <parameter ref="LocalInterface"/>
        <parameter ref="NeighborInterfaceId"/>
      </uniqueKey>
      <parameter name="LocalInterface" access="readOnly" dmr:version="2.9">
        <description>
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.IEEE1905Device.{i}.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NeighborInterfaceId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the interface for the {{object}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.L2Neighbor.{i}." access="readOnly" numEntriesParameter="L2NeighborNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents an instance of an L2 Neighbor for the {{object|##.IEEE1905Device}}. These fields come from a Topology response message as defined in {{bibref|IEEE1905.1a|Table 6-41: L2 neighbor device TLV}}.
      </description>
      <uniqueKey>
        <parameter ref="LocalInterface"/>
        <parameter ref="NeighborInterfaceId"/>
      </uniqueKey>
      <parameter name="LocalInterface" access="readOnly" dmr:version="2.9">
        <description>
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.IEEE1905Device.{i}.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NeighborInterfaceId" access="readOnly" dmr:version="2.9">
        <description>
          MAC Address of the {{object}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="BehindInterfaceIds" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} Behind MAC Addresses of the {{object}}.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}." access="readOnly" numEntriesParameter="IEEE1905NeighborNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9">
      <description>
        This object represents an instance of an {{object}} for the {{object|##.IEEE1905Device}}. These values are from the Topology response message as defined in {{bibref|IEEE1905.1a|Table 6-15: 1905 neighbor device TLV}}.
      </description>
      <uniqueKey>
        <parameter ref="LocalInterface"/>
        <parameter ref="NeighborDeviceId"/>
      </uniqueKey>
      <parameter name="LocalInterface" access="readOnly" dmr:version="2.9">
        <description>
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.IEEE1905Device.{i}.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NeighborDeviceId" access="readOnly" dmr:version="2.9">
        <description>
          1905 AL MAC Address of the Neighbor.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MetricNumberOfEntries" access="readOnly" dmr:version="2.9">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}.Metric.{i}." access="readOnly" numEntriesParameter="MetricNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        This object represents the metrics included in a Link metric response from the IEEE1905Device where {{param|#.LocalInterface}} is the MAC address of an interface in the receiving 1905 AL as defined in {{bibref|IEEE1905.1a|Table 6-17: 1905 transmitter link metric TLV}}.
      </description>
      <uniqueKey>
        <parameter ref="NeighborMACAddress"/>
      </uniqueKey>
      <parameter name="NeighborMACAddress" access="readOnly" dmr:version="2.9">
        <description>
          The MAC address of an interface in a neighbor 1905 device as defined in {{bibref|IEEE1905.1a|Table 6-17: 1905 transmitter link metric TLV or Table 6-19: 1905 receiver link metric TLV}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="IEEE802dot1Bridge" access="readOnly" dmr:version="2.9">
        <description>
          Indicates whether or not the 1905 link includes one or more IEEE 802.1 bridges. If {{false}}, the 1905 link does not include an IEEE 802.1 bridge. If {{true}}, the 1905 link does include one or more IEEE 802.1 bridges.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketErrors" access="readOnly" dmr:version="2.9">
        <description>
          Estimated number of lost {{units}} on the transmit side of the link {{bibref|IEEE1905.1a|Table 6-18: 1905 transmitter link metrics}} during a measurement period.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketErrorsReceived" access="readOnly" dmr:version="2.9">
        <description>
          Estimated number of lost {{units}} on the receive side of the link {{bibref|IEEE1905.1a|Table 6-20: 1905 receiver link metrics}} during a measurement period.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="TransmittedPackets" access="readOnly" dmr:version="2.9">
        <description>
          Estimated number of {{units}} sent to the Neighbor on this link, in the same measurement period used to estimate {{param|PacketErrors}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" dmr:version="2.9">
        <description>
          Estimated number of {{units}} received from this Neighbor {{bibref|IEEE1905.1a|Table 6-20: 1905 receiver link metrics}} on this link, in the same measurement period used to estimate {{param|PacketErrors}}.
        </description>
        <syntax>
          <dataType ref="StatsCounter32">
            <units value="Packets"/>
          </dataType>
        </syntax>
      </parameter>
      <parameter name="MACThroughputCapacity" access="readOnly" dmr:version="2.9">
        <description>
          The maximum MAC throughput in {{units}} between this Interface and the Neighbor on this link that is estimated at this Interface.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mb/s"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LinkAvailability" access="readOnly" dmr:version="2.9">
        <description>
          The estimated average {{units}} of time that this link is idle.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
            <units value="percent"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PHYRate" access="readOnly" dmr:version="2.9">
        <description>
          The Physical Layer (PHY) rate in {{units}} between this Interface and the Neighbor on this link that is estimated at this Interface.
        </description>
        <syntax>
          <unsignedInt>
            <units value="Mb/s"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RSSI" access="readOnly" dmr:version="2.9">
        <description>
          The estimated Received Signal Strength Indicator (RSSI) ratio in {{units}} between this Interface and the Neighbor on this link that is estimated at the receive side of this Interface.  Note: This parameter is valid only for IEEE 802.11 Neighbors.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
            <units value="dB"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.BridgingTuple.{i}." access="readOnly" numEntriesParameter="BridgingTupleNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.9" dmr:noUniqueKeys="true">
      <description>
        This object represents an instance of an {{object}} for the {{object|##.IEEE1905Device}}. These values come from the 1905 Device’s Topology response message as defined in {{bibref|IEEE1905.1a|Table 6-11: Device bridging capability TLV}}.
      </description>
      <parameter name="InterfaceList" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} {{reference}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="##.IEEE1905Device.{i}.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.Security." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the Security configuration for the 1905 device as defined in {{bibref|IEEE1905.1a|Section 9.2 Security Setup Methods}}.
      </description>
      <parameter name="SetupMethod" access="readWrite" dmr:version="2.9">
        <description>
          {{list}} Supported security setup method(s) for the network. {{enum}}
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <enumeration value="UCPK">
              <description>
                User Configured Passphrase or Key
              </description>
            </enumeration>
            <enumeration value="PBC">
              <description>
                Push Button Configuration
              </description>
            </enumeration>
            <enumeration value="NFCNK">
              <description>
                Near-field Communication Network Key
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.9">
        <description>
          1905 network passphrase for generating security keys.
        </description>
        <syntax hidden="true">
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.IEEE1905.AL.NetworkingRegistrar." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.9">
      <description>
        This object represents the detected Network Registrars detection function for the IEEE 1905 network. They are determined by received AP-autoconfiguration response messages with Registrar role, with supported band as defined in {{bibref|IEEE1905.1a|Table 6-25: SupportedFreqBand TLV}}
      </description>
      <parameter name="Registrar2dot4" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} 1905 AL MAC addresses as determined by source MAC address in received AP-autoconfiguration response messages with supported frequency band of 802.11 2.4 GHz.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Registrar5" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} 1905 AL MAC addresses as determined by source MAC address in received AP-autoconfiguration response messages with supported frequency band of 802.11 5 GHz.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Registrar60" access="readOnly" dmr:version="2.9">
        <description>
          {{list}} 1905 AL MAC addresses as determined by source MAC address in received AP-autoconfiguration response messages with supported frequency band of 802.11 60 GHz.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        MQTT Base object describing all MQTT related parameters and objects {{bibref|MQTT31}},
      </description>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BrokerNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Capabilities." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        Indicates the MQTT capabilities of the device.
      </description>
      <parameter name="ProtocolVersionsSupported" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the supported protocol versions. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="3.1">
              <description>
                Protocol according to {{bibref|MQTT31}}
              </description>
            </enumeration>
            <enumeration value="3.1.1">
              <description>
                Protocol according to {{bibref|MQTT311}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="TransportProtocolSupported" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the supported transport protocols. {{enum}}
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="TCP/IP"/>
            <enumeration value="TLS"/>
            <enumeration value="WebSocket"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MaxNumberOfClientSubscriptions" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the maximum number of subscriptions per MQTT client, which can be stored in the {{object|#.Client.{i}.Subscription}} table. A value of 0 means no limit.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxNumberOfBrokerBridges" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the maximum number of bridges, which can be configured in the {{object|#.Broker.{i}.Bridge}} table. A value of 0 means no limit.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxNumberOfBrokerBridgeSubscriptions" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the maximum number of subscriptions, which can be stored per bridge instance in the {{object|#.Broker.{i}.Bridge.{i}.Subscription}} table. A value of 0 means no limit.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Client.{i}." access="readWrite" numEntriesParameter="ClientNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        MQTT client table. Contains a list of configured MQTT clients.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          The textual name of the MQTT client.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Allows to enable or disable the MQTT client.
          If a MQTT client gets enabled then the MQTT client has first to establish a MQTT broker session and then subscribe for all enabled topics in the {{object|Subscription.}} table. In case the {{param|CleanSession}} is set to {{false}} a subscription MUST only be sent for topics which haven't been subscribed before (see {{bibref|MQTT311|3.1.2.4}}).
          If a connected MQTT client gets disabled ({{param|Status}} is either {{enum|Connecting|Status}} or {{enum|Connected|Status}}) then the MQTT client has to send a MQTT DISCONNECT message to disconnect from the MQTT broker ({{bibref|MQTT31|3.14}} or {{bibref|MQTT311|3.14}}), before setting the {{param|Status}} to {{enum|Disabled|Status}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the status of this MQTT client. {{enum}}
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid (e.g. The MQTT client can not use the defined port, because it is blocked)
          The {{enum|Error_BrokerUnreachable}} value indicates that the connection to the MQTT broker could not be established.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Connecting"/>
            <enumeration value="Connected"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error_BrokerUnreachable"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readWrite" dmr:version="2.10">
        <description>
          The MQTT client identifier used in the CONNECT message (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.3.1}}). This parameter MUST NOT be {{empty}}, the CPE has to provide a default value for the parameter, which can be changed by the ACS.
          A change of this parameter is only communicated to the MQTT broker with the next MQTT CONNECT message. If the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <string>
            <size minLength="1" maxLength="23"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.10">
        <description>
          Username used to authenticate the CPE when making a connection to the MQTT broker. {{bibref|MQTT31|3.1}} recommends that the username has 12 characters or fewer, but this is not required.
          If this parameter is {{empty}} no authentication parameters are sent in the MQTT CONNECT message.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.10">
        <description>
          Password used to authenticate the CPE when making a connection to the MQTT broker (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.3.4}}).
          This password is only sent in the MQTT CONNECT message if {{param|Username}} is not {{empty}}.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TransportProtocol" access="readWrite" dmr:version="2.10">
        <description>
          Indicates the transport protocol to be used for the MQTT broker connection.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="#.Capabilities.TransportProtocolSupported"/>
          </string>
          <default type="object" value="TCP/IP"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.10">
        <description>
          Specifies the MQTT protocol version used in the communication with the MQTT broker.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="#.Capabilities.ProtocolVersionsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CleanSession" access="readWrite" dmr:version="2.10">
        <description>
          The value of the MQTT clean session flag in the MQTT CONNECT message (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.4}}). If this flag is set to {{true}} (default), the MQTT broker will delete all subscription information after a Disconnect.
          A change of this parameter is only effective after the next MQTT CONNECT message to the MQTT broker. If the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="MessageRetryTime" access="readWrite" dmr:version="2.10">
        <description>
          Message retry time in {{units}} defines the wait time before a MQTT message that expects a response (QoS value of message is &gt; 0, or PUBLISH, PUBREL, SUBSCRIBE, UNSUBSCRIBE message) is resent, because the response is not received (see {{bibref|MQTT31|4.2}} and {{bibref|MQTT311|4.4}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="5"/>
        </syntax>
      </parameter>
      <parameter name="ConnectRetryTime" access="readWrite" dmr:version="2.10">
        <description>
          Connect retry time in {{units}} defines the wait time before a failed MQTT broker connection is retried.
          A failure can either be on the connection level (the TCP/IP or TLS can not be established) or on the Protocol level, the MQTT client does not receive a MQTT CONNACK message on a MQTT CONNECT message sent.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="30"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveTime" access="readWrite" dmr:version="2.10">
        <description>
          Keep Alive Time in {{units}} defines the maximum wait time after which a message has to be sent to the MQTT broker (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.10}}). If no regular messages can be sent a MQTT PINGREQ is sent.
          A value of zero (0) means no keep alive message are sent and the MQTT client is not disconnected by the server.
          A change of this parameter is only effective after the next MQTT CONNECT message to the MQTT broker. If the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="60"/>
        </syntax>
      </parameter>
      <parameter name="ForceReconnect" access="readWrite" dmr:version="2.10">
        <description>
          Disconnects the MQTT client from the MQTT broker and reconnects it again (toggle connection). It is only effective if the MQTT client is currently connected to the MQTT broker (Parameter {{param|Status|}} is {{enum|Connected|Status}}).
          If the MQTT client is in a different state, the parameter has no effect.
          This action parameter may be used to immediately apply changes in the MQTT connection settings.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="BrokerAddress" access="readWrite" dmr:version="2.10">
        <description>
          Host name or IP address of the MQTT Broker.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BrokerPort" access="readWrite" dmr:version="2.10">
        <description>
          Port number of the MQTT broker.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1883"/>
        </syntax>
      </parameter>
      <parameter name="WillEnable" access="readWrite" dmr:version="2.10">
        <description>
          Enables or disables the will handling (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.5}}).. Changing this parameter while the MQTT client is connected will cause the client to disconnect and reconnect.
          If the connection gets enabled and this parameter is set to {{true}} and either the parameter {{param|WillTopic}} or {{param|WillValue}} are {{empty}}, the CPE MUST set the {{param|Status}} to {{enum|Error_Misconfigured|Status}} (see {{bibref|MQTT311|3.1.2.5}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WillTopic" access="readWrite" dmr:version="2.10">
        <description>
          The Topic sent in the Will Message (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.5}}). This parameter is only used if {{param|WillEnable}} is set to {{true}}.
          A change of this parameter is only communicated to the MQTT broker with the next MQTT CONNECT message.
          If the will handling is enabled (Paramter {{param|WillEnable}} is set to {{true}}) and the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="WillValue" access="readWrite" dmr:version="2.10">
        <description>
          The value sent in the Will Message (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.5}}). This parameter is only used if {{param|WillEnable}} is set to {{true}}.
          A change of this parameter is only communicated to the MQTT broker with the next MQTT CONNECT message.
          If the will handling is enabled (Paramter {{param|WillEnable}} is set to {{true}}) and the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="WillQoS" access="readWrite" dmr:version="2.10">
        <description>
          The MQTT QoS level assigned with the will message (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.6}}). This parameter is only used if {{param|WillEnable}} is set to {{true}}.
          A change of this parameter is only communicated to the MQTT broker with the next MQTT CONNECT message.
          If the will handling is enabled (Paramter {{param|WillEnable}} is set to {{true}}) and the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="2"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="WillRetain" access="readWrite" dmr:version="2.10">
        <description>
          Indicate to the MQTT broker to retain the Will over a Disconnect (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.7}}). This parameter is only used if {{param|WillEnable}} is set to {{true}}.
          A change of this parameter is only communicated to the MQTT broker with the next MQTT CONNECT message.
          If the will handling is enabled (Paramter {{param|WillEnable}} is set to {{true}}) and the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SubscriptionNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Client.{i}.Subscription.{i}." access="readWrite" numEntriesParameter="SubscriptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        List of MQTT subscriptions handled by the MQTT client.
        The MQTT client MUST subscribe with the MQTT broker for all subscription instances, whose parameter {{param|Enable}} is set to {{true}}, when it establishes a new connection to the MQTT broker. Disabled subscription instances with {{param|Enable}} set to {{false}} will be ignored during connection establishment.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Topic"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Setting Enable to {{true}} means the topic is subscribed at the MQTT broker with a MQTT SUBSCRIBE message, setting it to {{false}} will unsubscribe the topic from the MQTT broker with a MQTT UNSUBSCRIBE message. If the MQTT client is already connected with the Broker ({{param|#.Status}} is {{enum|Connected|#.Status}}), the MQTT SUBSCRIBE or UNSUBSCRIBE message is sent directly, otherwise it is sent after the next successful connect.
          The actual status of the subscription is indicated with {{param|Status}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the status of this subscription. {{enum}}
          The {{enum|Subscribed}} value indicates that the topic was successfully subscribed with the MQTT broker, the MQTT client received the SUBACK message for this topic from the server.
          The {{enum|Subscribing}} value MAY be used by the CPE to indicate that the a SUBSCRIBE message for this topic was sent, and the CPE is waiting for a SUBACK message.
          The {{enum|Unsubscribed}} value indicates that the topic is not reqistered with the MQTT broker.
          The {{enum|Unsubscribing}} value MAY be used by the CPE to indicate that the an UNSUBSCRIBE message for this topic was sent, and the CPE is waiting for an UNSUBACK message.
          If the {{param|Enable}} is set to {{false}} the status MUST be either {{enum|Unsubscribed}} or if the unsubscription failed {{enum|Error}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Unsubscribed"/>
            <enumeration value="Subscribed"/>
            <enumeration value="Subscribing" optional="true"/>
            <enumeration value="Unsubscribing" optional="true"/>
            <enumeration value="Error"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Topic" access="readWrite" dmr:version="2.10">
        <description>
          Name of the subscribed topic. Topic names may contain wildcards according to the rules specified in {{bibref|MQTT31|Appendix A}} and {{bibref|MQTT311|4.7}}.
        </description>
        <syntax>
          <string>
            <size maxLength="65535"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="QoS" access="readWrite" dmr:version="2.10">
        <description>
          The MQTT QoS level assigned with the subscription (see {{bibref|MQTT31|4.1}} and {{bibref|MQTT311|4.3}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="2"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Client.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        Contains the MQTT client statistics and usage information.
        The CPE MUST reset the Stats parameters after the MQTT client gets (re-)enabled or if the MQTT client connects with a new MQTT broker (e.g. {{param|#.BrokerAddress}} has changed). The CPE MAY retain the values across a reboot if it reconnects with the same MQTT broker.
      </description>
      <parameter name="BrokerConnectionEstablished" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Time when the MQTT broker connection was established.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastPublishMessageSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Time when the last publish message was sent to the MQTT broker.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastPublishMessageReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Time when the last publish message was received from the MQTT broker.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="PublishSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of publish messages sent to the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PublishReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of publish messages received from to the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="SubscribeSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of subscribe messages sent to the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="UnSubscribeSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of unsubscribe messages sent to the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MQTTMessagesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Total number of MQTT messages sent to the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MQTTMessagesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Total number of MQTT messages received from the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of connection errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="PublishErrors" access="readOnly" dmr:version="2.10">
        <description>
          Number of errors which prevented sending publish messages.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Broker.{i}." access="readWrite" numEntriesParameter="BrokerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        MQTT broker table. Contains a list of configured MQTT brokers.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          The textual name of the MQTT broker.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Allows to enable or disable the MQTT broker.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the status of the MQTT broker.  {{enum}}
          The "{{enum|Error_Misconfigured}}" value indicates that a necessary configuration value is undefined or invalid.
          The "{{enum|Error}}" value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Enabled"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.10">
        <description>
          Port used by the MQTT Broker.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1883"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.10">
        <description>
          If {{empty}} is specified, the CPE MUST bind the MQTT broker to all available interfaces.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent=".IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.10">
        <description>
          Username used to authenticate the MQTT clients, which connect to the MQTT broker.
          If this parameter is {{empty}} no authentication is used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.10">
        <description>
          Password used used to authenticate the MQTT clients, which connect to the MQTT broker.
          This password is only used if {{param|Username}} is not {{empty}}.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BridgeNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Broker.{i}.Bridge.{i}." access="readWrite" numEntriesParameter="BridgeNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        Configures MQTT bridges, which are used to communicate with other MQTT brokers.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          The textual name of the MQTT bridge used for identification.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Allows to enable or disable the MQTT Bridge.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the status of this MQTT Bridge. {{enum}}
          The {{enum|Disabled}} value indicates that the MQTT bridge is not in service; parameter {{param|Enable}} is set to {{false}}.
          The {{enum|Connecting}} value indicates that the MQTT bridge is currently established.
          The {{enum|Connected}} value indicates that the MQTT bridge is currently active.
          The {{enum|Error_Misconfigured}} value indicates that a necessary configuration value is undefined or invalid (e.g. No active Server entry, the MQTT broker can not use the defined bridge port, because it is blocked)
          The {{enum|Error_BrokerUnreachable}} value indicates that the MQTT bridge connection to the remote MQTT broker could not be established.
          The {{enum|Error}} value MAY be used to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled"/>
            <enumeration value="Connecting"/>
            <enumeration value="Connected"/>
            <enumeration value="Enabled" status="deleted"/>
            <enumeration value="Error_Misconfigured"/>
            <enumeration value="Error_BrokerUnreachable"/>
            <enumeration value="Error" optional="true"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readWrite" dmr:version="2.10">
        <description>
          The MQTT client identifier used in the CONNECT message (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.3.1}}). This parameter MUST NOT be {{empty}}, the CPE has to provide a default value for the parameter, which may be changed by the ACS.
          A change of this parameter is only communicated to the remote MQTT broker with the next MQTT CONNECT message. If the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <string>
            <size minLength="1" maxLength="23"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.10">
        <description>
          Username used to authenticate the MQTT broker when making a connection over the MQTT bridge (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.3.4}}). {{bibref|MQTT31|3.1}} recommends that the username has 12 characters or fewer, but this is not required.
          If this parameter is {{empty}} no authentication parameters are sent in the MQTT CONNECT message.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.10">
        <description>
          Password used to authenticate the MQTT broker when making a connection over the MQTT bridge (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.3.4}}).
          The password is only sent if {{param|Username}} is not {{empty}}.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TransportProtocol" access="readWrite" dmr:version="2.10">
        <description>
          Indicates the transport protocol to be used for the MQTT bridge connection.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="##.Capabilities.TransportProtocolSupported"/>
          </string>
          <default type="object" value="TCP/IP"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolVersion" access="readWrite" dmr:version="2.10">
        <description>
          Specifies the MQTT protocol version used in the MQTT bridge connection.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="##.Capabilities.ProtocolVersionsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CleanSession" access="readWrite" dmr:version="2.10">
        <description>
          The value of the MQTT clean session flag in the MQTT bridge connection (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.4}}). If this flag is set to {{true}} (default), the remote MQTT broker will delete all subscription information after a Disconnect.
          A change of this parameter is only effective after the next MQTT CONNECT message to the remote MQTT broker. If the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="MessageRetryTime" access="readWrite" dmr:version="2.10">
        <description>
          Message retry time in {{units}} defines the wait time before a MQTT message that expects a response (QoS value of message is &gt; 0, or PUBLISH, PUBREL, SUBSCRIBE, UNSUBSCRIBE message) is resent, because the response is not received (see {{bibref|MQTT31|4.2}} and {{bibref|MQTT311|4.4}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="5"/>
        </syntax>
      </parameter>
      <parameter name="ConnectRetryTime" access="readWrite" dmr:version="2.10">
        <description>
          Connect retry time in {{units}} defines the wait time before a failed bridge connection is retried.
          A failure can either be on the connection level (e.g. the TCP/IP or TLS conection can not be established) or on the Protocol level, the MQTT client does not receive a MQTT CONNACK message on a MQTT CONNECT message sent.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="30"/>
        </syntax>
      </parameter>
      <parameter name="KeepAliveTime" access="readWrite" dmr:version="2.10">
        <description>
          Keep Alive Time in {{units}} defines the maximum wait time after which a message has to be sent to the remote MQTT broker (see {{bibref|MQTT31|3.1}} and {{bibref|MQTT311|3.1.2.10}}). If no regular messages can be sent a MQTT PINGREQ is sent.
          A value of zero (0) means no keep alive message are sent and the bridge is not disconnected by the server.
          A change of this parameter is only effective after the next MQTT CONNECT message to the remote MQTT broker. If the change needs to be applied immediately, the parameter {{param|ForceReconnect}} has to be set as well.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="60"/>
        </syntax>
      </parameter>
      <parameter name="ForceReconnect" access="readWrite" dmr:version="2.10">
        <description>
          Disconnects the MQTT bridge to the remote MQTT broker and reconnects it again (toggle connection). It is only effective if the MQTT bridge is currently connected to the remote MQTT broker (Parameter {{param|Status|}} is {{enum|Connected|Status}}).
          If the MQTT bridge is in a different state, the parameter has no effect.
          This action parameter may be used to immediately apply changes in the MQTT connection settings.
        </description>
        <syntax command="true">
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ServerSelectionAlgorithm" access="readWrite" dmr:version="2.10">
        <description>
          The algorithm used to select a server entry from the {{object|Server}} table
        </description>
        <syntax>
          <string>
            <enumeration value="Priority">
              <description>
                Select the server from the {{object|Server.}} table according to the sequence defined with the {{param|Server.{i}.Priority}} and {{param|Server.{i}.Weight}} values.
              </description>
            </enumeration>
            <enumeration value="RoundRobin">
              <description>
                Select the servers round robin.
              </description>
            </enumeration>
            <enumeration value="Random">
              <description>
                Select the servers randomly.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerConnection" access="readOnly" dmr:version="2.10">
        <description>
          {{reference|the {{object|Server.}} instance that is used for this {{object}}, while the {{param|Status}} is {{enum|Connecting|Status}} or {{enum|Connected|Status}}. If the MQTT bridge is not connected the value MUST be an empty string}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Bridge.{i}.Server." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SubscriptionNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Broker.{i}.Bridge.{i}.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10">
      <description>
        Each {{object}} instance represents a MQTT bridge server to be used for a {{object|##.Bridge}}. A remote MQTT broker, which is connected by a MQTT bridge can be reachable via several host addresses each represented by its own {{object}} table entry. For an active MQTT bridge at least one enabled entry has to exist.
        If a MQTT bridge gets enabled by setting the parameter {{param|##.Bridge.{i}.Enable}} to {{true}}, which either has an empty {{object}} table or the {{object}} table only contains instances whose {{param|Enable}} is set to {{false}}, the {{param|##.Bridge.{i}.Status}} has to be set to {{enum|Error_Misconfigured|##.Bridge.{i}.Status}}.
        Any attempt to delete an instance, which is currently in use ({{param|##.Bridge.{i}.ServerConnection}} refers to the instance to be deleted), has to be rejected.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Address"/>
        <parameter ref="Port"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Enables or disables this {{object}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Priority" access="readWrite" dmr:version="2.10">
        <description>
          The priority of this {{object}} that is used by the {{object|##.Bridge}} when determining the {{object}} to connect to. The {{object|##.Bridge}} MUST contact the {{object}} with the lowest-numbered priority that the {{object|##.Bridge}} can reach as defined in {{bibref|RFC2782}}. The selection of {{object}}s with the same {{param}} value utilizes the {{param|Weight}} parameter to determine which {{object}} is selected by the {{object|##.Bridge}}.
          This value is only used if {{param|##.Bridge.{i}.ServerSelectionAlgorithm}} is set to {{enum|Priority|##.Bridge.{i}.ServerSelectionAlgorithm}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Weight" access="readWrite" dmr:version="2.10">
        <description>
          This parameter specifies a relative weight for entries with the same {{param|Priority}}. The mechanism is defined in {{bibref|RFC2782}}. A value of -1 indicates that the implementation of this parameter is specific to the Vendor.
          This value is only used if {{param|##.Bridge.{i}.ServerSelectionAlgorithm}} is set to {{enum|Priority|##.Bridge.{i}.ServerSelectionAlgorithm}}.
        </description>
        <syntax>
          <long>
            <range minInclusive="-1" maxInclusive="65535"/>
          </long>
        </syntax>
      </parameter>
      <parameter name="Address" access="readWrite" dmr:version="2.10">
        <description>
          Fully Qualified Domain Name (FQDN) or IP address of the MQTT broker server this {{object|##.Bridge}} connects to.
          If the value of this parameter is a FQDN that resolves to multiple addresses then each address SHOULD be attempted (in an implementation-specific order) until a connection can be made or all addresses are exhausted, in which case the next {{object}} instance (based on rules defined over the selected {{param|##.Bridge.{i}.ServerSelectionAlgorithm}}) SHOULD be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite" dmr:version="2.10">
        <description>
          Port number of the MQTT broker server this {{object|##.Bridge}} connects to.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
          <default type="object" value="1883"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Broker.{i}.Bridge.{i}.Subscription.{i}." access="readWrite" numEntriesParameter="SubscriptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10">
      <description>
        List of MQTT subscriptions handled over the bridge.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Topic"/>
        <parameter ref="Direction"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Setting Enable to {{true}} activates the handling of this subscription instance. In case of incoming directions ({{param|Direction}} is either {{enum|in|Direction}} or {{enum|both|Direction}}) the topic is subscribed over the bridge at the remote MQTT broker with a MQTT SUBSCRIBE message if {{param}} is set to {{true}} or unsubscribed from the remote MQTT broker with a MQTT UNSUBSCRIBE message if the value is set to {{false}}.
          The actual status of the subscription is indicated with {{param|Status}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the status of this subscription. {{enum}}
          The {{enum|Enabled}} value indicates that the this subscription is active. In case of incoming directions ({{param|Direction}} is either {{enum|in|Direction}} or {{enum|both|Direction}}) the topic was successfully subscribed with the remote MQTT broker.
          The {{enum|Disabled}} value indicates that this subscription is not used.
          The {{enum|Error}} value indicates that an error occured (e.g. an subscription could not be made with the remote MQTT broker) and the subscription is not in use.
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled"/>
            <enumeration value="Disabled"/>
            <enumeration value="Error"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Topic" access="readWrite" dmr:version="2.10">
        <description>
          Name of the subscribed topic. Topic names may contain wildcards according to the rules specified in {{bibref|MQTT31|Appendix A}} and {{bibref|MQTT311|4.7}}.
        </description>
        <syntax>
          <string>
            <size maxLength="65535"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Direction" access="readWrite" dmr:version="2.10">
        <description>
          The direction of the subscription. {{enum}}.
        </description>
        <syntax>
          <string>
            <enumeration value="out">
              <description>
                Indicates that all matching topics will be sent over the bridge to the next MQTT broker.
              </description>
            </enumeration>
            <enumeration value="in">
              <description>
                Indicates that all matching topics will be received over the bridge from the next MQTT broker.
              </description>
            </enumeration>
            <enumeration value="both">
              <description>
                Indicates that all matching topics will be sent and received over the bridge.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="QoS" access="readWrite" dmr:version="2.10">
        <description>
          The MQTT QoS level assigned with the subscription (see {{bibref|MQTT31|4.1}} and {{bibref|MQTT311|4.3}}).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="2"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LocalPrefix" access="readWrite" dmr:version="2.10">
        <description>
          The local prefix is used for remapping received topics to the local topics of the MQTT broker and to select the topics to be sent over bridge to the remote MQTT broker.
          * In incoming direction ({{param|Direction}} is either {{enum|in|Direction}} or {{enum|both|Direction}}):
          : For remote topics received over the bridge the MQTT broker adds the LocalPrefix in front of the received topic, before processing it.
          :: '' ''
          : ''Example:''
          :: Topic is "/bus/+", LocalPrefix is "/local", Direction is "in"
          :: MQTT broker receives message with topic "/bus/tr181" over bridge =&gt; MQTT broker uses topic "/local/bus/tr181" for internal processing
          * In outgoing direction ({{param|Direction}} is either {{enum|out|Direction}} or {{enum|both|Direction}}):
          : For selection of the topics to be sent over the bridge the MQTT broker uses the combination of {{param}} and {{param|Topic}} to match the topics to be sent over bridge, and removes the {{param}} from the selected topic before sending it over the bridge.
          :: '' ''
          : ''Example:''
          :: Topic is "/bus/+", LocalPrefix is "/local", Direction is "out"
          :: MQTT broker receives message with topic "/local/bus/tr181" from a MQTT client =&gt; MQTT broker sends topic "/bus/tr181" to remote MQTT broker
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="RemotePrefix" access="readWrite" dmr:version="2.10">
        <description>
          The remote prefix is used for remapping topics to the remote MQTT broker topic lists.
          * In incoming direction ({{param|Direction}} is either {{enum|in|Direction}} or {{enum|both|Direction}}):
          : For remote topics received over the bridge the MQTT broker removes the remote prefix topic from the received topic (before handling the {{param|LocalPrefix}}), before processing it.
          :: '' ''
          : ''Example:''
          :: Topic is "/bus/+", LocalPrefix is "/local", RemotePrefix is "/remote", Direction is "in"
          :: MQTT broker receives message with topic "/remote/bus/tr181" over bridge =&gt; MQTT broker uses topic "/local/bus/tr181" for internal processing
          : During activation of the bridge, the MQTT broker prepends the {{param|Topic}} with {{param}} topic and subscribes to the remote MQTT broker with it, in order to receive all applicable remote topics.
          :: '' ''
          : ''Example:''
          :: Topic is "/bus/+", RemotePrefix is "/remote", Direction is "in"
          :: MQTT broker sends a subscription to the remote MQTT broker with the topic "/remote/bus/+".
          * In outgoing direction ({{param|Direction}} is either {{enum|out|Direction}} or {{enum|both|Direction}}):
          : For all topics to be sent over the bridge ({{param|Direction}} is either {{enum|out|Direction}} or {{enum|both|Direction}}), the RemotePrefix will be prepended to the topic after the {{param|LocalPrefix}} has been processed and before sending the message over the bridge.
          :: '' ''
          : ''Example:''
          :: Topic is "/bus/+", LocalPrefix is "/local", RemotePrefix is "/remote" Direction is "out"
          :: MQTT broker receives message with topic "/local/bus/tr181" from a MQTT client =&gt; MQTT broker sends topic "/remote/bus/tr181" to remote MQTT broker
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.MQTT.Broker.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10" dmr:fixedObject="true">
      <description>
        The MQTT broker statistics values. These will reset with each MQTT broker start, either after reboot or if the MQTT broker gets (re-)enabled.
      </description>
      <parameter name="TotalNumberOfClients" access="readOnly" dmr:version="2.10">
        <description>
          Total number of MQTT clients registered with the MQTT broker.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NumberOfActiveClients" access="readOnly" dmr:version="2.10">
        <description>
          Number of MQTT clients, which have a connection with the MQTT broker established.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NumberOfInactiveClients" access="readOnly" dmr:version="2.10">
        <description>
          Number of MQTT clients, which have no connection with the MQTT broker established.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Subscriptions" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of subscriptions held by the MQTT broker.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PublishSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of publish messages sent by the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="PublishReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of publish messages received by the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MQTTMessagesSent" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Total number of MQTT messages sent by the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="MQTTMessagesReceived" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Total number of MQTT messages received by the MQTT broker.
        </description>
        <syntax>
          <dataType ref="StatsCounter64"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionErrors" access="readOnly" activeNotify="canDeny" dmr:version="2.10">
        <description>
          Number of connection errors.
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
      <parameter name="PublishErrors" access="readOnly" dmr:version="2.10">
        <description>
          Number of errors which prevented sending publish messages
        </description>
        <syntax>
          <dataType ref="StatsCounter32"/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DynamicDNS." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.10">
      <description>
        Properties for Dynamic DNS.
      </description>
      <parameter name="ClientNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ServerNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SupportedServices" access="readOnly" dmr:version="2.10">
        <description>
          List of Dynamic DNS service names that are supported by the CPE.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DynamicDNS.Client.{i}." access="readWrite" numEntriesParameter="ClientNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10">
      <description>
        Client properties for Dynamic DNS.
        A dynamic DNS client is responsible for verifying IP address changes and updating information from a subscribed account on a Dynamic DNS Server.
        For enabled table entries, if {{param|Server}} is not a valid reference then the table entry is inoperable and the CPE MUST set the {{param|Status}} to {{enum|Error_Misconfigured|Status}}.
      </description>
      <uniqueKey>
        <parameter ref="Server"/>
        <parameter ref="Username"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Enables or disables this Dynamic DNS Client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Status of this Dynamic DNS Client.
        </description>
        <syntax>
          <string>
            <enumeration value="Connecting">
              <description>
                The Dynamic DNS Client is trying to connect to the Server.
              </description>
            </enumeration>
            <enumeration value="Authenticating">
              <description>
                The Dynamic DNS Client is in the authentication phase.
              </description>
            </enumeration>
            <enumeration value="Updated">
              <description>
                The Dynamic DNS Client has performed an update request since the last IP address change.
              </description>
            </enumeration>
            <enumeration value="Error_Misconfigured">
              <description>
                Error due to configuration.
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                An error has occurred during the communication with the Server. The {{param|LastError}} parameter is updated with the detail of this error.
              </description>
            </enumeration>
            <enumeration value="Disabled">
              <description>
                The Client is disabled.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="LastError" access="readOnly" dmr:version="2.10">
        <description>
          The last error this Dynamic DNS Client has encountered.
          The parameter MAY instead indicate a vendor-specific cause, which MUST use the format defined in {{bibref|TR-106}}.
        </description>
        <syntax>
          <string>
            <enumeration value="NO_ERROR"/>
            <enumeration value="MISCONFIGURATION_ERROR"/>
            <enumeration value="DNS_ERROR"/>
            <enumeration value="CONNECTION_ERROR"/>
            <enumeration value="AUTHENTICATION_ERROR"/>
            <enumeration value="TIMEOUT_ERROR"/>
            <enumeration value="PROTOCOL_ERROR"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Server" access="readWrite" dmr:version="2.10">
        <description>
          The DynamicDNS server associated with this Dynamic DNS Client.
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="Device.DynamicDNS.Server." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.10">
        <description>
          The IP interface over which update queries to the server are sent.
          {{reference}}
          If an empty string is specified, the CPE MUST use its routing policy (Forwarding table entries), to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="strong" targetParent="Device.IP.Interface." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" dmr:version="2.10">
        <description>
          Username used by this Dynamic DNS Client to authenticate with the Server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" dmr:version="2.10">
        <description>
          Password used by this Dynamic DNS Client to authenticate with the Server.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostnameNumberOfEntries" access="readOnly" dmr:version="2.10">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DynamicDNS.Client.{i}.Hostname.{i}." access="readWrite" numEntriesParameter="HostnameNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10">
      <description>
        Each table entry represents a fully qualified domain name updated by this Dynamic DNS Client.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Enables or disables this Hostname.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.10">
        <description>
          Status of this Hostname.
        </description>
        <syntax>
          <string>
            <enumeration value="Registered">
              <description>
                The Hostname has been updated with the current IP address.
              </description>
            </enumeration>
            <enumeration value="UpdateNeeded">
              <description>
                The IP address has changed since last update.
              </description>
            </enumeration>
            <enumeration value="Updating">
              <description>
                The Client is trying to update this Hostname.
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                The Hostname doesn't exist for this Dynamic DNS account.
              </description>
            </enumeration>
            <enumeration value="Disabled">
              <description>
                The Hostname is disabled.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          Fully qualified domain name that has to be updated with the IP address.
          If the name is set to another value, the Client MUST immediately send an update request to the Server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastUpdate" access="readOnly" dmr:version="2.10">
        <description>
          The date time of the last successful update of this name to the Dynamic DNS Server.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.DynamicDNS.Server.{i}." access="readWrite" numEntriesParameter="ServerNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.10">
      <description>
        Table of Dynamic DNS servers available for this CPE.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.10">
        <description>
          Enables or disables Dynamic DNS Server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.10">
        <description>
          The textual name of the Dynamic DNS Server.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.10">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="ServiceName" access="readWrite" dmr:version="2.10">
        <description>
          Dynamic DNS service used to contact this server.
          {{reference}}
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <enumerationRef targetParam="Device.DynamicDNS.SupportedServices"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerAddress" access="readWrite" dmr:version="2.10">
        <description>
          Host name or IP address of the Dynamic DNS server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ServerPort" access="readWrite" dmr:version="2.10">
        <description>
          Port number of the Dynamic DNS server.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SupportedProtocols" access="readOnly" dmr:version="2.10">
        <description>
          Indicates the protocols that are supported by the CPE for sending requests to the Dynamic DNS server. {{list}} This list depends on the Dynamic DNS service defined by the {{param|ServiceName}} parameter.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP">
              <description>
                As defined in {{bibref|RFC2616}}
              </description>
            </enumeration>
            <enumeration value="HTTPS">
              <description>
                As defined in {{bibref|RFC2818}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" dmr:version="2.10">
        <description>
          Indicates the protocol used to send requests to the Dynamic DNS server.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="SupportedProtocols"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CheckInterval" access="readWrite" dmr:version="2.10">
        <description>
          Interval (in {{units}}) between two checks for IP change.
          A value of zero indicates that the CPE knows when IP changes and doesn’t need to check it periodically.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="RetryInterval" access="readWrite" dmr:version="2.10">
        <description>
          Initial retry interval (in {{units}}) after a failed request. This parameter can be used as a fixed value or as part of a retry interval calculation.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxRetries" access="readWrite" dmr:version="2.10">
        <description>
          Maximum number of retries after a failed request. When the maximum number is reached, no further requests are sent until the context changes.
          A value of 0 means that there are no retries after a failed request.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LEDs." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object describes the LEDs on the device.
      </description>
      <parameter name="LEDNumberOfEntries" access="readOnly" dmr:version="2.11">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LEDs.LED.{i}." access="readOnly" numEntriesParameter="LEDNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.11">
      <description>
        Each instance of this object describes an LED on the device.
        The default illumination characteristics (e.g., Color, Brightness) of an in use LED is vendor specific. When a cycle completes (i.e., {{param|CyclePeriodRepetitions}} = 0), the LED reverts back to its default illumination characteristics.
        When the value of the {{param|Status}} parameter is {{enum|Controlled|Status}}, then the value of {{param|CycleElementNumberOfEntries}} and {{param|CycleElementNumberOfEntries}} parameters SHOULD be 0.
        When the value of the {{param|RelativeXPosition}} and {{param|RelativeYPosition}} parameters are 0, this indicates that the position of the LED is unknown.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.11">
        <description>
          The internal name used to identify this LED.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.11">
        <description>
          The status of the LED.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled">
              <description>
                The LED is currently not in use.
              </description>
            </enumeration>
            <enumeration value="InUse">
              <description>
                The LED is currently being used by the CPE.
              </description>
            </enumeration>
            <enumeration value="Controlled">
              <description>
                Indicates that the LED is controlled from an electronic circuit which cannot be monitored.
              </description>
            </enumeration>
            <enumeration value="Error">
              <description>
                The LED status cannot be determined by the CPE.
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Reason" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The textual purpose that represents the visual display of the LED (e.g., Broadband Down).
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CyclePeriodRepetitions" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The number of cycle periods left for this LED. As each cycle period is completed this parameter is reduced by 1. A value of -1 indicates an infinite number of cycle period repetitions.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="Location" access="readOnly" dmr:version="2.11">
        <description>
          The location of the LED as the user looks at the front of the device in its typical orientation (e.g., on-end, flat).
        </description>
        <syntax>
          <string>
            <enumeration value="Front"/>
            <enumeration value="Back"/>
            <enumeration value="Left"/>
            <enumeration value="Right"/>
            <enumeration value="Top"/>
            <enumeration value="Bottom"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RelativeXPosition" access="readOnly" dmr:version="2.11">
        <description>
          The relative x position of the LED from left to right (x) and top to bottom (y) as the user looks at the device from the orientation identified in the {{param|Location}} parameter in its typical orientation (e.g., on-end, flat).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RelativeYPosition" access="readOnly" dmr:version="2.11">
        <description>
          The relative y position of the LED from left to right (x) and top to bottom (y) as the user looks at the device from the orientation identified in the {{param|Location}} parameter in its typical orientation (e.g., on-end, flat).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CycleElementNumberOfEntries" access="readOnly" dmr:version="2.11">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LEDs.LED.{i}.CycleElement.{i}." access="readWrite" numEntriesParameter="CycleElementNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.11">
      <description>
        Each instance of this object describes the LED characteristics for a portion of the LED cycle period.
        The pattern of lighting for the LED corresponding to this table (i.e., the LED cycle period) is defined by the illumination of the LED according to the entries in this table, taken sequentially in the order specified by the {{param|Order}} parameter, with the duration for the portion of the LED illumination corresponding to a given instance specified by the {{param|Duration}} parameter.
        The other parameters of the instance of this object (e.g., Color, Brightness) describes the illumination characteristics applied to the LED for this {{object}} instance.
        The length of the complete LED cycle is the sum of the Duration parameters for all of the entries in this table.
      </description>
      <uniqueKey>
        <parameter ref="Order"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.11">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.11">
        <description>
          Enables or disables this {{object}} instance.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.11">
        <description>
          The relative order of this {{object}} in the LED's cycle period.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Color" access="readWrite" dmr:version="2.11">
        <description>
          The color being displayed by the LED RGB hexadecimal notation (e.g., FF0088).
          Note: If the parameter is set to an unsupported color the CPE MUST NOT infer a different color.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="Duration" access="readWrite" dmr:version="2.11">
        <description>
          The duration, in {{units}}, for this element of the cycle period.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="FadeInterval" access="readWrite" dmr:version="2.11">
        <description>
          The interval corresponding to this {{object}} instance, in {{units}}, from the starting from the target illumination characteristics of the previous {{object}} instance to the target illumination characteristics of this {{object}} instance.
          The transition to the target illumination characteristics is uniformly interpolated "perceptually" over the value of this {{param}} parameter.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LEDs.LED.{i}.CurrentCycleElement." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.11">
      <description>
        This object describes the status of the current cycle element for this LED.
      </description>
      <parameter name="CycleElementReference" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          This object describes the current properties of the {{object|#.CycleElement.{i}}} object instance that is currently active.
          {{reference}} If the LED instances does not have a current cycle element active, this parameter MUST be set to {{empty}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.CycleElement." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Color" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The color, formatted as RGB hexadecimal notation (e.g., FF0088), that is currently being displayed by the LED.
        </description>
        <syntax>
          <hexBinary>
            <size minLength="3" maxLength="3"/>
          </hexBinary>
        </syntax>
      </parameter>
      <parameter name="Duration" access="readOnly" activeNotify="canDeny" dmr:version="2.11">
        <description>
          The remaining duration, in {{units}}, for this element of the cycle period.
        </description>
        <syntax>
          <unsignedInt>
            <units value="milliseconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BASAPM." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object represents the objects necessary to manage and control the functionality for tests that utilize the Broadband Access Service Attributes and Performance Metrics measurement test framework as defined in by {{bibref|TR-304}}.
      </description>
      <parameter name="MeasurementEndpointNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BASAPM.MeasurementEndpoint.{i}." access="readWrite" numEntriesParameter="MeasurementEndpointNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents the measurement endpoint that provides additional contextual information regarding the measurement agent.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="MeasurementAgent"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MeasurementAgent" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.LMAP.MeasurementAgent}} object that is associated with this measurement endpoint.}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.LMAP.MeasurementAgent." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceOwnership" access="readWrite" dmr:version="2.12">
        <description>
          This parameter describes the ownership of the device that hosts the measurement endpoint.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="ISP">
              <description>
                ISP Owned Device
              </description>
            </enumeration>
            <enumeration value="Customer">
              <description>
                Customer Owned Device
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="OperationalDomain" access="readWrite" dmr:version="2.12">
        <description>
          This parameter describes the operational domain for this measurement endpoint
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InternetDomain" access="readWrite" dmr:version="2.12">
        <description>
          The top level Internet domain used to identify this measurement endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UseMeasurementEndpointInReports" access="readWrite" dmr:version="2.12">
        <description>
          If the value of this parameter is {{false}} then the Measurement Endpoint MUST not be included in measurement reports.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BASAPM.MeasurementEndpoint.{i}.ISPDevice." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object represents the information necessary to utilize an ISP owned device within the measurement endpoint.
      </description>
      <parameter name="ReferencePoint" access="readWrite" dmr:version="2.12">
        <description>
          This parameter describes the measurement reference point of the measurement endpoint.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="STP">
              <description>
                Internet Source Test Point
              </description>
            </enumeration>
            <enumeration value="IDTP">
              <description>
                Internet Drain Test Point
              </description>
            </enumeration>
            <enumeration value="RNTP">
              <description>
                Regional Network Test Point
              </description>
            </enumeration>
            <enumeration value="IRTP">
              <description>
                Internal Regional Test Point
              </description>
            </enumeration>
            <enumeration value="MTP">
              <description>
                Metro Test Point
              </description>
            </enumeration>
            <enumeration value="IATP">
              <description>
                Internal Access Test Point
              </description>
            </enumeration>
            <enumeration value="UNITP">
              <description>
                User Network Interface Test Point
              </description>
            </enumeration>
            <enumeration value="CEDTP">
              <description>
                Customer End Device Test Point
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="GeographicalLocation" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|###.DeviceInfo.Location}} object that describes the geographic location of the measurement endpoint}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="###.DeviceInfo.Location." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.BASAPM.MeasurementEndpoint.{i}.CustomerDevice." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object represents the information necessary to utilize customer owned device within the measurement endpoint.
      </description>
      <parameter name="EquipmentIdentifier" access="readWrite" dmr:version="2.12">
        <description>
          This parameter describes the customer equipment identifier of the measurement endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CustomerIdentifier" access="readWrite" dmr:version="2.12">
        <description>
          The unique customer identifier within the operational domain for this measurement endpoint.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object represents the objects necessary to manage and control the functionality for Large-Scale Measurement of Broadband Performance{{bibref|RFC7594}} as defined in by {{bibref|LMAPIFM}}.
      </description>
      <parameter name="MeasurementAgentNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReportNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EventNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}." access="readWrite" numEntriesParameter="MeasurementAgentNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents the measurement agent that performs measurement tasks and reporting functions defined in {{bibref|RFC7594}}.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Identifier"/>
      </uniqueKey>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.12">
        <description>
          Version of the measurement agent.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LastStarted" access="readOnly" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, in UTC that the measurement agent was successfully started.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="CapabilityTags" access="readOnly" dmr:version="2.12">
        <description>
          Capabilities of the measurement agent that cannot be expressed elsewhere in the data model.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Identifier" access="readWrite" dmr:version="2.12">
        <description>
          Identifier of the {{object}} instance.
        </description>
        <syntax>
          <dataType ref="UUID"/>
        </syntax>
      </parameter>
      <parameter name="GroupIdentifier" access="readWrite" dmr:version="2.12">
        <description>
          Identifier of the measurement group of interest to which the measurement agent belongs.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MeasurementPoint" access="readWrite" dmr:version="2.12">
        <description>
          Identifier of the measurement point indicating where the measurement agent is located on a path as defined in [bibref|RFC7398}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UseAgentIdentifierInReports" access="readWrite" dmr:version="2.12">
        <description>
          If the value of the {{param|Identifier}} parameter is not {{empty}} and the value of this parameter is {{false}} then the value of the {{param|Identifier}} parameter MUST not be included in measurement reports.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="UseGroupIdentifierInReports" access="readWrite" dmr:version="2.12">
        <description>
          If the value of the {{param|GroupIdentifier}} parameter is not {{empty}} and the value of this parameter is {{false}} then the value of the {{param|GroupIdentifier}} parameter MUST not be included in measurement reports.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UseMeasurementPointInReports" access="readWrite" dmr:version="2.12">
        <description>
          If the value of the {{param|MeasurementPoint}} parameter is not {{empty}} and the value of this parameter is {{false}} then the value of the {{param|MeasurementPoint}} parameter MUST not be included in measurement reports.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PublicCredential" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.Security.Certificate}} object that is used to identify this measurement agent}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.Security.Certificate." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PrivateCredential" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.Security.Certificate}} object that is used to contain the private keys for this measurement agent}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.Security.Certificate." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EventLog" access="readOnly" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.DeviceInfo.VendorLogFile}} object that is used to record events for this measurement agent}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.DeviceInfo.VendorLogFile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TaskCapabilityNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ScheduleNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TaskNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CommunicationChannelNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InstructionNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.TaskCapability.{i}." access="readOnly" numEntriesParameter="TaskCapabilityNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents a capabilities, in the context of a task, that are supported by the measurement agent. Types of capabilities include: Report tasks, Configuration Tasks and Instruction Tasks.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Name" access="readOnly" dmr:version="2.12">
        <description>
          Name of the supported task.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" dmr:version="2.12">
        <description>
          Version of the task.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TaskCapabilityRegistryNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.TaskCapability.{i}.Registry.{i}." access="readOnly" numEntriesParameter="TaskCapabilityRegistryNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents a registry function and an associated list of roles supported by this measurement agent
      </description>
      <uniqueKey>
        <parameter ref="RegistryEntry"/>
      </uniqueKey>
      <parameter name="RegistryEntry" access="readOnly" dmr:version="2.12">
        <description>
          A URI ({{bibref|RFC3986}}) that is the value of the task registry entry as defined in {{bibref|LMAPREG}} or a value for a task that is understood by the measurement agent, measurement controller and measurement collector.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Roles" access="readOnly" dmr:version="2.12">
        <description>
          {{list| representing the roles of the function}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Controller." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This objects represents the measurement controller that is assigned to a measurement agent.
      </description>
      <parameter name="ControllerTimeout" access="readWrite" dmr:version="2.12">
        <description>
          The timer, in {{units}}, that is started after each successful contact with a measurement controller.
          When the timer reaches the timeout en event is raised indicating that connectivity to the controller has been lost.
        </description>
        <syntax>
          <int>
            <range minInclusive="0"/>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ControlSchedules" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|#.Schedule}} object}}
          This parameter lists the available control schedules for invoking control tasks by the measurement agent.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.Schedule." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ControlTasks" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|#.Task}} object}}
          This parameter lists the available control tasks that can be invoked by the measurement agent.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.Task." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ControlChannels" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|#.CommunicationChannel}} object}}
          The measurement agent to measurement controller channel is used for conveying results of communication sessions with the configuration, instruction status and logging information elements defined in defined in {{bibref|LMAPIFM}}.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.CommunicationChannel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}." access="readWrite" numEntriesParameter="ScheduleNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents a schedule that is associated with a set of scheduled actions to be performed by a measurement agent.
        Note: Actions of an occurrence of this {{object}} are gracefully terminated by the defining either the {{param|End}} or {{param|Duration}} parameters. Only one of these parameters may be defined at a time.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          Name of the schedule.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="State" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the Schedule. Only one instance of the schedule is active. An active schedule is defined where the {{param}} parameter has a value of {{enum|Running|State}}.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled"/>
            <enumeration value="Suppressed"/>
            <enumeration value="Disabled"/>
            <enumeration value="Running"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Start" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.Event}} object that is used define the event to start an occurrence of this {{object}}}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.Event." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="End" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.Event}} object that is used define the event to gracefully terminate all actions associated with an occurrence of this {{object}}}}.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.Event." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Duration" access="readWrite" dmr:version="2.12">
        <description>
          When the {{param}} value is not 0, this parameter is used define the duration, in {{units}}, where after this duration all actions associated with an occurrence of this {{object}} are gracefully terminated.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Tags" access="readWrite" dmr:version="2.12">
        <description>
          {{list|each entry represents tags that are to be reported together with the measurement results.}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SuppressionTags" access="readWrite" dmr:version="2.12">
        <description>
          {{list|representing the suppression tags to be matched}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ExecutionMode" access="readWrite" dmr:version="2.12">
        <description>
          This parameter describes the execution method to apply to this schedule for the associated Actions.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Sequential">
              <description>
                 Actions are executed in sequence as defined by the value of the {{param|Action.{i}.Order}} parameter.
                The first Scheduled Action of the DestinationOutput is provided the input.
              </description>
            </enumeration>
            <enumeration value="Parallel">
              <description>
                Actions are executed in parallel.
                The all Scheduled Actions of the DestinationOutput are provided the input.
              </description>
            </enumeration>
            <enumeration value="Pipelined">
              <description>
                Actions are executed in sequence where the output of one Action is used as the input of subsequent Action.
                The first Scheduled Action of the DestinationOutput is provided the input.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Pipelined"/>
        </syntax>
      </parameter>
      <parameter name="LastInvocation" access="readOnly" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, in UTC that the {{object}} was invoked by the measurement agent.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Storage" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The amount of secondary storage, in {{units}}, allocated to an instance of this {{object}}.
          The value of this parameter reflects the amount of allocated physical storage and not the storage used by logical data records.
          For example the secondary storage can be the storage allocated in a file system holding temporary data.
        </description>
        <syntax>
          <unsignedLong>
            <units value="bytes"/>
          </unsignedLong>
        </syntax>
      </parameter>
      <parameter name="ActionNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object represents the statistics associated with this object.
      </description>
      <parameter name="Invocations" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of invocations of this schedule. This counter does not include suppressed invocations or invocations that were prevented due to an overlap with a previous invocation of this schedule.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="Suppressions" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of suppressed executions of this schedule.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="Overlaps" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of executions prevented due to overlaps with a previous invocation of this schedule.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="Failures" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of failed executions of this schedule. A failed execution is an execution where at least one action failed.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}." access="readWrite" numEntriesParameter="ActionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents an action that is associated with the this {{object|##.Schedule}} object.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object|##.Schedule.{i}.Action}} object.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="State" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the {{object}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled"/>
            <enumeration value="Suppressed"/>
            <enumeration value="Disabled"/>
            <enumeration value="Running"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.12">
        <description>
          The order of the scheduled action.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Task" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|##.Task}} object used in this scheduled action}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="##.Task." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="OutputDestination" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|##.Schedule}} object used to receive the output(s) of this scheduled action}}
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="##.Schedule." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SuppressionTags" access="readWrite" dmr:version="2.12">
        <description>
          {{list|representing the suppression tags to be matched}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Tags" access="readWrite" dmr:version="2.12">
        <description>
          {{list|each entry represents tags that are to be reported together with the measurement results.}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Storage" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          The amount of secondary storage, in {{units}}, allocated to an instance of this {{object}}.
          The value of this parameter reflects the amount of allocated physical storage and not the storage used by logical data records.
          For example the secondary storage can be the storage allocated in a file system holding temporary data.
        </description>
        <syntax>
          <unsignedLong>
            <units value="bytes"/>
          </unsignedLong>
        </syntax>
      </parameter>
      <parameter name="LastInvocation" access="readOnly" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, in UTC that the {{object}} was invoked by the measurement agent.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastSuccessfulCompletion" access="readOnly" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, in UTC of a successful completion of the {{object}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastSuccessfulStatusCode" access="readOnly" dmr:version="2.12">
        <description>
          The status code returned by successful execution of the {{object}}. A value of 0 indicates successful completion.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="LastSuccessfulMessage" access="readOnly" dmr:version="2.12">
        <description>
          The message associated with the successful completion of the {{object}}.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LastFailedCompletion" access="readOnly" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, in UTC of a failure to complete the {{object}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LastFailedStatusCode" access="readOnly" dmr:version="2.12">
        <description>
          The status code returned by failed execution of the {{object}}. A value of 0 indicates successful completion.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="LastFailedMessage" access="readOnly" dmr:version="2.12">
        <description>
          The message associated with the failure to complete the task.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object represents the statistics associated with this object.
      </description>
      <parameter name="Invocations" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of invocations of this action. This counter does not include suppressed invocations or invocations that were prevented due to an overlap with a previous invocation of this schedule.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="Suppressions" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of suppressed executions of this action.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="Overlaps" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of executions prevented due to overlaps with a previous invocation of this action.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
      <parameter name="Failures" access="readOnly" activeNotify="canDeny" dmr:version="2.12">
        <description>
          Number of failed executions of this action. A failed execution is an execution where at least one action failed.
        </description>
        <syntax>
          <unsignedLong/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents an option associated with the Scheduled Action. When an option with the same Name exists between the Seheduled Action's Option and The Task's option, the option of the Scheduled Action takes precedence over the option associated with the Task.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.12">
        <description>
          The order of the Option.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          The name of the option.
          When the value of this parameter is equal to "channel", the option value specifies the Communication Channel used for this scheduled task.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.12">
        <description>
          The value associated with the Option.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Task.{i}." access="readWrite" numEntriesParameter="TaskNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        The {{object}} object defines the configuration for a task that can be performed by {{object|##.MeasurementAgent}} objects.
        Tasks are performed by {{object|##.MeasurementAgent}} objects when a {{object|#.Schedule}} object invokes the Task.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          Name of the task.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Tags" access="readWrite" dmr:version="2.12">
        <description>
          {{list|each entry represents tags that are to be reported together with the measurement results.}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RegistryNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Task.{i}.Registry.{i}." access="readWrite" numEntriesParameter="RegistryNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents a registry function and an associated list of roles for this task
      </description>
      <uniqueKey>
        <parameter ref="RegistryEntry"/>
      </uniqueKey>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="RegistryEntry" access="readWrite" dmr:version="2.12">
        <description>
          A URI ({{bibref|RFC3986}}) that is the value of the task registry entry as defined in {{bibref|LMAPREG}} or a value for a task that is understood by the measurement agent, measurement controller and measurement collector.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Roles" access="readWrite" dmr:version="2.12">
        <description>
          {{list| representing the roles of the function}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Task.{i}.Option.{i}." access="readWrite" numEntriesParameter="OptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents an option associated with the task.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" dmr:version="2.12">
        <description>
          The order of the Option.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          The name of the option.
          When the value of this parameter is equal to "channel", the option value specifies the Communication Channel used for this task.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" dmr:version="2.12">
        <description>
          The value associated with the Option.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.CommunicationChannel.{i}." access="readWrite" numEntriesParameter="CommunicationChannelNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents the properties communication channel used to establish communication between a measurement agent and other elements of the LMAP framework (e.g., measurement controller, measurement collector). The value of the {{param|Name}} parameter used for conveying information is defined as an option in the Task's or scheduled Task's option parameter.
        When this object uses the BulkData capability, a {{object|###.BulkData.Profile.{i}}} object instance referred to by this object.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          Name of the channel.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UseBulkDataProfile" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables the ability to use a bulk data profile for this communication channel
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="BulkDataProfile" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|###.BulkData.Profile}} object that is used to represent communication channel}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="###.BulkData.Profile." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Target" access="readWrite" dmr:version="2.12">
        <description>
          The URL of the LMAP component that is the target of this communication channel.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TargetPublicCredential" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|###.Security.Certificate}} object that is used to identify the target of this channel}}
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="###.Security.Certificate." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|an interface object used to restrict the data transmitted or received using this channel to a specific interface}} If the value of this parameter is {{empty}} the data that is transmitted or received using this channel is able to use any available interface.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Instruction.{i}." access="readWrite" numEntriesParameter="InstructionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        The {{object}} object defines the instruction to the measurement agent by the measurement controller. At most one {{object}} object for the {{object|##.MeasurementAgent}} instance is enabled at a time. .
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="LastChange" access="readOnly" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, in UTC that the {{object}} object or its sub-object's configuration was changed by a measurement agent's controller.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="InstructionSchedules" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|#.Schedule}} object}}
          This parameter lists the available instruction schedules for invoking control tasks by the measurement agent.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.Schedule." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InstructionTasks" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|#.Task}} object}}
          This parameter lists the available instruction tasks that can be invoked by the measurement agent.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.Task." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReportChannels" access="readWrite" dmr:version="2.12">
        <description>
          {{list}} {{reference|a {{object|#.CommunicationChannel}} object}}
          This parameter defines the corresponding report channels to be used when reporting results of tasks to a measurement collector.
        </description>
        <syntax>
          <list/>
          <string>
            <pathRef refType="strong" targetParent="#.CommunicationChannel." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MeasurementSuppressionNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.MeasurementAgent.{i}.Instruction.{i}.MeasurementSuppression.{i}." access="readWrite" numEntriesParameter="MeasurementSuppressionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object defines the schedules and actions that are suppressed based on criteria defined in the {{param|SuppressionMatch}} parameter.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          Name of the suppression object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="State" access="readOnly" dmr:version="2.12">
        <description>
          The current operational state of the {{object}}. {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="Enabled"/>
            <enumeration value="Active"/>
            <enumeration value="Disabled"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StopRunning" access="readWrite" dmr:version="2.12">
        <description>
          When {{true}}, the measurement agent is instructed to stop running schedules or actions that have been matched by this object.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Start" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|###.Event}} object that is used define the event that to start an occurrence of this {{object}}}} When {{empty}} the default behavior is to perform the suspension event immediately.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="###.Event." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="End" access="readWrite" dmr:version="2.12">
        <description>
          {{reference|a {{object|###.Event}} object that is used define the event to gracefully suspend all actions associated with an occurrence of this {{object}}}} When {{empty}} the default behavior is for the suspension period to be indefinite.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="###.Event." targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SuppressionMatch" access="readWrite" dmr:version="2.12">
        <description>
          {{list|representing the match patterns to be used for applying suppression to {{object|##.Schedule.{i}}} (and their actions) and all {{object|##.Schedule.{i}.Action.{i}}} object instances that have a matched using their SuppressionTags parameters}} The match pattern syntax is defined in {{bibref|LMAPIFM}}.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}." access="readOnly" numEntriesParameter="ReportNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12" dmr:noUniqueKeys="true">
      <description>
        This {{object}} object instance represents a report that is generated by a reporting task where the reporting task is defined as a {{object|#.MeasurementAgent.{i}.Task.{i}}} and executed as a scheduled action ({{object|#.MeasurementAgent.{i}.Schedule.{i}.Action.{i}}}).
        The {{object}} replicates the {{object|#.MeasurementAgent.{i}}} object instance's data at the time of the action exection.
        When a {{object|##.BulkData.Profile.{i}}} object instance is used to communicate a {{object}} instance, the CPE adds a {{object|##.BulkData.Profile.{i}.Parameter.{i}}} object instance referring to this {{object}} object instance.
      </description>
      <parameter name="ReportDate" access="readOnly" dmr:version="2.12">
        <description>
          The report date and time, based on {{bibref|RFC3339}}, that the report was sent to the collector.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="AgentIdentifier" access="readOnly" dmr:version="2.12">
        <description>
          Identifier of the measurement agent at the time the measurement was run.
        </description>
        <syntax>
          <dataType ref="UUID"/>
        </syntax>
      </parameter>
      <parameter name="GroupIdentifier" access="readOnly" dmr:version="2.12">
        <description>
          Identifier of the measurement group of interest to which the MA belongs.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MeasurementPoint" access="readOnly" dmr:version="2.12">
        <description>
          Identifier of the measurement point indicating where the measurement agent is located on a path as defined in {{bibref|RFC7398}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ResultNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}.Result.{i}." access="readOnly" numEntriesParameter="ResultNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12" dmr:noUniqueKeys="true">
      <description>
        The {{object}} object provides the meta-data of the result report of a single executed action that produced the result.
      </description>
      <uniqueKey>
        <parameter ref="ScheduleName"/>
        <parameter ref="ActionName"/>
        <parameter ref="StartTime"/>
      </uniqueKey>
      <parameter name="TaskName" access="readOnly" dmr:version="2.12">
        <description>
          Name of the task that produced the result.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ScheduleName" access="readOnly" dmr:version="2.12">
        <description>
          Name of the schedule that produced the result.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ActionName" access="readOnly" dmr:version="2.12">
        <description>
          Name of the action that produced the result.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EventTime" access="readOnly" dmr:version="2.12">
        <description>
          The date and time, based on {{bibref|RFC3339}}, that the event that triggered the schedule of the action that produced the reported result values in UTC.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="StartTime" access="readOnly" dmr:version="2.12">
        <description>
          The date and time, based on {{bibref|RFC3339}}, that the action started in UTC.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EndTime" access="readOnly" dmr:version="2.12">
        <description>
          The date and time, based on {{bibref|RFC3339}}, that the action was completed in UTC.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="CycleNumber" access="readOnly" dmr:version="2.12">
        <description>
          The cycle number derived from the {{param|EventTime}}.
          The cycle number is the time, in UTC, closest to the {{param|EventTime}} that is a multiple of the cycle interval of the event that triggered the execution of the schedule.
          The value is valid if the event that triggered the execution of the schedule has a defined cycle interval. An {{empty}} value represent an invalid CycleNumber.
          {{pattern}}
        </description>
        <syntax>
          <string>
            <pattern value="YYYYMMDD.HHMMSS"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" dmr:version="2.12">
        <description>
          The status code returned by the execution of the action.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="Tags" access="readOnly" dmr:version="2.12">
        <description>
          {{list|each entry represents tags defined for the schedule, task and action objects that produced this result}}
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OptionNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ResultConflictNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ResultReportTableNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}.Result.{i}.Option.{i}." access="readOnly" numEntriesParameter="OptionNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents an option associated with the task or action object that produced the result.
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Order" access="readOnly" dmr:version="2.12">
        <description>
          The order of the Option.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" dmr:version="2.12">
        <description>
          The name of the Option.
          When the value of this parameter is equal to "channel", the option value specifies the Communication Channel used for this task.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" dmr:version="2.12">
        <description>
          The value associated with the Option.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}.Result.{i}.Conflict.{i}." access="readOnly" numEntriesParameter="ResultConflictNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents actions that might have impacted the results being reported.
      </description>
      <uniqueKey>
        <parameter ref="ScheduleName"/>
        <parameter ref="ActionName"/>
        <parameter ref="TaskName"/>
      </uniqueKey>
      <parameter name="TaskName" access="readOnly" dmr:version="2.12">
        <description>
          Name of the task.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ScheduleName" access="readOnly" dmr:version="2.12">
        <description>
          Name of the schedule.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ActionName" access="readOnly" dmr:version="2.12">
        <description>
          Name of the action.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}.Result.{i}.ReportTable.{i}." access="readOnly" numEntriesParameter="ResultReportTableNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12" dmr:noUniqueKeys="true">
      <description>
        This {{object}} object instances represents a row of results.
      </description>
      <parameter name="ColumnLabels" access="readOnly" dmr:version="2.12">
        <description>
          {{list}} This parameter contains the column labels used for the result.
          The column labels are ordered with the corresponding entries in the {{object|ResultRow}} table.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ResultReportRowNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RegistryNumberOfEntries" access="readOnly" dmr:version="2.12">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}.Result.{i}.ReportTable.{i}.ResultRow.{i}." access="readOnly" numEntriesParameter="ResultReportRowNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12" dmr:noUniqueKeys="true">
      <description>
        This {{object}} object instances represents a row of results for the report.
      </description>
      <parameter name="Values" access="readOnly" dmr:version="2.12">
        <description>
          {{list}} This parameter contains an ordered set of values that align to the columns defined in the {{param|#.ColumnLabels}} parameter.
        </description>
        <syntax>
          <list/>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Report.{i}.Result.{i}.ReportTable.{i}.Registry.{i}." access="readOnly" numEntriesParameter="RegistryNumberOfEntries" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object represents a registry function and an associated list of roles for this result report.
      </description>
      <uniqueKey>
        <parameter ref="RegistryEntry"/>
      </uniqueKey>
      <parameter name="RegistryEntry" access="readOnly" dmr:version="2.12">
        <description>
          A URI ({{bibref|RFC3986}}) that is the value of the registry entry as defined in {{bibref|LMAPREG}} or a value for a task that is understood by the measurement agent, measurement controller and measurement collector.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Roles" access="readOnly" dmr:version="2.12">
        <description>
          {{list| representing the roles of the function}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Event.{i}." access="readWrite" numEntriesParameter="EventNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" dmr:version="2.12">
      <description>
        This object defines the information associated with an event used within the measurement agent. Event instances may be referenced by various objects within the LMAP model.
      </description>
      <uniqueKey functional="false">
        <parameter ref="Alias"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" dmr:version="2.12">
        <description>
          Enables or disables this {{object}} instance.
          This parameter is based on ''ifAdminStatus'' from {{bibref|RFC2863}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Alias" access="readWrite" activeNotify="canDeny" dmr:version="2.12">
        <description>
          {{datatype|expand}}
        </description>
        <syntax>
          <dataType ref="Alias"/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" dmr:version="2.12">
        <description>
          Name of the Event.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" dmr:version="2.12">
        <description>
          This parameter describes the type of {{object}} for this object instance. The timing of the event occurrence is adjusted based on the value of the {{param|RandomnessSpread}} parameter.
          {{enum}}
        </description>
        <syntax>
          <string>
            <enumeration value="PeriodicTiming">
              <description>
                Periodic Timing Event. When selected one or more event occurrences are emitted based on the parameters defined in the {{object|PeriodicTimer}} object.
              </description>
            </enumeration>
            <enumeration value="CalendarTiming">
              <description>
                Calendar Timing Event. When selected one or more event occurrences are emitted based on the parameters defined in the {{object|CalendarTimer}} object.
              </description>
            </enumeration>
            <enumeration value="OneOffTiming">
              <description>
                One-off Timing Event. When selected a single event occurrence is emitted based on the parameters defined in the {{object|OneOff}} object.
              </description>
            </enumeration>
            <enumeration value="Immediate">
              <description>
                Immediate Timing Event. When selected a single event occurrence is emitted as soon as possible.
              </description>
            </enumeration>
            <enumeration value="Startup">
              <description>
                Startup Timing Event. When selected a single event occurrence is emitted when the corresponding measurement agent starts up.
              </description>
            </enumeration>
            <enumeration value="ControllerLost">
              <description>
                Controller Lost Event. When selected a single event occurrence is emitted when the connectivity to the controller is lost.
              </description>
            </enumeration>
            <enumeration value="ControllerConnected">
              <description>
                Controller Connected Event. When selected a single event occurrence is emitted when the connectivity to the controller is established.
              </description>
            </enumeration>
          </string>
          <default type="object" value="Immediate"/>
        </syntax>
      </parameter>
      <parameter name="RandomnessSpread" access="readWrite" dmr:version="2.12">
        <description>
          The spread, in {{units}}, of the Uniform Discrete random distribution algorithm. A value of 0 means that the random algorithm is not applied.
        </description>
        <syntax>
          <int>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="CycleInterval" access="readWrite" dmr:version="2.12">
        <description>
          The duration of the time interval, in {{units}}, that used to calculate cycle numbers.
        </description>
        <syntax>
          <int>
            <units value="seconds"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Event.{i}.PeriodicTimer." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object defines a periodic timer instance. The periodic timer instance has attributes for when the timer is to begin ({{param|StartTime}}) and end ({{param|EndTime}}) as well as the interval to use.
      </description>
      <parameter name="StartTime" access="readWrite" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, that the {{object}} instance is to begin operation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EndTime" access="readWrite" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, that the {{object}} instance is to end operation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Interval" access="readWrite" dmr:version="2.12">
        <description>
          The tolerable duration, in {{units}}, of the interval for this {{object}} instance.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Event.{i}.CalendarTimer." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object defines a calendar timer instance.
        The calendar timer instance has attributes for when the timer is to begin ({{param|StartTime}}) and end ({{param|EndTime}}) as well as the schedule of the recurrence.
        The algrorithm that defines how the schedule elements are evaluated is defined in {{bibref|LMAPIFM}}.
        If the value of any of the {{param|ScheduleMonths}}, {{param|ScheduleDaysOfMonth}}, {{param|ScheduleDaysOfWeek}}, {{param|ScheduleHoursOfDay}}, {{param|ScheduleMinutesOfHour}} or {{param|ScheduleSecondsOfMinute}} is {{empty}} then any actions that use this object will not be invoked.
      </description>
      <parameter name="StartTime" access="readWrite" dmr:version="2.12">
        <description>
          Date and time that the {{object}} instance is to begin this operation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EndTime" access="readWrite" dmr:version="2.12">
        <description>
          Date and time that the {{object}} instance is to end this operation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ScheduleMonths" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents either a list of the months of year that are applied to the schedule or an asterisk (*) that represents all the elements of the list.
          Each entry in the months of the year list can be a numeric value or the name of the month (january (1), february (2), march (3), april (4), may (5), june (6), july (7), august (8), september (9), october (10), november (11), december (12)).
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ScheduleDaysOfMonth" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents either a list of the days of the month (1-31) that are applied to the schedule or an asterisk (*) that represents all the elements of the list.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ScheduleDaysOfWeek" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents either a list of the days of the week that are applied to the schedule or an asterisk (*) that represents all the elements of the list.
          Each entry in the days of the week list can be a numeric value or the name of the day (sunday (1), monday (2), tuesday (3), wednesday (4), thursday (5), friday (6), saturday (7)).
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ScheduleHoursOfDay" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents either a list of the hours of the day (0-23) that are applied to the schedule or an asterisk (*) that represents all the elements of the list.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ScheduleMinutesOfHour" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents either a list of the minutes of the hour (0-59) that are applied to the schedule or an asterisk (*) that represents all the elements of the list.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ScheduleSecondsOfMinute" access="readWrite" dmr:version="2.12">
        <description>
          This parameter represents either a list of the minutes of the hour (0-59) that are applied to the schedule or an asterisk (*) that represents all the elements of the list.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="EnableScheduleTimezoneOffset" access="readWrite" dmr:version="2.12">
        <description>
          When {{true}}, the value of the {{param|ScheduleTimezoneOffset}} parameter is applied to the schedule elements.
          When {{false}}, the device's system timezone offset is applied to the schedule elements.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ScheduleTimezoneOffset" access="readWrite" dmr:version="2.12">
        <description>
          The timezone offset, in {{units}}, to be applied to the schedule elements.
        </description>
        <syntax>
          <int>
            <range minInclusive="-23" maxInclusive="23"/>
            <units value="hours"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="Device.LMAP.Event.{i}.OneOff." access="readOnly" minEntries="1" maxEntries="1" dmr:version="2.12">
      <description>
        This object defines a one off timer instance.
      </description>
      <parameter name="StartTime" access="readWrite" dmr:version="2.12">
        <description>
          Date and time, based on {{bibref|RFC3339}}, that the {{object}} instance is to begin operation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <profile name="Download:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics." requirement="present">
        <parameter ref="IPv4DownloadDiagnosticsSupported" requirement="readOnly"/>
        <parameter ref="IPv6DownloadDiagnosticsSupported" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Diagnostics.DownloadDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="DownloadURL" requirement="readWrite"/>
        <parameter ref="DownloadTransports" requirement="readOnly"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="EthernetPriority" requirement="readWrite"/>
        <parameter ref="ROMTime" requirement="readOnly"/>
        <parameter ref="BOMTime" requirement="readOnly"/>
        <parameter ref="EOMTime" requirement="readOnly"/>
        <parameter ref="TestBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DownloadTCP:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics.DownloadDiagnostics." requirement="present">
        <parameter ref="TCPOpenRequestTime" requirement="readOnly"/>
        <parameter ref="TCPOpenResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Upload:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics." requirement="present">
        <parameter ref="IPv4UploadDiagnosticsSupported" requirement="readOnly"/>
        <parameter ref="IPv6UploadDiagnosticsSupported" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Diagnostics.UploadDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="UploadURL" requirement="readWrite"/>
        <parameter ref="UploadTransports" requirement="readOnly"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="EthernetPriority" requirement="readWrite"/>
        <parameter ref="ROMTime" requirement="readOnly"/>
        <parameter ref="BOMTime" requirement="readOnly"/>
        <parameter ref="EOMTime" requirement="readOnly"/>
        <parameter ref="TestFileLength" requirement="readOnly"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UploadTCP:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics.UploadDiagnostics." requirement="present">
        <parameter ref="TCPOpenRequestTime" requirement="readOnly"/>
        <parameter ref="TCPOpenResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPEcho:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics.UDPEchoConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="SourceIPAddress" requirement="readWrite"/>
        <parameter ref="UDPPort" requirement="readWrite"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="PacketsResponded" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="BytesResponded" requirement="readOnly"/>
        <parameter ref="TimeFirstPacketReceived" requirement="readOnly"/>
        <parameter ref="TimeLastPacketReceived" requirement="readOnly"/>
        <parameter ref="EchoPlusSupported" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPEchoPlus:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics.UDPEchoConfig." requirement="present">
        <parameter ref="EchoPlusEnabled" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="SupportedDataModel:1" dmr:version="2.0">
      <object ref="Device.DeviceInfo." requirement="present">
        <parameter ref="SupportedDataModelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo.SupportedDataModel.{i}." requirement="present">
        <parameter ref="URL" requirement="readOnly"/>
        <parameter ref="URN" requirement="readOnly"/>
        <parameter ref="Features" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MemoryStatus:1" dmr:version="2.0">
      <object ref="Device.DeviceInfo.MemoryStatus." requirement="present">
        <parameter ref="Total" requirement="readOnly"/>
        <parameter ref="Free" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ProcessStatus:1" dmr:version="2.0">
      <object ref="Device.DeviceInfo.ProcessStatus." requirement="present">
        <parameter ref="CPUUsage" requirement="readOnly"/>
        <parameter ref="ProcessNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo.ProcessStatus.Process.{i}." requirement="present">
        <parameter ref="PID" requirement="readOnly"/>
        <parameter ref="Command" requirement="readOnly"/>
        <parameter ref="Size" requirement="readOnly"/>
        <parameter ref="Priority" requirement="readOnly"/>
        <parameter ref="CPUTime" requirement="readOnly"/>
        <parameter ref="State" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="TempStatus:1" dmr:version="2.0">
      <object ref="Device.DeviceInfo.TemperatureStatus." requirement="present">
        <parameter ref="TemperatureSensorNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ResetTime" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Value" requirement="readOnly"/>
        <parameter ref="LastUpdate" requirement="readOnly"/>
        <parameter ref="MinValue" requirement="readOnly"/>
        <parameter ref="MinTime" requirement="readOnly"/>
        <parameter ref="MaxValue" requirement="readOnly"/>
        <parameter ref="MaxTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="User:1" dmr:version="2.0">
      <object ref="Device.Users." requirement="present">
        <parameter ref="UserNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Users.User.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="UPnPDev:1" dmr:version="2.0">
      <object ref="Device.UPnP." requirement="present"/>
      <object ref="Device.UPnP.Device." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="UPnPMediaServer" requirement="readWrite"/>
        <parameter ref="UPnPMediaRenderer" requirement="readWrite"/>
        <parameter ref="UPnPWLANAccessPoint" requirement="readWrite"/>
        <parameter ref="UPnPQoSDevice " requirement="readWrite"/>
        <parameter ref="UPnPQoSPolicyHolder" requirement="readWrite"/>
        <parameter ref="UPnPIGD" requirement="readWrite"/>
      </object>
      <object ref="Device.UPnP.Device.Capabilities." requirement="present">
        <parameter ref="UPnPArchitecture" requirement="readOnly"/>
        <parameter ref="UPnPMediaServer" requirement="readOnly"/>
        <parameter ref="UPnPMediaRenderer" requirement="readOnly"/>
        <parameter ref="UPnPWLANAccessPoint" requirement="readOnly"/>
        <parameter ref="UPnPBasicDevice" requirement="readOnly"/>
        <parameter ref="UPnPQoSDevice" requirement="readOnly"/>
        <parameter ref="UPnPQoSPolicyHolder" requirement="readOnly"/>
        <parameter ref="UPnPIGD" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UPnPDiscBasic:1" dmr:version="2.0">
      <object ref="Device.UPnP." requirement="present"/>
      <object ref="Device.UPnP.Discovery." requirement="present">
        <parameter ref="RootDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.UPnP.Discovery.RootDevice.{i}." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="USN" requirement="readOnly"/>
        <parameter ref="LeaseTime" requirement="readOnly"/>
        <parameter ref="Location" requirement="readOnly"/>
        <parameter ref="Server" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UPnPDiscAdv:1" extends="UPnPDiscBasic:1" dmr:version="2.0">
      <object ref="Device.UPnP.Discovery." requirement="present">
        <parameter ref="DeviceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ServiceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.UPnP.Discovery.Device.{i}." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="USN" requirement="readOnly"/>
        <parameter ref="LeaseTime" requirement="readOnly"/>
        <parameter ref="Location" requirement="readOnly"/>
        <parameter ref="Server" requirement="readOnly"/>
      </object>
      <object ref="Device.UPnP.Discovery.Service.{i}." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="USN" requirement="readOnly"/>
        <parameter ref="LeaseTime" requirement="readOnly"/>
        <parameter ref="Location" requirement="readOnly"/>
        <parameter ref="Server" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UPnPDiscAdv:2" base="UPnPDiscAdv:1" dmr:version="2.6">
      <object ref="Device.UPnP.Discovery.Device.{i}." requirement="present">
        <parameter ref="LastUpdate" requirement="readOnly"/>
        <parameter ref="Host" requirement="readOnly"/>
      </object>
      <object ref="Device.UPnP.Discovery.Service.{i}." requirement="present">
        <parameter ref="LastUpdate" requirement="readOnly"/>
        <parameter ref="Host" requirement="readOnly"/>
        <parameter ref="ParentDevice" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="SelfTestDiag:1" dmr:version="2.0">
      <object ref="Device.SelfTestDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Results" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="NSLookupDiag:1" dmr:version="2.0">
      <object ref="Device.DNS.Diagnostics.NSLookupDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="HostName" requirement="readWrite"/>
        <parameter ref="DNSServer" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="ResultNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS.Diagnostics.NSLookupDiagnostics.Result.{i}." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="AnswerType" requirement="readOnly"/>
        <parameter ref="HostNameReturned" requirement="readOnly"/>
        <parameter ref="IPAddresses" requirement="readOnly"/>
        <parameter ref="DNSServerIP" requirement="readOnly"/>
        <parameter ref="ResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="SimpleFirewall:1" dmr:version="2.0">
      <object ref="Device.Firewall." requirement="present">
        <parameter ref="Config" requirement="readWrite"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="AdvancedFirewall:1" extends="SimpleFirewall:1" dmr:version="2.2">
      <object ref="Device.Firewall." requirement="present">
        <parameter ref="AdvancedLevel" requirement="readWrite"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="LevelNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ChainNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Firewall.Level.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Chain" requirement="readOnly"/>
        <parameter ref="PortMappingEnabled" requirement="readWrite">
          <description>
            REQUIRED only for devices that support NAT.
          </description>
        </parameter>
        <parameter ref="DefaultPolicy" requirement="readWrite"/>
        <parameter ref="DefaultLogPolicy" requirement="readWrite"/>
      </object>
      <object ref="Device.Firewall.Chain.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Creator" requirement="readOnly"/>
        <parameter ref="RuleNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Firewall.Chain.{i}.Rule.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Target" requirement="readWrite"/>
        <parameter ref="TargetChain" requirement="readWrite"/>
        <parameter ref="SourceInterface" requirement="readWrite"/>
        <parameter ref="SourceInterfaceExclude" requirement="readWrite"/>
        <parameter ref="SourceAllInterfaces" requirement="readWrite"/>
        <parameter ref="DestInterface" requirement="readWrite"/>
        <parameter ref="DestInterfaceExclude" requirement="readWrite"/>
        <parameter ref="DestAllInterfaces" requirement="readWrite"/>
        <parameter ref="IPVersion" requirement="readWrite"/>
        <parameter ref="DestIP" requirement="readWrite"/>
        <parameter ref="DestMask" requirement="readWrite"/>
        <parameter ref="DestIPExclude" requirement="readWrite"/>
        <parameter ref="SourceIP" requirement="readWrite"/>
        <parameter ref="SourceMask" requirement="readWrite"/>
        <parameter ref="SourceIPExclude" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="ProtocolExclude" requirement="readWrite"/>
        <parameter ref="DestPort" requirement="readWrite"/>
        <parameter ref="DestPortRangeMax" requirement="readWrite"/>
        <parameter ref="DestPortExclude" requirement="readWrite"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="SourcePortRangeMax" requirement="readWrite"/>
        <parameter ref="SourcePortExclude" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="USBHostsBasic:1" dmr:version="2.0">
      <object ref="Device.USB.USBHosts." requirement="present">
        <parameter ref="HostNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.USBHosts.Host.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="USBVersion" requirement="readOnly"/>
        <parameter ref="DeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.USBHosts.Host.{i}.Device.{i}." requirement="present">
        <parameter ref="DeviceNumber" requirement="readOnly"/>
        <parameter ref="USBVersion" requirement="readOnly"/>
        <parameter ref="DeviceClass" requirement="readOnly"/>
        <parameter ref="DeviceSubClass" requirement="readOnly"/>
        <parameter ref="DeviceVersion" requirement="readOnly"/>
        <parameter ref="DeviceProtocol" requirement="readOnly"/>
        <parameter ref="ProductID" requirement="readOnly"/>
        <parameter ref="VendorID" requirement="readOnly"/>
        <parameter ref="Manufacturer" requirement="readOnly"/>
        <parameter ref="ProductClass" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="Port" requirement="readOnly"/>
        <parameter ref="Rate" requirement="readOnly"/>
        <parameter ref="Parent" requirement="readOnly"/>
        <parameter ref="MaxChildren" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PeriodicStatsBase:1" dmr:version="2.0">
      <object ref="Device.PeriodicStatistics." requirement="present">
        <parameter ref="MinSampleInterval" requirement="readOnly"/>
        <parameter ref="MaxReportSamples" requirement="readOnly"/>
        <parameter ref="SampleSetNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.PeriodicStatistics.SampleSet.{i}." requirement="createDelete">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="SampleInterval" requirement="readWrite"/>
        <parameter ref="ReportSamples" requirement="readWrite"/>
        <parameter ref="ReportStartTime" requirement="readOnly"/>
        <parameter ref="ReportEndTime" requirement="readOnly"/>
        <parameter ref="SampleSeconds" requirement="readOnly"/>
        <parameter ref="ParameterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.PeriodicStatistics.SampleSet.{i}.Parameter.{i}." requirement="createDelete">
        <parameter ref="Reference" requirement="readWrite"/>
        <parameter ref="SampleSeconds" requirement="readOnly"/>
        <parameter ref="SuspectData" requirement="readOnly"/>
        <parameter ref="Values" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="_Baseline:1" dmr:version="2.0">
      <object ref="Device." requirement="present">
        <parameter ref="InterfaceStackNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo." requirement="present">
        <parameter ref="Manufacturer" requirement="readOnly"/>
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="ModelName" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="HardwareVersion" requirement="readOnly"/>
        <parameter ref="SoftwareVersion" requirement="readOnly"/>
        <parameter ref="ProvisioningCode" requirement="readWrite"/>
        <parameter ref="UpTime" requirement="readOnly"/>
      </object>
      <object ref="Device.LANConfigSecurity." requirement="present">
        <parameter ref="ConfigPassword" requirement="readWrite"/>
      </object>
      <object ref="Device.DNS." requirement="present"/>
      <object ref="Device.DNS.Client." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ServerNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS.Client.Server.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="DNSServer" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Type" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="_Baseline:2" base="_Baseline:1" dmr:version="2.2">
      <object ref="Device.InterfaceStack.{i}." requirement="present">
        <parameter ref="HigherLayer" requirement="readOnly"/>
        <parameter ref="LowerLayer" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS." requirement="present">
        <parameter ref="SupportedRecordTypes" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="_Baseline:3" base="_Baseline:2" dmr:version="2.4">
      <object ref="Device." requirement="present">
        <parameter ref="RootDataModelVersion" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Optical:1" dmr:version="2.4">
      <object ref="Device.Optical." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Optical.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="OpticalSignalLevel" requirement="readOnly"/>
        <parameter ref="TransmitOpticalLevel" requirement="readOnly"/>
      </object>
      <object ref="Device.Optical.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetRMONStats:1" dmr:version="2.4">
      <object ref="Device.Ethernet." requirement="present">
        <parameter ref="RMONStatsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Ethernet.RMONStats.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readOnly"/>
        <parameter ref="Bytes" requirement="readOnly"/>
        <parameter ref="Packets" requirement="readOnly"/>
        <parameter ref="CRCErroredPackets" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Ghn:1" dmr:version="2.4">
      <object ref="Device.Ghn." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Ghn.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="FirmwareVersion" requirement="readOnly"/>
        <parameter ref="TargetDomainNames" requirement="readWrite"/>
        <parameter ref="DomainName" requirement="readOnly"/>
        <parameter ref="DomainNameIdentifier" requirement="readOnly"/>
        <parameter ref="DomainId" requirement="readOnly"/>
        <parameter ref="DeviceId" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="NodeTypeDMCapable" requirement="readOnly"/>
        <parameter ref="NodeTypeSCCapable" requirement="readOnly"/>
        <parameter ref="NodeTypeDMConfig" requirement="readOnly"/>
        <parameter ref="NodeTypeDMStatus" requirement="readOnly"/>
        <parameter ref="NodeTypeSCStatus" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Ghn.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.Ghn.Interface.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="DeviceId" requirement="readOnly"/>
        <parameter ref="TxPhyRate" requirement="readOnly"/>
        <parameter ref="RxPhyRate" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DNSRelay:1" dmr:version="2.0">
      <object ref="Device.DNS." requirement="present"/>
      <object ref="Device.DNS.Relay." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ForwardNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS.Relay.Forwarding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="DNSServer" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Type" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Routing:1" dmr:version="2.0">
      <object ref="Device.Routing." requirement="present">
        <parameter ref="RouterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.RIP." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="SupportedModes" requirement="readOnly"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.RIP.InterfaceSetting.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AcceptRA" requirement="readWrite"/>
        <parameter ref="SendRA" requirement="readWrite"/>
      </object>
      <object ref="Device.Routing.Router.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="IPv4ForwardingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.Router.{i}.IPv4Forwarding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="DestIPAddress" requirement="readWrite"/>
        <parameter ref="DestSubnetMask" requirement="readWrite"/>
        <parameter ref="GatewayIPAddress" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ForwardingMetric" requirement="readWrite"/>
        <parameter ref="StaticRoute" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Routing:2" base="Routing:1" dmr:version="2.2">
      <object ref="Device.Routing.Router.{i}.IPv4Forwarding.{i}." requirement="createDelete">
        <parameter ref="Origin" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPv6Routing:1" dmr:version="2.2">
      <object ref="Device.Routing." requirement="present">
        <parameter ref="RouterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.RIP." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="SupportedModes" requirement="readOnly"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.RIP.InterfaceSetting.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AcceptRA" requirement="readWrite"/>
        <parameter ref="SendRA" requirement="readWrite"/>
      </object>
      <object ref="Device.Routing.RouteInformation." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.RouteInformation.InterfaceSetting.{i}." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readOnly"/>
        <parameter ref="SourceRouter" requirement="readOnly"/>
        <parameter ref="PreferredRouteFlag" requirement="readOnly"/>
        <parameter ref="Prefix" requirement="readOnly"/>
        <parameter ref="RouteLifetime" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.Router.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="IPv6ForwardingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Routing.Router.{i}.IPv6Forwarding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="DestIPPrefix" requirement="readWrite"/>
        <parameter ref="NextHop" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ForwardingMetric" requirement="readWrite"/>
        <parameter ref="Origin" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPInterface:1" dmr:version="2.0">
      <object ref="Device.IP." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="IPv4AddressNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Interface.{i}.IPv4Address.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="IPAddress" requirement="readWrite"/>
        <parameter ref="SubnetMask" requirement="readWrite"/>
        <parameter ref="AddressingType" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VLANTermination:1" dmr:version="2.0">
      <object ref="Device.Ethernet." requirement="present">
        <parameter ref="VLANTerminationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Ethernet.VLANTermination.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="VLANID" requirement="readWrite"/>
      </object>
      <object ref="Device.Ethernet.VLANTermination.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetLink:1" dmr:version="2.0">
      <object ref="Device.Ethernet." requirement="present">
        <parameter ref="LinkNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Ethernet.Link.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
      </object>
      <object ref="Device.Ethernet.Link.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Bridge:1" dmr:version="2.0">
      <object ref="Device.Bridging." requirement="present">
        <parameter ref="MaxBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxDBridgeEntries" requirement="readOnly"/>
        <parameter ref="BridgeNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="PortNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.Port.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="ManagementPort" requirement="readWrite"/>
        <parameter ref="PortState" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.Port.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VLANBridge:1" dmr:version="2.0">
      <object ref="Device.Bridging." requirement="present">
        <parameter ref="MaxBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxDBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxQBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxVLANEntries" requirement="readOnly"/>
        <parameter ref="BridgeNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Standard" requirement="readWrite"/>
        <parameter ref="PortNumberOfEntries" requirement="readOnly"/>
        <parameter ref="VLANNumberOfEntries" requirement="readOnly"/>
        <parameter ref="VLANPortNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.Port.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="ManagementPort" requirement="readWrite"/>
        <parameter ref="DefaultUserPriority" requirement="readWrite"/>
        <parameter ref="PriorityRegeneration" requirement="readWrite"/>
        <parameter ref="PortState" requirement="readOnly"/>
        <parameter ref="PVID" requirement="readWrite"/>
        <parameter ref="AcceptableFrameTypes" requirement="readWrite"/>
        <parameter ref="IngressFiltering" requirement="readWrite"/>
        <parameter ref="PriorityTagging" requirement="readWrite"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.Port.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.VLAN.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="VLANID" requirement="readWrite"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.VLANPort.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="VLAN" requirement="readWrite"/>
        <parameter ref="Port" requirement="readWrite"/>
        <parameter ref="Untagged" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BridgeFilter:1" dmr:version="2.0">
      <object ref="Device.Bridging." requirement="present">
        <parameter ref="MaxFilterEntries" requirement="readOnly"/>
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Filter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Bridge" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="VLANIDFilter" requirement="readWrite"/>
        <parameter ref="EthertypeFilterList" requirement="readWrite"/>
        <parameter ref="EthertypeFilterExclude" requirement="readWrite"/>
        <parameter ref="SourceMACAddressFilterList" requirement="readWrite"/>
        <parameter ref="SourceMACAddressFilterExclude" requirement="readWrite"/>
        <parameter ref="DestMACAddressFilterList" requirement="readWrite"/>
        <parameter ref="DestMACAddressFilterExclude" requirement="readWrite"/>
        <parameter ref="SourceMACFromVendorClassIDFilter" requirement="readWrite"/>
        <parameter ref="SourceMACFromVendorClassIDFilterExclude" requirement="readWrite"/>
        <parameter ref="SourceMACFromVendorClassIDMode" requirement="readWrite"/>
        <parameter ref="DestMACFromVendorClassIDFilter" requirement="readWrite"/>
        <parameter ref="DestMACFromVendorClassIDFilterExclude" requirement="readWrite"/>
        <parameter ref="DestMACFromVendorClassIDMode" requirement="readWrite"/>
        <parameter ref="SourceMACFromClientIDFilter" requirement="readWrite"/>
        <parameter ref="SourceMACFromClientIDFilterExclude" requirement="readWrite"/>
        <parameter ref="DestMACFromClientIDFilter" requirement="readWrite"/>
        <parameter ref="DestMACFromClientIDFilterExclude" requirement="readWrite"/>
        <parameter ref="SourceMACFromUserClassIDFilter" requirement="readWrite"/>
        <parameter ref="SourceMACFromUserClassIDFilterExclude" requirement="readWrite"/>
        <parameter ref="DestMACFromUserClassIDFilter" requirement="readWrite"/>
        <parameter ref="DestMACFromUserClassIDFilterExclude" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BridgeFilter:2" base="BridgeFilter:1" dmr:version="2.2">
      <object ref="Device.Bridging.Filter.{i}." requirement="createDelete">
        <parameter ref="DHCPType" requirement="readWrite"/>
        <parameter ref="SourceMACFromVendorClassIDFilter" requirement="readWrite">
          <description>
            REQUIRED only for IPv4 capable devices.
          </description>
        </parameter>
        <parameter ref="DestMACFromVendorClassIDFilter" requirement="readWrite">
          <description>
            REQUIRED only for IPv4 capable devices.
          </description>
        </parameter>
        <parameter ref="SourceMACFromVendorClassIDFilterv6" requirement="readWrite">
          <description>
            REQUIRED only for IPv6 capable devices.
          </description>
        </parameter>
        <parameter ref="DestMACFromVendorClassIDFilterv6" requirement="readWrite">
          <description>
            REQUIRED only for IPv6 capable devices.
          </description>
        </parameter>
      </object>
    </profile>
    <profile name="BridgeL3L4Filter:1" extends="BridgeFilter:2" dmr:version="2.6">
      <object ref="Device.Bridging.Filter.{i}." requirement="createDelete">
        <parameter ref="DestIP" requirement="readWrite"/>
        <parameter ref="DestMask" requirement="readWrite"/>
        <parameter ref="DestIPExclude" requirement="readWrite"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="SourcePortRangeMax" requirement="readWrite"/>
        <parameter ref="SourceIP" requirement="readWrite"/>
        <parameter ref="SourceMask" requirement="readWrite"/>
        <parameter ref="SourceIPExclude" requirement="readWrite"/>
        <parameter ref="SourcePortExclude" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="ProtocolExclude" requirement="readWrite"/>
        <parameter ref="DestPort" requirement="readWrite"/>
        <parameter ref="DestPortExclude" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ATMLink:1" dmr:version="2.0">
      <object ref="Device.ATM." requirement="present">
        <parameter ref="LinkNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ATM.Link.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="Encapsulation" requirement="readWrite"/>
        <parameter ref="FCSPreserved" requirement="readWrite"/>
        <parameter ref="VCSearchList" requirement="readWrite"/>
        <parameter ref="AAL" requirement="readOnly"/>
      </object>
      <object ref="Device.ATM.Link.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
        <parameter ref="TransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ReceivedBlocks" requirement="readOnly"/>
        <parameter ref="CRCErrors" requirement="readOnly"/>
        <parameter ref="HECErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PTMLink:1" dmr:version="2.0">
      <object ref="Device.PTM." requirement="present">
        <parameter ref="LinkNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.PTM.Link.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
      </object>
      <object ref="Device.PTM.Link.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetInterface:1" dmr:version="2.0">
      <object ref="Device.Ethernet." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Ethernet.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="DuplexMode" requirement="readWrite"/>
      </object>
      <object ref="Device.Ethernet.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetInterface:2" base="EthernetInterface:1" dmr:version="2.7">
      <object ref="Device.Ethernet.Interface.{i}." requirement="present">
        <parameter ref="CurrentBitRate" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ProviderBridge:1" dmr:version="2.7">
      <object ref="Device.Bridging." requirement="present">
        <parameter ref="MaxProviderBridgeEntries" requirement="readOnly"/>
        <parameter ref="ProviderBridgeNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.Port.{i}." requirement="createDelete">
        <parameter ref="ServiceAccessPrioritySelection" requirement="readWrite"/>
        <parameter ref="ServiceAccessPriorityTranslation" requirement="readWrite"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="TPID" requirement="readWrite"/>
      </object>
      <object ref="Device.Bridging.Bridge.{i}.Port.{i}.PriorityCodePoint." requirement="present">
        <parameter ref="PCPSelection" requirement="readWrite"/>
        <parameter ref="UseDEI" requirement="readWrite"/>
        <parameter ref="RequireDropEncoding" requirement="readWrite"/>
        <parameter ref="PCPEncoding" requirement="readWrite"/>
        <parameter ref="PCPDecoding" requirement="readWrite"/>
      </object>
      <object ref="Device.Bridging.ProviderBridge.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="SVLANcomponent" requirement="readWrite"/>
        <parameter ref="CVLANcomponents" requirement="readWrite"/>
      </object>
      <object ref="Device.Ethernet.VLANTermination.{i}." requirement="createDelete">
        <parameter ref="TPID" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ProviderBridgeQoS:1" dmr:version="2.7">
      <object ref="Device.QoS." requirement="present">
        <parameter ref="DefaultInnerEthernetPriorityMark" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Classification.{i}." requirement="createDelete">
        <parameter ref="InnerEthernetPriorityCheck" requirement="readWrite"/>
        <parameter ref="InnerEthernetPriorityExclude" requirement="readWrite"/>
        <parameter ref="InnerEthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="EthernetDEICheck" requirement="readWrite"/>
        <parameter ref="EthernetDEIExclude" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ADSL:1" dmr:version="2.0">
      <description>
        Note: This profile is valid for G.992.1 modems.
      </description>
      <object ref="Device.DSL." requirement="present">
        <parameter ref="LineNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ChannelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="UpstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="XTURVendor" requirement="readOnly"/>
        <parameter ref="XTURCountry" requirement="readOnly"/>
        <parameter ref="XTUCVendor" requirement="readOnly"/>
        <parameter ref="XTUCCountry" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.Stats.Total." requirement="present">
        <parameter ref="ErroredSecs" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSecs" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.Stats.Showtime." requirement="present">
        <parameter ref="ErroredSecs" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSecs" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="UpstreamCurrRate" requirement="readOnly"/>
        <parameter ref="DownstreamCurrRate" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}.Stats.Total." requirement="present">
        <parameter ref="XTURFECErrors" requirement="readOnly"/>
        <parameter ref="XTUCFECErrors" requirement="readOnly"/>
        <parameter ref="XTURHECErrors" requirement="readOnly"/>
        <parameter ref="XTUCHECErrors" requirement="readOnly"/>
        <parameter ref="XTURCRCErrors" requirement="readOnly"/>
        <parameter ref="XTUCCRCErrors" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}.Stats.Showtime." requirement="present">
        <parameter ref="XTURFECErrors" requirement="readOnly"/>
        <parameter ref="XTUCFECErrors" requirement="readOnly"/>
        <parameter ref="XTURHECErrors" requirement="readOnly"/>
        <parameter ref="XTUCHECErrors" requirement="readOnly"/>
        <parameter ref="XTURCRCErrors" requirement="readOnly"/>
        <parameter ref="XTUCCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2:1" dmr:version="2.0">
      <description>
        Note: This profile is valid for G.992.3 and G.992.5 modems.
      </description>
      <object ref="Device.DSL." requirement="present">
        <parameter ref="LineNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ChannelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="StandardsSupported" requirement="readOnly"/>
        <parameter ref="StandardUsed" requirement="readOnly"/>
        <parameter ref="UpstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.TestParams." requirement="present">
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNds" requirement="readOnly"/>
        <parameter ref="LATNus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationSupported" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationUsed" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2:2" base="ADSL2:1" dmr:version="2.8">
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="XTSE" requirement="readOnly"/>
        <parameter ref="XTSUsed" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}." requirement="present">
        <parameter ref="ACTNDR" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2:1" dmr:version="2.0">
      <object ref="Device.DSL." requirement="present">
        <parameter ref="LineNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ChannelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="StandardsSupported" requirement="readOnly"/>
        <parameter ref="StandardUsed" requirement="readOnly"/>
        <parameter ref="AllowedProfiles" requirement="readOnly"/>
        <parameter ref="CurrentProfile" requirement="readOnly"/>
        <parameter ref="UPBOKLE" requirement="readOnly"/>
        <parameter ref="UpstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="TRELLISds" requirement="readOnly"/>
        <parameter ref="TRELLISus" requirement="readOnly"/>
        <parameter ref="ACTSNRMODEds" requirement="readOnly"/>
        <parameter ref="ACTSNRMODEus" requirement="readOnly"/>
        <parameter ref="ACTUALCE" requirement="readOnly"/>
        <parameter ref="SNRMpbds" requirement="readOnly"/>
        <parameter ref="SNRMpbus" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Line.{i}.TestParams." requirement="present">
        <parameter ref="HLOGGds" requirement="readOnly"/>
        <parameter ref="HLOGGus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNGds" requirement="readOnly"/>
        <parameter ref="QLNGus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNds" requirement="readOnly"/>
        <parameter ref="LATNus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationSupported" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationUsed" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2:2" base="VDSL2:1" dmr:version="2.8">
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="XTSE" requirement="readOnly"/>
        <parameter ref="XTSUsed" requirement="readOnly"/>
        <parameter ref="UPBOKLEPb" requirement="readOnly"/>
        <parameter ref="UPBOKLERPb" requirement="readOnly"/>
        <parameter ref="ACTRAMODEds" requirement="readOnly"/>
        <parameter ref="ACTRAMODEus" requirement="readOnly"/>
        <parameter ref="ACTINPROCds" requirement="readOnly"/>
        <parameter ref="ACTINPROCus" requirement="readOnly"/>
        <parameter ref="SNRMROCds" requirement="readOnly"/>
        <parameter ref="SNRMROCus" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.Channel.{i}." requirement="present">
        <parameter ref="ACTNDR" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2:3" base="VDSL2:2" dmr:version="2.12">
      <object ref="Device.DSL.Line.{i}." requirement="present">
        <parameter ref="UpstreamAttenuation" status="deleted" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" status="deleted" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="CellularInterfaceBase:1" dmr:version="2.8">
      <object ref="Device.Cellular." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="AccessPointNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Cellular.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="NetworkInUse" requirement="readOnly"/>
        <parameter ref="CurrentAccessTechnology" requirement="readOnly"/>
      </object>
      <object ref="Device.Cellular.Interface.{i}.USIM." requirement="present">
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MSISDN" requirement="readOnly"/>
      </object>
      <object ref="Device.Cellular.AccessPoint.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="APN" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="CellularInterfaceExtended:1" extends="CellularInterfaceBase:1" dmr:version="2.8">
      <object ref="Device.Cellular." requirement="present">
        <parameter ref="RoamingEnabled" requirement="readWrite"/>
        <parameter ref="RoamingStatus" requirement="readOnly"/>
      </object>
      <object ref="Device.Cellular.Interface.{i}." requirement="present">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="IMEI" requirement="readOnly"/>
        <parameter ref="SupportedAccessTechnologies" requirement="readOnly"/>
        <parameter ref="PreferredAccessTechnology" requirement="readWrite"/>
        <parameter ref="NetworkRequested" requirement="readOnly"/>
        <parameter ref="AvailableNetworks" requirement="readOnly"/>
      </object>
      <object ref="Device.Cellular.Interface.{i}.USIM." requirement="present">
        <parameter ref="IMSI" requirement="readOnly"/>
        <parameter ref="ICCID" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="CellularInterfaceStats:1" dmr:version="2.8">
      <object ref="Device.Cellular.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="LLDPBaseline:1" dmr:version="2.8">
      <object ref="Device.LLDP." requirement="present"/>
      <object ref="Device.LLDP.Discovery." requirement="present">
        <parameter ref="DeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LLDP.Discovery.Device.{i}." requirement="present">
        <parameter ref="Interface" requirement="readOnly"/>
        <parameter ref="ChassisIDSubtype" requirement="readOnly"/>
        <parameter ref="ChassisID" requirement="readOnly"/>
        <parameter ref="Host" requirement="readOnly"/>
        <parameter ref="PortNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LLDP.Discovery.Device.{i}.Port.{i}." requirement="present">
        <parameter ref="PortIDSubtype" requirement="readOnly"/>
        <parameter ref="PortID" requirement="readOnly"/>
        <parameter ref="TTL" requirement="readOnly"/>
        <parameter ref="PortDescription" requirement="readOnly"/>
        <parameter ref="LastUpdate" requirement="readOnly"/>
        <parameter ref="MACAddressList" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="LLDPRemOrgDefInfo:1" dmr:version="2.8">
      <object ref="Device.LLDP.Discovery.Device.{i}.Port.{i}.LinkInformation." requirement="present">
        <parameter ref="InterfaceType" requirement="readOnly"/>
        <parameter ref="MACForwardingTable" requirement="readOnly"/>
      </object>
      <object ref="Device.LLDP.Discovery.Device.{i}.DeviceInformation." requirement="present">
        <parameter ref="DeviceCategory" requirement="readOnly"/>
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="ModelName" requirement="readOnly"/>
        <parameter ref="ModelNumber" requirement="readOnly"/>
        <parameter ref="VendorSpecificNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LLDP.Discovery.Device.{i}.DeviceInformation.VendorSpecific.{i}." requirement="present">
        <parameter ref="OrganizationCode" requirement="readOnly"/>
        <parameter ref="InformationType" requirement="readOnly"/>
        <parameter ref="Information" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="GREBasic:1" dmr:version="2.8">
      <object ref="Device.GRE." requirement="present">
        <parameter ref="TunnelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="RemoteEndpoints" requirement="readWrite"/>
        <parameter ref="KeepAlivePolicy" requirement="readWrite"/>
        <parameter ref="KeepAliveTimeout" requirement="readWrite"/>
        <parameter ref="KeepAliveThreshold" requirement="readWrite"/>
        <parameter ref="DeliveryHeaderProtocol" requirement="readWrite"/>
        <parameter ref="ConnectedRemoteEndpoint" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readOnly"/>
        <parameter ref="ProtocolIdOverride" requirement="readWrite"/>
        <parameter ref="UseChecksum" requirement="readWrite"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="GREAdv:1" extends="GREBasic:1" dmr:version="2.8">
      <object ref="Device.GRE." requirement="present">
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="KeepAliveSent" requirement="readOnly"/>
        <parameter ref="KeepAliveReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}.Interface.{i}." requirement="createDelete">
        <parameter ref="KeyIdentifierGenerationPolicy" requirement="readWrite"/>
        <parameter ref="KeyIdentifier" requirement="readWrite"/>
        <parameter ref="UseSequenceNumber" requirement="readWrite"/>
      </object>
      <object ref="Device.GRE.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="DiscardChecksumReceived" requirement="readOnly"/>
        <parameter ref="DiscardSequenceNumberReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.GRE.Filter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="DSCPMarkPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="MAPBasic:1" dmr:version="2.8">
      <object ref="Device.MAP." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="DomainNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MAP.Domain.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="TransportMode" requirement="readOnly"/>
        <parameter ref="WANInterface" requirement="readOnly"/>
        <parameter ref="IPv6Prefix" requirement="readWrite"/>
        <parameter ref="BRIPv6Prefix" requirement="readWrite"/>
        <parameter ref="RuleNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MAP.Domain.{i}.Rule.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="IPv6Prefix" requirement="readWrite"/>
        <parameter ref="IPv4Prefix" requirement="readWrite"/>
        <parameter ref="IsFMR" requirement="readWrite"/>
      </object>
      <object ref="Device.MAP.Domain.{i}.Interface." requirement="present"/>
    </profile>
    <profile name="MAPAdv:1" extends="MAPBasic:1" dmr:version="2.8">
      <object ref="Device.MAP.Domain.{i}." requirement="present">
        <parameter ref="PSIDOffset" requirement="readWrite"/>
        <parameter ref="PSIDLength" requirement="readWrite"/>
        <parameter ref="PSID" requirement="readWrite"/>
        <parameter ref="IncludeSystemPorts" requirement="readWrite"/>
      </object>
      <object ref="Device.MAP.Domain.{i}.Rule.{i}." requirement="createDelete">
        <parameter ref="EABitsLength" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BondedDSL:1" dmr:version="2.0">
      <object ref="Device.DSL." requirement="present">
        <parameter ref="BondingGroupNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readOnly"/>
        <parameter ref="GroupStatus" requirement="readOnly"/>
        <parameter ref="BondScheme" requirement="readOnly"/>
        <parameter ref="GroupCapacity" requirement="readOnly"/>
        <parameter ref="RunningTime" requirement="readOnly"/>
        <parameter ref="BondedChannelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.BondedChannel.{i}." requirement="present">
        <parameter ref="Channel" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.BondedChannel.{i}.Ethernet." requirement="present"/>
      <object ref="Device.DSL.BondingGroup.{i}.BondedChannel.{i}.Ethernet.Stats." requirement="present">
        <parameter ref="UnderflowErrorsSent" requirement="readOnly"/>
        <parameter ref="CRCErrorsReceived" requirement="readOnly"/>
        <parameter ref="AlignmentErrorsReceived" requirement="readOnly"/>
        <parameter ref="ShortPacketsReceived" requirement="readOnly"/>
        <parameter ref="LongPacketsReceived" requirement="readOnly"/>
        <parameter ref="OverflowErrorsReceived" requirement="readOnly"/>
        <parameter ref="PauseFramesReceived" requirement="readOnly"/>
        <parameter ref="FramesDropped" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="CurrentDayStart" requirement="readOnly"/>
        <parameter ref="QuarterHourStart" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.Stats.Total." requirement="present">
        <parameter ref="FailureReasons" requirement="readOnly"/>
        <parameter ref="UpstreamRate" requirement="readOnly"/>
        <parameter ref="DownstreamRate" requirement="readOnly"/>
        <parameter ref="UpstreamPacketLoss" requirement="readOnly"/>
        <parameter ref="DownstreamPacketLoss" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="ErroredSeconds" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSeconds" requirement="readOnly"/>
        <parameter ref="UnavailableSeconds" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.Stats.CurrentDay." requirement="present">
        <parameter ref="FailureReasons" requirement="readOnly"/>
        <parameter ref="UpstreamRate" requirement="readOnly"/>
        <parameter ref="DownstreamRate" requirement="readOnly"/>
        <parameter ref="UpstreamPacketLoss" requirement="readOnly"/>
        <parameter ref="DownstreamPacketLoss" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="ErroredSeconds" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSeconds" requirement="readOnly"/>
        <parameter ref="UnavailableSeconds" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.Stats.QuarterHour." requirement="present">
        <parameter ref="FailureReasons" requirement="readOnly"/>
        <parameter ref="UpstreamRate" requirement="readOnly"/>
        <parameter ref="DownstreamRate" requirement="readOnly"/>
        <parameter ref="UpstreamPacketLoss" requirement="readOnly"/>
        <parameter ref="DownstreamPacketLoss" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="ErroredSeconds" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSeconds" requirement="readOnly"/>
        <parameter ref="UnavailableSeconds" requirement="readOnly"/>
      </object>
      <object ref="Device.DSL.BondingGroup.{i}.Ethernet." requirement="present"/>
      <object ref="Device.DSL.BondingGroup.{i}.Ethernet.Stats." requirement="present">
        <parameter ref="PAFErrors" requirement="readOnly"/>
        <parameter ref="PAFSmallFragments" requirement="readOnly"/>
        <parameter ref="PAFLargeFragments" requirement="readOnly"/>
        <parameter ref="PAFBadFragments" requirement="readOnly"/>
        <parameter ref="PAFLostFragments" requirement="readOnly"/>
        <parameter ref="PAFLateFragments" requirement="readOnly"/>
        <parameter ref="PAFLostStarts" requirement="readOnly"/>
        <parameter ref="PAFLostEnds" requirement="readOnly"/>
        <parameter ref="PAFOverflows" requirement="readOnly"/>
        <parameter ref="PauseFramesSent" requirement="readOnly"/>
        <parameter ref="CRCErrorsReceived" requirement="readOnly"/>
        <parameter ref="AlignmentErrorsReceived" requirement="readOnly"/>
        <parameter ref="ShortPacketsReceived" requirement="readOnly"/>
        <parameter ref="LongPacketsReceived" requirement="readOnly"/>
        <parameter ref="OverflowErrorsReceived" requirement="readOnly"/>
        <parameter ref="FramesDropped" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="HPNA:1" dmr:version="2.0">
      <object ref="Device.HPNA." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="FirmwareVersion" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="NetworkUtilization" requirement="readOnly"/>
        <parameter ref="PossibleConnectionTypes" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readOnly"/>
        <parameter ref="PossibleSpectralModes" requirement="readOnly"/>
        <parameter ref="SpectralMode" requirement="readOnly"/>
        <parameter ref="MTU" requirement="readOnly"/>
        <parameter ref="NoiseMargin" requirement="readOnly"/>
        <parameter ref="MinMulticastRate" requirement="readOnly"/>
        <parameter ref="NegMulticastRate" requirement="readOnly"/>
        <parameter ref="MasterSelectionMode" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Interface.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="NodeID" requirement="readOnly"/>
        <parameter ref="IsMaster" requirement="readOnly"/>
        <parameter ref="Synced" requirement="readOnly"/>
        <parameter ref="TotalSyncTime" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="PHYDiagnosticsEnable" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="HPNAQoS:1" dmr:version="2.0">
      <object ref="Device.HPNA.Interface.{i}.QoS." requirement="present">
        <parameter ref="FlowSpecNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Interface.{i}.QoS.FlowSpec.{i}." requirement="createDelete">
        <parameter ref="FlowType" requirement="readWrite"/>
        <parameter ref="Priority" requirement="readWrite"/>
        <parameter ref="Latency" requirement="readWrite"/>
        <parameter ref="Jitter" requirement="readWrite"/>
        <parameter ref="PacketSize" requirement="readWrite"/>
        <parameter ref="MinRate" requirement="readWrite"/>
        <parameter ref="AvgRate" requirement="readWrite"/>
        <parameter ref="MaxRate" requirement="readWrite"/>
        <parameter ref="PER" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PerformanceMonitoring.Channels.Channel.{i}." requirement="present">
        <parameter ref="FlowSpec" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="HeartbeatPolicy:1" dmr:version="2.12">
      <description>
        Note that support for this profile implies support for the requirements of {{bibref|TR-069|Annex O}}.
      </description>
      <object ref="Device.ManagementServer.HeartbeatPolicy." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ReportingInterval" requirement="readWrite"/>
        <parameter ref="InitiationTime" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="HPNADiagnostics:1" dmr:version="2.0">
      <object ref="Device.HPNA.Diagnostics.PerformanceMonitoring." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="SampleInterval" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PerformanceMonitoring.Nodes." requirement="present">
        <parameter ref="CurrentStart" requirement="readOnly"/>
        <parameter ref="CurrentEnd" requirement="readOnly"/>
        <parameter ref="NodeNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PerformanceMonitoring.Nodes.Node.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="PacketsCrcErrored" requirement="readOnly"/>
        <parameter ref="PacketsCrcErroredHost" requirement="readOnly"/>
        <parameter ref="PacketsShortErrored" requirement="readOnly"/>
        <parameter ref="PacketsShortErroredHost" requirement="readOnly"/>
        <parameter ref="RxPacketsDropped" requirement="readOnly"/>
        <parameter ref="TxPacketsDropped" requirement="readOnly"/>
        <parameter ref="ControlRequestLocal" requirement="readOnly"/>
        <parameter ref="ControlReplyLocal" requirement="readOnly"/>
        <parameter ref="ControlRequestRemote" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PerformanceMonitoring.Channels." requirement="present">
        <parameter ref="TimeStamp" requirement="readOnly"/>
        <parameter ref="ChannelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PerformanceMonitoring.Channels.Channel.{i}." requirement="present">
        <parameter ref="HPNASrcMACAddress" requirement="readOnly"/>
        <parameter ref="HPNADestMACAddress" requirement="readOnly"/>
        <parameter ref="HostSrcMACAddress" requirement="readOnly"/>
        <parameter ref="HostDestMACAddress" requirement="readOnly"/>
        <parameter ref="PHYRate" requirement="readOnly"/>
        <parameter ref="BaudRate" requirement="readOnly"/>
        <parameter ref="SNR" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PHYThroughput." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="NumPacketsInBurst" requirement="readWrite"/>
        <parameter ref="BurstInterval" requirement="readWrite"/>
        <parameter ref="TestPacketPayloadLength" requirement="readWrite"/>
        <parameter ref="PayloadEncoding" requirement="readWrite"/>
        <parameter ref="PayloadDataGen" requirement="readWrite"/>
        <parameter ref="PayloadType" requirement="readWrite"/>
        <parameter ref="PriorityLevel" requirement="readWrite"/>
        <parameter ref="ResultNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HPNA.Diagnostics.PHYThroughput.Result.{i}." requirement="present">
        <parameter ref="SrcMACAddress" requirement="readOnly"/>
        <parameter ref="DestMACAddress" requirement="readOnly"/>
        <parameter ref="PHYRate" requirement="readOnly"/>
        <parameter ref="BaudRate" requirement="readOnly"/>
        <parameter ref="SNR" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="HomePlug:1" dmr:version="2.0">
      <object ref="Device.HomePlug." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HomePlug.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="LogicalNetwork" requirement="readWrite"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="FirmwareVersion" requirement="readOnly"/>
        <parameter ref="ForceCCo" requirement="readWrite"/>
        <parameter ref="NetworkPassword" requirement="readWrite"/>
        <parameter ref="OtherNetworksPresent" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.HomePlug.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="MPDUTxAck" requirement="readOnly"/>
        <parameter ref="MPDUTxCol" requirement="readOnly"/>
        <parameter ref="MPDUTxFailed" requirement="readOnly"/>
        <parameter ref="MPDURxAck" requirement="readOnly"/>
        <parameter ref="MPDURxFailed" requirement="readOnly"/>
      </object>
      <object ref="Device.HomePlug.Interface.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="TxPhyRate" requirement="readOnly"/>
        <parameter ref="RxPhyRate" requirement="readOnly"/>
        <parameter ref="SNRPerTone" requirement="readOnly"/>
        <parameter ref="AvgAttenuation" requirement="readOnly"/>
        <parameter ref="EndStationMACs" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MoCA:1" dmr:version="2.0">
      <object ref="Device.MoCA." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MoCA.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="FirmwareVersion" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="HighestVersion" requirement="readOnly"/>
        <parameter ref="CurrentVersion" requirement="readOnly"/>
        <parameter ref="NetworkCoordinator" requirement="readOnly"/>
        <parameter ref="PrivacyEnabledSetting" requirement="readWrite"/>
        <parameter ref="PrivacyEnabled" requirement="readOnly"/>
        <parameter ref="FreqCapabilityMask" requirement="readOnly"/>
        <parameter ref="FreqCurrentMaskSetting" requirement="readWrite"/>
        <parameter ref="FreqCurrentMask" requirement="readOnly"/>
        <parameter ref="CurrentOperFreq" requirement="readOnly"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
        <parameter ref="NodeID" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MoCA.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UPA:1" dmr:version="2.0">
      <object ref="Device.UPA." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.UPA.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="FirmwareVersion" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="NodeType" requirement="readWrite"/>
        <parameter ref="LogicalNetwork" requirement="readWrite"/>
        <parameter ref="EncryptionMethod" requirement="readWrite"/>
        <parameter ref="EncryptionKey" requirement="readWrite"/>
        <parameter ref="EstApplicationThroughput" requirement="readOnly"/>
        <parameter ref="ActiveNotchEnable" requirement="readWrite"/>
        <parameter ref="ActiveNotchNumberOfEntries" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.UPA.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.UPA.Interface.{i}.ActiveNotch.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="StartFreq" requirement="readWrite"/>
        <parameter ref="StopFreq" requirement="readWrite"/>
        <parameter ref="Depth" requirement="readWrite"/>
      </object>
      <object ref="Device.UPA.Interface.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="Port" requirement="readOnly"/>
        <parameter ref="LogicalNetwork" requirement="readOnly"/>
        <parameter ref="PhyTxThroughput" requirement="readOnly"/>
        <parameter ref="PhyRxThroughput" requirement="readOnly"/>
        <parameter ref="RealPhyRxThroughput" requirement="readOnly"/>
        <parameter ref="EstimatedPLR" requirement="readOnly"/>
        <parameter ref="MeanEstimatedAtt" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UPADiagnostics:1" dmr:version="2.0">
      <object ref="Device.UPA.Diagnostics.InterfaceMeasurement." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Port" requirement="readWrite"/>
        <parameter ref="Measurements" requirement="readOnly"/>
        <parameter ref="RxGain" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiRadio:1" dmr:version="2.0">
      <object ref="Device.WiFi." requirement="present">
        <parameter ref="RadioNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.Radio.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="SupportedFrequencyBands" requirement="readOnly"/>
        <parameter ref="OperatingFrequencyBand" requirement="readWrite"/>
        <parameter ref="SupportedStandards" requirement="readOnly"/>
        <parameter ref="OperatingStandards" requirement="readWrite"/>
        <parameter ref="RegulatoryDomain" requirement="readWrite"/>
        <parameter ref="PossibleChannels" requirement="readOnly"/>
        <parameter ref="Channel" requirement="readWrite"/>
        <parameter ref="AutoChannelSupported" requirement="readOnly"/>
        <parameter ref="AutoChannelEnable" requirement="readWrite"/>
        <parameter ref="TransmitPowerSupported" requirement="readOnly"/>
        <parameter ref="TransmitPower" requirement="readWrite"/>
        <parameter ref="ExtensionChannel" requirement="readWrite"/>
        <parameter ref="GuardInterval" requirement="readWrite"/>
        <parameter ref="MCS" requirement="readWrite"/>
        <parameter ref="IEEE80211hSupported" requirement="readOnly"/>
        <parameter ref="IEEE80211hEnabled" requirement="readWrite"/>
        <parameter ref="ChannelsInUse" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.Radio.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiSSID:1" dmr:version="2.0">
      <object ref="Device.WiFi." requirement="present">
        <parameter ref="SSIDNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.SSID.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="BSSID" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="SSID" requirement="readWrite"/>
      </object>
      <object ref="Device.WiFi.SSID.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiAccessPoint:1" dmr:version="2.0">
      <object ref="Device.WiFi." requirement="present">
        <parameter ref="AccessPointNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.AccessPoint.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="SSIDReference" requirement="readWrite"/>
        <parameter ref="SSIDAdvertisementEnabled" requirement="readWrite"/>
        <parameter ref="WMMCapability" requirement="readOnly"/>
        <parameter ref="UAPSDCapability" requirement="readOnly"/>
        <parameter ref="WMMEnable" requirement="readWrite"/>
        <parameter ref="UAPSDEnable" requirement="readWrite"/>
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.AccessPoint.{i}.Security." requirement="present">
        <parameter ref="ModesSupported" requirement="readOnly"/>
        <parameter ref="ModeEnabled" requirement="readWrite"/>
        <parameter ref="WEPKey" requirement="readWrite"/>
        <parameter ref="PreSharedKey" requirement="readWrite"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
        <parameter ref="RekeyingInterval" requirement="readWrite"/>
        <parameter ref="RadiusServerIPAddr" requirement="readWrite"/>
        <parameter ref="RadiusServerPort" requirement="readWrite"/>
        <parameter ref="RadiusSecret" requirement="readWrite"/>
      </object>
      <object ref="Device.WiFi.AccessPoint.{i}.WPS." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ConfigMethodsSupported" requirement="readOnly"/>
        <parameter ref="ConfigMethodsEnabled" requirement="readWrite"/>
      </object>
      <object ref="Device.WiFi.AccessPoint.{i}.AssociatedDevice.{i}." requirement="createDelete">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="AuthenticationState" requirement="readOnly"/>
        <parameter ref="LastDataDownlinkRate" requirement="readOnly"/>
        <parameter ref="LastDataUplinkRate" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiAccessPoint:2" base="WiFiAccessPoint:1" dmr:version="2.9">
      <object ref="Device.WiFi.AccessPoint.{i}." requirement="present">
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="AllowedMACAddress" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="WiFiEndPoint:1" dmr:version="2.0">
      <object ref="Device.WiFi." requirement="present">
        <parameter ref="EndPointNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.EndPoint.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ProfileReference" requirement="readWrite"/>
        <parameter ref="SSIDReference" requirement="readOnly"/>
        <parameter ref="ProfileNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.EndPoint.{i}.Stats." requirement="present">
        <parameter ref="LastDataDownlinkRate" requirement="readOnly"/>
        <parameter ref="LastDataUplinkRate" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.EndPoint.{i}.Security." requirement="present">
        <parameter ref="ModesSupported" requirement="readOnly"/>
      </object>
      <object ref="Device.WiFi.EndPoint.{i}.Profile.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="SSID" requirement="readWrite"/>
        <parameter ref="Location" requirement="readWrite"/>
        <parameter ref="Priority" requirement="readWrite"/>
      </object>
      <object ref="Device.WiFi.EndPoint.{i}.Profile.{i}.Security." requirement="present">
        <parameter ref="ModeEnabled" requirement="readWrite"/>
        <parameter ref="WEPKey" requirement="readWrite"/>
        <parameter ref="PreSharedKey" requirement="readWrite"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
      </object>
      <object ref="Device.WiFi.EndPoint.{i}.WPS." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ConfigMethodsSupported" requirement="readOnly"/>
        <parameter ref="ConfigMethodsEnabled" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="USBInterface:1" dmr:version="2.0">
      <object ref="Device.USB." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readOnly"/>
        <parameter ref="Port" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="USBPort:1" dmr:version="2.0">
      <object ref="Device.USB." requirement="present">
        <parameter ref="PortNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.Port.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Standard" requirement="readOnly"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="Receptacle" requirement="readOnly"/>
        <parameter ref="Rate" requirement="readOnly"/>
        <parameter ref="Power" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="NAT:1" dmr:version="2.0">
      <object ref="Device.NAT." requirement="createDelete">
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
        <parameter ref="PortMappingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.NAT.InterfaceSetting.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
      </object>
      <object ref="Device.NAT.PortMapping.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="LeaseDuration" requirement="readOnly"/>
        <parameter ref="RemoteHost" requirement="readWrite"/>
        <parameter ref="ExternalPort" requirement="readWrite"/>
        <parameter ref="InternalPort" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="InternalClient" requirement="readWrite"/>
        <parameter ref="Description" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoS:1" dmr:version="2.0">
      <object ref="Device.QoS." requirement="present">
        <parameter ref="MaxClassificationEntries" requirement="readOnly"/>
        <parameter ref="ClassificationNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxAppEntries" requirement="readOnly"/>
        <parameter ref="AppNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxFlowEntries" requirement="readOnly"/>
        <parameter ref="FlowNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxPolicerEntries" requirement="readOnly"/>
        <parameter ref="PolicerNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxQueueEntries" requirement="readOnly"/>
        <parameter ref="QueueNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ShaperNumberOfEntries" requirement="readOnly"/>
        <parameter ref="DefaultForwardingPolicy" requirement="readWrite"/>
        <parameter ref="DefaultPolicer" requirement="readWrite"/>
        <parameter ref="DefaultQueue" requirement="readWrite"/>
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
        <parameter ref="DefaultEthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="AvailableAppList" requirement="readOnly"/>
        <parameter ref="DefaultTrafficClass" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Classification.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="DestIP" requirement="readWrite"/>
        <parameter ref="DestMask" requirement="readWrite"/>
        <parameter ref="DestIPExclude" requirement="readWrite"/>
        <parameter ref="SourceIP" requirement="readWrite"/>
        <parameter ref="SourceMask" requirement="readWrite"/>
        <parameter ref="SourceIPExclude" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="ProtocolExclude" requirement="readWrite"/>
        <parameter ref="DestPort" requirement="readWrite"/>
        <parameter ref="DestPortRangeMax" requirement="readWrite"/>
        <parameter ref="DestPortExclude" requirement="readWrite"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="SourcePortRangeMax" requirement="readWrite"/>
        <parameter ref="SourcePortExclude" requirement="readWrite"/>
        <parameter ref="SourceMACAddress" requirement="readWrite"/>
        <parameter ref="SourceMACExclude" requirement="readWrite"/>
        <parameter ref="DestMACAddress" requirement="readWrite"/>
        <parameter ref="DestMACExclude" requirement="readWrite"/>
        <parameter ref="DSCPCheck" requirement="readWrite"/>
        <parameter ref="DSCPExclude" requirement="readWrite"/>
        <parameter ref="DSCPMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityCheck" requirement="readWrite"/>
        <parameter ref="EthernetPriorityExclude" requirement="readWrite"/>
        <parameter ref="EthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
        <parameter ref="Policer" requirement="readWrite"/>
        <parameter ref="TrafficClass" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Policer.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="CommittedRate" requirement="readWrite"/>
        <parameter ref="CommittedBurstSize" requirement="readWrite"/>
        <parameter ref="MeterType" requirement="readWrite"/>
        <parameter ref="PossibleMeterTypes" requirement="readOnly"/>
        <parameter ref="ConformingAction" requirement="readWrite"/>
        <parameter ref="NonConformingAction" requirement="readWrite"/>
        <parameter ref="TotalCountedPackets" requirement="readOnly"/>
        <parameter ref="TotalCountedBytes" requirement="readOnly"/>
        <parameter ref="ExcessBurstSize" requirement="readWrite"/>
        <parameter ref="PeakRate" requirement="readWrite"/>
        <parameter ref="PeakBurstSize" requirement="readWrite"/>
        <parameter ref="PartialConformingAction" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Queue.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="BufferLength" requirement="readOnly"/>
        <parameter ref="Weight" requirement="readWrite"/>
        <parameter ref="Precedence" requirement="readWrite"/>
        <parameter ref="REDThreshold" requirement="readWrite"/>
        <parameter ref="REDPercentage" requirement="readWrite"/>
        <parameter ref="DropAlgorithm" requirement="readWrite"/>
        <parameter ref="SchedulerAlgorithm" requirement="readWrite"/>
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
        <parameter ref="TrafficClasses" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Shaper.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
      <object ref="Device.Routing.Router.{i}.IPv4Forwarding.{i}." requirement="notSpecified">
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoS:2" base="QoS:1" dmr:version="2.2">
      <object ref="Device.Routing.Router.{i}.IPv4Forwarding.{i}." requirement="notSpecified">
        <description>
          REQUIRED only for IPv4 capable devices.
        </description>
      </object>
      <object ref="Device.Routing.Router.{i}.IPv6Forwarding.{i}." requirement="notSpecified">
        <description>
          REQUIRED only for IPv6 capable devices.
        </description>
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSDynamicFlow:1" dmr:version="2.0">
      <object ref="Device.QoS.App.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ProtocolIdentifier" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="DefaultForwardingPolicy" requirement="readWrite"/>
        <parameter ref="DefaultPolicer" requirement="readWrite"/>
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
        <parameter ref="DefaultEthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="DefaultTrafficClass" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Flow.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="TypeParameters" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="App" requirement="readWrite"/>
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
        <parameter ref="Policer" requirement="readWrite"/>
        <parameter ref="DSCPMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="TrafficClass" requirement="readWrite"/>
      </object>
      <object ref="Device.QoS.Classification.{i}." requirement="notSpecified">
        <parameter ref="App" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSStats:1" dmr:version="2.0">
      <object ref="Device.QoS." requirement="present">
        <parameter ref="QueueStatsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.QoS.Policer.{i}." requirement="notSpecified">
        <parameter ref="TotalCountedPackets" requirement="readOnly"/>
        <parameter ref="TotalCountedBytes" requirement="readOnly"/>
        <parameter ref="ConformingCountedPackets" requirement="readOnly"/>
        <parameter ref="ConformingCountedBytes" requirement="readOnly"/>
        <parameter ref="NonConformingCountedPackets" requirement="readOnly"/>
        <parameter ref="NonConformingCountedBytes" requirement="readOnly"/>
      </object>
      <object ref="Device.QoS.QueueStats.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Queue" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="OutputPackets" requirement="readOnly"/>
        <parameter ref="OutputBytes" requirement="readOnly"/>
        <parameter ref="DroppedPackets" requirement="readOnly"/>
        <parameter ref="DroppedBytes" requirement="readOnly"/>
        <parameter ref="QueueOccupancyPackets" requirement="readOnly"/>
        <parameter ref="QueueOccupancyPercentage" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="NeighborDiscovery:1" dmr:version="2.2">
      <object ref="Device.NeighborDiscovery." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.NeighborDiscovery.InterfaceSetting.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="RetransTimer" requirement="readWrite"/>
        <parameter ref="RtrSolicitationInterval" requirement="readWrite"/>
        <parameter ref="MaxRtrSolicitations" requirement="readWrite"/>
        <parameter ref="NUDEnable" requirement="readWrite"/>
        <parameter ref="RSEnable" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="RouterAdvertisement:1" dmr:version="2.2">
      <object ref="Device.RouterAdvertisement." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.RouterAdvertisement.InterfaceSetting.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="MaxRtrAdvInterval" requirement="readWrite"/>
        <parameter ref="MinRtrAdvInterval" requirement="readWrite"/>
        <parameter ref="AdvDefaultLifetime" requirement="readWrite"/>
        <parameter ref="AdvManagedFlag" requirement="readWrite"/>
        <parameter ref="AdvOtherConfigFlag" requirement="readWrite"/>
        <parameter ref="AdvMobileAgentFlag" requirement="readWrite"/>
        <parameter ref="AdvPreferredRouterFlag" requirement="readWrite"/>
        <parameter ref="AdvNDProxyFlag" requirement="readWrite"/>
        <parameter ref="AdvLinkMTU" requirement="readWrite"/>
        <parameter ref="AdvReachableTime" requirement="readWrite"/>
        <parameter ref="AdvRetransTimer" requirement="readWrite"/>
        <parameter ref="AdvCurHopLimit" requirement="readWrite"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.RouterAdvertisement.InterfaceSetting.{i}.Option.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IPv6rd:1" dmr:version="2.2">
      <object ref="Device.IPv6rd." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IPv6rd.InterfaceSetting.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="BorderRelayIPv4Addresses" requirement="readWrite"/>
        <parameter ref="AllTrafficToBorderRelay" requirement="readWrite"/>
        <parameter ref="SPIPv6Prefix" requirement="readWrite"/>
        <parameter ref="IPv4MaskLength" requirement="readWrite"/>
        <parameter ref="AddressSource" requirement="readWrite"/>
        <parameter ref="TunnelInterface" requirement="readOnly"/>
        <parameter ref="TunneledInterface" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DSLite:1" dmr:version="2.2">
      <object ref="Device.DSLite." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="InterfaceSettingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DSLite.InterfaceSetting.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="EndpointAssignmentPrecedence" requirement="readWrite"/>
        <parameter ref="EndpointName" requirement="readWrite"/>
        <parameter ref="EndpointAddress" requirement="readWrite"/>
        <parameter ref="Origin" requirement="readOnly"/>
        <parameter ref="TunnelInterface" requirement="readOnly"/>
        <parameter ref="TunneledInterface" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DSLite:2" base="DSLite:1" dmr:version="2.5">
      <object ref="Device.DSLite.InterfaceSetting.{i}." requirement="present">
        <parameter ref="EndpointAddressTypePrecedence" requirement="readWrite"/>
        <parameter ref="EndpointAddressInUse" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Hosts:1" dmr:version="2.0">
      <object ref="Device.Hosts." requirement="present">
        <parameter ref="HostNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.Hosts.Host.{i}." requirement="present">
        <parameter ref="IPAddress" requirement="readOnly"/>
        <parameter ref="AddressSource" requirement="readOnly"/>
        <parameter ref="LeaseTimeRemaining" requirement="readOnly"/>
        <parameter ref="PhysAddress" requirement="readOnly"/>
        <parameter ref="HostName" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
        <parameter ref="Layer1Interface" requirement="readOnly"/>
        <parameter ref="Layer3Interface" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Hosts:2" base="Hosts:1" dmr:version="2.2">
      <object ref="Device.Hosts.Host.{i}." requirement="present">
        <parameter ref="DHCPClient" requirement="readOnly"/>
        <parameter ref="AssociatedDevice" requirement="readOnly"/>
        <parameter ref="IPv4AddressNumberOfEntries" requirement="readOnly">
          <description>
            REQUIRED only for IPv4 capable devices.
          </description>
        </parameter>
        <parameter ref="IPv6AddressNumberOfEntries" requirement="readOnly">
          <description>
            REQUIRED only for IPv6 capable devices.
          </description>
        </parameter>
      </object>
      <object ref="Device.Hosts.Host.{i}.IPv4Address.{i}." requirement="present">
        <description>
          REQUIRED only for IPv4 capable devices.
        </description>
        <parameter ref="IPAddress" requirement="readOnly"/>
      </object>
      <object ref="Device.Hosts.Host.{i}.IPv6Address.{i}." requirement="present">
        <description>
          REQUIRED only for IPv6 capable devices.
        </description>
        <parameter ref="IPAddress" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="CaptivePortal:1" dmr:version="2.0">
      <object ref="Device.CaptivePortal." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="AllowedList" requirement="readWrite"/>
        <parameter ref="URL" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Time:1" dmr:version="2.0">
      <object ref="Device.Time." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="NTPServer1" requirement="readWrite"/>
        <parameter ref="NTPServer2" requirement="readWrite"/>
        <parameter ref="CurrentLocalTime" requirement="readOnly"/>
        <parameter ref="LocalTimeZone" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IEEE8021xAuthentication:1" dmr:version="2.0">
      <object ref="Device.IEEE8021x." requirement="present">
        <parameter ref="SupplicantNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE8021x.Supplicant.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="PAEState" requirement="readOnly"/>
        <parameter ref="EAPIdentity" requirement="readWrite"/>
        <parameter ref="MaxStart" requirement="readWrite"/>
        <parameter ref="StartPeriod" requirement="readWrite"/>
        <parameter ref="HeldPeriod" requirement="readWrite"/>
        <parameter ref="AuthPeriod" requirement="readWrite"/>
        <parameter ref="AuthenticationCapabilities" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE8021x.Supplicant.{i}.Stats." requirement="present">
        <parameter ref="ReceivedFrames" requirement="readOnly"/>
        <parameter ref="TransmittedFrames" requirement="readOnly"/>
        <parameter ref="TransmittedStartFrames" requirement="readOnly"/>
        <parameter ref="TransmittedLogoffFrames" requirement="readOnly"/>
        <parameter ref="TransmittedResponseIdFrames" requirement="readOnly"/>
        <parameter ref="TransmittedResponseFrames" requirement="readOnly"/>
        <parameter ref="ReceivedRequestIdFrames" requirement="readOnly"/>
        <parameter ref="ReceivedRequestFrames" requirement="readOnly"/>
        <parameter ref="ReceivedInvalidFrames" requirement="readOnly"/>
        <parameter ref="ReceivedLengthErrorFrames" requirement="readOnly"/>
        <parameter ref="LastFrameVersion" requirement="readOnly"/>
        <parameter ref="LastFrameSourceMACAddress" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE8021x.Supplicant.{i}.EAPMD5." requirement="present">
        <description>
          802.1x Authentication provisioning information used for MD5 shared secret exchange. This object will not exist  if EAP-MD5 is not a supported authentication type.
        </description>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="SharedSecret" requirement="readWrite"/>
      </object>
      <object ref="Device.IEEE8021x.Supplicant.{i}.EAPTLS." requirement="present">
        <description>
          802.1x Authentication provisioning information used for TLS certificate authentication. This object will not  exist if the EAP-TLS is not a supported authentication type.
        </description>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="MutualAuthenticationEnable" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IEEE8021xAuthentication:2" base="IEEE8021xAuthentication:1" dmr:version="2.7">
      <object ref="Device.IEEE8021x.Supplicant.{i}." requirement="present">
        <parameter ref="Interface" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPv4Client:1" dmr:version="2.0">
      <object ref="Device.DHCPv4." requirement="present">
        <parameter ref="ClientNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Client.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Renew" requirement="readWrite"/>
        <parameter ref="IPAddress" requirement="readOnly"/>
        <parameter ref="SubnetMask" requirement="readOnly"/>
        <parameter ref="IPRouters" requirement="readOnly"/>
        <parameter ref="DNSServers" requirement="readOnly"/>
        <parameter ref="LeaseTimeRemaining" requirement="readOnly"/>
        <parameter ref="DHCPServer" requirement="readOnly"/>
        <parameter ref="SentOptionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ReqOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Client.{i}.SentOption.{i}." requirement="createDelete">
        <description>
          This table is REQUIRED to support sending of option 60 (Vendor Class Identifier) and option 77 (User Class Identifier) values.
        </description>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="Device.DHCPv4.Client.{i}.ReqOption.{i}." requirement="createDelete">
        <description>
          This table is REQUIRED to support requesting of option 60 (Vendor Class Identifier), option 61 (Client Identifier) and option 77 (User Class Identifier) values.
        </description>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPPingDetailed:1" dmr:version="2.7">
      <object ref="Device.IP.Diagnostics.IPPing." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTimeDetailed" requirement="readOnly"/>
        <parameter ref="MinimumResponseTimeDetailed" requirement="readOnly"/>
        <parameter ref="MaximumResponseTimeDetailed" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPPing:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics.IPPing." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="TraceRoute:1" dmr:version="2.0">
      <object ref="Device.IP.Diagnostics.TraceRoute." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfTries" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="MaxHopCount" requirement="readWrite"/>
        <parameter ref="ResponseTime" requirement="readOnly"/>
        <parameter ref="RouteHopsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Diagnostics.TraceRoute.RouteHops.{i}." requirement="present">
        <parameter ref="Host" requirement="readOnly"/>
        <parameter ref="HostAddress" requirement="readOnly"/>
        <parameter ref="ErrorCode" requirement="readOnly"/>
        <parameter ref="RTTimes" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ATMLoopback:1" dmr:version="2.0">
      <object ref="Device.ATM.Diagnostics.F5Loopback." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DSLDiagnostics:1" dmr:version="2.0">
      <description>
        Note: This profile is valid for G.992.1 modems.
      </description>
      <object ref="Device.DSL.Diagnostics.ADSLLineTest." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="BITSpsds" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2Diagnostics:1" dmr:version="2.0">
      <description>
        Note: This profile is valid for G.992.3 and G.992.5 modems.
      </description>
      <object ref="Device.DSL.Diagnostics.ADSLLineTest." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINSCus" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="HLINpsus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNpbds" requirement="readOnly"/>
        <parameter ref="LATNpbus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2Diagnostics:1" dmr:version="2.0">
      <description>
        Note: This profile is valid for G.993.2 modems.
      </description>
      <object ref="Device.DSL.Diagnostics.ADSLLineTest." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINSCus" requirement="readOnly"/>
        <parameter ref="HLINGds" requirement="readOnly"/>
        <parameter ref="HLINGus" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="HLINpsus" requirement="readOnly"/>
        <parameter ref="HLOGGds" requirement="readOnly"/>
        <parameter ref="HLOGGus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNGds" requirement="readOnly"/>
        <parameter ref="QLNGus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNpbds" requirement="readOnly"/>
        <parameter ref="LATNpbus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DHCPv4Server:1" dmr:version="2.0">
      <object ref="Device.DHCPv4." requirement="present"/>
      <object ref="Device.DHCPv4.Server." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="PoolNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Server.Pool.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="MinAddress" requirement="readWrite"/>
        <parameter ref="MaxAddress" requirement="readWrite"/>
        <parameter ref="ReservedAddresses" requirement="readWrite"/>
        <parameter ref="SubnetMask" requirement="readWrite"/>
        <parameter ref="DNSServers" requirement="readWrite"/>
        <parameter ref="DomainName" requirement="readWrite"/>
        <parameter ref="IPRouters" requirement="readWrite"/>
        <parameter ref="LeaseTime" requirement="readWrite"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Server.Pool.{i}.Option.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPv4CondServing:1" extends="DHCPv4Server:1" dmr:version="2.0">
      <object ref="Device.DHCPv4.Server.Pool.{i}." requirement="createDelete">
        <parameter ref="VendorClassID" requirement="readWrite"/>
        <parameter ref="ClientID" requirement="readWrite"/>
        <parameter ref="UserClassID" requirement="readWrite"/>
        <parameter ref="Chaddr" requirement="readWrite"/>
        <parameter ref="ChaddrMask" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPv4Relay:1" dmr:version="2.0">
      <object ref="Device.DHCPv4." requirement="present"/>
      <object ref="Device.DHCPv4.Relay." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ForwardingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Relay.Forwarding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="LocallyServed" requirement="readWrite"/>
        <parameter ref="DHCPServerIPAddress" requirement="readWrite"/>
        <parameter ref="VendorClassID" requirement="readWrite"/>
        <parameter ref="ClientID" requirement="readWrite"/>
        <parameter ref="UserClassID" requirement="readWrite"/>
        <parameter ref="Chaddr" requirement="readWrite"/>
        <parameter ref="ChaddrMask" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPv4ServerClientInfo:1" dmr:version="2.2">
      <object ref="Device.DHCPv4.Server.Pool.{i}." requirement="createDelete">
        <parameter ref="ClientNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Server.Pool.{i}.Client.{i}." requirement="present">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Chaddr" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
        <parameter ref="IPv4AddressNumberOfEntries" requirement="readOnly"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Server.Pool.{i}.Client.{i}.IPv4Address.{i}." requirement="present">
        <parameter ref="IPAddress" requirement="readOnly"/>
        <parameter ref="LeaseTimeRemaining" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv4.Server.Pool.{i}.Client.{i}.Option.{i}." requirement="present">
        <parameter ref="Tag" requirement="readOnly"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DHCPv6Client:1" dmr:version="2.2">
      <object ref="Device.DHCPv6." requirement="present">
        <parameter ref="ClientNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Client.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="DUID" requirement="readOnly"/>
        <parameter ref="RequestAddresses" requirement="readWrite"/>
        <parameter ref="RequestPrefixes" requirement="readWrite"/>
        <parameter ref="RapidCommit" requirement="readWrite"/>
        <parameter ref="Renew" requirement="readWrite"/>
        <parameter ref="SuggestedT1" requirement="readWrite"/>
        <parameter ref="SuggestedT2" requirement="readWrite"/>
        <parameter ref="SupportedOptions" requirement="readOnly"/>
        <parameter ref="RequestedOptions" requirement="readWrite"/>
        <parameter ref="SentOptionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ReceivedOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Client.{i}.SentOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="Device.DHCPv6.Client.{i}.ReceivedOption.{i}." requirement="present">
        <parameter ref="Tag" requirement="readOnly"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DHCPv6Server:1" dmr:version="2.2">
      <object ref="Device.DHCPv6." requirement="present"/>
      <object ref="Device.DHCPv6.Server." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="PoolNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Server.Pool.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="IANAEnable" requirement="readWrite"/>
        <parameter ref="IAPDEnable" requirement="readWrite"/>
        <parameter ref="IANAPrefixes" requirement="readOnly"/>
        <parameter ref="IAPDAddLength" requirement="readWrite"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Server.Pool.{i}.Option.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPv6ServerAdv:1" extends="DHCPv6Server:1" dmr:version="2.2">
      <object ref="Device.DHCPv6.Server.Pool.{i}." requirement="createDelete">
        <parameter ref="DUID" requirement="readWrite"/>
        <parameter ref="VendorClassID" requirement="readWrite"/>
        <parameter ref="UserClassID" requirement="readWrite"/>
        <parameter ref="SourceAddress" requirement="readWrite"/>
        <parameter ref="SourceAddressMask" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPv6ServerClientInfo:1" dmr:version="2.2">
      <object ref="Device.DHCPv6.Server.Pool.{i}." requirement="createDelete">
        <parameter ref="ClientNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Server.Pool.{i}.Client.{i}." requirement="present">
        <parameter ref="SourceAddress" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
        <parameter ref="IPv6AddressNumberOfEntries" requirement="readOnly"/>
        <parameter ref="IPv6PrefixNumberOfEntries" requirement="readOnly"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Address.{i}." requirement="present">
        <parameter ref="IPAddress" requirement="readOnly"/>
        <parameter ref="PreferredLifetime" requirement="readOnly"/>
        <parameter ref="ValidLifetime" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Prefix.{i}." requirement="present">
        <parameter ref="Prefix" requirement="readOnly"/>
        <parameter ref="PreferredLifetime" requirement="readOnly"/>
        <parameter ref="ValidLifetime" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Server.Pool.{i}.Client.{i}.Option.{i}." requirement="present">
        <parameter ref="Tag" requirement="readOnly"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Processors:1" dmr:version="2.1">
      <object ref="Device.DeviceInfo.Processor.{i}." requirement="present">
        <parameter ref="Architecture" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VendorLogFiles:1" dmr:version="2.1">
      <object ref="Device.DeviceInfo.VendorLogFile.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="MaximumSize" requirement="readOnly"/>
        <parameter ref="Persistent" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DUStateChngComplPolicy:1" dmr:version="2.1">
      <object ref="Device.ManagementServer.DUStateChangeComplPolicy." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="OperationTypeFilter" requirement="readWrite"/>
        <parameter ref="ResultTypeFilter" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Location:1" dmr:version="2.4">
      <object ref="Device.DeviceInfo." requirement="present">
        <parameter ref="LocationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo.Location.{i}." requirement="createDelete">
        <parameter ref="Source" requirement="readOnly"/>
        <parameter ref="AcquiredTime" requirement="readOnly"/>
        <parameter ref="ExternalSource" requirement="readOnly"/>
        <parameter ref="ExternalProtocol" requirement="readOnly"/>
        <parameter ref="DataObject" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="FaultMgmtSupportedAlarms:1" dmr:version="2.4">
      <object ref="Device.FaultMgmt." requirement="present">
        <parameter ref="SupportedAlarmNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FaultMgmt.SupportedAlarm.{i}." requirement="present">
        <parameter ref="EventType" requirement="readOnly"/>
        <parameter ref="ProbableCause" requirement="readOnly"/>
        <parameter ref="SpecificProblem" requirement="readOnly"/>
        <parameter ref="PerceivedSeverity" requirement="readOnly"/>
        <parameter ref="ReportingMechanism" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="FaultMgmtActive:1 " dmr:version="2.4">
      <object ref="Device.FaultMgmt." requirement="present">
        <parameter ref="CurrentAlarmNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FaultMgmt.CurrentAlarm.{i}." requirement="present">
        <parameter ref="AlarmIdentifier" requirement="readOnly"/>
        <parameter ref="AlarmRaisedTime" requirement="readOnly"/>
        <parameter ref="AlarmChangedTime" requirement="readOnly"/>
        <parameter ref="EventType" requirement="readOnly"/>
        <parameter ref="ProbableCause" requirement="readOnly"/>
        <parameter ref="PerceivedSeverity" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="FaultMgmtHistory:1" dmr:version="2.4">
      <object ref="Device.FaultMgmt." requirement="present">
        <parameter ref="HistoryEventNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FaultMgmt.HistoryEvent.{i}." requirement="present">
        <parameter ref="EventTime" requirement="readOnly"/>
        <parameter ref="AlarmIdentifier" requirement="readOnly"/>
        <parameter ref="NotificationType" requirement="readOnly"/>
        <parameter ref="EventType" requirement="readOnly"/>
        <parameter ref="ProbableCause" requirement="readOnly"/>
        <parameter ref="PerceivedSeverity" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="FaultMgmtExpedited:1" dmr:version="2.4">
      <object ref="Device.FaultMgmt." requirement="present">
        <parameter ref="ExpeditedEventNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FaultMgmt.ExpeditedEvent.{i}." requirement="present">
        <parameter ref="EventTime" requirement="readOnly"/>
        <parameter ref="AlarmIdentifier" requirement="readOnly"/>
        <parameter ref="NotificationType" requirement="readOnly"/>
        <parameter ref="EventType" requirement="readOnly"/>
        <parameter ref="ProbableCause" requirement="readOnly"/>
        <parameter ref="PerceivedSeverity" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="FaultMgmtQueued:1" dmr:version="2.4">
      <object ref="Device.FaultMgmt." requirement="present">
        <parameter ref="QueuedEventNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FaultMgmt.QueuedEvent.{i}." requirement="present">
        <parameter ref="EventTime" requirement="readOnly"/>
        <parameter ref="AlarmIdentifier" requirement="readOnly"/>
        <parameter ref="NotificationType" requirement="readOnly"/>
        <parameter ref="EventType" requirement="readOnly"/>
        <parameter ref="ProbableCause" requirement="readOnly"/>
        <parameter ref="PerceivedSeverity" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="FAP_GPS:1" dmr:version="2.4">
      <object ref="Device.FAP.GPS." requirement="present">
        <parameter ref="ScanOnBoot" requirement="readWrite"/>
        <parameter ref="ScanPeriodically" requirement="readWrite"/>
        <parameter ref="PeriodicInterval" requirement="readWrite"/>
        <parameter ref="PeriodicTime" requirement="readWrite"/>
        <parameter ref="ContinuousGPS" requirement="readWrite"/>
        <parameter ref="ScanTimeout" requirement="readWrite"/>
        <parameter ref="ScanStatus" requirement="readOnly"/>
        <parameter ref="ErrorDetails" requirement="readOnly"/>
        <parameter ref="LastScanTime" requirement="readOnly"/>
        <parameter ref="LastSuccessfulScanTime" requirement="readOnly"/>
        <parameter ref="LockedLatitude" requirement="readOnly"/>
        <parameter ref="LockedLongitude" requirement="readOnly"/>
        <parameter ref="NumberOfSatellites" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="FAP_PerfMgmt:1" dmr:version="2.4">
      <object ref="Device.FAP.PerfMgmt." requirement="present">
        <parameter ref="ConfigNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FAP.PerfMgmt.Config.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="URL" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="PeriodicUploadInterval" requirement="readWrite"/>
        <parameter ref="PeriodicUploadTime" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="FAP_ApplicationPlatform:1" dmr:version="2.4">
      <object ref="Device.FAP.ApplicationPlatform." requirement="present">
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="MaxNumberOfApplications" requirement="readOnly"/>
      </object>
      <object ref="Device.FAP.ApplicationPlatform.Control." requirement="present">
        <parameter ref="AuthenticationMethod" requirement="readWrite"/>
      </object>
      <object ref="Device.FAP.ApplicationPlatform.Control.FemtoAwareness." requirement="present">
        <parameter ref="APIEnable" requirement="readWrite"/>
        <parameter ref="MaxAPIUsersNumber" requirement="readWrite"/>
        <parameter ref="FemtozoneID" requirement="readWrite"/>
      </object>
      <object ref="Device.FAP.ApplicationPlatform.Control.SMS." requirement="present">
        <parameter ref="APIEnable" requirement="readWrite"/>
        <parameter ref="MaxAPIUsersNumber" requirement="readWrite"/>
        <parameter ref="MinSendSMSTimeInterval" requirement="readWrite"/>
      </object>
      <object ref="Device.FAP.ApplicationPlatform.Control.MMS." requirement="present">
        <parameter ref="APIEnable" requirement="readWrite"/>
        <parameter ref="MaxAPIUsersNumber" requirement="readWrite"/>
        <parameter ref="MinSendMMSTimeInterval" requirement="readWrite"/>
      </object>
      <object ref="Device.FAP.ApplicationPlatform.Control.TerminalLocation." requirement="present">
        <parameter ref="APIEnable" requirement="readWrite"/>
        <parameter ref="MaxAPIUsersNumber" requirement="readWrite"/>
        <parameter ref="QueryMobileLocationResponseAddress" requirement="readWrite"/>
        <parameter ref="QueryMobileLocationResponseLongitudeLatitude" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataColl:1" dmr:version="2.5">
      <object ref="Device.BulkData." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MinReportingInterval" requirement="readOnly"/>
        <parameter ref="Protocols" requirement="readOnly"/>
        <parameter ref="EncodingTypes" requirement="readOnly"/>
        <parameter ref="ProfileNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.BulkData.Profile.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="EncodingType" requirement="readWrite"/>
        <parameter ref="ReportingInterval" requirement="readWrite"/>
        <parameter ref="TimeReference" requirement="readWrite"/>
        <parameter ref="ParameterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.BulkData.Profile.{i}.Parameter.{i}." requirement="createDelete">
        <parameter ref="Reference" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataReports:1" extends="BulkDataColl:1" dmr:version="2.10">
      <object ref="Device.BulkData." requirement="present">
        <parameter ref="ParameterWildCardSupported" requirement="readOnly"/>
      </object>
      <object ref="Device.BulkData.Profile.{i}." requirement="createDelete">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="NumberOfRetainedFailedReports" requirement="readWrite"/>
      </object>
      <object ref="Device.BulkData.Profile.{i}.Parameter.{i}." requirement="createDelete">
        <parameter ref="Name" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataJSONEncoding:1" extends="BulkDataColl:1" dmr:version="2.10">
      <object ref="Device.BulkData.Profile.{i}.JSONEncoding." requirement="present">
        <parameter ref="ReportFormat" requirement="readWrite"/>
        <parameter ref="ReportTimestamp" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataCSVEncoding:1" extends="BulkDataColl:1" dmr:version="2.10">
      <object ref="Device.BulkData.Profile.{i}.CSVEncoding." requirement="present">
        <parameter ref="FieldSeparator" requirement="readWrite"/>
        <parameter ref="RowSeparator" requirement="readWrite"/>
        <parameter ref="EscapeCharacter" requirement="readWrite"/>
        <parameter ref="ReportFormat" requirement="readWrite"/>
        <parameter ref="RowTimestamp" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataHTTP:1" extends="BulkDataColl:1" dmr:version="2.10">
      <object ref="Device.BulkData.Profile.{i}.HTTP." requirement="present">
        <parameter ref="URL" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="CompressionsSupported" requirement="readOnly"/>
        <parameter ref="Compression" requirement="readWrite"/>
        <parameter ref="MethodsSupported" requirement="readOnly"/>
        <parameter ref="Method" requirement="readWrite"/>
        <parameter ref="UseDateHeader" requirement="readWrite"/>
        <parameter ref="RetryEnable" requirement="readWrite"/>
        <parameter ref="RetryMinimumWaitInterval" requirement="readWrite"/>
        <parameter ref="RetryIntervalMultiplier" requirement="readWrite"/>
        <parameter ref="RequestURIParameterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.BulkData.Profile.{i}.HTTP.RequestURIParameter.{i}." requirement="createDelete">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Reference" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataFileTransfer:1" extends="BulkDataColl:1" dmr:version="2.5">
      <object ref="Device.BulkData.Profile.{i}." requirement="createDelete">
        <parameter ref="FileTransferURL" requirement="readWrite"/>
        <parameter ref="FileTransferUsername" requirement="readWrite"/>
        <parameter ref="FileTransferPassword" requirement="readWrite"/>
        <parameter ref="ControlFileFormat" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BulkDataStreaming:1" extends="BulkDataColl:1" dmr:version="2.5">
      <object ref="Device.BulkData.Profile.{i}." requirement="createDelete">
        <parameter ref="StreamingHost" requirement="readWrite"/>
        <parameter ref="StreamingPort" requirement="readWrite"/>
        <parameter ref="StreamingSessionID" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IPsec:1" dmr:version="2.5">
      <object ref="Device.IPsec." requirement="present">
        <parameter ref="AHSupported" requirement="readOnly"/>
        <parameter ref="IKEv2SupportedEncryptionAlgorithms" requirement="readOnly"/>
        <parameter ref="ESPSupportedEncryptionAlgorithms" requirement="readOnly"/>
        <parameter ref="IKEv2SupportedPseudoRandomFunctions" requirement="readOnly"/>
        <parameter ref="SupportedIntegrityAlgorithms" requirement="readOnly"/>
        <parameter ref="SupportedDiffieHellmanGroupTransforms" requirement="readOnly"/>
        <parameter ref="MaxFilterEntries" requirement="readOnly"/>
        <parameter ref="MaxProfileEntries" requirement="readOnly"/>
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ProfileNumberOfEntries" requirement="readOnly"/>
        <parameter ref="TunnelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.Stats." requirement="present">
        <parameter ref="NegotiationFailures" requirement="readOnly"/>
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="UnknownSPIErrors" requirement="readOnly"/>
        <parameter ref="DecryptionErrors" requirement="readOnly"/>
        <parameter ref="IntegrityErrors" requirement="readOnly"/>
        <parameter ref="OtherReceiveErrors" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.Filter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="DestIP" requirement="readWrite"/>
        <parameter ref="DestMask" requirement="readWrite"/>
        <parameter ref="DestIPExclude" requirement="readWrite"/>
        <parameter ref="SourceIP" requirement="readWrite"/>
        <parameter ref="SourceMask" requirement="readWrite"/>
        <parameter ref="SourceIPExclude" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="ProtocolExclude" requirement="readWrite"/>
        <parameter ref="DestPort" requirement="readWrite"/>
        <parameter ref="DestPortRangeMax" requirement="readWrite"/>
        <parameter ref="DestPortExclude" requirement="readWrite"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="SourcePortRangeMax" requirement="readWrite"/>
        <parameter ref="SourcePortExclude" requirement="readWrite"/>
        <parameter ref="ProcessingChoice" requirement="readWrite"/>
        <parameter ref="Profile" requirement="readWrite"/>
      </object>
      <object ref="Device.IPsec.Profile.{i}." requirement="createDelete">
        <parameter ref="MaxChildSAs" requirement="readWrite"/>
        <parameter ref="RemoteEndpoints" requirement="readWrite"/>
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="IKEv2AuthenticationMethod" requirement="readWrite"/>
        <parameter ref="IKEv2AllowedEncryptionAlgorithms" requirement="readWrite"/>
        <parameter ref="ESPAllowedEncryptionAlgorithms" requirement="readWrite"/>
        <parameter ref="IKEv2AllowedPseudoRandomFunctions" requirement="readWrite"/>
        <parameter ref="IKEv2AllowedIntegrityAlgorithms" requirement="readWrite"/>
        <parameter ref="ESPAllowedIntegrityAlgorithms" requirement="readWrite"/>
        <parameter ref="IKEv2AllowedDiffieHellmanGroupTransforms" requirement="readWrite"/>
      </object>
      <object ref="Device.IPsec.Tunnel.{i}." requirement="present">
        <parameter ref="TunnelInterface" requirement="readOnly"/>
        <parameter ref="TunneledInterface" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="DecryptionErrors" requirement="readOnly"/>
        <parameter ref="IntegrityErrors" requirement="readOnly"/>
        <parameter ref="OtherReceiveErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPsecAdv:1" extends="IPsec:1" dmr:version="2.5">
      <object ref="Device.IPsec." requirement="present">
        <parameter ref="IKEv2SANumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.IKEv2SA.{i}." requirement="present">
        <parameter ref="Tunnel" requirement="readOnly"/>
        <parameter ref="LocalAddress" requirement="readOnly"/>
        <parameter ref="RemoteAddress" requirement="readOnly"/>
        <parameter ref="CreationTime" requirement="readOnly"/>
        <parameter ref="ChildSANumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.IKEv2SA.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="DecryptionErrors" requirement="readOnly"/>
        <parameter ref="IntegrityErrors" requirement="readOnly"/>
        <parameter ref="OtherReceiveErrors" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.IKEv2SA.{i}.ChildSA.{i}." requirement="present">
        <parameter ref="InboundSPI" requirement="readOnly"/>
        <parameter ref="OutboundSPI" requirement="readOnly"/>
        <parameter ref="CreationTime" requirement="readOnly"/>
      </object>
      <object ref="Device.IPsec.IKEv2SA.{i}.ChildSA.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="DecryptionErrors" requirement="readOnly"/>
        <parameter ref="IntegrityErrors" requirement="readOnly"/>
        <parameter ref="OtherReceiveErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DNS_SD:1" dmr:version="2.6">
      <object ref="Device.DNS.SD." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ServiceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS.SD.Service.{i}." requirement="present">
        <parameter ref="InstanceName" requirement="readOnly"/>
        <parameter ref="ApplicationProtocol" requirement="readOnly"/>
        <parameter ref="TransportProtocol" requirement="readOnly"/>
        <parameter ref="Domain" requirement="readOnly"/>
        <parameter ref="Port" requirement="readOnly"/>
        <parameter ref="Target" requirement="readOnly"/>
        <parameter ref="Priority" requirement="readOnly"/>
        <parameter ref="Weight" requirement="readOnly"/>
        <parameter ref="TimeToLive" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LastUpdate" requirement="readOnly"/>
        <parameter ref="Host" requirement="readOnly"/>
        <parameter ref="TextRecordNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS.SD.Service.{i}.TextRecord.{i}." requirement="present">
        <parameter ref="Key" requirement="readOnly"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="XMPPBasic:1" dmr:version="2.7">
      <object ref="Device.XMPP." requirement="present">
        <parameter ref="ConnectionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.XMPP.Connection.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="Domain" requirement="readWrite"/>
        <parameter ref="Resource" requirement="readWrite"/>
        <parameter ref="JabberID" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LastChangeDate" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="XMPPAdvanced:1" extends="XMPPBasic:1" dmr:version="2.7">
      <object ref="Device.XMPP.Connection.{i}." requirement="createDelete">
        <parameter ref="ServerConnectAlgorithm" requirement="readWrite"/>
        <parameter ref="KeepAliveInterval" requirement="readWrite"/>
        <parameter ref="ServerNumberOfEntries" requirement="readOnly"/>
        <parameter ref="UseTLS" requirement="readWrite"/>
        <parameter ref="TLSEstablished" requirement="readOnly"/>
      </object>
      <object ref="Device.XMPP.Connection.{i}.Server.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Priority" requirement="readWrite"/>
        <parameter ref="Weight" requirement="readWrite"/>
        <parameter ref="ServerAddress" requirement="readWrite"/>
        <parameter ref="Port" requirement="readWrite"/>
      </object>
      <object ref="Device.XMPP.Connection.{i}.Stats." requirement="present">
        <parameter ref="ReceivedMessages" requirement="readOnly"/>
        <parameter ref="TransmittedMessages" requirement="readOnly"/>
        <parameter ref="ReceivedErrorMessages" requirement="readOnly"/>
        <parameter ref="TransmittedErrorMessages" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="XMPPReconnect:1" dmr:version="2.7">
      <object ref="Device.XMPP.Connection.{i}." requirement="createDelete">
        <parameter ref="ServerConnectAttempts" requirement="readWrite"/>
        <parameter ref="ServerRetryInitialInterval" requirement="readWrite"/>
        <parameter ref="ServerRetryIntervalMultiplier" requirement="readWrite"/>
        <parameter ref="ServerRetryMaxInterval" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="InformParameters:1" dmr:version="2.8">
      <object ref="Device.ManagementServer." requirement="present">
        <parameter ref="InformParameterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ManagementServer.InformParameter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ParameterName" requirement="readWrite"/>
        <parameter ref="EventList" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="UDPEchoDiag:1" dmr:version="2.9">
      <object ref="Device.IP.Diagnostics.UDPEchoDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="EnableIndividualPacketResults" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="InterTransmissionTime" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
        <parameter ref="IndividualPacketResultNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Diagnostics.UDPEchoDiagnostics.IndividualPacketResult.{i}." requirement="present">
        <parameter ref="PacketSuccess" requirement="readOnly"/>
        <parameter ref="PacketSendTime" requirement="readOnly"/>
        <parameter ref="PacketReceiveTime" requirement="readOnly"/>
        <parameter ref="TestGenSN" requirement="readOnly"/>
        <parameter ref="TestRespSN" requirement="readOnly"/>
        <parameter ref="TestRespRcvTimeStamp" requirement="readOnly"/>
        <parameter ref="TestRespReplyTimeStamp" requirement="readOnly"/>
        <parameter ref="TestRespReplyFailureCount" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ServerSelectionDiag:1" dmr:version="2.9">
      <object ref="Device.IP.Diagnostics.ServerSelectionDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="HostList" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="FastestHost" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="GatewayInfo:1" dmr:version="2.0">
      <object ref="Device.GatewayInfo." requirement="present">
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="ProductClass" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905." requirement="present">
        <parameter ref="Version" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL." requirement="present">
        <parameter ref="IEEE1905Id" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Interface.{i}." requirement="present">
        <parameter ref="InterfaceId" requirement="readOnly"/>
        <parameter ref="MediaType" requirement="readOnly"/>
        <parameter ref="GenericPhyOUI" requirement="readOnly"/>
        <parameter ref="GenericPhyVariant" requirement="readOnly"/>
        <parameter ref="GenericPhyURL" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Security." requirement="present">
        <parameter ref="SetupMethod" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IEEE1905TopologyMetric:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.NetworkTopology." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="IEEE1905DeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}." requirement="present">
        <parameter ref="IEEE1905Id" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="IEEE1905NeighborNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}." requirement="present">
        <parameter ref="LocalInterface" requirement="readOnly"/>
        <parameter ref="NeighborDeviceId" requirement="readOnly"/>
        <parameter ref="MetricNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}.Metric.{i}." requirement="present">
        <parameter ref="NeighborMACAddress" requirement="readOnly"/>
        <parameter ref="IEEE802dot1Bridge" requirement="readOnly"/>
        <parameter ref="PacketErrors" requirement="readOnly"/>
        <parameter ref="PacketErrorsReceived" requirement="readOnly"/>
        <parameter ref="TransmittedPackets" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="MACThroughputCapacity" requirement="readOnly"/>
        <parameter ref="LinkAvailability" requirement="readOnly"/>
        <parameter ref="PHYRate" requirement="readOnly"/>
        <parameter ref="RSSI" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IEEE1905TopologyNeighbor:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.NetworkTopology." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="IEEE1905DeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}." requirement="present">
        <parameter ref="IEEE1905Id" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="NonIEEE1905NeighborNumberOfEntries" requirement="readOnly"/>
        <parameter ref="IEEE1905NeighborNumberOfEntries" requirement="readOnly"/>
        <parameter ref="L2NeighborNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}." requirement="present">
        <parameter ref="LocalInterface" requirement="readOnly"/>
        <parameter ref="NeighborDeviceId" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.Interface.{i}." requirement="present">
        <parameter ref="InterfaceId" requirement="readOnly"/>
        <parameter ref="MediaType" requirement="readOnly"/>
        <parameter ref="PowerState" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}." requirement="present">
        <parameter ref="LocalInterface" requirement="readOnly"/>
        <parameter ref="NeighborInterfaceId" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.L2Neighbor.{i}." requirement="present">
        <parameter ref="LocalInterface" requirement="readOnly"/>
        <parameter ref="NeighborInterfaceId" requirement="readOnly"/>
        <parameter ref="BehindInterfaceIds" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IEEE1905TopologyHigherLayer:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.NetworkTopology." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="IEEE1905DeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}." requirement="present">
        <parameter ref="IEEE1905Id" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="FriendlyName" requirement="readOnly"/>
        <parameter ref="ManufacturerName" requirement="readOnly"/>
        <parameter ref="ManufacturerModel" requirement="readOnly"/>
        <parameter ref="ControlURL" requirement="readOnly"/>
        <parameter ref="IPv4AddressNumberOfEntries" requirement="readOnly"/>
        <parameter ref="IPv6AddressNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IPv4Address.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="IPv4Address" requirement="readOnly"/>
        <parameter ref="IPv4AddressType" requirement="readOnly"/>
        <parameter ref="DHCPServer" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IPv6Address.{i}." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="IPv6Address" requirement="readOnly"/>
        <parameter ref="IPv6AddressType" requirement="readOnly"/>
        <parameter ref="IPv6AddressOrigin" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IEEE1905Power:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.Interface.{i}." requirement="present">
        <parameter ref="SetIntfPowerStateEnabled" requirement="readWrite"/>
        <parameter ref="PowerState" requirement="readWrite"/>
        <parameter ref="VendorPropertiesNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Interface.{i}.VendorProperties.{i}." requirement="present">
        <parameter ref="OUI" requirement="readOnly"/>
        <parameter ref="Information" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IEEE1905InterfaceSelection:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.Interface.{i}." requirement="present">
        <parameter ref="SetIntfPowerStateEnabled" requirement="readWrite"/>
        <parameter ref="PowerState" requirement="readWrite"/>
        <parameter ref="VendorPropertiesNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Interface.{i}.VendorProperties.{i}." requirement="present">
        <parameter ref="OUI" requirement="readOnly"/>
        <parameter ref="Information" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.ForwardingTable." requirement="present">
        <parameter ref="SetForwardingEnabled" requirement="readOnly"/>
        <parameter ref="ForwardingRuleNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.ForwardingTable.ForwardingRule.{i}." requirement="createDelete">
        <parameter ref="InterfaceList" requirement="readWrite"/>
        <parameter ref="MACDestinationAddress" requirement="readWrite"/>
        <parameter ref="MACDestinationAddressFlag" requirement="readWrite"/>
        <parameter ref="MACSourceAddress" requirement="readWrite"/>
        <parameter ref="MACSourceAddressFlag" requirement="readWrite"/>
        <parameter ref="EtherType" requirement="readWrite"/>
        <parameter ref="EtherTypeFlag" requirement="readWrite"/>
        <parameter ref="Vid" requirement="readWrite"/>
        <parameter ref="VidFlag" requirement="readWrite"/>
        <parameter ref="PCP" requirement="readWrite"/>
        <parameter ref="PCPFlag" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IEEE1905LinkMetric:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.Interface.{i}." requirement="present">
        <parameter ref="SetIntfPowerStateEnabled" requirement="readWrite"/>
        <parameter ref="PowerState" requirement="readWrite"/>
        <parameter ref="LinkNumberOfEntries" requirement="readOnly"/>
        <parameter ref="VendorPropertiesNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Interface.{i}.VendorProperties.{i}." requirement="present">
        <parameter ref="OUI" requirement="readOnly"/>
        <parameter ref="Information" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Interface.{i}.Link.{i}." requirement="present">
        <parameter ref="InterfaceId" requirement="readOnly"/>
        <parameter ref="IEEE1905Id" requirement="readOnly"/>
        <parameter ref="MediaType" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.Interface.{i}.Link.{i}.Metric." requirement="present">
        <parameter ref="PacketErrors" requirement="readOnly"/>
        <parameter ref="PacketErrorsReceived" requirement="readOnly"/>
        <parameter ref="TransmittedPackets" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="MACThroughputCapacity" requirement="readOnly"/>
        <parameter ref="LinkAvailability" requirement="readOnly"/>
        <parameter ref="PHYRate" requirement="readOnly"/>
        <parameter ref="RSSI" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IEEE1905NetworkTopology:1" extends="IEEE1905Device:1" dmr:version="2.9">
      <object ref="Device.IEEE1905.AL.NetworkTopology." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MaxChangeLogEntries" requirement="readWrite"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="IEEE1905DeviceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ChangeLogNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.ChangeLog.{i}." requirement="present">
        <parameter ref="TimeStamp" requirement="readOnly"/>
        <parameter ref="EventType" requirement="readOnly"/>
        <parameter ref="ReporterDeviceId" requirement="readOnly"/>
        <parameter ref="ReporterInterfaceId" requirement="readOnly"/>
        <parameter ref="NeighborType" requirement="readOnly"/>
        <parameter ref="NeighborId" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}." requirement="present">
        <parameter ref="IEEE1905Id" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="NonIEEE1905NeighborNumberOfEntries" requirement="readOnly"/>
        <parameter ref="IEEE1905NeighborNumberOfEntries" requirement="readOnly"/>
        <parameter ref="BridgingTupleNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.BridgingTuple.{i}." requirement="present">
        <parameter ref="InterfaceList" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}." requirement="present">
        <parameter ref="LocalInterface" requirement="readOnly"/>
        <parameter ref="NeighborDeviceId" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.Interface.{i}." requirement="present">
        <parameter ref="InterfaceId" requirement="readOnly"/>
        <parameter ref="MediaType" requirement="readOnly"/>
        <parameter ref="PowerState" requirement="readOnly"/>
      </object>
      <object ref="Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}." requirement="present">
        <parameter ref="LocalInterface" requirement="readOnly"/>
        <parameter ref="NeighborInterfaceId" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MQTTClientBase:1" dmr:version="2.10">
      <description>
        Provides basic MQTT client control and statistics
      </description>
      <object ref="Device.MQTT." requirement="present">
        <parameter ref="ClientNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MQTT.Client.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="BrokerAddress" requirement="readWrite"/>
        <parameter ref="BrokerPort" requirement="readWrite"/>
        <parameter ref="CleanSession" requirement="readWrite"/>
        <parameter ref="KeepAliveTime" requirement="readWrite"/>
        <parameter ref="SubscriptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MQTT.Client.{i}.Stats." requirement="present">
        <parameter ref="BrokerConnectionEstablished" requirement="readOnly"/>
        <parameter ref="MQTTMessagesSent" requirement="readOnly"/>
        <parameter ref="MQTTMessagesReceived" requirement="readOnly"/>
        <parameter ref="ConnectionErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MQTTClientSubscribe:1" base="MQTTClientBase:1" dmr:version="2.10">
      <description>
        Adds client subscription control and access to received topics
      </description>
      <object ref="Device.MQTT.Client.{i}.Subscription.{i}." requirement="present">
        <parameter ref="Topic" requirement="readWrite"/>
        <parameter ref="QoS" requirement="readOnly"/>
        <parameter ref="Enable" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="MQTTBrokerBase:1" dmr:version="2.10">
      <description>
        Provides basic MQTT broker control and statistics
      </description>
      <object ref="Device.MQTT." requirement="present">
        <parameter ref="BrokerNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MQTT.Broker.{i}." requirement="present">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Port" requirement="readWrite"/>
      </object>
      <object ref="Device.MQTT.Broker.{i}.Stats." requirement="present">
        <parameter ref="TotalNumberOfClients" requirement="readOnly"/>
        <parameter ref="NumberOfActiveClients" requirement="readOnly"/>
        <parameter ref="MQTTMessagesSent" requirement="readOnly"/>
        <parameter ref="MQTTMessagesReceived" requirement="readOnly"/>
        <parameter ref="ConnectionErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MQTTBrokerBridgeBase:1" base="MQTTBrokerBase:1" dmr:version="2.10">
      <description>
        Adds parameters for MQTT network interconnection with Bridges
      </description>
      <object ref="Device.MQTT.Broker.{i}." requirement="present">
        <parameter ref="BridgeNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MQTT.Broker.{i}.Bridge.{i}." requirement="present">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ServerConnection" requirement="readOnly"/>
        <parameter ref="ServerNumberOfEntries" requirement="readOnly"/>
        <parameter ref="SubscriptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.MQTT.Broker.{i}.Bridge.{i}.Server.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Priority" requirement="readWrite"/>
        <parameter ref="Address" requirement="readWrite"/>
        <parameter ref="Port" requirement="readWrite"/>
      </object>
      <object ref="Device.MQTT.Broker.{i}.Bridge.{i}.Subscription.{i}." requirement="present">
        <parameter ref="Topic" requirement="readWrite"/>
        <parameter ref="Direction" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="QoS" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="MQTTBrokerExtended:1" base="MQTTBrokerBase:1" dmr:version="2.10">
      <description>
        Adds client authentication and extends statistics
      </description>
      <object ref="Device.MQTT.Broker.{i}." requirement="present">
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
      </object>
      <object ref="Device.MQTT.Broker.{i}.Stats." requirement="present">
        <parameter ref="NumberOfInactiveClients" requirement="readOnly"/>
        <parameter ref="PublishSent" requirement="readOnly"/>
        <parameter ref="PublishReceived" requirement="readOnly"/>
        <parameter ref="PublishErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ZigBeeInterface:1" dmr:version="2.10">
      <object ref="Device.ZigBee." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.Interface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="IEEEAddress" requirement="readOnly"/>
        <parameter ref="NetworkAddress" requirement="readOnly"/>
        <parameter ref="ZDOReference" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ZigBeeAssociatedDevices:1" extends="ZigBeeInterface:1" dmr:version="2.10">
      <object ref="Device.ZigBee.Interface.{i}." requirement="present">
        <parameter ref="AssociatedDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.Interface.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="IEEEAddress" requirement="readOnly"/>
        <parameter ref="NetworkAddress" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
        <parameter ref="ZDOReference" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ZigBeeDisc:1" dmr:version="2.10">
      <object ref="Device.ZigBee.Discovery." requirement="present">
        <parameter ref="AreaNetworkNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.Discovery.AreaNetwork.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LastUpdate" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Coordinator" requirement="readWrite"/>
        <parameter ref="ZDOReference" requirement="readOnly"/>
        <parameter ref="ZDOList" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ZDOBasic:1" dmr:version="2.10">
      <object ref="Device.ZigBee." requirement="present">
        <parameter ref="ZDONumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}." requirement="present">
        <parameter ref="IEEEAddress" requirement="readOnly"/>
        <parameter ref="NetworkAddress" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.NodeDescriptor." requirement="present">
        <parameter ref="LogicalType" requirement="readOnly"/>
        <parameter ref="ComplexDescriptorSupported" requirement="readOnly"/>
        <parameter ref="UserDescriptorSupported" requirement="readOnly"/>
        <parameter ref="FrequencyBand" requirement="readOnly"/>
        <parameter ref="MACCapability" requirement="readOnly"/>
        <parameter ref="ManufactureCode" requirement="readOnly"/>
        <parameter ref="MaximumBufferSize" requirement="readOnly"/>
        <parameter ref="MaximumIncomingTransferSize" requirement="readOnly"/>
        <parameter ref="MaximumOutgoingTransferSize" requirement="readOnly"/>
        <parameter ref="ServerMask" requirement="readOnly"/>
        <parameter ref="DescriptorCapability" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.PowerDescriptor." requirement="present">
        <parameter ref="CurrentPowerMode" requirement="readOnly"/>
        <parameter ref="AvailablePowerSource" requirement="readOnly"/>
        <parameter ref="CurrentPowerSource" requirement="readOnly"/>
        <parameter ref="CurrentPowerSourceLevel" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ZDOAdv:1" extends="ZDOBasic:1" dmr:version="2.10">
      <object ref="Device.ZigBee.ZDO.{i}." requirement="present">
        <parameter ref="BindingTableNumberOfEntries" requirement="readOnly"/>
        <parameter ref="GroupNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ApplicationEndpointNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.UserDescriptor." requirement="present">
        <parameter ref="DescriptorAvailable" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.ComplexDescriptor." requirement="present">
        <parameter ref="DescriptorAvailable" requirement="readOnly"/>
        <parameter ref="Language" requirement="readOnly"/>
        <parameter ref="CharacterSet" requirement="readOnly"/>
        <parameter ref="ManufacturerName" requirement="readOnly"/>
        <parameter ref="ModelName" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="DeviceURL" requirement="readOnly"/>
        <parameter ref="Icon" requirement="readOnly"/>
        <parameter ref="IconURL" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.Security." requirement="present">
        <parameter ref="TrustCenterAddress" requirement="readOnly"/>
        <parameter ref="SecurityLevel" requirement="readOnly"/>
        <parameter ref="TimeOutPeriod" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.Network." requirement="present">
        <parameter ref="NeighborNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.Network.Neighbor.{i}." requirement="present">
        <parameter ref="Neighbor" requirement="readOnly"/>
        <parameter ref="LQI" requirement="readOnly"/>
        <parameter ref="Relationship" requirement="readOnly"/>
        <parameter ref="PermitJoin" requirement="readOnly"/>
        <parameter ref="Depth" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.NodeManager." requirement="present">
        <parameter ref="RoutingTableNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.NodeManager.RoutingTable.{i}." requirement="present">
        <parameter ref="DestinationAddress" requirement="readOnly"/>
        <parameter ref="NextHopAddress" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MemoryConstrained" requirement="readOnly"/>
        <parameter ref="ManyToOne" requirement="readOnly"/>
        <parameter ref="RouteRecordRequired" requirement="readOnly"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.Binding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="SourceEndpoint" requirement="readWrite"/>
        <parameter ref="SourceAddress" requirement="readWrite"/>
        <parameter ref="ClusterId" requirement="readWrite"/>
        <parameter ref="DestinationAddressMode" requirement="readWrite"/>
        <parameter ref="DestinationEndpoint" requirement="readWrite"/>
        <parameter ref="IEEEDestinationAddress" requirement="readWrite"/>
        <parameter ref="GroupDestinationAddress" requirement="readWrite"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.Group.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="GroupId" requirement="readWrite"/>
        <parameter ref="EndpointList" requirement="readWrite"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.ApplicationEndpoint.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="EndpointId" requirement="readWrite"/>
      </object>
      <object ref="Device.ZigBee.ZDO.{i}.ApplicationEndpoint.{i}.SimpleDescriptor." requirement="present">
        <parameter ref="ProfileId" requirement="readWrite"/>
        <parameter ref="DeviceId" requirement="readOnly"/>
        <parameter ref="DeviceVersion" requirement="readOnly"/>
        <parameter ref="InputClusterList" requirement="readWrite"/>
        <parameter ref="OutputClusterList" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ZigBeeStats:1" extends="ZigBeeInterface:1" dmr:version="2.10">
      <object ref="Device.ZigBee.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="LEDBasic:1" dmr:version="2.11">
      <object ref="Device.LEDs." requirement="present">
        <parameter ref="LEDNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LEDs.LED.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Reason" requirement="readOnly"/>
        <parameter ref="CyclePeriodRepetitions" requirement="readOnly"/>
        <parameter ref="Location" requirement="readOnly"/>
        <parameter ref="RelativeXPosition" requirement="readOnly"/>
        <parameter ref="RelativeYPosition" requirement="readOnly"/>
        <parameter ref="CycleElementNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LEDs.LED.{i}.CycleElement.{i}." requirement="present">
        <parameter ref="Order" requirement="readOnly"/>
        <parameter ref="Color" requirement="readOnly"/>
        <parameter ref="Duration" requirement="readOnly"/>
        <parameter ref="FadeInterval" requirement="readOnly"/>
      </object>
      <object ref="Device.LEDs.LED.{i}.CurrentCycleElement." requirement="present">
        <parameter ref="CycleElementReference" requirement="readOnly"/>
        <parameter ref="Color" requirement="readOnly"/>
        <parameter ref="Duration" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="LEDAdv:1" dmr:version="2.11">
      <object ref="Device.LEDs." requirement="present">
        <parameter ref="LEDNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LEDs.LED.{i}." requirement="present">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Reason" requirement="readOnly"/>
        <parameter ref="CyclePeriodRepetitions" requirement="readOnly"/>
        <parameter ref="Location" requirement="readOnly"/>
        <parameter ref="RelativeXPosition" requirement="readOnly"/>
        <parameter ref="RelativeYPosition" requirement="readOnly"/>
        <parameter ref="CycleElementNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LEDs.LED.{i}.CycleElement.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Color" requirement="readWrite"/>
        <parameter ref="Duration" requirement="readWrite"/>
        <parameter ref="FadeInterval" requirement="readWrite"/>
      </object>
      <object ref="Device.LEDs.LED.{i}.CurrentCycleElement." requirement="present">
        <parameter ref="CycleElementReference" requirement="readOnly"/>
        <parameter ref="Color" requirement="readOnly"/>
        <parameter ref="Duration" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DeviceImage:1" dmr:version="2.11">
      <object ref="Device.DeviceInfo." requirement="present">
        <parameter ref="DeviceImageNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo.DeviceImageFile.{i}." requirement="present">
        <parameter ref="Location" requirement="readOnly"/>
        <parameter ref="Image" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="FAST:1" dmr:version="2.11">
      <description>
        Note: This profile is valid for G.9701 modems.
      </description>
      <object ref="Device.FAST." requirement="present">
        <parameter ref="LineNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.FAST.Line.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="Upstream" requirement="readOnly"/>
        <parameter ref="AllowedProfiles" requirement="readOnly"/>
        <parameter ref="CurrentProfile" requirement="readOnly"/>
        <parameter ref="UPBOKLE" requirement="readOnly"/>
        <parameter ref="UpstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="SNRMRMCds" requirement="readOnly"/>
        <parameter ref="SNRMRMCus" requirement="readOnly"/>
        <parameter ref="FEXTCANCELds" requirement="readOnly"/>
        <parameter ref="FEXTCANCELus" requirement="readOnly"/>
        <parameter ref="ETRds" requirement="readOnly"/>
        <parameter ref="ETRus" requirement="readOnly"/>
        <parameter ref="ATTETRds" requirement="readOnly"/>
        <parameter ref="ATTETRus" requirement="readOnly"/>
        <parameter ref="MINEFTR" requirement="readOnly"/>
      </object>
      <object ref="Device.FAST.Line.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.FAST.Line.{i}.TestParams." requirement="present">
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UserInformationBasic:1" dmr:version="2.11">
      <object ref="Device.UserInterface.Messages." requirement="present">
        <parameter ref="Title" requirement="readWrite"/>
        <parameter ref="SubTitle" requirement="readWrite"/>
        <parameter ref="Text" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="UserInformationExtended:1" dmr:version="2.11">
      <object ref="Device.UserInterface.Messages." requirement="present">
        <parameter ref="Title" requirement="readWrite"/>
        <parameter ref="SubTitle" requirement="readWrite"/>
        <parameter ref="Text" requirement="readWrite"/>
        <parameter ref="IconType" requirement="readWrite"/>
        <parameter ref="MessageColor" requirement="readWrite"/>
        <parameter ref="BackgroundColor" requirement="readWrite"/>
        <parameter ref="TitleColor" requirement="readWrite"/>
        <parameter ref="SubTitleColor" requirement="readWrite"/>
        <parameter ref="RequestedNumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="ExecutedNumberOfRepetitions" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="L2TPv3Basic:1" dmr:version="2.12">
      <object ref="Device.L2TPv3." requirement="present">
        <parameter ref="TunnelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="RemoteEndpoints" requirement="readWrite"/>
        <parameter ref="KeepAlivePolicy" requirement="readWrite"/>
        <parameter ref="KeepAliveTimeout" requirement="readWrite"/>
        <parameter ref="KeepAliveThreshold" requirement="readWrite"/>
        <parameter ref="DeliveryHeaderProtocol" requirement="readWrite"/>
        <parameter ref="TunnelEncapsulation" requirement="readWrite"/>
        <parameter ref="ConnectedRemoteEndpoint" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.UDP." requirement="present">
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="RemotePort" requirement="readWrite"/>
        <parameter ref="EnableChecksum" requirement="readWrite"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readOnly"/>
        <parameter ref="SessionID" requirement="readWrite"/>
        <parameter ref="CookiePolicy" requirement="readWrite"/>
        <parameter ref="Cookie" requirement="readWrite"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="L2TPv3Adv:1" extends="L2TPv3Basic:1" dmr:version="2.12">
      <object ref="Device.L2TPv3." requirement="present">
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}." requirement="createDelete">
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="KeepAliveSent" requirement="readOnly"/>
        <parameter ref="KeepAliveReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="DiscardChecksumReceived" requirement="readOnly"/>
        <parameter ref="DiscardSequenceNumberReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.L2TPv3.Filter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="DSCPMarkPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="VXLANBasic:1" dmr:version="2.12">
      <object ref="Device.VXLAN." requirement="present">
        <parameter ref="TunnelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="RemoteEndpoints" requirement="readWrite"/>
        <parameter ref="KeepAlivePolicy" requirement="readWrite"/>
        <parameter ref="KeepAliveTimeout" requirement="readWrite"/>
        <parameter ref="KeepAliveThreshold" requirement="readWrite"/>
        <parameter ref="DeliveryHeaderProtocol" requirement="readWrite"/>
        <parameter ref="ConnectedRemoteEndpoint" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="RemotePort" requirement="readWrite"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readOnly"/>
        <parameter ref="VNI" requirement="readWrite"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VXLANAdv:1" extends="VXLANBasic:1" dmr:version="2.12">
      <object ref="Device.VXLAN." requirement="present">
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}." requirement="createDelete">
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}.Stats." requirement="present">
        <parameter ref="KeepAliveSent" requirement="readOnly"/>
        <parameter ref="KeepAliveReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.VXLAN.Tunnel.{i}.Interface.{i}.Stats." requirement="present">
        <parameter ref="DiscardChecksumReceived" requirement="readOnly"/>
        <parameter ref="DiscardSequenceNumberReceived" requirement="readOnly"/>
      </object>
      <object ref="Device.VXLAN.Filter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="AllInterfaces" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="DSCPMarkPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="LMAPPreconfiguration:1" dmr:version="2.12">
      <object ref="Device.LMAP." requirement="present">
        <parameter ref="MeasurementAgentNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="CapabilityTags" requirement="readOnly"/>
        <parameter ref="Identifier" requirement="readWrite"/>
        <parameter ref="PublicCredential" requirement="readWrite"/>
        <parameter ref="PrivateCredential" requirement="readWrite"/>
        <parameter ref="EventLog" requirement="readOnly"/>
        <parameter ref="TaskCapabilityNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ScheduleNumberOfEntries" requirement="readOnly"/>
        <parameter ref="TaskNumberOfEntries" requirement="readOnly"/>
        <parameter ref="CommunicationChannelNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Controller." requirement="present">
        <parameter ref="ControllerTimeout" requirement="readWrite"/>
        <parameter ref="ControlSchedules" requirement="readWrite"/>
        <parameter ref="ControlTasks" requirement="readWrite"/>
        <parameter ref="ControlChannels" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.TaskCapability.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="TaskCapabilityRegistryNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.TaskCapability.{i}.Registry.{i}." requirement="present">
        <parameter ref="RegistryEntry" requirement="readOnly"/>
        <parameter ref="Roles" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Start" requirement="readWrite"/>
        <parameter ref="End" requirement="readWrite"/>
        <parameter ref="Duration" requirement="readWrite"/>
        <parameter ref="Tags" requirement="readWrite"/>
        <parameter ref="SuppressionTags" requirement="readWrite"/>
        <parameter ref="ExecutionMode" requirement="readWrite"/>
        <parameter ref="ActionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Task" requirement="readWrite"/>
        <parameter ref="SuppressionTags" requirement="readWrite"/>
        <parameter ref="Tags" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}.Option.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Task.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Tags" requirement="readWrite"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="RegistryNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Task.{i}.Registry.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="RegistryEntry" requirement="readWrite"/>
        <parameter ref="Roles" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Task.{i}.Option.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Order" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.CommunicationChannel.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="UseBulkDataProfile" requirement="readWrite"/>
        <parameter ref="Target" requirement="readWrite"/>
        <parameter ref="TargetPublicCredential" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.Event.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="RandomnessSpread" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.Event.{i}.PeriodicTimer." requirement="present">
        <parameter ref="StartTime" requirement="readWrite"/>
        <parameter ref="EndTime" requirement="readWrite"/>
        <parameter ref="Interval" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.Event.{i}.CalendarTimer." requirement="present">
        <parameter ref="StartTime" requirement="readWrite"/>
        <parameter ref="EndTime" requirement="readWrite"/>
        <parameter ref="ScheduleMonths" requirement="readWrite"/>
        <parameter ref="ScheduleDaysOfMonth" requirement="readWrite"/>
        <parameter ref="ScheduleDaysOfWeek" requirement="readWrite"/>
        <parameter ref="ScheduleHoursOfDay" requirement="readWrite"/>
        <parameter ref="ScheduleMinutesOfHour" requirement="readWrite"/>
        <parameter ref="ScheduleSecondsOfMinute" requirement="readWrite"/>
        <parameter ref="EnableScheduleTimezoneOffset" requirement="readWrite"/>
        <parameter ref="ScheduleTimezoneOffset" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.Event.{i}.OneOff." requirement="present">
        <parameter ref="StartTime" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="LMAPController:1" extends="LMAPPreconfiguration:1" dmr:version="2.12">
      <object ref="Device.LMAP.MeasurementAgent.{i}." requirement="createDelete">
        <parameter ref="LastStarted" requirement="readOnly"/>
        <parameter ref="GroupIdentifier" requirement="readWrite"/>
        <parameter ref="MeasurementPoint" requirement="readWrite"/>
        <parameter ref="UseAgentIdentifierInReports" requirement="readWrite"/>
        <parameter ref="UseGroupIdentifierInReports" requirement="readWrite"/>
        <parameter ref="UseMeasurementPointInReports" requirement="readWrite"/>
        <parameter ref="InstructionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Controller." requirement="present">
        <parameter ref="ControllerTimeout" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}." requirement="createDelete">
        <parameter ref="State" requirement="readOnly"/>
        <parameter ref="LastInvocation" requirement="readOnly"/>
        <parameter ref="Storage" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Stats." requirement="present">
        <parameter ref="Invocations" requirement="readOnly"/>
        <parameter ref="Suppressions" requirement="readOnly"/>
        <parameter ref="Overlaps" requirement="readOnly"/>
        <parameter ref="Failures" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}." requirement="createDelete">
        <parameter ref="State" requirement="readOnly"/>
        <parameter ref="LastInvocation" requirement="readOnly"/>
        <parameter ref="Storage" requirement="readOnly"/>
        <parameter ref="LastSuccessfulCompletion" requirement="readOnly"/>
        <parameter ref="LastSuccessfulStatusCode" requirement="readOnly"/>
        <parameter ref="LastSuccessfulMessage" requirement="readOnly"/>
        <parameter ref="LastFailedCompletion" requirement="readOnly"/>
        <parameter ref="LastFailedStatusCode" requirement="readOnly"/>
        <parameter ref="LastFailedMessage" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Schedule.{i}.Action.{i}.Stats." requirement="present">
        <parameter ref="Invocations" requirement="readOnly"/>
        <parameter ref="Suppressions" requirement="readOnly"/>
        <parameter ref="Overlaps" requirement="readOnly"/>
        <parameter ref="Failures" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Instruction.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="InstructionSchedules" requirement="readWrite"/>
        <parameter ref="InstructionTasks" requirement="readWrite"/>
        <parameter ref="ReportChannels" requirement="readWrite"/>
        <parameter ref="MeasurementSuppressionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.MeasurementAgent.{i}.Instruction.{i}.MeasurementSuppression.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="State" requirement="readOnly"/>
        <parameter ref="StopRunning" requirement="readWrite"/>
        <parameter ref="Start" requirement="readWrite"/>
        <parameter ref="End" requirement="readWrite"/>
        <parameter ref="SuppressionMatch" requirement="readWrite"/>
      </object>
      <object ref="Device.LMAP.Event.{i}." requirement="createDelete">
        <parameter ref="CycleInterval" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="LMAPCollector:1" dmr:version="2.12">
      <object ref="Device.LMAP.Report.{i}." requirement="present">
        <parameter ref="ReportDate" requirement="readOnly"/>
        <parameter ref="AgentIdentifier" requirement="readOnly"/>
        <parameter ref="GroupIdentifier" requirement="readOnly"/>
        <parameter ref="MeasurementPoint" requirement="readOnly"/>
        <parameter ref="ResultNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.Report.{i}.Result.{i}." requirement="present">
        <parameter ref="TaskName" requirement="readOnly"/>
        <parameter ref="ScheduleName" requirement="readOnly"/>
        <parameter ref="ActionName" requirement="readOnly"/>
        <parameter ref="EventTime" requirement="readOnly"/>
        <parameter ref="CycleNumber" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Tags" requirement="readOnly"/>
        <parameter ref="OptionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ResultConflictNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ResultReportTableNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.Report.{i}.Result.{i}.Option.{i}." requirement="present">
        <parameter ref="Order" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.Report.{i}.Result.{i}.Conflict.{i}." requirement="present">
        <parameter ref="TaskName" requirement="readOnly"/>
        <parameter ref="ScheduleName" requirement="readOnly"/>
        <parameter ref="ActionName" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.Report.{i}.Result.{i}.ReportTable.{i}." requirement="present">
        <parameter ref="ColumnLabels" requirement="readOnly"/>
        <parameter ref="ResultReportRowNumberOfEntries" requirement="readOnly"/>
        <parameter ref="RegistryNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.Report.{i}.Result.{i}.ReportTable.{i}.ResultRow.{i}." requirement="present">
        <parameter ref="Values" requirement="readOnly"/>
      </object>
      <object ref="Device.LMAP.Report.{i}.Result.{i}.ReportTable.{i}.Registry.{i}." requirement="present">
        <parameter ref="RegistryEntry" requirement="readOnly"/>
        <parameter ref="Roles" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="BASAPM:1" dmr:version="2.12">
      <object ref="Device.BASAPM." requirement="present">
        <parameter ref="MeasurementEndpointNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.BASAPM.MeasurementEndpoint.{i}." requirement="createDelete">
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="MeasurementAgent" requirement="readWrite"/>
        <parameter ref="DeviceOwnership" requirement="readWrite"/>
        <parameter ref="OperationalDomain" requirement="readWrite"/>
        <parameter ref="InternetDomain" requirement="readWrite"/>
        <parameter ref="UseMeasurementEndpointInReports" requirement="readWrite"/>
      </object>
      <object ref="Device.BASAPM.MeasurementEndpoint.{i}.ISPDevice." requirement="present">
        <parameter ref="ReferencePoint" requirement="readWrite"/>
        <parameter ref="GeographicalLocation" requirement="readWrite"/>
      </object>
      <object ref="Device.BASAPM.MeasurementEndpoint.{i}.CustomerDevice." requirement="present">
        <parameter ref="EquipmentIdentifier" requirement="readWrite"/>
        <parameter ref="CustomerIdentifier" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="TWAMPReflectorBasic:1" dmr:version="2.12">
      <object ref="Device.IP.Interface.{i}." requirement="createDelete">
        <parameter ref="TWAMPReflectorNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Interface.{i}.TWAMPReflector.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Port" requirement="readWrite"/>
        <parameter ref="MaximumTTL" requirement="readWrite"/>
        <parameter ref="IPAllowedList" requirement="readWrite"/>
        <parameter ref="PortAllowedList" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="AutonXferComplPolicy:1" dmr:version="2.0">
      <object ref="Device.ManagementServer.AutonomousTransferCompletePolicy." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="TransferTypeFilter" requirement="readWrite"/>
        <parameter ref="FileTypeFilter" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DownloadAnnounce:1" dmr:version="2.0">
      <object ref="Device.ManagementServer.DownloadAvailability." requirement="present"/>
      <object ref="Device.ManagementServer.DownloadAvailability.Announcement." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="GroupNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ManagementServer.DownloadAvailability.Announcement.Group.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="URL" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DownloadQuery:1" dmr:version="2.0">
      <object ref="Device.ManagementServer.DownloadAvailability." requirement="present"/>
      <object ref="Device.ManagementServer.DownloadAvailability.Query." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="URL" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Baseline:1" dmr:version="2.0">
      <object ref="Device." requirement="present">
        <parameter ref="InterfaceStackNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DeviceInfo." requirement="present">
        <parameter ref="Manufacturer" requirement="readOnly"/>
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="ModelName" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="HardwareVersion" requirement="readOnly"/>
        <parameter ref="SoftwareVersion" requirement="readOnly"/>
        <parameter ref="ProvisioningCode" requirement="readWrite"/>
        <parameter ref="UpTime" requirement="readOnly"/>
      </object>
      <object ref="Device.LANConfigSecurity." requirement="present">
        <parameter ref="ConfigPassword" requirement="readWrite"/>
      </object>
      <object ref="Device.DNS." requirement="present"/>
      <object ref="Device.DNS.Client." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="ServerNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS.Client.Server.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="DNSServer" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Type" requirement="readOnly"/>
      </object>
      <object ref="Device.ManagementServer." requirement="present">
        <parameter ref="URL" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="PeriodicInformEnable" requirement="readWrite"/>
        <parameter ref="PeriodicInformInterval" requirement="readWrite"/>
        <parameter ref="PeriodicInformTime" requirement="readWrite"/>
        <parameter ref="ParameterKey" requirement="readOnly"/>
        <parameter ref="ConnectionRequestURL" requirement="readOnly"/>
        <parameter ref="ConnectionRequestUsername" requirement="readWrite"/>
        <parameter ref="ConnectionRequestPassword" requirement="readWrite"/>
        <parameter ref="UpgradesManaged" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Baseline:2" base="Baseline:1" dmr:version="2.2">
      <object ref="Device.InterfaceStack.{i}." requirement="present">
        <parameter ref="HigherLayer" requirement="readOnly"/>
        <parameter ref="LowerLayer" requirement="readOnly"/>
      </object>
      <object ref="Device.DNS." requirement="present">
        <parameter ref="SupportedRecordTypes" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Baseline:3" base="Baseline:2" dmr:version="2.4">
      <object ref="Device." requirement="present">
        <parameter ref="RootDataModelVersion" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DeviceAssociation:1" dmr:version="2.0">
      <description>
        This profile implies support for all of the Gateway requirements defined in {{bibref|TR-069|Annex F}}.
      </description>
      <object ref="Device.ManagementServer." requirement="notSpecified">
        <parameter ref="ManageableDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ManagementServer.ManageableDevice.{i}." requirement="present">
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="ProductClass" requirement="readOnly"/>
        <parameter ref="Host" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPConnReq:1" dmr:version="2.0">
      <description>
        This profile only applies to Internet Gateway Devices that are acting as CPE behind a NAT gateway as described in {{bibref|TR-069|Annex G}}, and implies support for all of the CPE requirements defined within Annex G.
      </description>
      <object ref="Device.ManagementServer." requirement="notSpecified">
        <parameter ref="UDPConnectionRequestAddress" requirement="readOnly"/>
        <parameter ref="STUNEnable" requirement="readWrite"/>
        <parameter ref="STUNServerAddress" requirement="readWrite"/>
        <parameter ref="STUNServerPort" requirement="readWrite"/>
        <parameter ref="STUNUsername" requirement="readWrite"/>
        <parameter ref="STUNPassword" requirement="readWrite"/>
        <parameter ref="STUNMaximumKeepAlivePeriod" requirement="readWrite"/>
        <parameter ref="STUNMinimumKeepAlivePeriod" requirement="readWrite"/>
        <parameter ref="NATDetected" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="StandbyPolicy:1" dmr:version="2.7">
      <description>
        Note that support for this profile implies support for the requirements of {{bibref|TR-069a5|Annex L}}.
      </description>
      <object ref="Device.ManagementServer.StandbyPolicy." requirement="present">
        <parameter ref="CRUnawarenessMaxDuration" requirement="readWrite"/>
        <parameter ref="MaxMissedPeriodic" requirement="readWrite"/>
        <parameter ref="NotifyMissedScheduled" requirement="readWrite"/>
        <parameter ref="NetworkAwarenessCapable" requirement="readOnly"/>
        <parameter ref="SelfTimerCapable" requirement="readOnly"/>
        <parameter ref="CRAwarenessRequested" requirement="readWrite"/>
        <parameter ref="PeriodicAwarenessRequested" requirement="readWrite"/>
        <parameter ref="ScheduledAwarenessRequested" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="XMPPConnReq:1" extends="XMPPBasic:1" dmr:version="2.7">
      <object ref="Device.ManagementServer." requirement="present">
        <parameter ref="SupportedConnReqMethods" requirement="readOnly"/>
        <parameter ref="ConnReqXMPPConnection" requirement="readWrite"/>
        <parameter ref="ConnReqAllowedJabberIDs" requirement="readWrite"/>
        <parameter ref="ConnReqJabberID" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="SupportedDataModel:2" base="SupportedDataModel:1" dmr:version="2.6">
      <object ref="Device.DeviceInfo.SupportedDataModel.{i}." requirement="present">
        <parameter ref="UUID" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="SM_ExecEnvs:1" dmr:version="2.1">
      <object ref="Device.SoftwareModules." requirement="present">
        <parameter ref="ExecEnvNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.ExecEnv.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="Vendor" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="AllocatedDiskSpace" requirement="readOnly"/>
        <parameter ref="AvailableDiskSpace" requirement="readOnly"/>
        <parameter ref="AllocatedMemory" requirement="readOnly"/>
        <parameter ref="AvailableMemory" requirement="readOnly"/>
        <parameter ref="ActiveExecutionUnits" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="SM_DeployAndExecUnits:1" dmr:version="2.1">
      <object ref="Device.SoftwareModules." requirement="present">
        <parameter ref="DeploymentUnitNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ExecutionUnitNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.DeploymentUnit.{i}." requirement="present">
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="DUID" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Resolved" requirement="readOnly"/>
        <parameter ref="URL" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
        <parameter ref="Vendor" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="VendorLogList" requirement="readOnly"/>
        <parameter ref="VendorConfigList" requirement="readOnly"/>
        <parameter ref="ExecutionUnitList" requirement="readOnly"/>
        <parameter ref="ExecutionEnvRef" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.ExecutionUnit.{i}." requirement="present">
        <parameter ref="EUID" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="ExecEnvLabel" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="RequestedState" requirement="readWrite"/>
        <parameter ref="ExecutionFaultCode" requirement="readOnly"/>
        <parameter ref="ExecutionFaultMessage" requirement="readOnly"/>
        <parameter ref="Vendor" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
        <parameter ref="References" requirement="readOnly"/>
        <parameter ref="AssociatedProcessList" requirement="readOnly"/>
        <parameter ref="VendorLogList" requirement="readOnly"/>
        <parameter ref="VendorConfigList" requirement="readOnly"/>
        <parameter ref="SupportedDataModelList" requirement="readOnly"/>
        <parameter ref="ExecutionEnvRef" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.ExecutionUnit.{i}.Extensions." requirement="present"/>
    </profile>
    <profile name="SM_Baseline:1" dmr:version="2.1">
      <object ref="Device.SoftwareModules." requirement="present">
        <parameter ref="ExecEnvNumberOfEntries" requirement="readOnly"/>
        <parameter ref="DeploymentUnitNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ExecutionUnitNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.ExecEnv.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="Vendor" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="ActiveExecutionUnits" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.DeploymentUnit.{i}." requirement="present">
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="DUID" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Resolved" requirement="readOnly"/>
        <parameter ref="URL" requirement="readOnly"/>
        <parameter ref="Vendor" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="ExecutionUnitList" requirement="readOnly"/>
        <parameter ref="ExecutionEnvRef" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.ExecutionUnit.{i}." requirement="present">
        <parameter ref="EUID" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="ExecEnvLabel" requirement="readOnly"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="RequestedState" requirement="readWrite"/>
        <parameter ref="ExecutionFaultCode" requirement="readOnly"/>
        <parameter ref="ExecutionFaultMessage" requirement="readOnly"/>
        <parameter ref="Vendor" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="References" requirement="readOnly"/>
        <parameter ref="SupportedDataModelList" requirement="readOnly"/>
      </object>
      <object ref="Device.SoftwareModules.ExecutionUnit.{i}.Extensions." requirement="present"/>
    </profile>
    <profile name="ETSIM2MSCLBaseline:1" dmr:version="2.6">
      <object ref="Device.ETSIM2M.SCL.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="AnnouncedToSCLList" requirement="readWrite"/>
        <parameter ref="SAFPolicySetNumberOfEntries" requirement="readOnly"/>
        <parameter ref="AreaNwkInstanceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="AreaNwkDeviceInfoInstanceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.Discovery." requirement="present">
        <parameter ref="MaxNumberOfDiscovRecords" requirement="readWrite"/>
        <parameter ref="MaxSizeOfDiscovAnswer" requirement="readWrite"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.Reregistration." requirement="present">
        <parameter ref="RegTargetNSCLList" requirement="readWrite"/>
        <parameter ref="RegSearchStrings" requirement="readWrite"/>
        <parameter ref="RegAccessRightID" requirement="readWrite"/>
        <parameter ref="RegExpirationDuration" requirement="readWrite"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.Reregistration.ActionStatus." requirement="present">
        <parameter ref="Progress" requirement="readOnly"/>
        <parameter ref="FinalStatus" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="PolicyScope" requirement="readWrite"/>
        <parameter ref="ANPPolicyNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ANName" requirement="readWrite"/>
        <parameter ref="BlockPeriodNumberOfEntries" requirement="readOnly"/>
        <parameter ref="RequestCategoryNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.BlockPeriod.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="FailedAttempts" requirement="readWrite"/>
        <parameter ref="BlockDuration" requirement="readWrite"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.RequestCategory.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="RCAT" requirement="readWrite"/>
        <parameter ref="ScheduleNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.RequestCategory.{i}.Schedule.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Schedules" requirement="readWrite"/>
        <parameter ref="AbsTimeSpanNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.ANPPolicy.{i}.RequestCategory.{i}.Schedule.{i}.AbsTimeSpan.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="StartTime" requirement="readWrite"/>
        <parameter ref="EndTime" requirement="readWrite"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.M2MSPPolicy." requirement="present">
        <parameter ref="DefaultRCATValue" requirement="readWrite"/>
        <parameter ref="RequestCategoryNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.SAFPolicySet.{i}.M2MSPPolicy.RequestCategory.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="RCAT" requirement="readWrite"/>
        <parameter ref="TolerableDelay" requirement="readWrite"/>
        <parameter ref="Thresh" requirement="readWrite"/>
        <parameter ref="Mem" requirement="readWrite"/>
        <parameter ref="RankedANList" requirement="readWrite"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.AreaNwkInstance.{i}." requirement="present">
        <parameter ref="ID" requirement="readOnly"/>
        <parameter ref="AreaNwkType" requirement="readOnly"/>
        <parameter ref="ListOfDevices" requirement="readOnly"/>
      </object>
      <object ref="Device.ETSIM2M.SCL.{i}.AreaNwkDeviceInfoInstance.{i}." requirement="present">
        <parameter ref="AreaNwkInstance" requirement="readOnly"/>
        <parameter ref="Host" requirement="readOnly"/>
        <parameter ref="ListOfDeviceNeighbors" requirement="readOnly"/>
        <parameter ref="ListOfDeviceApplications" requirement="readOnly"/>
        <parameter ref="SleepInterval" requirement="readWrite"/>
        <parameter ref="SleepDuration" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="TempStatusAdv:1" extends="TempStatus:1" dmr:version="2.0">
      <object ref="Device.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}." requirement="present">
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="LowAlarmValue" requirement="readWrite"/>
        <parameter ref="LowAlarmTime" requirement="readOnly"/>
        <parameter ref="HighAlarmValue" requirement="readWrite"/>
        <parameter ref="HighAlarmTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="TempStatusAdv:2" base="TempStatusAdv:1" dmr:version="2.1">
      <object ref="Device.DeviceInfo.TemperatureStatus.TemperatureSensor.{i}." requirement="present">
        <parameter ref="PollingInterval" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="USBHostsAdv:1" extends="USBHostsBasic:1" dmr:version="2.0">
      <object ref="Device.USB.USBHosts.Host.{i}." requirement="present">
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="PowerManagementEnable" requirement="readWrite"/>
      </object>
      <object ref="Device.USB.USBHosts.Host.{i}.Device.{i}." requirement="present">
        <parameter ref="IsSuspended" requirement="readOnly"/>
        <parameter ref="IsSelfPowered" requirement="readOnly"/>
        <parameter ref="ConfigurationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.USBHosts.Host.{i}.Device.{i}.Configuration.{i}." requirement="present">
        <parameter ref="ConfigurationNumber" requirement="readOnly"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.USB.USBHosts.Host.{i}.Device.{i}.Configuration.{i}.Interface.{i}." requirement="present">
        <parameter ref="InterfaceNumber" requirement="readOnly"/>
        <parameter ref="InterfaceClass" requirement="readOnly"/>
        <parameter ref="InterfaceSubClass" requirement="readOnly"/>
        <parameter ref="InterfaceProtocol" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PeriodicStatsAdv:1" extends="PeriodicStatsBase:1" dmr:version="2.0">
      <object ref="Device.PeriodicStatistics.SampleSet.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="TimeReference" requirement="readWrite"/>
        <parameter ref="FetchSamples" requirement="readWrite"/>
        <parameter ref="ForceSample" requirement="readWrite"/>
      </object>
      <object ref="Device.PeriodicStatistics.SampleSet.{i}.Parameter.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="SampleMode" requirement="readWrite"/>
        <parameter ref="CalculationMode" requirement="readWrite"/>
        <parameter ref="LowThreshold" requirement="readWrite"/>
        <parameter ref="HighThreshold" requirement="readWrite"/>
        <parameter ref="Failures" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPInterface:2" base="IPInterface:1" dmr:version="2.2">
      <description>
        This profile is IPv4 specific.
      </description>
      <object ref="Device.IP." requirement="present">
        <parameter ref="IPv4Enable" requirement="readWrite"/>
        <parameter ref="IPv4Status" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Interface.{i}." requirement="createDelete">
        <parameter ref="IPv4Enable" requirement="readWrite"/>
      </object>
      <object ref="Device.IP.Interface.{i}.IPv4Address.{i}." requirement="createDelete">
        <parameter ref="Status" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="IPv6Interface:1" dmr:version="2.2">
      <object ref="Device.IP." requirement="present">
        <parameter ref="IPv6Capable" requirement="readOnly"/>
        <parameter ref="IPv6Enable" requirement="readWrite"/>
        <parameter ref="IPv6Status" requirement="readOnly"/>
        <parameter ref="ULAPrefix" requirement="readWrite"/>
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.IP.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="IPv6Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="ULAEnable" requirement="readWrite"/>
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="IPv6AddressNumberOfEntries" requirement="readOnly"/>
        <parameter ref="IPv6PrefixNumberOfEntries" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PPPInterface:1" dmr:version="2.0">
      <object ref="Device.PPP." requirement="present">
        <parameter ref="InterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.PPP.Interface.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Alias" requirement="readWrite"/>
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="LastChange" requirement="readOnly"/>
        <parameter ref="LowerLayers" requirement="readWrite"/>
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="ConnectionTrigger" requirement="readWrite"/>
      </object>
      <object ref="Device.PPP.Interface.{i}.PPPoE." requirement="present">
        <parameter ref="SessionID" requirement="readOnly"/>
        <parameter ref="ACName" requirement="readWrite"/>
        <parameter ref="ServiceName" requirement="readWrite"/>
      </object>
      <object ref="Device.PPP.Interface.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PPPInterface:2" base="PPPInterface:1" dmr:version="2.2">
      <object ref="Device.PPP." requirement="present">
        <parameter ref="SupportedNCPs" requirement="readOnly"/>
      </object>
      <object ref="Device.PPP.Interface.{i}." requirement="createDelete">
        <parameter ref="IPv6CPEnable" requirement="readWrite">
          <description>
            REQUIRED only for IPv6 capable devices.
          </description>
        </parameter>
      </object>
      <object ref="Device.PPP.Interface.{i}.IPv6CP." requirement="present">
        <description>
          REQUIRED only for IPv6 capable devices.
        </description>
        <parameter ref="LocalInterfaceIdentifier" requirement="readOnly"/>
        <parameter ref="RemoteInterfaceIdentifier" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DHCPv6ClientServerIdentity:1" extends="DHCPv6Client:1" dmr:version="2.2">
      <object ref="Device.DHCPv6.Client.{i}." requirement="createDelete">
        <parameter ref="ServerNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Client.{i}.Server.{i}." requirement="present">
        <parameter ref="SourceAddress" requirement="readOnly"/>
        <parameter ref="DUID" requirement="readOnly"/>
        <parameter ref="InformationRefreshTime" requirement="readOnly"/>
      </object>
      <object ref="Device.DHCPv6.Client.{i}.ReceivedOption.{i}." requirement="present">
        <parameter ref="Server" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="MQTTClientExtended:1" base="MQTTClientBase:1" dmr:version="2.10">
      <description>
        Adds client authentication, will handling and extends statistics
      </description>
      <object ref="Device.MQTT.Client.{i}." requirement="present">
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="ClientID" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="TransportProtocol" requirement="readWrite"/>
        <parameter ref="MessageRetryTime" requirement="readWrite"/>
        <parameter ref="ConnectRetryTime" requirement="readWrite"/>
        <parameter ref="ForceReconnect" requirement="readWrite"/>
        <parameter ref="WillEnable" requirement="readWrite"/>
        <parameter ref="WillTopic" requirement="readWrite"/>
        <parameter ref="WillValue" requirement="readWrite"/>
        <parameter ref="WillQoS" requirement="readWrite"/>
        <parameter ref="WillRetain" requirement="readWrite"/>
      </object>
      <object ref="Device.MQTT.Client.{i}.Stats." requirement="present">
        <parameter ref="LastPublishMessageSent" requirement="readOnly"/>
        <parameter ref="LastPublishMessageReceived" requirement="readOnly"/>
        <parameter ref="PublishSent" requirement="readOnly"/>
        <parameter ref="PublishReceived" requirement="readOnly"/>
        <parameter ref="SubscribeSent" requirement="readOnly"/>
        <parameter ref="UnSubscribeSent" requirement="readOnly"/>
        <parameter ref="PublishErrors" requirement="readOnly"/>
      </object>
    </profile>
  </model>
</dm:document>
