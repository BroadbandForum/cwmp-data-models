<?xml version="1.0" encoding="UTF-8"?>
<!-- DO NOT EDIT; generated by Broadband Forum report.pl#428 (2022-01-07 version) on 2022/03/08 at 11:29:49.
     report.pl -exitcode=fatals -cwmpindex=.. -nofontstyles -nowarnreport -quiet -report=xml -outfile=tr-098-1-2-0-full.xml tr-098-1-2-0.xml
     See https://github.com/BroadbandForum/cwmp-xml-tools/tree/master/Report_Tool. -->
<!--
  TR-069 InternetGatewayDevice:1.4 Root Object definition

  Copyright (c) 2009-2017, Broadband Forum
  
  Redistribution and use in source and binary forms, with or
  without modification, are permitted provided that the following
  conditions are met:
  
  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  
  2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.
  
  3. Neither the name of the copyright holder nor the names of its
     contributors may be used to endorse or promote products
     derived from this software without specific prior written
     permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  
  The above license is used as a license under copyright only.
  Please reference the Forum IPR Policy for patent licensing terms
  <https://www.broadband-forum.org/ipr-policy>.
  
  Any moral rights which are necessary to exercise under the above
  license grant are also deemed granted under this license.
  
  Summary:
  TR-069 InternetGatewayDevice:1.4 Root Object Definition.  Contains definition of
  InternetGatewayDevice:1.4 Root Object.

  Version History:
  March 2009: tr-098-1-2-0.xml, corresponds to TR-098 Amendment 1 sections 2.4 (Data
              Model), 2.4.1 (Inform and Notification Requirements) and 3 (Profile
              Definitions).
  September 2009: tr-098-1-2-0.xml (name unchanged)
              - fixed header information (had been cut-and-pasted from elsewhere)
              - changed WLANConfigurationNumberOfEntries to (wrong but consistent)
                LANWLANConfigurationNumberOfEntries
              - fixed 802.1Q-2004 reference to 802.1Q-2005
              - fixed cwmp-datamodel.xsd to be cwmp-datamodel-1-0.xsd
-->
<dm:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-0"
             xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:broadband-forum-org:cwmp:datamodel-1-0 https://www.broadband-forum.org/cwmp/cwmp-datamodel-1-0.xsd urn:broadband-forum-org:cwmp:datamodel-report-0-1 https://www.broadband-forum.org/cwmp/cwmp-datamodel-report.xsd"
             spec="urn:broadband-forum-org:tr-098-1-2-0">
  <dataType name="_AliasCommon">
    <description>
      A non-volatile handle used to reference this instance.
      '''This is intended only for use in protocol-independent "common" definitions, and MUST NOT be used in protocol-specific definitions.'''
    </description>
    <string>
      <size maxLength="64"/>
    </string>
  </dataType>
  <dataType name="_AliasCWMP" base="_AliasCommon">
    <description>
      A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
      If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069|3.6.1}} and described in {{bibref|TR-069|Appendix II}}, the following mandatory constraints MUST be enforced:
      * Its value MUST NOT be empty.
      * Its value MUST start with a letter.
      * If its value is not assigned by the ACS, it MUST start with a "cpe-" prefix.
      * The CPE MUST NOT change the parameter value.
    </description>
    <size maxLength="64"/>
  </dataType>
  <dataType name="_AliasUSP" base="_AliasCommon">
    <description>
      A non-volatile unique key used to reference this instance. Alias provides a mechanism for a Controller to label this instance for future reference.
      The following mandatory constraints MUST be enforced:
      * The value MUST NOT be empty.
      * The value MUST start with a letter.
      * If the value is not assigned by the Controller at creation time, the Agent MUST assign a value with an "cpe-" prefix.
    </description>
    <size maxLength="64"/>
  </dataType>
  <dataType name="Alias" base="_AliasCWMP">
    <description>
      A non-volatile handle used to reference this instance. Alias provides a mechanism for an ACS to label this instance for future reference.
      If the CPE supports the Alias-based Addressing feature as defined in {{bibref|TR-069|3.6.1}} and described in {{bibref|TR-069|Appendix II}}, the following mandatory constraints MUST be enforced:
      * Its value MUST NOT be empty.
      * Its value MUST start with a letter.
      * If its value is not assigned by the ACS, it MUST start with a "cpe-" prefix.
      * The CPE MUST NOT change the parameter value.
    </description>
    <size maxLength="64"/>
  </dataType>
  <dataType name="Dbm1000">
    <description>
      The value is measured in ''dBm/1000'', i.e. the value divided by 1000 is dB relative to 1 mW. For example, -12345 means -12.345 dBm, 0 means 0 dBm (1 mW) and 12345 means 12.345 dBm.
    </description>
    <int>
    </int>
  </dataType>
  <dataType name="DiagnosticsState">
    <description>
      Indicates the availability of diagnostics data. Enumeration of:
      {{enum}}
      If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test. When writing, the only allowed values are {{enum|Requested}} and {{enum|Canceled}}. To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set, and any errors or inconsistencies in the test parameters MUST be detected, either prior to or at the same time as (in the same SetParameterValues) setting this parameter to {{enum|Requested}}.
      When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic test.
      When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
      If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
      When the diagnostic initiated by the ACS is completed (successfully or not), but not if it is canceled for any reason, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
      After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots. After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
      Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
      While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
      While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
      While the test is in progress, setting this parameter to {{enum|Canceled}} MUST result in the test being canceled and the value of this parameter being set to {{enum|None}}. If the CPE does not support the {{enum|Canceled}} value, it MUST return a SPV error with "Invalid Parameter value" (9007) to the ACS instead.
    </description>
    <string>
      <enumeration value="None" access="readOnly"/>
      <enumeration value="Requested"/>
      <enumeration value="Canceled" optional="true"/>
      <enumeration value="Complete" access="readOnly"/>
      <enumeration value="Error" access="readOnly" optional="true"/>
    </string>
  </dataType>
  <dataType name="IEEE_EUI64">
    <description>
      The IEEE EUI 64-bit identifier as defined in {{bibref|IEEE_EUI64}}. The IEEE defined 64-bit extended unique identifier (EUI-64) is a concatenation of:
      * The 24-bit (OUI-24) or 36-bit (OUI-36) company_id value assigned by the IEEE Registration Authority (IEEE-RA), and
      * The extension identifier (40 bits for OUI-24 or 28 bits for OUI-36) assigned by the organization with that company_id assignment.
    </description>
    <string>
      <size maxLength="23"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){7}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="IPAddress">
    <description>
      IP address, i.e. IPv4 address (or IPv4 subnet mask) or IPv6 address.
      All IPv4 addresses and subnet masks MUST be represented as strings in IPv4 dotted-decimal notation. Here are some examples of valid IPv4 address textual representations:
      * 216.52.29.100
      * 192.168.1.254
      All IPv6 addresses MUST be represented using any of the 3 standard textual representations defined in {{bibref|RFC4291}} Sections 2.2.1, 2.2.2 and 2.2.3. Both lower-case and upper-case letters can be used, but use of lower-case letters is RECOMMENDED. Here are some examples of valid IPv6 address textual representations:
      * 1080:0:0:800:ba98:3210:11aa:12dd
      * 1080::800:ba98:3210:11aa:12dd
      * 0:0:0:0:0:0:13.1.68.3
      IPv6 addresses MUST NOT include zone identifiers. Zone identifiers are discussed in {{bibref|RFC4007|Section 6}}.
      Unspecified or inapplicable addresses (or IPv4 subnet masks) MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="45"/>
    </string>
  </dataType>
  <dataType name="IPv4Address" base="IPAddress">
    <description>
      IPv4 address (or subnet mask).
      Can be any IPv4 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="15"/>
    <pattern value=""/>
    <pattern value="((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])"/>
  </dataType>
  <dataType name="IPv6Address" base="IPAddress">
    <description>
      IPv6 address.
      Can be any IPv6 address that is permitted by the ''IPAddress'' data type.
    </description>
    <size maxLength="45"/>
  </dataType>
  <dataType name="IPPrefix">
    <description>
      IPv4 or IPv6 routing prefix in Classless Inter-Domain Routing (CIDR) notation {{bibref|RFC4632}}. This is specified as an IP address followed by an appended "/n" suffix, where ''n'' (the prefix size) is an integer in the range 0-32 (for IPv4) or 0-128 (for IPv6) that indicates the number of (leftmost) '1' bits of the routing prefix.
      * IPv4 example: 192.168.1.0/24
      * IPv6 example: 2001:edff:fe6a:f76::/64
      If the IP address part is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition. In this case the IP prefix will be of the form "/n".
      If the entire IP prefix is unspecified or inapplicable, it MUST be {{empty}} unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="49"/>
    </string>
  </dataType>
  <dataType name="IPv4Prefix" base="IPPrefix">
    <description>
      IPv4 address prefix.
      Can be any IPv4 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="18"/>
    <pattern value=""/>
    <pattern value="/(3[0-2]|[012]?[0-9])"/>
    <pattern value="((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])/(3[0-2]|[012]?[0-9])"/>
  </dataType>
  <dataType name="IPv6Prefix" base="IPPrefix">
    <description>
      IPv6 address prefix.
      Can be any IPv6 prefix that is permitted by the ''IPPrefix'' data type.
    </description>
    <size maxLength="49"/>
  </dataType>
  <dataType name="JSONObject">
    <description>
      A JSON Object as defined in {{bibref|RFC7159|Section 4}}.
    </description>
    <string>
    </string>
  </dataType>
  <dataType name="MACAddress">
    <description>
      All MAC addresses are represented as strings of 12 hexadecimal digits (digits 0-9, letters A-F or a-f) displayed as six pairs of digits separated by colons. Unspecified or inapplicable MAC addresses MUST be represented as empty strings unless otherwise specified by the parameter definition.
    </description>
    <string>
      <size maxLength="17"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f][0-9A-Fa-f]:){5}([0-9A-Fa-f][0-9A-Fa-f])"/>
    </string>
  </dataType>
  <dataType name="StatsCounter32">
    <description>
      A 32-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD NOT be used for statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt'' (i.e. 0xffffffff, referred to below as ''maxval''). ''StatsCounter64'' SHOULD be used for such parameters.
      The value ''maxval'' indicates that no data is available for this parameter. In the unlikely event that the actual value of the statistic is ''maxval'', the CPE SHOULD return ''maxval - 1''.
      The actual value of the statistic might be greater than ''maxval''. Such values SHOULD wrap around through zero.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedInt>
    </unsignedInt>
  </dataType>
  <dataType name="StatsCounter64">
    <description>
      A 64-bit statistics parameter, e.g. a byte counter.
      This data type SHOULD be used for all statistics parameters whose values might become greater than the maximum value that can be represented as an ''unsignedInt''.
      The maximum value that can be represented as an ''unsignedLong'' (i.e. 0xffffffffffffffff) indicates that no data is available for this parameter.
      The term ''packet'' is to be interpreted as the transmission unit appropriate to the protocol layer in question, e.g. an IP packet or an Ethernet frame.
    </description>
    <unsignedLong>
    </unsignedLong>
  </dataType>
  <dataType name="UUID">
    <description>
      Universally Unique Identifier. See {{bibref|RFC4122}}.
    </description>
    <string>
      <size minLength="36" maxLength="36"/>
      <pattern value="[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"/>
    </string>
  </dataType>
  <dataType name="URI">
    <description>
      Uniform Resource Identifier. See {{bibref|RFC3986}}.
    </description>
    <string>
      <size maxLength="2048"/>
    </string>
  </dataType>
  <dataType name="URN" base="URI">
    <description>
      Uniform Resource Name. See {{bibref|RFC3986}} (URI) and {{bibref|RFC8141}} (''urn'' URI scheme).
    </description>
    <size maxLength="2048"/>
    <pattern value="urn:[A-Za-z0-9][A-Za-z0-9-]{0,30}[A-Za-z0-9]:.+"/>
  </dataType>
  <dataType name="URL" base="URI">
    <description>
      Uniform Resource Locator. See {{bibref|RFC3986}} (URI), {{bibref|IANA-uri-schemes}}, and individual URI scheme RFCs such as {{bibref|RFC7252}} (''coap'', ''coaps'') and {{bibref|RFC7230}} (''http'', ''https'').
    </description>
    <size maxLength="2048"/>
  </dataType>
  <dataType name="ZigBeeNetworkAddress">
    <description>
      The ZigBee 16-bit network address (NWK) as defined in {{bibref|ZigBee2007}}. The address is assigned to a device by the network layer and used by the network layer for routing messages between devices.
    </description>
    <string>
      <size maxLength="4"/>
      <pattern value=""/>
      <pattern value="([0-9A-Fa-f]){4}"/>
    </string>
  </dataType>
  <bibliography>
    <reference id="802.1D-2004">
      <name>IEEE Std 802.1D-2004</name>
      <title>Media Access Control (MAC) Bridges</title>
      <organization>IEEE</organization>
      <date>2004</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1D-2004.pdf</hyperlink>
    </reference>
    <reference id="802.1Q-2005">
      <name>IEEE Std 802.1Q-2005</name>
      <title>Virtual Bridged Local Area Networks</title>
      <organization>IEEE</organization>
      <date>2006</date>
      <hyperlink>https://standards.ieee.org/getieee802/download/802.1Q-2005.pdf</hyperlink>
    </reference>
    <reference id="BLUE">
      <name>Blue</name>
      <title>A New Class of Active Queue Management Algorithms</title>
      <hyperlink>https://www.thefengs.com/wuchang/work/blue</hyperlink>
    </reference>
    <reference id="HTML4.01">
      <name>HTML 4.01 Specification</name>
      <organization>W3C</organization>
      <hyperlink>https://www.w3.org/TR/html4</hyperlink>
    </reference>
    <reference id="OUI">
      <name>Organizationally Unique Identifiers (OUIs)</name>
      <hyperlink>https://standards.ieee.org/faqs/OUI.html</hyperlink>
    </reference>
    <reference id="RED">
      <name>References on RED (Random Early Detection) Queue Management</name>
      <hyperlink>https://www.icir.org/floyd/red.html</hyperlink>
    </reference>
    <reference id="RFC862">
      <name>RFC 862</name>
      <title>Echo Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1983</date>
      <hyperlink>https://tools.ietf.org/html/rfc862</hyperlink>
    </reference>
    <reference id="RFC959">
      <name>RFC 959</name>
      <title>File Transfer Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1985</date>
      <hyperlink>https://tools.ietf.org/html/rfc959</hyperlink>
    </reference>
    <reference id="RFC2131">
      <name>RFC 2131</name>
      <title>Dynamic Host Configuration Protocol</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2131</hyperlink>
    </reference>
    <reference id="RFC2132">
      <name>RFC 2132</name>
      <title>DHCP Options and BOOTP Vendor Extensions</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2132</hyperlink>
    </reference>
    <reference id="RFC2225">
      <name>RFC 2225</name>
      <title>Classical IP and ARP over ATM</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2225</hyperlink>
    </reference>
    <reference id="RFC2474">
      <name>RFC 2474</name>
      <title>Definition of the Differentiated Services Field (DS Field) in the IPv4
        and IPv6 Headers</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2474</hyperlink>
    </reference>
    <reference id="RFC2516">
      <name>RFC 2516</name>
      <title>A Method for Transmitting PPP Over Ethernet (PPPoE)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2516</hyperlink>
    </reference>
    <reference id="RFC2616">
      <name>RFC 2616</name>
      <title>Hypertext Transfer Protocol -- HTTP/1.1</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>1999</date>
      <hyperlink>https://tools.ietf.org/html/rfc2616</hyperlink>
    </reference>
    <reference id="RFC2634">
      <name>RFC 2634</name>
      <title>Enhanced Security Services for S/MIME</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2634</hyperlink>
    </reference>
    <reference id="RFC2662">
      <name>RFC 2662</name>
      <title>Definitions of Managed Objects for the ADSL Lines</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2662</hyperlink>
    </reference>
    <reference id="RFC2684">
      <name>RFC 2684</name>
      <title>Multiprotocol Encapsulation over ATM Adaptation Layer 5</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2684</hyperlink>
    </reference>
    <reference id="RFC2697">
      <name>RFC 2697</name>
      <title>A Single Rate Three Color Marker</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2697</hyperlink>
    </reference>
    <reference id="RFC2698">
      <name>RFC 2698</name>
      <title>A Two Rate Three Color Marker</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2698</hyperlink>
    </reference>
    <reference id="RFC2898">
      <name>RFC 2898</name>
      <title>PKCS #5: Password-Based Cryptography Specification Version 2.0</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc2898</hyperlink>
    </reference>
    <reference id="RFC3004">
      <name>RFC 3004</name>
      <title>The User Class Option for DHCP</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3004</hyperlink>
    </reference>
    <reference id="RFC3066">
      <name>RFC 3066</name>
      <title>Tags for the Identification of Languages</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3066</hyperlink>
    </reference>
    <reference id="RFC3489">
      <name>RFC 3489</name>
      <title>STUN - Simple Traversal of User Datagram Protocol (UDP) Through Network
        Address Translators (NATs)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3489</hyperlink>
    </reference>
    <reference id="RFC3925">
      <name>RFC 3925</name>
      <title>Vendor-Identifying Vendor Options for Dynamic Host Configuration
        Protocol version 4 (DHCPv4)</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3925</hyperlink>
    </reference>
    <reference id="RFC3986">
      <name>RFC 3986</name>
      <title>Uniform Resource Identifier (URI): Generic Syntax</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <hyperlink>https://tools.ietf.org/html/rfc3986</hyperlink>
    </reference>
    <reference id="RFC4122">
      <name>RFC 4122</name>
      <title>A Universally Unique IDentifier (UUID) URN Namespace</title>
      <organization>IETF</organization>
      <category>RFC</category>
      <date>2005</date>
      <hyperlink>https://tools.ietf.org/html/rfc4122</hyperlink>
    </reference>
    <reference id="SOAP1.1">
      <name>Simple Object Access Protocol (SOAP) 1.1</name>
      <organization>W3C</organization>
      <hyperlink>https://www.w3.org/TR/2000/NOTE-SOAP-20000508</hyperlink>
    </reference>
    <reference id="TR-069">
      <name>TR-069 Amendment 6</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>April 2018</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069.pdf</hyperlink>
    </reference>
    <reference id="TR-069a1">
      <name>TR-069 Amendment 1</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2006</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-069a2">
      <name>TR-069 Amendment 2</name>
      <title>CPE WAN Management Protocol</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2007</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-069_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-098">
      <name>TR-098 Amendment 2 Corrigendum 1</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2014</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-098.pdf</hyperlink>
    </reference>
    <reference id="TR-098a1">
      <name>TR-098 Amendment 1</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>December 2006</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-098_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-098a2">
      <name>TR-098 Amendment 2</name>
      <title>Internet Gateway Device Data Model for TR-069</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>September 2008</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-098_Amendment-2.pdf</hyperlink>
    </reference>
    <reference id="TR-106">
      <name>TR-106 Amendment 8</name>
      <title>Data Model Template for CWMP Endpoints and USP Agents</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2018</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106.pdf</hyperlink>
    </reference>
    <reference id="TR-106a1">
      <name>TR-106 Amendment 1</name>
      <title>Data Model Template for TR-069-Enabled Devices</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>November 2006</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-1.pdf</hyperlink>
    </reference>
    <reference id="TR-106a8">
      <name>TR-106 Amendment 8</name>
      <title>Data Model Template for CWMP Endpoints and USP Agents</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2018</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-106_Amendment-8.pdf</hyperlink>
    </reference>
    <reference id="TR-143">
      <name>TR-143 Amendment 3</name>
      <title>Enabling Network Throughput Performance Tests and Statistical
        Monitoring</title>
      <organization>Broadband Forum</organization>
      <category>Technical Report</category>
      <date>May 2017</date>
      <hyperlink>https://www.broadband-forum.org/technical/download/TR-143.pdf</hyperlink>
    </reference>
    <reference id="WPSv1.0">
      <name>Wi-Fi Protected Setup Specification Version 1.0h</name>
      <title>Wi-Fi Alliance</title>
      <date>2006</date>
      <hyperlink>https://www.wi-fi.org/discover-wi-fi/specifications</hyperlink>
    </reference>
  </bibliography>
  <model name="InternetGatewayDevice:1.4">
    <object name="InternetGatewayDevice." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        The top-level object for an Internet Gateway Device.
      </description>
      <parameter name="DeviceSummary" access="readOnly" forcedInform="true" version="1.0">
        <description>
          As defined in {{bibref|TR-106a1}}.
        </description>
        <syntax>
          <string>
            <size maxLength="1024"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LANDeviceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|LANDevice}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WANDeviceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|WANDevice}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Services." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains general services information.
      </description>
    </object>
    <object name="InternetGatewayDevice.Capabilities." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        The capabilities of the device.  This is a constant read-only object, meaning that only a firmware upgrade will cause these values to be altered.
      </description>
    </object>
    <object name="InternetGatewayDevice.Capabilities.PerformanceDiagnostic." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        The capabilities of the Performance Diagnostics (''DownloadDiagnostics'' and ''UploadDiagnostics'') for the device.
      </description>
      <parameter name="DownloadTransports" access="readOnly" version="1.0">
        <description>
          Supported ''DownloadDiagnostics'' transport protocols for a CPE device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP" version="1.0"/>
            <enumeration value="FTP" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadTransports" access="readOnly" version="1.0">
        <description>
          Supported ''UploadDiagnostics'' transport protocols for a CPE device.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="HTTP" version="1.0"/>
            <enumeration value="FTP" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceInfo." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains general device information.
      </description>
      <parameter name="Manufacturer" access="readOnly" version="1.0">
        <description>
          The manufacturer of the CPE (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ManufacturerOUI" access="readOnly" version="1.0">
        <description>
          Organizationally unique identifier of the device manufacturer.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  The value MUST be a valid OUI as defined in {{bibref|OUI}}.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModelName" access="readOnly" version="1.0">
        <description>
          Model name of the CPE (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" version="1.0">
        <description>
          A full description of the CPE device (human readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" version="1.0">
        <description>
          Identifier of the class of product for which the serial number applies.  That is, for a given manufacturer, this parameter is used to identify the product or class of product over which the {{param|SerialNumber}} parameter is unique.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" version="1.0">
        <description>
          Serial number of the CPE.
          This value MUST remain fixed over the lifetime of the device, including across firmware updates.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HardwareVersion" access="readOnly" forcedInform="true" version="1.0">
        <description>
          A string identifying the particular CPE model and version.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SoftwareVersion" access="readOnly" activeNotify="forceEnabled" forcedInform="true" version="1.0">
        <description>
          A string identifying the software version currently installed in the CPE.
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents a more minor category of variation.  For example, ''3.0.21'' where the components mean: ''Major.Minor.Build''.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModemFirmwareVersion" access="readOnly" version="1.0">
        <description>
          A string identifying the version of the modem firmware currently installed in the CPE.  This is applicable only when the modem firmware is separable from the overall CPE software.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="EnabledOptions" access="readOnly" version="1.0">
        <description>
          The OptionName of each Option that is currently enabled in the CPE.  The OptionName of each is identical to the OptionName element of the OptionStruct described in {{bibref|TR-069a2}}.  Only those options are listed whose State indicates the option is enabled.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AdditionalHardwareVersion" access="readOnly" version="1.0">
        <description>
          Any additional hardware version information the vendor might wish to supply.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AdditionalSoftwareVersion" access="readOnly" version="1.0">
        <description>
          Any additional software version information the vendor might wish to supply.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SpecVersion" access="readOnly" status="deprecated" forcedInform="true" version="1.0">
        <description>
          Represents the version of the specification implemented by the device.  Currently 1.0 is the only available version.  The value of this parameter MUST equal "1.0".
          This parameter is DEPRECATED because its value is fixed and it therefore serves no purpose.  However, it is a Forced Inform parameter and therefore cannot be OBSOLETED.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value="1.0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="ProvisioningCode" access="readWrite" activeNotify="forceEnabled" forcedInform="true" version="1.0">
        <description>
          Identifier of the primary service provider and other provisioning information, which MAY be used by the ACS to determine service provider-specific customization and provisioning parameters.
          If not {{empty}}, this argument SHOULD be in the form of a hierarchical descriptor with one or more nodes specified.  Each node in the hierarchy is represented as a 4-character sub-string, containing only numerals or upper-case letters.  If there is more than one node indicated, each node is separated by a "." (dot).  Examples: "TLCO" or "TLCO.GRP2".
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Time in seconds since the CPE was last restarted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FirstUseDate" access="readOnly" version="1.0">
        <description>
          Date and time in UTC that the CPE first both successfully established an IP-layer network connection and acquired an absolute time reference using NTP or equivalent over that network connection.  The CPE MAY reset this date after a factory reset.
          If NTP or equivalent is not available, this parameter, if present, SHOULD be set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="DeviceLog" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Vendor-specific log(s).
        </description>
        <syntax>
          <string>
            <size maxLength="32768"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorConfigFileNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|VendorConfigFile}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceInfo.VendorConfigFile.{i}." access="readOnly" numEntriesParameter="VendorConfigFileNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Every instance of this object is a Vendor Configuration File, and contains parameters associated with the Vendor Configuration File.
        This table of Vendor Configuration Files is for information only and does not allow the ACS to operate on these files in any way.
        Whenever the CPE successfully downloads a configuration file as a result of the Download RPC with the FileType argument of ''3 Vendor Configuration File'', the CPE MUST update this table.  If the name of the file (determined as described in the definition of the {{param|Name}} parameter) differs from that of any existing instance, then the CPE MUST create a new instance to represent this file.  If instead, the name of the file is identical to that of an existing instance, then the CPE MUST update the content of the existing instance with the new version, date, and (optionally) description of the file.{{nokeys}}
      </description>
      <uniqueKey>
        <parameter ref="Name"/>
      </uniqueKey>
      <parameter name="Name" access="readOnly" version="1.0">
        <description>
          Name of the vendor configuration file.
          If the CPE is able to obtain the name of the configuration file from the file itself, then the value of this parameter MUST be set to that name.
          Otherwise, if the CPE can extract the file name from the URL used to download the configuration file, then the value of this parameter MUST be set to that name.
          Otherwise, the value of this parameter MUST be set to the value of the TargetFileName argument of the Download RPC used to download this configuration file.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" version="1.0">
        <description>
          A string identifying the configuration file version currently used in the CPE.
          If the CPE is able to obtain the version of the configuration file from the file itself, then the value of this parameter MUST be set to the obtained value.
          Otherwise, the value of this parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Date" access="readOnly" version="1.0">
        <description>
          Date and time when the content of the current version of this vendor configuration file was first applied by the CPE.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="Description" access="readOnly" version="1.0">
        <description>
          A description of the vendor configuration file (human-readable string).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DeviceConfig." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains general configuration parameters.
      </description>
      <parameter name="PersistentData" access="readWrite" version="1.0">
        <description>
          Arbitrary user data that MUST persist across CPE reboots.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigFile" access="readWrite" version="1.0">
        <description>
          A dump of the currently running configuration on the CPE.  This parameter enables the ability to backup and restore the last known good state of the CPE.  It returns a vendor-specific document that defines the state of the CPE.  The document MUST be capable of restoring the CPE's state when written back to the CPE using SetParameterValues.
          An alternative to this parameter, e.g. when the configuration file is larger than the parameter size limit, is to use the Upload and Download RPCs with a FileType of ''1 Vendor Configuration File''.
        </description>
        <syntax>
          <string>
            <size maxLength="32768"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.ManagementServer." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains parameters relating to the CPE's association with an ACS.
      </description>
      <parameter name="EnableCWMP" access="readWrite" version="1.0">
        <description>
          Enables and disables the CPE's support for CWMP.
          {{false}} means that CWMP support in the CPE is disabled, in which case the device MUST NOT send any Inform messages to the ACS or accept any Connection Request notifications from the ACS.
          {{true}} means that CWMP support on the CPE is enabled.
          The factory default value MUST be {{true}}.
          The subscriber can re-enable the CPE's CWMP support either by performing a factory reset or by using a LAN-side protocol to change the value of this parameter back to {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="URL" access="readWrite" version="1.0">
        <description>
          URL, as defined in {{bibref|RFC3986}}, for the CPE to connect to the ACS using the CPE WAN Management Protocol.
          This parameter MUST be in the form of a valid HTTP or HTTPS URL {{bibref|RFC2616}}.
          The ''host'' portion of this URL is used by the CPE for validating the ACS certificate when using SSL or TLS.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a factory reset.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" version="1.0">
        <description>
          Username used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
          This username is used only for HTTP-based authentication of the CPE.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a factory reset.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" version="1.0">
        <description>
          Password used to authenticate the CPE when making a connection to the ACS using the CPE WAN Management Protocol.
          This password is used only for HTTP-based authentication of the CPE.
          Note that on a factory reset of the CPE, the value of this parameter might be reset to its factory value.  If an ACS modifies the value of this parameter, it SHOULD be prepared to accommodate the situation that the original value is restored as the result of a factory reset.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformEnable" access="readWrite" version="1.0">
        <description>
          Whether or not the CPE MUST periodically send CPE information to the ACS using the Inform method call.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformInterval" access="readWrite" version="1.0">
        <description>
          The duration in seconds of the interval for which the CPE MUST attempt to connect with the ACS and call the Inform method if {{param|PeriodicInformEnable}} is {{true}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicInformTime" access="readWrite" version="1.0">
        <description>
          An absolute time reference in UTC to determine when the CPE will initiate the periodic Inform method calls.  Each Inform call MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicInformInterval}}.
          {{param}} is used only to set the "phase" of the periodic Informs.  The actual value of {{param}} can be arbitrarily far into the past or future.
          For example, if {{param|PeriodicInformInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past, present, or future) then periodic Informs will occur every day at UTC midnight.  These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-098a2|section 2.2}} indicates that no particular time reference is specified.  That is, the CPE MAY locally choose the time reference, and needs only to adhere to the specified {{param|PeriodicInformInterval}}.
          If absolute time is not available to the CPE, its periodic Inform behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ParameterKey" access="readOnly" activeNotify="canDeny" forcedInform="true" version="1.0">
        <description>
          {{param}} provides the ACS a reliable and extensible means to track changes made by the ACS.  The value of {{param}} MUST be equal to the value of the ParameterKey argument from the most recent successful SetParameterValues, AddObject, or DeleteObject method call from the ACS.
          The CPE MUST set {{param}} to the value specified in the corresponding method arguments if and only if the method completes successfully and no fault response is generated.  If a method call does not complete successfully (implying that the changes requested in the method did not take effect), the value of {{param}} MUST NOT be modified.
          The CPE MUST only modify the value of {{param}} as a result of SetParameterValues, AddObject, DeleteObject, or due to a factory reset.  On factory reset, the value of {{param}} MUST be set to {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestURL" access="readOnly" activeNotify="forceDefaultEnabled" forcedInform="true" version="1.0">
        <description>
          HTTP URL, as defined in {{bibref|RFC3986}}, for an ACS to make a Connection Request notification to the CPE.
          In the form:
          http://host:port/path
          The ''host'' portion of the URL MAY be the IP address for the management interface of the CPE in lieu of a host name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestUsername" access="readWrite" version="1.0">
        <description>
          Username used to authenticate an ACS making a Connection Request to the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionRequestPassword" access="readWrite" version="1.0">
        <description>
          Password used to authenticate an ACS making a Connection Request to the CPE.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpgradesManaged" access="readWrite" version="1.0">
        <description>
          Indicates whether or not the ACS will manage upgrades for the CPE.  If {{true}}, the CPE SHOULD NOT use other means other than the ACS to seek out available upgrades.  If {{false}}, the CPE MAY use other means for this purpose.
          Note that an autonomous upgrade (reported via an ''10 AUTONOMOUS TRANSFER COMPLETE'' Inform Event code) SHOULD be regarded as a managed upgade if it is performed according to ACS-specified policy.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="KickURL" access="readOnly" version="1.0">
        <description>
          Present only for a CPE that supports the Kicked RPC method.
          LAN-accessible URL, as defined in {{bibref|RFC3986}}, from which the CPE can be "kicked" to initiate the Kicked RPC method call.  MUST be an absolute URL including a host name or IP address as would be used on the LAN side of the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadProgressURL" access="readOnly" version="1.0">
        <description>
          Present only for a CPE that provides a LAN-side web page to show progress during a file download.
          LAN-accessible URL, as defined in {{bibref|RFC3986}}, to which a web-server associated with the ACS MAY redirect a user's browser on initiation of a file download to observer the status of the download.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DefaultActiveNotificationThrottle" access="readWrite" version="1.0">
        <description>
          This parameter is used to control throttling of active notifications sent by the CPE to the ACS.  It defines the minimum number of seconds that the CPE MUST wait since the end of the last session with the ACS before establishing a new session for the purpose of delivering an active notification.
          In other words, if CPE needs to establish a new session with the ACS for the sole purpose of delivering an active notification, it MUST delay establishing such a session as needed to ensure that the minimum time since the last session completion has been met.
          The time is counted since the last successfully completed session, regardless of whether or not it was used for active notifications or other purposes. However, if connection to the ACS is established for purposes other than just delivering active notifications, including for the purpose of retrying a failed session, such connection MUST NOT be delayed based on this parameter value, and the pending active notifications MUST be communicated during that connection.
          The time of the last session completion does not need to be tracked across reboots.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UDPConnectionRequestAddress" access="readOnly" version="1.0">
        <description>
          Address and port to which an ACS MAY send a UDP Connection Request to the CPE (see {{bibref|TR-069a2|Annex G}}).
          This parameter is represented in the form of an Authority element as defined in {{bibref|RFC3986}}.  The value MUST be in one of the following two forms:
          : host:port
          : host
          When {{param|STUNEnable}} is {{true}}, the ''host'' and ''port'' portions of this parameter MUST represent the public address and port corresponding to the NAT binding through which the ACS can send UDP Connection Request messages (once this information is learned by the CPE through the use of STUN).
          When {{param|STUNEnable}} is {{false}}, the ''host'' and ''port'' portions of the URL MUST represent the local IP address and port on which the CPE is listening for UDP Connection Request messages.
          The second form of this parameter MAY be used only if the port value is equal to "80".
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UDPConnectionRequestAddressNotificationLimit" access="readWrite" version="1.0">
        <description>
          The minimum time, in seconds, between Active Notifications resulting from changes to the {{param|UDPConnectionRequestAddress}} (if Active Notification is enabled).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="STUNEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables the use of STUN by the CPE.  This applies only to the use of STUN in association with the ACS to allow UDP Connection Requests.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="STUNServerAddress" access="readWrite" version="1.0">
        <description>
          Host name or IP address of the STUN server for the CPE to send Binding Requests if STUN is enabled via {{param|STUNEnable}}.
          If {{empty}} and {{param|STUNEnable}} is {{true}}, the CPE MUST use the address of the ACS extracted from the host portion of the ACS URL.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNServerPort" access="readWrite" version="1.0">
        <description>
          Port number of the STUN server for the CPE to send Binding Requests if STUN is enabled via {{param|STUNEnable}}.
          By default, this SHOULD be the equal to the default STUN port, 3478.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="STUNUsername" access="readWrite" version="1.0">
        <description>
          If not {{empty}}, the value of the STUN USERNAME attribute to be used in Binding Requests (only if message integrity has been requested by the STUN server).
          If {{empty}}, the CPE MUST NOT send STUN Binding Requests with message integrity.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNPassword" access="readWrite" version="1.0">
        <description>
          The value of the STUN Password to be used in computing the MESSAGE-INTEGRITY attribute to be used in Binding Requests (only if message integrity has been requested by the STUN server).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="STUNMaximumKeepAlivePeriod" access="readWrite" version="1.0">
        <description>
          If STUN Is enabled, the maximum period, in seconds, that STUN Binding Requests MUST be sent by the CPE for the purpose of maintaining the binding in the Gateway.  This applies specifically to Binding Requests sent from the UDP Connection Request address and port.
          A value of -1 indicates that no maximum period is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="STUNMinimumKeepAlivePeriod" access="readWrite" version="1.0">
        <description>
          If STUN Is enabled, the minimum period, in seconds, that STUN Binding Requests can be sent by the CPE for the purpose of maintaining the binding in the Gateway.  This limit applies only to Binding Requests sent from the UDP Connection Request address and port, and only those that do not contain the BINDING-CHANGE attribute.  This limit does not apply to retransmissions following the procedures defined in {{bibref|RFC3489}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NATDetected" access="readOnly" version="1.0">
        <description>
          When STUN is enabled, this parameter indicates whether or not the CPE has detected address and/or port mapping in use.
          A {{true}} value indicates that the received MAPPED-ADDRESS in the most recent Binding Response differs from the CPE's source address and port.
          When STUNEnable is {{false}}, this value MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ManageableDeviceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the {{object|ManageableDevice}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ManageableDeviceNotificationLimit" access="readWrite" version="1.0">
        <description>
          The minimum time, in seconds, between Active Notifications resulting from changes to the {{param|ManageableDeviceNumberOfEntries}} (if Active Notification is enabled).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.ManagementServer.ManageableDevice.{i}." access="readOnly" numEntriesParameter="ManageableDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Each entry in this table corresponds to a distinct LAN Device that supports Device-Gateway Association according to {{bibref|TR-069a2|Annex F}} as indicated by the presence of the DHCP option specified in that Annex.
      </description>
      <uniqueKey>
        <parameter ref="ManufacturerOUI"/>
        <parameter ref="SerialNumber"/>
        <parameter ref="ProductClass"/>
      </uniqueKey>
      <parameter name="ManufacturerOUI" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Organizationally unique identifier of the Device manufacturer as provided to the Gateway by the Device.  Represented as a six hexadecimal-digit value using all upper-case letters and including any leading zeros.  The value MUST be a valid OUI as defined in {{bibref|OUI}}.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SerialNumber" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Serial number of the Device as provided to the Gateway by the Device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ProductClass" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Identifier of the class of product for which the Device's serial number applies as provided to the Gateway by the Device.
          If the Device does not provide a Product Class, then this parameter MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readOnly" version="1.0">
        <description>
          {{reference|a ''Host'' table row}}  This list MUST include an item for each ''Host'' table entry, whether active or inactive, that corresponds to this physical LAN Device.
          As such entries are added to or removed from the ''Host'' tables, the value of this parameter MUST be updated accordingly.
          For example: ''InternetGatewayDevice.LANDevice.1.Hosts.Host.1,InternetGatewayDevice.LANDevice.1.Hosts.Host.5''
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="strong" targetParent="InternetGatewayDevice.LANDevice.{i}.Hosts.Host." targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Time." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains parameters relating an NTP or SNTP time client in the CPE.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the NTP or SNTP time client.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Status of Time support on the CPE.  {{enum}}
          The {{enum|Unsynchronized}} value indicates that the CPE's absolute time has not yet been set.
          The {{enum|Synchronized}} value indicates that the CPE has acquired accurate absolute time; its current time is accurate.
          The {{enum|Error_FailedToSynchronize}} value indicates that the CPE failed to acquire accurate absolute time; its current time is not accurate.
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Unsynchronized" version="1.0"/>
            <enumeration value="Synchronized" version="1.0"/>
            <enumeration value="Error_FailedToSynchronize" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer1" access="readWrite" version="1.0">
        <description>
          First NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer2" access="readWrite" version="1.0">
        <description>
          Second NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer3" access="readWrite" version="1.0">
        <description>
          Third NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer4" access="readWrite" version="1.0">
        <description>
          Fourth NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NTPServer5" access="readWrite" version="1.0">
        <description>
          Fifth NTP timeserver.  Either a host name or IP address.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentLocalTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current date and time in the CPE's local time zone.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="LocalTimeZone" access="readWrite" status="obsoleted" version="1.0">
        <description>
          The local time zone offset from UTC, ignoring daylight savings time adjustments, in the form:
          : +hh:mm
          : -hh:mm
          For example, this will always be "-08:00" for California, "+00:00" or "-00:00" for the United Kingdom, and "+01:00" for France.
          This parameter is OBSOLETED because the information that it represents is fully covered by {{param|LocalTimeZoneName}}.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LocalTimeZoneName" access="readWrite" version="1.0">
        <description>
          Name of the local time zone (human readable string).
          The name SHOULD be encoded according to IEEE 1003.1 (POSIX).  The following is an example value: ''EST+5EDT,M4.1.0/2,M10.5.0/2''
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DaylightSavingsUsed" access="readWrite" status="obsoleted" version="1.0">
        <description>
          Whether or not daylight savings time is in use in the CPE's local time zone.
          This parameter is OBSOLETED because the information that it represents is fully covered by {{param|LocalTimeZoneName}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="DaylightSavingsStart" access="readWrite" status="obsoleted" version="1.0">
        <description>
          Current local date and time at which the switch to daylight savings time occurs.  If daylight savings time is not used, this value is ignored.
          This parameter is OBSOLETED because the information that it represents is fully covered by {{param|LocalTimeZoneName}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="DaylightSavingsEnd" access="readWrite" status="obsoleted" version="1.0">
        <description>
          Current local date and time at which the switch from daylight savings time will occur.  If daylight savings time is not used, this value is ignored.
          This parameter is OBSOLETED because the information that it represents is fully covered by {{param|LocalTimeZoneName}}.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.UserInterface." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains parameters relating to the user interface of the CPE.
      </description>
      <parameter name="UserDatabaseSupported" access="readOnly" version="1.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface.
          Indicates whether or not the CPE supports a user database that provides per-user passwords that can be used for accessing the local user interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SharedPassword" access="readWrite" version="1.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface.
          Indicates whether or not a single shared password MUST protect the local user interface, or whether per-user passwords can be used.
          If either UserDatabaseSupported or PasswordUserSelectable is {{false}}, the CPE MUST ignore the value of this parameter.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PasswordRequired" access="readWrite" version="1.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface.
          Indicates whether or not the local user interface MUST require a password to be chosen by the user.  If {{false}}, the choice of whether or not a password is used is left to the user.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PasswordUserSelectable" access="readWrite" version="1.0">
        <description>
          Present only if the CPE provides a password-protected LAN-side user interface and supports LAN-side Auto-Configuration.
          Indicates whether or not a password to protect the local user interface of the CPE MAY be selected by the user directly, or MUST be equal to the password used by the LAN-side Auto-Configuration protocol.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UpgradeAvailable" access="readWrite" version="1.0">
        <description>
          Indicates that a CPE upgrade is available, allowing the CPE to display this information to the user.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WarrantyDate" access="readWrite" version="1.0">
        <description>
          Indicates the date and time in UTC that the warranty associated with the CPE is to expire.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="ISPName" access="readWrite" version="1.0">
        <description>
          The name of the customer's ISP.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPHelpDesk" access="readWrite" version="1.0">
        <description>
          The help desk phone number of the ISP.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPHomePage" access="readWrite" version="1.0">
        <description>
          The URL of the ISP's home page.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPHelpPage" access="readWrite" version="1.0">
        <description>
          The URL of the ISP's on-line support page.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPLogo" access="readWrite" version="1.0">
        <description>
          Base64 encoded GIF or JPEG image. The binary image is constrained to 4095 bytes or less.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="4095"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="ISPLogoSize" access="readWrite" version="1.0">
        <description>
          Un-encoded binary image size in bytes.
          If ISPLogoSize input value is 0 then the ISPLogo is cleared.
          ISPLogoSize can also be used as a check to verify correct transfer and conversion of Base64 string to image size.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4095"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ISPMailServer" access="readWrite" version="1.0">
        <description>
          The URL of the ISP's mail server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPNewsServer" access="readWrite" version="1.0">
        <description>
          The URL of the ISP's news server.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TextColor" access="readWrite" version="1.0">
        <description>
          The color of text on the GUI screens in RGB hexidecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BackgroundColor" access="readWrite" version="1.0">
        <description>
          The color of the GUI screen backgrounds in RGB hexidecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ButtonColor" access="readWrite" version="1.0">
        <description>
          The color of buttons on the GUI screens in RGB hexidecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ButtonTextColor" access="readWrite" version="1.0">
        <description>
          The color of text on buttons on the GUI screens in RGB hexidecimal notation (e.g., FF0088).
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AutoUpdateServer" access="readWrite" version="1.0">
        <description>
          The server the CPE can check to see if an update is available for direct download to it.  This MUST NOT be used by the CPE if the {{param|InternetGatewayDevice.ManagementServer.UpgradesManaged}} parameter is {{true}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UserUpdateServer" access="readWrite" version="1.0">
        <description>
          The server where a user can check via a web browser if an update is available for download to a PC.  This MUST NOT be used by the CPE if the {{param|InternetGatewayDevice.ManagementServer.UpgradesManaged}} parameter is {{true}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExampleLogin" access="readWrite" version="1.0">
        <description>
          An example of a correct login, according to ISP-specific rules.
        </description>
        <syntax>
          <string>
            <size maxLength="40"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExamplePassword" access="readWrite" version="1.0">
        <description>
          An example of a correct password, according to ISP-specific rules.
        </description>
        <syntax>
          <string>
            <size maxLength="30"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AvailableLanguages" access="readOnly" version="1.0">
        <description>
          Available user-interface languages, where each language is specified according to RFC 3066 {{bibref|RFC3066}}.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CurrentLanguage" access="readWrite" version="1.0">
        <description>
          Current user-interface language, specified according to RFC 3066 {{bibref|RFC3066}}.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.CaptivePortal." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains parameters relating to the captive portal configuration on the CPE.
        The captive portal configuration defines the CPE's WAN-destined  HTTP (port 80) traffic redirect behavior.
        When the captive portal is disabled, WAN-destined HTTP (port 80) traffic MUST be permitted to all destinations.
        When the captive portal is enabled, WAN-destined HTTP (port 80) traffic MUST be permitted only to destinations listed in the {{param|AllowedList}}; traffic to all other destinations MUST be redirected to the {{param|CaptivePortalURL}}.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the captive portal.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Indicates the status of the captive portal.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error_URLEmpty" version="1.0">
              <description>
                {{param|CaptivePortalURL}} is {{empty}}
              </description>
            </enumeration>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedList" access="readWrite" version="1.0">
        <description>
          IP addresses to which HTTP (port 80) traffic MUST always be permitted, regardless of whether the captive portal is enabled.
          Each entry in the list MUST be either an IP address or an IP subnet specified using variable length subnet mask (VLSM) syntax.
          An IP subnet is specified as an IP address followed (with no intervening white space) by "/n", where  n is an integer in the range  0-32; this is equivalent to a subnet mask consisting of n 1s followed by 32 minus n 0s.
          For example, 1.2.3.4 specifies a single IP address, and 1.2.3.4/24 specifies a class C subnet with subnet mask 255.255.255.0.
          The maximum length of a single entry (plus comma) is 19 characters so 10000 bytes is sufficient for more than 500 IP addresses and/or IP subnets.
        </description>
        <syntax>
          <list>
            <size maxLength="10000"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CaptivePortalURL" access="readWrite" version="1.0">
        <description>
          Captive portal URL to which WAN-destined HTTP (port 80) traffic to destinations not listed in the {{param|AllowedList}} will be redirected.
          The captive portal URL MUST be an HTTP (not HTTPS) URL.
          The CPE MUST permit the captive portal URL to be set to {{empty}}, which has the effect of disabling the captive portal (if {{param|Enable}} is {{true}} and the captive portal URL is {{empty}}, {{param|Status}} MUST be {{enum|Error_URLEmpty|Status}}).
        </description>
        <syntax>
          <string>
            <size maxLength="2000"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer3Forwarding." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object allows the handling of the routing and forwarding configuration of the device.
      </description>
      <parameter name="DefaultConnectionService" access="readWrite" version="1.0">
        <description>
          Specifies the default WAN interface.  The content is the full hierarchical parameter name of the default layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of forwarding instances.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." access="readWrite" numEntriesParameter="ForwardNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Layer 3 forwarding table.
        In addition to statically configured routes, this table MUST include dynamic routes learned through layer 3 routing protocols, including RIP, OSPF, DHCP, and IPCP.  The CPE MAY reject attempts to delete or modify a dynamic route entry.
        For each incoming packet, the layer 3 forwarding decision is conceptually made as follows:
        * Only table entries with a matching {{param|ForwardingPolicy}} are considered, i.e. those that either do not specify a {{param|ForwardingPolicy}}, or else specify a {{param|ForwardingPolicy}} that matches that of the incoming packet.
        * For the remaining table entries, those for which the source address/mask matches are sorted by longest prefix, i.e. with the most specific networks first (an unspecified source address is a wild-card and always matches, with a prefix length of zero).
        * For the remaining table entries, those for which the destination address/mask matches are sorted by longest prefix, i.e. with the most specific networks first (an unspecified destination address is a wild-card and always matches, with a prefix length of zero).
        * The first of the remaining table entries is applied to the packet.
      </description>
      <uniqueKey>
        <parameter ref="DestIPAddress"/>
        <parameter ref="DestSubnetMask"/>
        <parameter ref="SourceIPAddress"/>
        <parameter ref="SourceSubnetMask"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the forwarding entry.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Indicates the status of the forwarding entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="StaticRoute" access="readOnly" version="1.0">
        <description>
          If {{true}}, this route is a Static route.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="Type" access="readWrite" status="deprecated" version="1.0">
        <description>
          Indicates the type of route.  {{enum}}
          This parameter is DEPRECATED because its value could conflict with {{param|DestIPAddress}} and/or {{param|DestSubnetMask}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Default" version="1.0"/>
            <enumeration value="Network" version="1.0"/>
            <enumeration value="Host" version="1.0"/>
          </string>
          <default type="object" value="Host"/>
        </syntax>
      </parameter>
      <parameter name="DestIPAddress" access="readWrite" version="1.0">
        <description>
          Destination address.  {{empty}} or a value of "0.0.0.0" indicates no destination address is specified.
          A Forwarding table entry for which {{param}} and {{param|DestSubnetMask}} are both {{empty}} or "0.0.0.0" is a default route.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestSubnetMask" access="readWrite" version="1.0">
        <description>
          Destination subnet mask.  {{empty}} or a value of "0.0.0.0" indicates no destination subnet mask is specified.
          If a destination subnet mask is specified, the {{param}} is ANDed with the destination address before comparing with the {{param|DestIPAddress}}.  Otherwise, the full destination address is used as is.
          A Forwarding table entry for which {{param|DestIPAddress}} and {{param}} are both {{empty}} or "0.0.0.0" is a default route.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPAddress" access="readWrite" version="1.0">
        <description>
          Source address.  {{empty}} or a value of "0.0.0.0" indicates no source address is specified.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceSubnetMask" access="readWrite" version="1.0">
        <description>
          Source subnet mask.  {{empty}} or a value of "0.0.0.0" indicates no source subnet mask is specified.
          If a source subnet mask is specified, the {{param}} is ANDed with the source address before comparing with the {{param|SourceIPAddress}}.  Otherwise, the full source address is used as is.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" version="1.0">
        <description>
          Identifier of a set of classes or flows that have the corresponding {{param}} value as defined in the ''QueueManagement'' object.
          A value of -1 indicates no {{param}} is specified.
          If specified, this forwarding entry is to apply only to traffic associated with the specified classes and flows.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="GatewayIPAddress" access="readWrite" version="1.0">
        <description>
          IP address of the gateway.
          Only one of GatewayIPAddress and Interface SHOULD be configured for a route.
          If both are configured, {{param}} and {{param|Interface}} MUST be consistent with each other.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          Specifies the egress interface associated with this entry.  {{reference|the layer 3 connection object}}  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          Only one of {{param|GatewayIPAddress}} and {{param}} SHOULD be configured for a route.
          If both are configured, {{param|GatewayIPAddress}} and {{param}} MUST be consistent with each other.
          For a route that was configured by setting {{param|GatewayIPAddress}} but not {{param}}, read access to {{param}} MUST return the full hierarchical parameter name for the route's egress interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ForwardingMetric" access="readWrite" version="1.0">
        <description>
          Forwarding metric.  A value of -1 indicates this metric is not used.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="MTU" access="readWrite" version="1.0">
        <description>
          The maximum allowed size of an Ethernet frame for this route.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        Layer 2 bridging configuration.  Specifies bridges between layer 2 LAN and/or WAN interfaces.  Bridges can be defined to include layer 2 filter criteria to selectively bridge traffic between interfaces.
        This object can be used to configure both 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}} bridges.  Not all 802.1D and 802.1Q features are modeled, and some additional features not present in either 802.1D or 802.1Q are modeled.
        If the Layer2Bridging object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any LANDevice and WAN**Connection objects.  The implications of this are explained in Annex A.6.
      </description>
      <parameter name="MaxBridgeEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|Bridge}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxDBridgeEntries" access="readOnly" version="1.0">
        <description>
          The maximum number of 802.1D {{bibref|802.1D-2004}} entries available in the {{object|Bridge}} table.  A positive value for this parameter implies support for 802.1D.
          There is no guarantee that this many 802.1D Bridges can be configured.  For example, the CPE might not be able simultaneously to support both 802.1D and 802.1Q Bridges.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxQBridgeEntries" access="readOnly" version="1.0">
        <description>
          The maximum number of 802.1Q {{bibref|802.1Q-2005}} entries available in the {{object|Bridge}} table.  A positive value for this parameter implies support for 802.1Q.
          There is no guarantee that this many 802.1Q Bridges can be configured.  For example, the CPE might not be able simultaneously to support both 802.1D and 802.1Q Bridges.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxVLANEntries" access="readOnly" version="1.0">
        <description>
          The maximum number of 802.1Q {{bibref|802.1Q-2005}} VLANs supported per {{object|Bridge}} table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxFilterEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|Filter}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxMarkingEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|Marking}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgeNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the {{object|Bridge}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the {{object|Filter}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MarkingNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the {{object|Marking}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AvailableInterfaceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the {{object|AvailableInterface}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." access="readWrite" numEntriesParameter="BridgeNumberOfEntries" enableParameter="BridgeEnable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Bridge table.  Each entry in this table represents a single physical 802.1D {{bibref|802.1D-2004}} or 802.1Q {{bibref|802.1Q-2005}} bridge.
        If the Bridge Port table is supported, it explicitly defines the Bridge's interfaces.  Otherwise, they are implicitly defined via the union of the FilterInterface / MarkingInterface parameters for all the Filter and Marking table entries that are associated with the Bridge.
      </description>
      <uniqueKey>
        <parameter ref="BridgeKey"/>
      </uniqueKey>
      <parameter name="BridgeKey" access="readOnly" version="1.0">
        <description>
          Unique key for each Bridge table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BridgeStandard" access="readWrite" version="1.0">
        <description>
          Selects the standard supported by this Bridge table entry.
        </description>
        <syntax>
          <string>
            <enumeration value="802.1D" version="1.0">
              <description>
                {{bibref|802.1D-2004}}
              </description>
            </enumeration>
            <enumeration value="802.1Q" version="1.0">
              <description>
                {{bibref|802.1Q-2005}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="802.1D"/>
        </syntax>
      </parameter>
      <parameter name="BridgeEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this Bridge table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="BridgeStatus" access="readOnly" version="1.0">
        <description>
          The status of this Bridge table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="BridgeName" access="readWrite" version="1.0">
        <description>
          Human-readable name for this Bridge table entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANID" access="readWrite" version="1.0">
        <description>
          For an 802.1D {{bibref|802.1D-2004}} Bridge, which has no concept of VLANs, the value of this parameter MUST be 0.
          For an 802.1Q {{bibref|802.1Q-2005}} Bridge, this is the Bridge's default VLAN ID, i.e. the VLAN ID that applies to Filter table entries with ''VLANIDFilter''=-1.  For an 802.1Q Bridge, the value of this parameter MUST NOT be 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="4094"/>
          </unsignedInt>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="PortNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the Bridge {{object|Port}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="VLANNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the Bridge {{object|VLAN}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Bridge.{i}.Port.{i}." access="readWrite" numEntriesParameter="PortNumberOfEntries" enableParameter="PortEnable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Bridge Port table.  If this table is supported, it MUST contain an entry for each Bridge Port.
      </description>
      <uniqueKey>
        <parameter ref="PortInterface"/>
      </uniqueKey>
      <parameter name="PortEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this Bridge Port table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PortInterface" access="readWrite" version="1.0">
        <description>
          The interface associated with this Bridge Port table entry.  Represents a bridge port as defined in 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}}.
          To associate this Bridge Port with an interface listed in the ''AvailableInterface'' table, the {{param}} value is set to the value of the corresponding ''AvailableInterfaceKey''.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PortState" access="readOnly" version="1.0">
        <description>
          Bridge Port state as defined in 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Blocking" version="1.0"/>
            <enumeration value="Listening" version="1.0"/>
            <enumeration value="Learning" version="1.0"/>
            <enumeration value="Forwarding" version="1.0"/>
            <enumeration value="Broken" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="PVID" access="readWrite" version="1.0">
        <description>
          Default Port VLAN ID as defined in 802.1Q {{bibref|802.1Q-2005}}.
          For an 802.1D {{bibref|802.1D-2004}} Bridge, this parameter MUST be ignored.
        </description>
        <syntax>
          <int>
            <range minInclusive="1" maxInclusive="4094"/>
          </int>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="AcceptableFrameTypes" access="readWrite" version="1.0">
        <description>
          Bridge Port acceptable frame types as defined in 802.1Q {{bibref|802.1Q-2005}}.  {{enum}}
          For an 802.1D {{bibref|802.1D-2004}} Bridge, the value of this parameter MUST be {{enum|AdmitAll}}.
        </description>
        <syntax>
          <string>
            <enumeration value="AdmitAll" version="1.0"/>
            <enumeration value="AdmitOnlyVLANTagged" optional="true" version="1.0"/>
            <enumeration value="AdmitOnlyPrioUntagged" optional="true" version="1.0"/>
          </string>
          <default type="object" value="AdmitAll"/>
        </syntax>
      </parameter>
      <parameter name="IngressFiltering" access="readWrite" version="1.0">
        <description>
          Enables or disables Ingress Filtering as defined in 802.1Q {{bibref|802.1Q-2005}}.
          For an 802.1D {{bibref|802.1D-2004}} Bridge, the value of this parameter MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Bridge.{i}.VLAN.{i}." access="readWrite" numEntriesParameter="VLANNumberOfEntries" enableParameter="VLANEnable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Bridge VLAN table.  If this table is supported, if MUST contain an entry for each VLAN known to the Bridge.
        This table only applies to an 802.1Q {{bibref|802.1Q-2005}} Bridge.
      </description>
      <uniqueKey>
        <parameter ref="VLANID"/>
      </uniqueKey>
      <parameter name="VLANEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this VLAN table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANName" access="readWrite" version="1.0">
        <description>
          Human-readable name for this VLAN table entry.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANID" access="readWrite" version="1.0">
        <description>
          VLAN ID of the entry,
        </description>
        <syntax>
          <int>
            <range minInclusive="1" maxInclusive="4094"/>
          </int>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Filter.{i}." access="readWrite" numEntriesParameter="FilterNumberOfEntries" enableParameter="FilterEnable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Filter table containing filter entries each of which is associated with one Bridge as specified by a ''Bridge'' table entry.
        For both 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}} Bridges, this table is used for the following:
        # If the Bridge Port table is not supported, it implicitly specifies the Bridge interfaces (in collaboration with the Marking table).
        # It specifies destination MAC address classification rules.
        For an 802.1Q Bridge, this table is also used for the following:
        # For each VLAN ID, it specifies the interfaces that are in the VLAN's Member Set.
        # If the Bridge Port table is not supported, it specifies the Port VLAN ID (PVID) for each interface.
        This table also supports several concepts that are not covered by either 802.1D or 802.1Q:
        # It allows a given packet to be admitted to multiple Bridges.
        # It supports Ethertype and source MAC address classification rules.
      </description>
      <uniqueKey>
        <parameter ref="FilterKey"/>
      </uniqueKey>
      <parameter name="FilterKey" access="readOnly" version="1.0">
        <description>
          Unique key for each Filter table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FilterEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this Filter table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="FilterStatus" access="readOnly" version="1.0">
        <description>
          The status of this Filter table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
          If the Bridge Port table is supported, but none of its entries correspond to {{param|FilterInterface}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
          If the Bridge VLAN table is supported, but none of its entries correspond to {{param|VLANIDFilter}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="FilterBridgeReference" access="readWrite" version="1.0">
        <description>
          The ''BridgeKey'' value of the ''Bridge'' table entry associated with this Filter.  A value of -1 indicates the Filter table entry is not associated with a Bridge (and has no effect).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ExclusivityOrder" access="readWrite" version="1.0">
        <description>
          Whether or not the Filter definition is exclusive of all others.  And if the entry is exclusive, order of precedence.
          A value of 1 or greater indicates an Exclusive Filter, where the value 1 indicates the first entry to be considered (highest precedence).
          A value of 0 indicates a Non-Exclusive Filter (OPTIONAL).
          For each packet, if the packet matches any Exclusive Filters, the packet is assigned to the Bridge associated with the highest precedence Exclusive Filter to which it matches (lowest {{param}} value).
          If and only if the packet does not match any Exclusive Filters, the packet is assigned to all Bridges associated with each Non-Exclusive Filter for which it matches the defining criteria.
          If a packet matches no Filter, it is discarded.
          When the {{param}} is set to match that of an existing Exclusive Filter (1 or greater), the value for the existing entry and all higher numbered entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion or change in {{param}} of an Exclusive Filter causes {{param}} values of other Exclusive Filters (values 1 or greater) to be compacted.
          Note that the use of Exclusive Filters to associate a layer 3 router interface with LAN and/or WAN interfaces via a Bridge entry overrides and updates the association between layer 3 and layer 2 objects implied by the ''InternetGatewayDevice'' object hierarchy.
          Support for Non-Exclusive Filter entries, i.e. entries with an {{param}} value of 0, is OPTIONAL because 802.1D {{bibref|802.1D-2004}} and 802.1Q {{bibref|802.1Q-2005}} do not consider the case of a packet potentially being admitted to more than one bridge.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="FilterInterface" access="readWrite" version="1.0">
        <description>
          The interface or interfaces associated with this Filter table entry.  The bridge corresponding to this Filter table entry is defined to admit packets on ingress to the bridge from the specified interfaces that meet all of the criteria specified in the Filter table entry.  The following values are defined.
          * To associate this Filter with a single interface listed in the ''AvailableInterface'' table, the {{param}} value is set to the value of the corresponding ''AvailableInterfaceKey''.
          * ''AllInterfaces'' indicates that this Filter is associated with all LAN and WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'' or ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''LANInterfaces'' indicates that this Filter is associated with all LAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''WANInterfaces'' indicates that this Filter is associated with all WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          {{empty}} indicates the Filter table entry is not associated with any interface (and has no effect)
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANIDFilter" access="readWrite" version="1.0">
        <description>
          The 802.1Q {{bibref|802.1Q-2005}} VLAN ID associated with this Filter table entry.
          A value of -1 indicates that the default VLAN ID for the Bridge MUST be used instead (as specified by {{param|InternetGatewayDevice.Layer2Bridging.Bridge.{i}.VLANID}} for the Bridge table entry associated with this Filter table entry).
          For an 802.1Q bridge, the value of this parameter MUST NOT be 0, and it is interpreted as follows  (more than one condition can apply, e.g. a single Filter table entry might both add an interface to a VLAN's Member Set, and define a classification rule).
          # If the Bridge Port table is not supported, it is a candidate to be the 802.1Q Port VLAN ID (PVID) for the interface associated with this Filter.  Where there is more than one such candidate for a given interface, the PVID MUST be selected according to the {{param|ExclusivityOrder}} precedence rules.
          # The interface associated with this Filter is added to the VLAN's 802.1Q Member Set.
          # If a classification parameter, e.g. {{param|DestMACAddressFilterList}}, is specified, a classification rule for this VLAN ID is added.
          For an 802.1D {{bibref|802.1D-2004}} Bridge, which has no concept of VLANs, the VLAN ID MUST be 0.  This is most easily achieved by allowing this parameter to retain its default value of -1 and relying on the fact that the default VLAN ID for an 802.1D bridge will always be 0.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="4094"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="AdmitOnlyVLANTagged" access="readWrite" status="deprecated" version="1.0">
        <description>
          802.1Q {{bibref|802.1Q-2005}} Acceptable Frame Types criterion.
          This parameter is DEPRECATED, because it only partly models 802.1Q Acceptable Frame Types (and Ingress Filtering).  The Bridge Port table SHOULD be used instead and, if supported, MUST take precedence over this parameter.
          If {{true}}, the Bridge admits only packets tagged with VLAN IDs that include the ingress interface in their 802.1Q Member Sets.
          If {{false}}, the Bridge admits both packets tagged with VLAN IDs that include the ingress interface in their 802.1Q Member Sets, and any Untagged or PriorityOnly packets.  All Untagged or PriorityOnly packets are associated on ingress with the interface's Port VLAN ID (PVID).
          See the description of {{param|VLANIDFilter}} for an explanation of how the Member Set and PVID are determined.
          If more than one Filter table entry is associated with a given interface, the value of {{param}} MUST be the same for all such entries.
          For an 802.1D {{bibref|802.1D-2004}} Bridge, which has no concept of VLANs, the value of this parameter MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="EthertypeFilterList" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          {{list|each representing an Ethertype value}}
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on Ethertype.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <unsignedInt/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="EthertypeFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge is defined to admit only those packets that match one of the {{param|EthertypeFilterList}} entries (in either the Ethernet or SNAP Type header).  If the {{param|EthertypeFilterList}} is empty, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge is defined to admit all packets except those packets that match one of the {{param|EthertypeFilterList}} entries (in either the Ethernet or SNAP Type header).  If the {{param|EthertypeFilterList}} is empty, packets are admitted regardless of Ethertype.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on Ethertype.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddressFilterList" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          {{list|each representing a MAC Address}}
          Each list entry MAY optionally specify a bit-mask, where matching of a packet's MAC address is only to be done for bit positions set to one in the mask.  If no mask is specified, all bits of the MAC Address are to be used for matching.
          For example, the list might be: ''01:02:03:04:05:06, 1:22:33:00:00:00/FF:FF:FF:00:00:00, 88:77:66:55:44:33''
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddressFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose source MAC Address matches one of the {{param|SourceMACAddressFilterList}} entries.  If the {{param|SourceMACAddressFilterList}} is empty, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose source MAC Address matches one of the {{param|SourceMACAddressFilterList}} entries.  If the {{param|SourceMACAddressFilterList}} is empty, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddressFilterList" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          {{list|each representing a MAC Address}}
          Each list entry MAY optionally specify a bit-mask, where matching of a packet's MAC address is only to be done for bit positions set to one in the mask.  If no mask is specified, all bits of the MAC Address are to be used for matching.
          For example, the list might be: ''01:02:03:04:05:06, 1:22:33:00:00:00/FF:FF:FF:00:00:00, 88:77:66:55:44:33''
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddressFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches one of the {{param|DestMACAddressFilterList}} entries.  If the {{param|DestMACAddressFilterList}} is empty, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches one of the {{param|DestMACAddressFilterList}} entries.  If the {{param|DestMACAddressFilterList}} is empty, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDFilter" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCP Vendor Class Identifier (Option 60 as defined in RFC 2132 {{bibref|RFC2132}}) in the most recent DHCP lease acquisition or renewal matches the specified value according to the match criterion in SourceMACFromVendorClassIDMode.  Case sensitive.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromVendorClassIDFilter}}.  If {{param|SourceMACFromVendorClassIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromVendorClassIDFilter}}.  If the {{param|SourceMACFromVendorClassIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromVendorClassIDMode" access="readWrite" version="1.0">
        <description>
          {{param|SourceMACFromVendorClassIDFilter}} pattern match criterion.  {{enum}}
          For example, if {{param|SourceMACFromVendorClassIDFilter}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDFilter" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCP Vendor Class Identifier (Option 60 as defined in RFC 2132 {{bibref|RFC2132}}) in the most recent DHCP lease acquisition or renewal matches the specified value according to the match criterion in {{param|DestMACFromVendorClassIDMode}}.  Case sensitive.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromVendorClassIDFilter}}.  If {{param|DestMACFromVendorClassIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromVendorClassIDFilter}}.  If the {{param|DestMACFromVendorClassIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromVendorClassIDMode" access="readWrite" version="1.0">
        <description>
          {{param|DestMACFromVendorClassIDFilter}} pattern match criterion.  {{enum}}
          For example, if {{param|DestMACFromVendorClassIDFilter}} is ''Example'' then an Option 60 value of "Example device" will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromClientIDFilter" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCP Client Identifier (Option 61 as defined in RFC 2132 {{bibref|RFC2132}}) in the most recent DHCP lease acquisition or renewal was equal to the specified value.  The option value is binary, so an exact match is REQUIRED.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromClientIDFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromClientIDFilter}}.  If {{param|SourceMACFromClientIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromClientIDFilter}}.  If the {{param|SourceMACFromClientIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromClientIDFilter" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCP Client Identifier (Option 61 as defined in RFC 2132 {{bibref|RFC2132}}) in the most recent DHCP lease acquisition or renewal was equal to the specified value.  The option value is binary, so an exact match is REQUIRED.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromClientIDFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromClientIDFilter}}.  If {{param|DestMACFromClientIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromClientIDFilter}}.  If the {{param|DestMACFromClientIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromUserClassIDFilter" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCP User Class Identifier (Option 77 as defined in RFC 3004 {{bibref|RFC3004}}) in the most recent DHCP lease acquisition or renewal was equal to the specified value.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACFromUserClassIDFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromUserClassIDFilter}}.  If {{param|SourceMACFromUserClassIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose source MAC Address matches that of a LAN device previously identified as described in {{param|SourceMACFromUserClassIDFilter}}.  If the {{param|SourceMACFromUserClassIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
          Note that neither 802.1D {{bibref|802.1D-2004}} nor 802.1Q {{bibref|802.1Q-2005}} support classification based on source MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromUserClassIDFilter" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          A string used to identify one or more devices via DHCP for which MAC address filtering would subsequently apply.  A device is considered matching if its DHCP User Class Identifier (Option 77 as defined in RFC 3004 {{bibref|RFC3004}}) in the most recent DHCP lease acquisition or renewal was equal to the specified value.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACFromUserClassIDFilterExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, on ingress to the interfaces associated with this Filter, the Bridge admits only those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromUserClassIDFilter}}.  If {{param|DestMACFromUserClassIDFilter}} is {{empty}}, no packets are admitted.
          If {{true}}, on ingress to the interfaces associated with this Filter, the Bridge admits all packets except those packets whose destination MAC Address matches that of a LAN device previously identified as described in {{param|DestMACFromUserClassIDFilter}}.  If the {{param|DestMACFromUserClassIDFilter}} is {{empty}}, packets are admitted regardless of MAC address.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.Marking.{i}." access="readWrite" numEntriesParameter="MarkingNumberOfEntries" enableParameter="MarkingEnable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Marking table identifying non-default layer 2 marking behavior for packets on egress from the specified interfaces.
        This table is not relevant to 802.1D {{bibref|802.1D-2004}} Bridges, which are not VLAN-aware.
        For 802.1Q {{bibref|802.1Q-2005}} Bridges, this table is used for the following:
        # It specifies whether VLAN tags are to be removed on egress.
        This table also supports several concepts that are not covered by 802.1Q:
        # It allows the VLAN ID to be changed on egress.
        # It allows the Ethernet Priority to be changed on egress.
      </description>
      <uniqueKey>
        <parameter ref="MarkingKey"/>
      </uniqueKey>
      <parameter name="MarkingKey" access="readOnly" version="1.0">
        <description>
          Unique key for each Marking table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MarkingEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this Marking table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="MarkingStatus" access="readOnly" version="1.0">
        <description>
          The status of this Marking table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
          If the Bridge Port table is supported, but none of its entries correspond to {{param|MarkingInterface}}, or if such an entry exists but is disabled, {{param}} MUST NOT indicate {{enum|Enabled}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="MarkingBridgeReference" access="readWrite" version="1.0">
        <description>
          The ''BridgeKey'' value of the Bridge table entry associated with this Marking table entry.  A value of -1 indicates the Marking table entry is not associated with a Bridge (and has no effect).
          The effect of a Marking table entry applies only to packets that have been admitted to the specified bridge (regardless of the ingress interface).
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="MarkingInterface" access="readWrite" version="1.0">
        <description>
          The interface or interfaces associated with this Marking table entry for which the specified marking behavior is to apply on egress from the associated bridge.  The following values are defined.
          * To associate this Marking table entry with a single interface listed in the ''AvailableInterface'' table, the {{param}} value is set to the value of the corresponding ''AvailableInterfaceKey''.
          * ''AllInterfaces'' indicates that this Marking table entry is associated with all LAN and WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'' or ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''LANInterfaces'' indicates that this Marking table entry is associated with all LAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''LANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * ''WANInterfaces'' indicates that this Marking table entry is associated with all WAN interfaces listed in the ''AvailableInterface'' table (all entries of ''InterfaceType'' ''WANInterface'').  This value is DEPRECATED because of the configuration complexity it requires.
          * {{empty}} indicates the Marking table entry table entry is not associated with any interface (and has no effect)
          If there is more than one enabled Marking table entry that specifies one or more of the same interfaces for the same bridge (identical values of {{param|MarkingBridgeReference}}), then for packets on egress from the specified bridge to those interfaces, the applied marking MUST be that specified in the Marking table entry among those in conflict with the lowest {{param|MarkingKey}} value.
          If an interface in a given bridge does not have a corresponding Marking table entry, the marking is left unchanged on egress.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VLANIDUntag" access="readWrite" version="1.0">
        <description>
          If {{true}}, on egress to the interfaces associated with this Marking table entry, all packets are sent Untagged.
          If {{false}}, on egress to the interfaces associated with this Marking table entry, all packets are sent Tagged with the VLAN ID of the VLAN in which the packet is being bridged.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDMark" access="readWrite" version="1.0">
        <description>
          The 802.1Q {{bibref|802.1Q-2005}} VLAN ID to be used on egress to the interfaces associated with this Marking table entry.
          A value of -1 indicates that the VLAN ID of the VLAN in which the packet is being bridged is to be used, i.e. no change.
          The value of this parameter MUST NOT be 0.
          If {{param|VLANIDUntag}} is {{true}}, then no VLAN marking is done since the tag containing the VLAN ID is removed.
          Note that 802.1Q does not support re-marking on egress.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="4094"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDMarkOverride" access="readWrite" version="1.0">
        <description>
          If {{false}}, on egress to the interfaces associated with this Marking table entry, the {{param|VLANIDMark}}, if specified, is applied only to PriorityOnly packets.
          If {{true}}, on egress to the interfaces associated with this Marking table entry, the {{param|VLANIDMark}}, if specified, is to be applied to all packets on this Bridge.
          If {{param|VLANIDUntag}} is {{true}}, then no VLAN marking is done since the tag containing the VLAN ID is removed.
          Note that 802.1Q {{bibref|802.1Q-2005}} does not support re-marking on egress.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityMark" access="readWrite" version="1.0">
        <description>
          Ethernet priority code (as defined in 802.1D {{bibref|802.1D-2004}}) to mark traffic with that falls into this Bridge on egress to the interfaces associated with this Marking table entry. A value of -1 indicates no change from the incoming packet or the mark assigned by the classifier.
          Note that 802.1Q {{bibref|802.1Q-2005}} does not support re-marking on egress.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1" maxInclusive="7"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityOverride" access="readWrite" version="1.0">
        <description>
          If {{false}}, on egress to the interfaces associated with this Marking table entry, the {{param|EthernetPriorityMark}}, if specified, is applied only to packets of priority 0.
          If {{true}}, on egress to the interfaces associated with this Marking table entry, the {{param|EthernetPriorityMark}}, if specified, is to be applied to all packets on this Bridge.
          Note that 802.1Q {{bibref|802.1Q-2005}} does not support re-marking on egress.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}." access="readOnly" numEntriesParameter="AvailableInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Table containing all LAN and WAN interfaces that are available to be referenced by the Bridge table.  Only interfaces that can carry layer 2 bridged traffic are included.
      </description>
      <uniqueKey>
        <parameter ref="AvailableInterfaceKey"/>
      </uniqueKey>
      <parameter name="AvailableInterfaceKey" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Unique key for each Interface entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InterfaceType" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Whether the interface is a LAN-side or WAN-side interface, or a LAN-side or WAN-side connection to the Gateway's IP router.
        </description>
        <syntax>
          <string>
            <enumeration value="LANInterface" version="1.0"/>
            <enumeration value="WANInterface" version="1.0"/>
            <enumeration value="LANRouterConnection" version="1.0"/>
            <enumeration value="WANRouterConnection" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceReference" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          {{reference|an available LAN or WAN interface}}  This table SHOULD contain a single entry for each available LAN and WAN interface.
          When such an interface is modeled in more than one place within the data model, the value of this parameter MUST include the full hierarchical parameter names of all of the corresponding objects.  For example, if a given Ethernet interface is present within two ''LANDevice'' instances, the value of this parameter might be: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.1, InternetGatewayDevice.LANDevice.2.LANEthernetInterfaceConfig.1''
          Note that the remainder of the parameter description does not refer to the possibility that the parameter value is a comma-separated list.  Nevertheless, the above requirement does apply.
          * For a WAN interface, this parameter is the full hierarchical parameter name of a particular ''WANConnectionDevice''.  A ''WANConnectionDevice'' is considered available (included in this table) only if it supports layer 2 bridged traffic.  That is, this table MUST include only ''WANConnectionDevice''s that contain either a ''WANEthernetLinkConfig'' object, or that contain a ''WANDSLLinkConfig'' object for which the ''LinkType'' is ''EoA''.  For example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2''
          * For a LAN interface, this parameter is the full hierarchical parameter name of a particular ''LAN**InterfaceConfig'' object, or a ''WLANConfiguration'' object.  This table SHOULD include one entry for each such object.  For example: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2''
          * For a WAN-side connection to the Gateway's IP router, this parameter is the full hierarchical parameter name of a particular ''WAN**Connection'' service.  This table SHOULD include an entry for each layer 3 WAN connection.  For example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          * For a LAN-side connection to the Gateway's IP router, this parameter is the full hierarchical parameter name of a particular ''LANDevice''.  This table SHOULD include an entry for each ''LANDevice'', each of which is associated with a LAN-side layer 3 connection to the Gateway's IP router.  For example: ''InternetGatewayDevice.LANDevice.2''
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        Queue management configuration object.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables all queuing operation.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxQueues" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of queues supported by the CPE. Calculated as the sum of the number of different queues pointed to by Classification table.  For each entry in the Classification table, the count includes a queue for each egress interface to which the corresponding classified traffic could reach.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxClassificationEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the Classification table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ClassificationNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|Classification}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxAppEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|App}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AppNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|App}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxFlowEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|Flow}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FlowNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|Flow}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxPolicerEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|Policer}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PolicerNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|Policer}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaxQueueEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The maximum number of entries available in the {{object|Queue}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|Queue}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueStatsNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|QueueStats}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultForwardingPolicy" access="readWrite" version="1.0">
        <description>
          Identifier of the forwarding policy associated with traffic not associated with any specified classifier.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultTrafficClass" access="readWrite" version="1.0">
        <description>
          Identifier of the traffic class associated with traffic not associated with any specified classifier.
          A value of -1 indicates a null traffic class.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DefaultPolicer" access="readWrite" version="1.0">
        <description>
          Instance number of the Policer table entry for traffic not associated with any specified classifier.
          A value of -1 indicates a null policer.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DefaultQueue" access="readWrite" version="1.0">
        <description>
          Instance number of the {{object|Queue}} table entry for traffic not associated with any specified classifier.
          A value of 0xffffffff (-1) indicates a null queue (permitted in data model versions 1.4 and later).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DefaultDSCPMark" access="readWrite" version="1.0">
        <description>
          DSCP to mark traffic not associated with any specified classifier.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="DefaultEthernetPriorityMark" access="readWrite" version="1.0">
        <description>
          Ethernet priority code (as defined in 802.1D) to mark traffic not associated with any specified classifier.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="AvailableAppList" access="readOnly" version="1.0">
        <description>
          URNs, each indicating a protocol supported for use as a ProtocolIdentifier in the App table.  This list MAY include any of the URNs defined in {{bibref|TR-098a1|Annex A}} as well as other URNs defined elsewhere.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.Classification.{i}." access="readWrite" numEntriesParameter="ClassificationNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Classification table.
      </description>
      <parameter name="ClassificationKey" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Unique key for each classification entry.
          This parameter is OBSOLETED because it serves no purpose (no other parameter references it).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ClassificationEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this classifier.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ClassificationStatus" access="readOnly" version="1.0">
        <description>
          The status of this classifier.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="ClassificationOrder" access="readWrite" version="1.0">
        <description>
          Position of the classification entry in the order of precedence.  A value of 1 indicates the first entry considered.  For each packet, the highest ordered entry that matches the classification criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the Order value for the existing entry and all lower Order entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes Order values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value on creation of a Classification table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ClassInterface" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Specifies the LAN or WAN ingress interface associated with this entry.  The content is the full hierarchical parameter name of the particular ''WANDevice'', ''WANConnectionDevice'', ''WAN**Connection'', ''LANDevice'', ''LAN**InterfaceConfig'', or ''WLANConfiguration'' object.
          The following are WAN interface examples:
          * ''InternetGatewayDevice.WANDevice.2''
          * ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          The following are LAN interface examples:
          * ''InternetGatewayDevice.LANDevice.3''
          * ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2''
          * ''InternetGatewayDevice.LANDevice.1.WLANConfiguration.3''
          The string ''WAN'' indicates this entry is to apply to traffic entering from any WAN interface.
          The string ''LAN'' indicates this entry is to apply to traffic entering from any LAN interface.
          The string ''Local'' indicates this entry is to apply to IP-layer traffic entering from a local source within the Internet Gateway Device.
          {{empty}} indicates this classification entry is to apply to all sources.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIP" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Destination IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMask" access="readWrite" version="1.0">
        <description>
          Destination IP address mask.  If not {{empty}}, only the indicated network portion of the DestIP address is to be used for classification.  {{empty}} indicates that the full DestIP address is to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestIPExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) DestIP entry, if specified.
          If {{true}}, the class includes all packets except those that match the (masked) DestIP entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceIP" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Source IP address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMask" access="readWrite" version="1.0">
        <description>
          Source IP address mask.  If not {{empty}}, only the indicated network portion of the SourceIP address is to be used for classification.  {{empty}} indicates that the full SourceIP address is to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceIPExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) SourceIP entry, if specified.
          If {{true}}, the class includes all packets except those that match the (masked) SourceIP entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Protocol number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the Protocol entry, if specified.
          If {{true}}, the class includes all packets except those that match the Protocol entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestPort" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Destination port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortRangeMax" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from DestPort through DestPortRangeMax (inclusive).  If specified, DestPortRangeMax MUST be greater than or equal to DestPort.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DestPortExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the DestPort entry (or port range), if specified.
          If {{true}}, the class includes all packets except those that match the DestPort entry (or port range), if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourcePort" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Source port number.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortRangeMax" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          If specified, indicates the classification criterion is to include the port range from SourcePort through SourcePortRangeMax (inclusive).  If specified, SourcePortRangeMax MUST be greater than or equal to SourcePort.
          A value of -1 indicates that no port range is specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SourcePortExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the SourcePort entry (or port range), if specified.
          If {{true}}, the class includes all packets except those that match the SourcePort entry (or port range), if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceMACAddress" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Source MAC Address.  {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACMask" access="readWrite" version="1.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the SourceMACAddress is only to be done for bit positions set to one in the mask.  A mask of ''FF:FF:FF:FF:FF:FF'' or {{empty}} indicates all bits of the SourceMACAdress are to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceMACExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) SourceMACAddress entry, if specified.
          If {{true}}, the class includes all packets except those that match the (masked) SourceMACAddress entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestMACAddress" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Destination MAC Address.  {{empty}} indicates this criterion is not used for classification.
          The use of destination MAC address as a classification criterion is primarily useful only for bridged traffic.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACMask" access="readWrite" version="1.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the DestMACAddress is only to be done for bit positions set to one in the mask.  A mask of ''FF:FF:FF:FF:FF:FF'' or {{empty}} indicates all bits of the DestMACAdress are to be used for classification.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestMACExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the (masked) DestMACAddress entry, if specified.
          If {{true}}, the class includes all packets except those that match the (masked) DestMACAddress entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Ethertype" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Ethertype as indicated in either the Ethernet or SNAP Type header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthertypeExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the Ethertype entry, if specified.
          If {{true}}, the class includes all packets except those that match the Ethertype entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SSAP" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          SSAP element in the LLC header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SSAPExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the SSAP entry, if specified.
          If {{true}}, the class includes all packets except those that match the SSAP entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSAP" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          DSAP element in the LLC header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DSAPExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the DSAP entry, if specified.
          If {{true}}, the class includes all packets except those that match the DSAP entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LLCControl" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Control element in the LLC header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="LLCControlExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the LLCControl entry, if specified.
          If {{true}}, the class includes all packets except those that match the LLCControl entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SNAPOUI" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          OUI element in the SNAP header.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="SNAPOUIExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the SNAPOUI entry, if specified.
          If {{true}}, the class includes all packets except those that match the SNAPOUI entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassID" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in RFC 2132 {{bibref|RFC2132}}, matched according to the criterion in {{param|SourceVendorClassIDMode}}.  Case sensitive.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the SourceVendorClassID entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the SourceVendorClassID entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorClassIDMode" access="readWrite" version="1.0">
        <description>
          SourceVendorClassID pattern match criterion.  {{enum}}
          For example, if {{param|SourceVendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassID" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in RFC 2132 {{bibref|RFC2132}}, matched according to the criterion in {{param|DestVendorClassIDMode}}.  Case sensitive.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the DestVendorClassID entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the DestVendorClassID entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorClassIDMode" access="readWrite" version="1.0">
        <description>
          DestVendorClassID pattern match criterion.  {{enum}}
          For example, if {{param|DestVendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="SourceClientID" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in RFC 2132 {{bibref|RFC2132}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceClientIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the SourceClientID entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the SourceClientID entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestClientID" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in RFC 2132 {{bibref|RFC2132}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestClientIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the DestClientID entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the DestClientID entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceUserClassID" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in RFC 3004 {{bibref|RFC3004}}.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceUserClassIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the SourceUserClassID entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the SourceUserClassID entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestUserClassID" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in RFC 3004 {{bibref|RFC3004}}.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestUserClassIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the DestUserClassID entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the DestUserClassID entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfo" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor-specific Information (Option 125) as defined in RFC 3925 {{bibref|RFC3925}}, matched according to the criteria in {{param|SourceVendorSpecificInfoEnterprise}}, {{param|SourceVendorSpecificInfoSubOption}}  and {{param|SourceVendorSpecificInfoMode}}.  Case sensitive.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets sourced from LAN devices that match the {{param|SourceVendorSpecificInfo}} entry, if specified.
          If {{true}}, the class includes all packets except those sourced from LAN devices that match the {{param|SourceVendorSpecificInfo}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoEnterprise" access="readWrite" version="1.0">
        <description>
          {{param|SourceVendorSpecificInfo}} Enterprise Number as defined in RFC 3925 {{bibref|RFC3925}}.
          The default value (0) is assigned to IANA and will probably need to be replaced with an appropriate enterprise number.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoSubOption" access="readWrite" version="1.0">
        <description>
          {{param|SourceVendorSpecificInfo}} Sub Option Code as defined in RFC 3925 {{bibref|RFC3925}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="0" maxInclusive="255"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="SourceVendorSpecificInfoMode" access="readWrite" version="1.0">
        <description>
          {{param|SourceVendorSpecificInfo}} pattern match criterion.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfo" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor-specific Information (Option 125) as defined in RFC 3925 {{bibref|RFC3925}}, matched according to the criteria in {{param|DestVendorSpecificInfoEnterprise}}, {{param|DestVendorSpecificInfoSubOption}}  and {{param|DestVendorSpecificInfoMode}}.
          {{empty}} indicates this criterion is not used for classification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets destined for LAN devices that match the {{param|DestVendorSpecificInfo}} entry, if specified.
          If {{true}}, the class includes all packets except those destined for LAN devices that match the {{param|DestVendorSpecificInfo}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoEnterprise" access="readWrite" version="1.0">
        <description>
          {{param|DestVendorSpecificInfo}} Enterprise Number as defined in RFC 3925 {{bibref|RFC3925}}.
          The default value (0) is assigned to IANA and will probably need to be replaced with an appropriate enterprise number.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoSubOption" access="readWrite" version="1.0">
        <description>
          {{param|DestVendorSpecificInfo}} Sub Option Code as defined in RFC 3925 {{bibref|RFC3925}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="0" maxInclusive="255"/>
          </int>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DestVendorSpecificInfoMode" access="readWrite" version="1.0">
        <description>
          {{param|DestVendorSpecificInfo}} pattern match criterion.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="TCPACK" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          If {{false}}, this criterion is not used for classification.
          If {{true}}, this criterion matches with all TCP segments that have the ACK control bit set.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="TCPACKExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the TCPACK entry, if specified.
          If {{true}}, the class includes all packets except those that match the TCPACK entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPLengthMin" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Minimum IP Packet Length (including header) in bytes.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IPLengthMax" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Maximum IP Packet Length (including header) in bytes.
          A value of zero indicates that no maximum is specified (an umlimited maximum length).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="IPLengthExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets whose length (including header) falls within the inclusive range IPLengthMin through IPLengthMax.  A value of zero for both IPLengthMin and IPLengthMax allows any length packet.  An equal non-zero value of IPLengthMin and IPLengthMax allows only a packet with the exact length specified.
          If {{true}}, the class includes all packets except those whose length (including header) falls within the inclusive range IPLengthMin through IPLengthMax.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPCheck" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          DiffServ codepoint (defined in RFC 2474 {{bibref|RFC2474}}).
          If set to a Class Selector Codepoint (defined in RFC 2474), all DSCP values that match the first 3 bits will be considered a valid match.
          A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="DSCPExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the DSCPCheck entry, if specified.
          If {{true}}, the class includes all packets except those that match the DSCPCheck entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DSCPMark" access="readWrite" version="1.0">
        <description>
          Classification result.
          DSCP to mark traffic with that falls into this classification entry.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityCheck" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Current Ethernet priority as defined in 802.1D.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the EthernetPriorityCheck entry, if specified.
          If {{true}}, the class includes all packets except those that match the EthernetPriorityCheck entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="EthernetPriorityMark" access="readWrite" version="1.0">
        <description>
          Classification result.
          Ethernet priority code (as defined in 802.1D) to mark traffic with that falls into this classification entry.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDCheck" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Current Ethernet VLAN ID as defined in 802.1Q.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="VLANIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, the class includes only those packets that match the VLANIDCheck entry, if specified.
          If {{true}}, the class includes all packets except those that match the VLANIDCheck entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="OutOfBandInfo" access="readWrite" version="1.0">
        <description>
          Classification criterion.
          Allows traffic to be distinguished based on out-of-band information such as physical port or application ID.  Primarily intended for, but not restricted to, locally sourced traffic.
          If specified, this entry applies to traffic with matching out-of-band information.  A value of -1 indicates this criterion is not used for classification.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ForwardingPolicy" access="readWrite" version="1.0">
        <description>
          Classification result.
          Identifier of the forwarding policy associated with traffic that falls in this classification.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TrafficClass" access="readWrite" version="1.0">
        <description>
          Classification result.
          Identifier of the traffic class associated with traffic that falls in this classification.  If specified, at least one Queue table entry MUST include this traffic class in its ''TrafficClass'' parameter (which is a comma-separated list).
          A value of -1 indicates a null traffic class.
          {{param}}, {{param|ClassQueue}} and {{param|ClassApp}} are mutually exclusive and one of the three MUST be specified.  If {{param}} and {{param|ClassQueue}} are null, {{param|ClassApp}} MUST be specified, and vice versa.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ClassPolicer" access="readWrite" version="1.0">
        <description>
          Classification result.
          Instance number of the Policer table entry for traffic that falls in this classification.
          A value of -1 indicates a null policer.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ClassQueue" access="readWrite" version="1.0">
        <description>
          Classification result.
          Instance number of the Queue table entry for traffic that falls in this classification.
          A value of -1 indicates a null queue.
          {{param|TrafficClass}}, {{param}} and {{param|ClassApp}} are mutually exclusive and one of the three MUST be specified.  If {{param|TrafficClass}} and {{param}} are null, {{param|ClassApp}} MUST be specified, and vice versa.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ClassApp" access="readWrite" version="1.0">
        <description>
          Classification result.
          Instance number of the App table entry for traffic that falls in this classification.
          A value of -1 indicates a null App table entry.
          {{param|TrafficClass}}, {{param|ClassQueue}} and {{param}} are mutually exclusive and one of the three MUST be specified.  If {{param|TrafficClass}} and {{param|ClassQueue}} are null, {{param}} MUST be specified, and vice versa.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.App.{i}." access="readWrite" numEntriesParameter="AppNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Application table.
      </description>
      <parameter name="AppKey" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Unique key for each App table entry.
          This parameter is OBSOLETED because it serves no purpose (no other parameter references it).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AppEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this App table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="AppStatus" access="readOnly" version="1.0">
        <description>
          The status of this App table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="ProtocolIdentifier" access="readWrite" version="1.0">
        <description>
          URN identifying the protocol associated with the given application.  A set of defined URNs is given in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AppName" access="readWrite" version="1.0">
        <description>
          Human-readable name associated with this entry in the App table.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AppDefaultForwardingPolicy" access="readWrite" version="1.0">
        <description>
          Identifier of the forwarding policy associated with traffic associated with this App table entry, but not associated with any specified flow.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AppDefaultTrafficClass" access="readWrite" version="1.0">
        <description>
          Identifier of the traffic class associated with traffic associated with this App table entry, but not associated with any specified flow.
          A value of -1 indicates a null traffic class.
          {{param}} and {{param|AppDefaultQueue}} MUST NOT both be specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="AppDefaultPolicer" access="readWrite" version="1.0">
        <description>
          Instance number of the Policer table entry for traffic associated with this App table entry, but not associated with any specified flow.
          A value of -1 indicates a null policer.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="AppDefaultQueue" access="readWrite" version="1.0">
        <description>
          Instance number of the Queue table entry for traffic associated with this App table entry, but not associated with any specified flow.
          A value of -1 indicates a null queue.
          {{param|AppDefaultTrafficClass}} and {{param}} MUST NOT both be specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="AppDefaultDSCPMark" access="readWrite" version="1.0">
        <description>
          DSCP to mark traffic associated with this App table entry, but not associated with any specified flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="AppDefaultEthernetPriorityMark" access="readWrite" version="1.0">
        <description>
          Ethernet priority code (as defined in 802.1D) to mark traffic associated with this App table entry, but not associated with any specified flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.Flow.{i}." access="readWrite" numEntriesParameter="FlowNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Flow table.
      </description>
      <parameter name="FlowKey" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Unique key for each Flow table entry.
          This parameter is OBSOLETED because it serves no purpose (no other parameter references it).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FlowEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this Flow table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="FlowStatus" access="readOnly" version="1.0">
        <description>
          The status of this Flow table entry.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="FlowType" access="readWrite" version="1.0">
        <description>
          URN identifying the type of flow to be associated with the specified queue and policer.  A set of defined URNs is given in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="FlowTypeParameters" access="readWrite" version="1.0">
        <description>
          List of name-value pairs representing additional criteria to identify the flow type.  The use and interpretation is specific to the particular FlowType URN.Encoded using the "x-www-form-urlencoded" content type defined in {{bibref|HTML4.01}}.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="FlowName" access="readWrite" version="1.0">
        <description>
          Human-readable name associated with this entry in the Flow table.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="AppIdentifier" access="readWrite" version="1.0">
        <description>
          Instance number of the App table entry associated with this flow.  A value of -1 indicates the flow table is not associated with any App table entry.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="FlowForwardingPolicy" access="readWrite" version="1.0">
        <description>
          Identifier of the forwarding policy associated with this flow.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="FlowTrafficClass" access="readWrite" version="1.0">
        <description>
          Identifier of the traffic class associated with this flow.
          A value of -1 indicates a null traffic class.
          {{param}} and {{param|FlowQueue}} MUST NOT both be specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="FlowPolicer" access="readWrite" version="1.0">
        <description>
          Instance number of the Policer table entry for traffic that falls in this flow.
          A value of -1 indicates a null policer.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="FlowQueue" access="readWrite" version="1.0">
        <description>
          Instance number of the Queue table entry for traffic that falls in this flow.
          A value of -1 indicates a null queue.
          {{param|FlowTrafficClass}} and {{param}} MUST NOT both be specified.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="FlowDSCPMark" access="readWrite" version="1.0">
        <description>
          DSCP to mark traffic with that falls into this flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of DSCP based upon the EthernetPriority value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="FlowEthernetPriorityMark" access="readWrite" version="1.0">
        <description>
          Ethernet priority code (as defined in 802.1D) to mark traffic with that falls into this flow.
          A value of -1 indicates no change from the incoming packet.
          A value of -2 indicates automatic marking of EthernetPriority based upon the DSCP value of the incoming packet as defined in {{bibref|TR-098a1|Annex A}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-2"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.Policer.{i}." access="readWrite" numEntriesParameter="PolicerNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Policer table.
      </description>
      <parameter name="PolicerKey" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Unique key for each policer entry.
          This parameter is OBSOLETED because it serves no purpose (no other parameter references it).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PolicerEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this policer.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PolicerStatus" access="readOnly" version="1.0">
        <description>
          The status of this policer.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="CommittedRate" access="readWrite" version="1.0">
        <description>
          Committed rate allowed for this policer in bits-per-second.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="CommittedBurstSize" access="readWrite" version="1.0">
        <description>
          Committed Burstsize in bytes.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ExcessBurstSize" access="readWrite" version="1.0">
        <description>
          Excess Burstsize in bytes.
          Applied for a {{enum|SingleRateThreeColor|MeterType}} meter.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PeakRate" access="readWrite" version="1.0">
        <description>
          Peak rate allowed for this Meter in bits-per-second.
          Applied for {{enum|TwoRateThreeColor|MeterType}} meters.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PeakBurstSize" access="readWrite" version="1.0">
        <description>
          Peak Burstsize in bytes.
          Applied for {{enum|TwoRateThreeColor|MeterType}} meters.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MeterType" access="readWrite" version="1.0">
        <description>
          Identifies the method of traffic measurement to be used for this policer.  {{enum}}
          {{enum|SimpleTokenBucket}} makes use of {{param|CommittedRate}} and {{param|CommittedBurstSize}}.
          {{enum|SingleRateThreeColor}} makes use of {{param|CommittedRate}}, {{param|CommittedBurstSize}}, and {{param|ExcessBurstSize}} as defined in RFC 2697 {{bibref|RFC2697}}.
          {{enum|TwoRateThreeColor}} makes use of {{param|CommittedRate}}, {{param|CommittedBurstSize}}, {{param|PeakRate}}, and {{param|PeakBurstSize}} as defined in RFC 2698 {{bibref|RFC2698}}.
        </description>
        <syntax>
          <string>
            <enumeration value="SimpleTokenBucket" version="1.0"/>
            <enumeration value="SingleRateThreeColor" version="1.0"/>
            <enumeration value="TwoRateThreeColor" version="1.0"/>
          </string>
          <default type="object" value="SimpleTokenBucket"/>
        </syntax>
      </parameter>
      <parameter name="PossibleMeterTypes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Supported meter types.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="SimpleTokenBucket" version="1.0"/>
            <enumeration value="SingleRateThreeColor" version="1.0"/>
            <enumeration value="TwoRateThreeColor" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConformingAction" access="readWrite" version="1.0">
        <description>
          Instructions for how to handle traffic that is conforming.  {{pattern}}
          {{pattern|Null}} corresponds with no action.
          A {{pattern|Count}} action (and only the {{pattern|Count}} action) increases the meter instance count statistics in the {{param|CountedPackets}} and {{param|CountedBytes}} parameters.  {{pattern|Count}} actions are DEPRECATED because they can not be combined with other actions, e.g. marking actions.
          ''&lt;DSCP Value&gt;'' is an unsigned integer that corresponds with a mark action overwriting the traffic's DSCP with the configured DSCP.
          ''&lt;:Ethernet Priority&gt;'' is a colon (":") followed by an unsigned integer (no white space).  It corresponds with a mark action overwriting the traffic's Ethernet Priority with the configured Ethernet Priority.
          ''&lt;DSCP Value:Ethernet Priority&gt;'' is an unsigned integer followed by a colon (":") and a second unsigned integer (no white space).  It corresponds with a mark action overwriting the traffic's DSCP and Ethernet Priority with the configured values.
          For example, "24" specifies a DSCP value of 24, ":3" specifies an Ethernet Priority of 3, and "24:3" specifies both.
        </description>
        <syntax>
          <string>
            <pattern value="Null" version="1.0"/>
            <pattern value="Drop" version="1.0"/>
            <pattern value="Count" status="deprecated" version="1.0"/>
            <pattern value="[0-9]|[1-5][0-9]|6[0-3]" version="1.0">
              <description>
                &lt;DSCP Value&gt;
              </description>
            </pattern>
            <pattern value=":[0-7]" version="1.0">
              <description>
                &lt;Ethernet Priority&gt;
              </description>
            </pattern>
            <pattern value="([0-9]|[1-5][0-9]|6[0-3]):[0-7]" version="1.0">
              <description>
                &lt;DSCP Value:Ethernet Priority&gt;
              </description>
            </pattern>
          </string>
          <default type="object" value="Null"/>
        </syntax>
      </parameter>
      <parameter name="PartialConformingAction" access="readWrite" version="1.0">
        <description>
          Instructions for how to handle traffic that is partially conforming (colored yellow).  {{pattern}}
          {{pattern|Null}} corresponds with no action.
          A {{pattern|Count}} action (and only the {{pattern|Count}} action) increases the meter instance count statistics in the {{param|CountedPackets}} and {{param|CountedBytes}} parameters.  {{pattern|Count}} actions are DEPRECATED because they can not be combined with other actions, e.g. marking actions.
          ''&lt;DSCP Value&gt;'' is an unsigned integer that corresponds with a mark action overwriting the traffic's DSCP with the configured DSCP.Only applies for three-color meters.
          ''&lt;:Ethernet Priority&gt;'' is a colon (":") followed by an unsigned integer (no white space).  It corresponds with a mark action overwriting the traffic's Ethernet Priority with the configured Ethernet Priority.
          ''&lt;DSCP Value:Ethernet Priority&gt;'' is an unsigned integer followed by a colon (":") and a second unsigned integer (no white space).  It corresponds with a mark action overwriting the traffic's DSCP and Ethernet Priority with the configured values.
          For example, "24" specifies a DSCP value of 24, ":3" specifies an Ethernet Priority of 3, and "24:3" specifies both.
        </description>
        <syntax>
          <string>
            <pattern value="Null" version="1.0"/>
            <pattern value="Drop" version="1.0"/>
            <pattern value="Count" status="deprecated" version="1.0"/>
            <pattern value="[0-9]|[1-5][0-9]|6[0-3]" version="1.0">
              <description>
                &lt;DSCP Value&gt;
              </description>
            </pattern>
            <pattern value=":[0-7]" version="1.0">
              <description>
                &lt;Ethernet Priority&gt;
              </description>
            </pattern>
            <pattern value="([0-9]|[1-5][0-9]|6[0-3]):[0-7]" version="1.0">
              <description>
                &lt;DSCP Value:Ethernet Priority&gt;
              </description>
            </pattern>
          </string>
          <default type="object" value="Drop"/>
        </syntax>
      </parameter>
      <parameter name="NonConformingAction" access="readWrite" version="1.0">
        <description>
          Instructions for how to handle traffic that is non-conforming.  {{pattern}}
          {{pattern|Null}} corresponds with no action.
          A {{pattern|Count}} action (and only the {{pattern|Count}} action) increases the meter instance count statistics in the {{param|CountedPackets}} and {{param|CountedBytes}} parameters.  {{pattern|Count}} actions are DEPRECATED because they can not be combined with other actions, e.g. marking actions.
          ''&lt;DSCP Value&gt;'' is an unsigned integer that corresponds with a mark action overwriting the traffic's DSCP with the configured DSCP.
          ''&lt;:Ethernet Priority&gt;'' is a colon (":") followed by an unsigned integer (no white space).  It corresponds with a mark action overwriting the traffic's Ethernet Priority with the configured Ethernet Priority.
          ''&lt;DSCP Value:Ethernet Priority&gt;'' is an unsigned integer followed by a colon (":") and a second unsigned integer (no white space).  It corresponds with a mark action overwriting the traffic's DSCP and Ethernet Priority with the configured values.
          For example, "24" specifies a DSCP value of 24, ":3" specifies an Ethernet Priority of 3, and "24:3" specifies both.
        </description>
        <syntax>
          <string>
            <pattern value="Null" version="1.0"/>
            <pattern value="Drop" version="1.0"/>
            <pattern value="Count" status="deprecated" version="1.0"/>
            <pattern value="[0-9]|[1-5][0-9]|6[0-3]" version="1.0">
              <description>
                &lt;DSCP Value&gt;
              </description>
            </pattern>
            <pattern value=":[0-7]" version="1.0">
              <description>
                &lt;Ethernet Priority&gt;
              </description>
            </pattern>
            <pattern value="([0-9]|[1-5][0-9]|6[0-3]):[0-7]" version="1.0">
              <description>
                &lt;DSCP Value:Ethernet Priority&gt;
              </description>
            </pattern>
          </string>
          <default type="object" value="Drop"/>
        </syntax>
      </parameter>
      <parameter name="CountedPackets" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of Packets counted as result of a ''Count'' meter action.
          This parameter is DEPRECATED because the ''Count'' meter action is DEPRECATED.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="CountedBytes" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of Bytes counted as result of a ''Count'' meter action.
          This parameter is DEPRECATED because the ''Count'' meter action is DEPRECATED.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TotalCountedPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="TotalCountedBytes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ConformingCountedPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of conforming Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="ConformingCountedBytes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of conforming Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PartiallyConformingCountedPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of partially conforming Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="PartiallyConformingCountedBytes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of partially conforming Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="NonConformingCountedPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of non-conforming Packets counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="NonConformingCountedBytes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of non-conforming Bytes counted by this policer, regardless of meter action.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.Queue.{i}." access="readWrite" numEntriesParameter="QueueNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Queue table.
        This table can contain hardware queues.  The CPE MAY refuse to allow hardware queues to be deleted.
      </description>
      <parameter name="QueueKey" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Unique key for each queue entry.
          This parameter is OBSOLETED because it serves no purpose (no other parameter references it).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables this queue.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="QueueStatus" access="readOnly" version="1.0">
        <description>
          The status of this queue.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="TrafficClasses" access="readWrite" version="1.0">
        <description>
          Identifies the set of traffic classes associated with this queue.
          If this list is empty then traffic can be sent to this queue only as a result of a direct reference from a Classification, App or Flow table entry, e.g. via the Classification table's ''ClassQueue'' parameter.
          If this list is non-empty then traffic can additionally be sent to this queue if a Classification, App or Flow table entry specifies a traffic class, e.g. via the Classification table's ''TrafficClass'' parameter.
          If more than one queue on a given egress interface is associated with a given traffic class, the implementation will choose which queue to send traffic of this class to.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <unsignedInt/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="QueueInterface" access="readWrite" version="1.0">
        <description>
          Egress interfaces for which the specified queue MUST exist.  This parameter MUST be in one of the following forms:
          The full hierarchical parameter name of the particular ''WANDevice'', ''WANConnectionDevice'', ''WAN**Connection'', ''LANDevice'', ''LAN**InterfaceConfig'', or ''WLANConfiguration'' object.
          The string ''WAN'', which indicates this entry applies to all WAN interfaces.
          The string ''LAN'', which indicates this entry applies to all LAN interfaces.
          {{empty}}, which indicates this classification entry is to apply to all interfaces.
          Packets classified into this queue that exit through any other interface MUST instead use the default queuing behavior specified in the Queue table entry referenced by {{param|InternetGatewayDevice.QueueManagement.DefaultQueue}}.
          For the default queue itself (the Queue table entry referenced by {{param|InternetGatewayDevice.QueueManagement.DefaultQueue}}), the value of the {{param}} parameter MUST be ignored.  That is, the default queue MUST exist on all egress interfaces.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="QueueBufferLength" access="readOnly" version="1.0">
        <description>
          Number of bytes in the buffer.
          Queue buffer size for all egress interfaces for which this queue exists.  If the buffer size is not the same for all such egress interfaces, this parameter MUST be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QueueWeight" access="readWrite" version="1.0">
        <description>
          Weight of this queue in case of {{enum|WFQ|SchedulerAlgorithm}} or {{enum|WRR|SchedulerAlgorithm}}, but only used for queues of equal precedence.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="QueuePrecedence" access="readWrite" version="1.0">
        <description>
          Precedence of this queue relative to others. Lower numbers imply greater precedence.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="REDThreshold" access="readWrite" version="1.0">
        <description>
          Random Early Detection threshold, used only when {{param|DropAlgorithm}} is {{enum|RED|DropAlgorithm}}.
          This is the minimum threshold (''min_th'') and is measured as a percentage of the queue size.  If the value is set to zero, the CPE MUST choose a sensible value, e.g. 5 (but the value MUST still read back as zero).
          In this version of the data model, there is no way to set the maximum threshold (''max_th'').  The CPE MUST choose a sensible value, e.g. three times the minimum threshold.
          In this version of the data model, there is no way to set the RED weight (''w_q'').  The CPE MUST choose a sensible value, e.g. 0.002.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="100"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="REDPercentage" access="readWrite" version="1.0">
        <description>
          Random Early Detection percentage, used only when {{param|DropAlgorithm}} is {{enum|RED|DropAlgorithm}}.
          This is the maximum value of the packet marking probability (''max_p'').  If the value is set to zero, the CPE MUST choose a sensible value, e.g. 10 (but the value MUST still read back as zero).
          In this version of the data model, there is no way to set the RED weight (''w_q'').  The CPE MUST choose a sensible value, e.g. 0.002.
        </description>
        <syntax>
          <unsignedInt>
            <range maxInclusive="100"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DropAlgorithm" access="readWrite" version="1.0">
        <description>
          Dropping algorithm used for this queue if congested.
        </description>
        <syntax>
          <string>
            <enumeration value="RED" version="1.0">
              <description>
                Random Early Detection {{bibref|RED}}
              </description>
            </enumeration>
            <enumeration value="DT" version="1.0">
              <description>
                Drop Tail
              </description>
            </enumeration>
            <enumeration value="WRED" version="1.0">
              <description>
                Weighted RED
              </description>
            </enumeration>
            <enumeration value="BLUE" version="1.0">
              <description>
                {{bibref|BLUE}}
              </description>
            </enumeration>
          </string>
          <default type="object" value="DT"/>
        </syntax>
      </parameter>
      <parameter name="SchedulerAlgorithm" access="readWrite" version="1.0">
        <description>
          Scheduling Algorithm used by scheduler.
        </description>
        <syntax>
          <string>
            <enumeration value="WFQ" version="1.0">
              <description>
                Weighted Fair Queueing
              </description>
            </enumeration>
            <enumeration value="WRR" version="1.0">
              <description>
                Weighted Round Robin
              </description>
            </enumeration>
            <enumeration value="SP" version="1.0">
              <description>
                Strict Priority
              </description>
            </enumeration>
          </string>
          <default type="object" value="SP"/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" version="1.0">
        <description>
          Rate to shape this queue's traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the egress will be on a PPP or IP link with a specified ''ShapingRate'', the percentage is calculated relative to this rate.  Otherwise, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" version="1.0">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.QueueManagement.QueueStats.{i}." access="readWrite" numEntriesParameter="QueueStatsNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Queue statistics table. This table is managed by the ACS, which will create entries only for those {Queue, Interface} combinations for which statistics are to be collected.
      </description>
      <uniqueKey>
        <parameter ref="Queue"/>
        <parameter ref="Interface"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this object.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          The status of this object.
        </description>
        <syntax>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="Enabled" version="1.0">
              <description>
                Enabled and {Queue,Interface} is valid
              </description>
            </enumeration>
            <enumeration value="Error" version="1.0">
              <description>
                Enabled but {Queue,Interface} is invalid
              </description>
            </enumeration>
          </string>
          <default type="object" value="Disabled"/>
        </syntax>
      </parameter>
      <parameter name="Queue" access="readWrite" version="1.0">
        <description>
          Instance number of the Queue table entry with which this object is associated.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          Egress interface for which this object contains statistics. This parameter MUST be the full hierarchical parameter name of the particular ''WANDevice'', ''WANConnectionDevice'', ''WAN**Connection'', ''LANDevice'', ''LAN**InterfaceConfig'', or ''WLANConfiguration'' object.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="OutputPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of packets output through the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="OutputBytes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of bytes output through the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DroppedPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of packets dropped by the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DroppedBytes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of bytes dropped by the queue.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="QueueOccupancyPackets" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Queue occupancy in packets (gives a measure of queue latency).
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="QueueOccupancyPercentage" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Queue occupancy as a percentage, i.e. 100 * queue occupancy in bytes / queue size in bytes (gives a measure of queue usage).
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANConfigSecurity." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains generic device configuration information.
      </description>
      <parameter name="ConfigPassword" access="readWrite" version="1.0">
        <description>
          A password to allow LAN access to protected auto-configuration services.
          If the CPE supports TR-064 (LAN-side DSL CPE Configuration Protocol), this parameter is to be used as the ''dslf-config'' password (as defined in TR-064).
          If the CPE has a user interface with password protection enabled, this parameter is also to be used as the user password for password-protected operations.  However, this parameter MUST NOT be used to set the user password if the parameter {{param|InternetGatewayDevice.UserInterface.PasswordUserSelectable}} is {{true}}.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.IPPingDiagnostics." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object provides access to an IP-layer ping test.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly" version="1.0"/>
            <enumeration value="Requested" version="1.0"/>
            <enumeration value="Complete" access="readOnly" version="1.0"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly" version="1.0"/>
            <enumeration value="Error_Internal" access="readOnly" version="1.0"/>
            <enumeration value="Error_Other" access="readOnly" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          {{reference|the WAN or LAN IP-layer interface over which the test is to be performed}}  This identifies the source IP address to use when performing the test.
          The following is a WAN interface example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          The following is a LAN interface example: ''InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1''
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST use the interface as directed by its routing policy (Forwarding table entries) to determine the appropriate interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" version="1.0">
        <description>
          Host name or address of the host to ping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" version="1.0">
        <description>
          Number of repetitions of the ping test to perform before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" version="1.0">
        <description>
          Timeout in milliseconds for the ping test.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" version="1.0">
        <description>
          Size of the data block in bytes to be sent for each ping.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" version="1.0">
        <description>
          DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the number of successful pings (those in which a successful response was received prior to the timeout) in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the number of failed pings in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the average response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the minimum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the maximum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.TraceRouteDiagnostics." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object is defines access to an IP-layer trace-route test for the specified IP interface.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly" version="1.0"/>
            <enumeration value="Requested" version="1.0"/>
            <enumeration value="Complete" access="readOnly" version="1.0"/>
            <enumeration value="Error_CannotResolveHostName" access="readOnly" version="1.0"/>
            <enumeration value="Error_MaxHopCountExceeded" access="readOnly" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          {{reference|the WAN or LAN IP-layer interface over which the test is to be performed}}  This identifies the source IP address to use when performing the test.
          The following is a WAN interface example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''
          The following is a LAN interface example: ''InternetGatewayDevice.LANDevice.1.LANHostConfigManagement.IPInterface.1''
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Host" access="readWrite" version="1.0">
        <description>
          Host name or address of the host to find a route to
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="NumberOfTries" access="readWrite" version="1.0">
        <description>
          Number of tries per hop. Set prior to running Diagnostic.  By default, the CPE SHOULD set this value to 3.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" version="1.0">
        <description>
          Timeout in milliseconds for the trace route test.  By default the CPE SHOULD set this value to 5000.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DataBlockSize" access="readWrite" version="1.0">
        <description>
          Size of the data block in bytes to be sent for each trace route.  By default, the CPE SHOULD set this value to 38.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" version="1.0">
        <description>
          DiffServ codepoint to be used for the test packets.  By default the CPE SHOULD set this value to 0.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MaxHopCount" access="readWrite" version="1.0">
        <description>
          The maximum number of hop used in outgoing probe packets (max TTL).  By default the CPE SHOULD set this value to 30.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the response time in milliseconds the most recent trace route test.  If a route could not be determined, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RouteHopsNumberOfEntries" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of entries in the {{object|RouteHops}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.{i}." access="readOnly" numEntriesParameter="RouteHopsNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Contains the array of results returned.  If a route could not be determined, this array will be empty
      </description>
      <parameter name="HopHost" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the Host Name if DNS is able to resolve or IP Address of a hop along the discovered route.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HopHostAddress" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          If this parameter is not {{empty}} it will contain the last IP address of the host returned for this hop and the {{param|HopHost}} will contain the Host Name returned from the reverse DNS query.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HopErrorCode" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Contains the error code returned for this hop  This code is directly from the ICMP CODE field.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HopRTTimes" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Contains one or more round trip times in milliseconds (one for each repetition) for this hop.
        </description>
        <syntax>
          <list>
            <size maxLength="16"/>
          </list>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.DownloadDiagnostics." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object defines the diagnostics configuration for a HTTP and FTP DownloadDiagnostics Test.
        Files received in the DownloadDiagnostics do not require file storage on the CPE device.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Indicate the availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly" version="1.0"/>
            <enumeration value="Requested" version="1.0"/>
            <enumeration value="Completed" access="readOnly" version="1.0"/>
            <enumeration value="Error_InitConnectionFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoResponse" access="readOnly" version="1.0"/>
            <enumeration value="Error_TransferFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_PasswordRequestFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_LoginFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoTransferMode" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoPASV" access="readOnly" version="1.0"/>
            <enumeration value="Error_IncorrectSize" access="readOnly" version="1.0"/>
            <enumeration value="Error_Timeout" access="readOnly" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          {{reference|the IP-layer interface over which the test is to be performed}}
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST use the default routing interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DownloadURL" access="readWrite" version="1.0">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the CPE to perform the download on. This parameter MUST be in the form of a valid HTTP {{bibref|RFC2616}} or FTP {{bibref|RFC862}} URL.
          When using FTP transport, FTP binary transfer MUST be used.
          When using HTTP transport, persistent connections MUST be used and pipelining MUST NOT be used.
          When using HTTP transport the HTTP Authentication MUST NOT be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" version="1.0">
        <description>
          The DiffServ code point for marking packets transmitted in the test.
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EthernetPriority" access="readWrite" version="1.0">
        <description>
          Ethernet priority code for marking packets transmitted in the test (if applicable).
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the client sends the GET command.
          * For FTP this is the time at which the client sends the RTRV command.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the first data packet is received.
          * For FTP this is the time at which the client receives the first data packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the last data packet is received.
          * For FTP this is the time at which the client receives the last packet on the data connection.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TestBytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The test traffic received in bytes during the FTP/HTTP transaction including FTP/HTTP headers, between {{param|BOMTime}} and {{param|EOMTime}},
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection.
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is the time at which the TCP ACK to the socket opening the data connection was received.
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.UploadDiagnostics." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object defines the diagnostics configuration for a HTTP or FTP UploadDiagnostics test.
        Files sent by the UploadDiagnostics do not require file storage on the CPE device, and MAY be an arbitrary stream of bytes.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Indicate the availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Completed}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Completed}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly" version="1.0"/>
            <enumeration value="Requested" version="1.0"/>
            <enumeration value="Completed" access="readOnly" version="1.0"/>
            <enumeration value="Error_InitConnectionFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoResponse" access="readOnly" version="1.0"/>
            <enumeration value="Error_PasswordRequestFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_LoginFailed" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoTransferMode" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoPASV" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoCWD" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoSTOR" access="readOnly" version="1.0"/>
            <enumeration value="Error_NoTransferComplete" access="readOnly" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          {{reference|the IP-layer interface over which the test is to be performed}}
          The value of this parameter MUST be either a valid interface or an empty string.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST use the default routing interface.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UploadURL" access="readWrite" version="1.0">
        <description>
          The URL, as defined in {{bibref|RFC3986}}, for the CPE to Upload to. This parameter MUST be in the form of a valid HTTP {{bibref|RFC2616}} or FTP {{bibref|RFC862}} URL.
          When using FTP transport, FTP binary transfer MUST be used.
          When using HTTP transport, persistent connections MUST be used and pipelining MUST NOT be used.
          When using HTTP transport the HTTP Authentication MUST NOT be used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DSCP" access="readWrite" version="1.0">
        <description>
          DiffServ code point for marking packets transmitted in the test.
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="63"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="EthernetPriority" access="readWrite" version="1.0">
        <description>
          Ethernet priority code for marking packets transmitted in the test (if applicable).
          The default value SHOULD be zero.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TestFileLength" access="readWrite" version="1.0">
        <description>
          The size of the file (in bytes) to be uploaded to the server.
          The CPE MUST insure the appropriate number of bytes are sent.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ROMTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the client sends the PUT command
          * For FTP this is the time at which the STOR command is sent.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="BOMTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Begin of transmission time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the first data packet is sent.
          * For FTP this is the time at which the client receives the ready for transfer notification.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="EOMTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          End of transmission in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time when the HTTP successful response code is received.
          * For FTP this is the time when the client receives a transfer complete.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes sent on the Interface between {{param|BOMTime}} and {{param|EOMTime}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenRequestTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Request time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the time at which the TCP socket open (SYN) was sent for the HTTP connection.
          * For FTP this is the time at which the TCP socket open (SYN) was sent for the data connection
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TCPOpenResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Response time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          * For HTTP this is the Time at which the TCP ACK to the socket opening the HTTP connection was received.
          * For FTP this is  the Time at which the TCP ACK to the socket opening the Data connection was received.
          Note: Interval of 1 microsecond SHOULD be supported.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.UDPEchoConfig." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object allows the CPE to be configured to perform the UDP Echo Service defined in {{bibref|RFC862}} and UDP Echo Plus Service defined in {{bibref|TR-143|Appendix A.1}}.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          MUST be enabled to receive UDP echo. When enabled from a disabled state all related timestamps, statistics and UDP Echo Plus counters are cleared.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Interface" access="readWrite" version="1.0">
        <description>
          {{reference|IP-layer interface over which the CPE MUST listen and receive UDP echo requests on}}
          The value of this parameter MUST be either a valid interface or {{empty}}.  An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
          If {{empty}} is specified, the CPE MUST listen and receive UDP echo requests on all interfaces.
          Note: Interfaces behind a NAT MAY require port forwarding rules configured in the Gateway to enable receiving the UDP packets.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SourceIPAddress" access="readWrite" version="1.0">
        <description>
          The Source IP address of the UDP echo packet. The CPE MUST only respond to a UDP echo from this source IP address.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="UDPPort" access="readWrite" version="1.0">
        <description>
          The UDP port on which the UDP server MUST listen and respond to UDP echo requests.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EchoPlusEnabled" access="readWrite" version="1.0">
        <description>
          If {{true}} the CPE will perform necessary packet processing for UDP Echo Plus packets.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="EchoPlusSupported" access="readOnly" version="1.0">
        <description>
          {{true}} if UDP Echo Plus is supported.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Incremented upon each valid UDP echo packet received.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsResponded" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Incremented for each UDP echo response sent.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The number of UDP received bytes including payload and UDP header after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesResponded" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The number of UDP responded bytes, including payload and UDP header sent after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TimeFirstPacketReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456,
          The time that the server receives the first UDP echo packet after the UDPEchoConfig is enabled.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="TimeLastPacketReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Time in UTC, which MUST be specified to microsecond precision.
          For example: 2008-04-09T15:01:05.123456
          The time that the server receives the most recent UDP echo packet.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}." access="readWrite" numEntriesParameter="LANDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Each instance models a LAN side layer 3 IP interface.
        Each instance has children that correspond to the layer 2 interfaces that are connected to the Gateway's IP router via the modeled IP interface.  If a LANDevice instance is deleted, the objects modeling those layer 2 interfaces that are as a result no longer connected to the Gateway's IP router will move to the InternetGatewayDevice.LANInterfaces object.
        If the ''Layer2Bridging'' object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any ''LANDevice'' and ''WAN**Connection'' objects.  The implications of this are explained in {{bibref|TR-098a2|Annex A.6}}.
      </description>
      <parameter name="LANEthernetInterfaceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|LANEthernetInterfaceConfig}} in this ''LANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="LANUSBInterfaceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|LANUSBInterfaceConfig}} in this ''LANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="LANWLANConfigurationNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|WLANConfiguration}} in this ''LANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object enables reporting of LAN-related device information and setting and configuring LAN IP addressing.
        The DHCP parameters in this object define the behavior of the default DHCP server, i.e. the behavior for DHCP requests that do not match any of the DHCP conditional serving pool entries.
      </description>
      <parameter name="MACAddress" access="readOnly" version="1.0">
        <description>
          The MAC address associated with the IP interface modeled by this LANDevice instance.  This is the MAC address that is returned in response to an ARP request for any of the IP interface's IP addresses.  It is also the source MAC address in all IP traffic sent over the IP interface.
          If no single MAC address meets the above criteria, the value of this parameter MUST be the all-zero MAC address ''00:00:00:00:00:00''.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPServerConfigurable" access="readWrite" version="1.0">
        <description>
          Enables the configuration of the DHCP server on the LAN interface.  If this variable is set to {{false}}, the CPE SHOULD restore its default DHCP server settings.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DHCPServerEnable" access="readWrite" version="1.0">
        <description>
          Enables or disables the DHCP server on the LAN interface.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DHCPRelay" access="readOnly" status="deprecated" version="1.0">
        <description>
          Indicates if the DHCP server performs the role of a server ({{false}}) or a relay ({{true}}) on the LAN interface.
          This parameter is DEPRECATED because the functionality that it describes is not well-defined.  The CPE MAY set it to the value that it thinks most appropriate, based on its configuration.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MinAddress" access="readWrite" version="1.0">
        <description>
          Specifies first address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxAddress" access="readWrite" version="1.0">
        <description>
          Specifies last address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ReservedAddresses" access="readWrite" version="1.0">
        <description>
          Addresses marked reserved from the address allocation pool.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" version="1.0">
        <description>
          Specifies the client's network subnet mask.
          This parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" version="1.0">
        <description>
          DNS servers offered to DHCP clients.  Support for more than three DNS Servers is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DomainName" access="readWrite" version="1.0">
        <description>
          Sets the domain name to provide to clients on the LAN interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPRouters" access="readWrite" version="1.0">
        <description>
          IP addresses of routers on this subnet.  Also known as default gateway.  Support for more than one Router address is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPLeaseTime" access="readWrite" version="1.0">
        <description>
          Specifies the lease time in seconds of client assigned addresses.  A value of -1 indicates an infinite lease.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="86400"/>
        </syntax>
      </parameter>
      <parameter name="UseAllocatedWAN" access="readWrite" version="1.0">
        <description>
          Controls use of addresses from the associated WAN connection.  {{enum}}
          If {{enum|Normal}}, the address pool is directly configured by the ACS.
          If {{enum|UseAllocatedSubnet}}, behavior is the same as for {{enum|Passthrough}} with an empty {{param|PassthroughMACAddress}}.  For this reason, {{enum|UseAllocatedSubnet}} is DEPRECATED.
          If {{enum|Passthrough}}, and {{param|PassthroughMACAddress}} is {{empty}}, the configured values of the {{param|MinAddress}}, {{param|MaxAddress}}, {{param|SubnetMask}} and {{param|DNSServers}} parameters are ignored.  The corresponding address pool values are instead taken from the WAN connection specified by {{param|AssociatedConnection}}.
          If {{enum|Passthrough}}, and {{param|PassthroughMACAddress}} is not {{empty}}, the LAN Host identified by {{param|PassthroughMACAddress}} is given a WAN IP address from the WAN connection specified by {{param|AssociatedConnection}}.  Other LAN Hosts are treated as for {{enum|Normal}}.
          Use of {{param|PassthroughMACAddress}} does not cover the case where more than one LAN Host is to be given a WAN IP address.  This can be achieved by using a DHCP conditional serving pool.
        </description>
        <syntax>
          <string>
            <enumeration value="Normal" version="1.0"/>
            <enumeration value="UseAllocatedSubnet" status="deprecated" version="1.0"/>
            <enumeration value="Passthrough" version="1.0"/>
          </string>
          <default type="object" value="Normal"/>
        </syntax>
      </parameter>
      <parameter name="AssociatedConnection" access="readWrite" version="1.0">
        <description>
          {{reference|the connection instance to be used for address allocation if {{param|UseAllocatedWAN}} is set to {{enum|UseAllocatedSubnet|UseAllocatedWAN}} or {{enum|Passthrough|UseAllocatedWAN}}}}  The content is the full hierarchical parameter name of a WAN-side layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          If {{param|UseAllocatedWAN}} is {{enum|UseAllocatedSubnet|UseAllocatedWAN}} or {{enum|Passthrough|UseAllocatedWAN}}, this parameter MUST have a valid value before the DHCP server can be enabled.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PassthroughLease" access="readWrite" version="1.0">
        <description>
          DHCP lease time in seconds given to the LAN Host that is used to passthrough a WAN IP address if {{param|UseAllocatedWAN}} is {{enum|Passthrough|UseAllocatedWAN}}.
          Note: A temporary private IP address with short lease (for example, 1 min) might be given to the passthrough LAN Host before the WAN IP address is acquired.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="600"/>
        </syntax>
      </parameter>
      <parameter name="PassthroughMACAddress" access="readWrite" version="1.0">
        <description>
          Hardware address of the LAN Host that is used to passthrough a WAN IP address if {{param|UseAllocatedWAN}} is {{enum|Passthrough|UseAllocatedWAN}}.
          Note: {{empty}} indicates that no specific LAN Host is designated, and results in the same behavior as the (DEPRECATED) {{enum|UseAllocatedSubnet|UseAllocatedWAN}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="AllowedMACAddresses" access="readWrite" version="1.0">
        <description>
          Hardware addresses that are allowed to connect to this connection if ''MACAddressControlEnabled'' is 1 for a given interface.
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|IPInterface}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPStaticAddressNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|DHCPStaticAddress}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPOptionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|DHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPConditionalPoolNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the  {{object|DHCPConditionalServingPool}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}." access="readWrite" numEntriesParameter="IPInterfaceNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        IP address table with each object representing an IP address on the LANDevice IP interface.
        Support for more than one interface instance is OPTIONAL.
      </description>
      <uniqueKey>
        <parameter ref="IPInterfaceIPAddress"/>
        <parameter ref="IPInterfaceSubnetMask"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this entry.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceIPAddress" access="readWrite" version="1.0">
        <description>
          IP address of the LAN-side interface of the CPE.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceSubnetMask" access="readWrite" version="1.0">
        <description>
          Subnet mask of the LAN-side interface of the IGD.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="IPInterfaceAddressingType" access="readWrite" version="1.0">
        <description>
          Represents the addressing method used to assign the LAN-side IP address of the CPE on this interface.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" version="1.0"/>
            <enumeration value="Static" version="1.0"/>
            <enumeration value="AutoIP" version="1.0"/>
          </string>
          <default type="object" value="DHCP"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPStaticAddress.{i}." access="readWrite" numEntriesParameter="DHCPStaticAddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        DHCP static address table.
        Entries in this table correspond to what RFC 2131 {{bibref|RFC2131}} calls "manual allocation", where a client's IP address is assigned by the network administrator, and DHCP is used simply to convey the assigned address to the client.
        Each instance of this object specifies a hardware address (MAC address) and an IP address within the pool.  When serving from this pool, this IP address MUST, if available, be assigned to the DHCP client with this hardware address, and MUST NOT be assigned to any other client.
        Note that it is possible that an IP address in this table is present in one or more of the conditional serving pools, in which case it is possible that such an address will be assigned to a different client.
      </description>
      <uniqueKey>
        <parameter ref="Chaddr"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the DHCPStaticAddress table entry.
          Disabling an entry does not return the IP address to the pool.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" version="1.0">
        <description>
          Hardware address (MAC address) of the physical interface of the DHCP client.
          This parameter MUST have a valid value before the table entry can be enabled.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Yiaddr" access="readWrite" version="1.0">
        <description>
          IP address to be assigned by the DHCP server to the DHCP client with the specified hardware address (MAC address).
          This parameter MUST have a valid value before the table entry can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPOption.{i}." access="readWrite" numEntriesParameter="DHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object specifies the DHCP options that MUST, if enabled, be returned to clients whose DHCP requests do not match any of the DHCP conditional serving pool entries.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this DHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" version="1.0">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" version="1.0">
        <description>
          Base64 encoded option value.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}." access="readWrite" numEntriesParameter="DHCPConditionalPoolNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        DHCP conditional serving pool table.
        Each instance of this object defines a DHCP conditional serving pool.  Client requests are associated with pools based on criteria such as source interface, supplied DHCP options, and MAC address.
        If a DHCP request does not match any of the DHCP conditional serving pool entries, the handling of the request is determined by the default DHCP server behavior that is defined by the LANHostConfigManagement object.
        Overlapping pool ranges MUST be supported.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the DHCPConditionalServingPool entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PoolOrder" access="readWrite" version="1.0">
        <description>
          Position of the pool entry in the order of precedence.  A value of 1 indicates the first entry considered.  For each DHCP request, the highest ordered entry that matches the association criteria is applied.  All lower order entries are ignored.
          When this value is modified, if the value matches that of an existing entry, the Order value for the existing entry and all lower Order entries is incremented (lowered in precedence) to ensure uniqueness of this value. A deletion causes Order values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value on creation of a DHCPConditionalServingPool table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SourceInterface" access="readWrite" version="1.0">
        <description>
          Pool association criterion.
          {{list}}  {{reference|the layer 2 ingress interfaces associated with this entry, i.e. the corresponding ''LAN**InterfaceConfig'' or ''WLANConfiguration'' objects}}
          For example: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2,InternetGatewayDevice.LANDevice.1.WLANConfiguration.3''
          {{empty}} indicates this entry is to apply to all layer 2 interface objects under this ''LANDevice'' instance.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string>
            <pathRef refType="weak" targetType="row"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readWrite" version="1.0">
        <description>
          Pool association criterion.
          Used to identify one or more LAN devices, value of the DHCP Vendor Class Identifier (Option 60) as defined in RFC 2132 {{bibref|RFC2132}}, matched according to the criterion in {{param|VendorClassIDMode}}.  Case sensitive.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|VendorClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|VendorClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="VendorClassIDMode" access="readWrite" version="1.0">
        <description>
          {{param|VendorClassID}} pattern match criterion.  {{enum}}
          For example, if {{param|VendorClassID}} is "Example" then an Option 60 value of "Example device" will match with {{param}} values of {{enum|Prefix}} or {{enum|Substring}}, but not with {{enum|Exact}} or {{enum|Suffix}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Exact" version="1.0"/>
            <enumeration value="Prefix" version="1.0"/>
            <enumeration value="Suffix" version="1.0"/>
            <enumeration value="Substring" version="1.0"/>
          </string>
          <default type="object" value="Exact"/>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readWrite" version="1.0">
        <description>
          Pool association criterion.
          Used to identify one or more LAN devices, value of the DHCP Client Identifier (Option 61) as defined in RFC 2132 {{bibref|RFC2132}}.  The option value is binary, so an exact match is REQUIRED.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ClientIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|ClientID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|ClientID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readWrite" version="1.0">
        <description>
          Pool association criterion.
          Used to identify one or more LAN devices, value of the DHCP User Class Identifier (Option 77) as defined in RFC 3004 {{bibref|RFC3004}}.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="UserClassIDExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, matching packets are those that match the {{param|UserClassID}} entry, if specified.
          If {{true}}, matching packets are those that do not match the {{param|UserClassID}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" version="1.0">
        <description>
          Pool association criterion.
          Hardware address (MAC address.) of the physical interface of the DHCP client.
          {{empty}} indicates this criterion is not used for conditional serving.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrMask" access="readWrite" version="1.0">
        <description>
          Bit-mask for the MAC address, where matching of a packet's MAC address with the {{param|Chaddr}} is only to be done for bit positions set to one in the mask.  A mask of FF:FF:FF:FF:FF:FF  or {{empty}} indicates all bits of the {{param|Chaddr}} are to be used for conditional serving classification.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ChaddrExclude" access="readWrite" version="1.0">
        <description>
          If {{false}}, matching packets are those that match the (masked) {{param|Chaddr}} entry, if specified.
          If {{true}}, matching packets are those that do not match the (masked) {{param|Chaddr}} entry, if specified.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LocallyServed" access="readWrite" version="1.0">
        <description>
          If {{true}}, then the local DHCP server will assign an IP address from the specific address pool specified in this object. If {{false}}, the DHCP server will send the request to the {{param|DHCPServerIPAddress}} configured for this pool.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="MinAddress" access="readWrite" version="1.0">
        <description>
          Specifies first address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
          This parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxAddress" access="readWrite" version="1.0">
        <description>
          Specifies last address in the pool to be assigned by the DHCP server on the LAN interface.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
          This parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="ReservedAddresses" access="readWrite" version="1.0">
        <description>
          IP addresses marked reserved from the address allocation pool.
        </description>
        <syntax>
          <list>
            <size maxLength="512"/>
          </list>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" version="1.0">
        <description>
          Specifies the client's network subnet mask.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
          This parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" version="1.0">
        <description>
          DNS servers offered to DHCP clients.  Support for more than three DNS Servers is OPTIONAL.
          This parameter is configurable only if {{param|UseAllocatedWAN}} is {{enum|Normal|UseAllocatedWAN}}.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DomainName" access="readWrite" version="1.0">
        <description>
          Sets the domain name to provide to clients on the LAN interface.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IPRouters" access="readWrite" version="1.0">
        <description>
          IP addresses of routers on this subnet.  Also known as default gateway.  Support for more than one Router address is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPLeaseTime" access="readWrite" version="1.0">
        <description>
          Specifies the lease time in seconds of client assigned addresses.  A value of -1 indicates an infinite lease.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="86400"/>
        </syntax>
      </parameter>
      <parameter name="UseAllocatedWAN" access="readWrite" version="1.0">
        <description>
          Controls whether the {{param|MinAddress}}, {{param|MaxAddress}}, {{param|SubnetMask}} and {{param|DNSServers}} parameters are configurable or are taken from the associated WAN connection.  {{enum}}
          If {{enum|Normal}}, the above-mentioned pool parameters are directly configured by the ACS.
          If {{enum|Passthrough}}, the above-mentioned pool parameters cannot be configured by the ACS.  Their values are instead taken from the WAN connection specified by {{param|AssociatedConnection}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Normal" version="1.0"/>
            <enumeration value="Passthrough" version="1.0"/>
          </string>
          <default type="object" value="Normal"/>
        </syntax>
      </parameter>
      <parameter name="AssociatedConnection" access="readWrite" version="1.0">
        <description>
          {{reference|the connection instance to be used for address allocation if {{param|UseAllocatedWAN}} is set to {{enum|Passthrough|UseAllocatedWAN}}}} The content is the full hierarchical parameter name of a WAN-side layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          If {{param|UseAllocatedWAN}} is {{enum|Passthrough|UseAllocatedWAN}}, this parameter MUST have a valid value before this pool can be enabled.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
            <pathRef refType="weak" targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DHCPServerIPAddress" access="readWrite" version="1.0">
        <description>
          IP address of the DHCP server, where the request has to be sent to when there is a conditional match with this pool and {{param|LocallyServed}} is {{false}}. If this parameter is not configured, then the DHCP request is dropped.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DHCPStaticAddressNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|DHCPStaticAddress}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="DHCPOptionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|DHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.DHCPStaticAddress.{i}." access="readWrite" numEntriesParameter="DHCPStaticAddressNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        DHCP static address table.
        Entries in this table correspond to what RFC 2131 {{bibref|RFC2131}} calls "manual allocation", where a client's IP address is assigned by the network administrator, and DHCP is used simply to convey the assigned address to the client.
        Each instance of this object specifies a hardware address (MAC address) and an IP address within the pool.  When serving from this pool, this IP address MUST, if available, be assigned to the DHCP client with this hardware address, and MUST NOT be assigned to any other client.
        Note that it is possible that an IP address in this table is present in the main pool and/or one or more of the other conditional serving pools, in which case it is possible that such an address will be assigned to a different client.
      </description>
      <uniqueKey>
        <parameter ref="Chaddr"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the DHCPStaticAddress table entry.
          Disabling an entry does not return the IP address to the pool.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Chaddr" access="readWrite" version="1.0">
        <description>
          Hardware address (MAC address) of the physical interface of the DHCP client.
          This parameter MUST have a valid value before the table entry can be enabled.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Yiaddr" access="readWrite" version="1.0">
        <description>
          IP address to be assigned by the DHCP server to the DHCP client with the specified hardware address (MAC address).
          This parameter MUST have a valid value before the table entry can be enabled.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.DHCPOption.{i}." access="readWrite" numEntriesParameter="DHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object specifies the DHCP options that MUST, if enabled, be returned to clients whose DHCP requests are associated with this pool.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this DHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" version="1.0">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" version="1.0">
        <description>
          Base64 encoded option value.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}." access="readOnly" numEntriesParameter="LANEthernetInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object models an Ethernet LAN connection on a CPE device.  This object MUST be implemented for CPE that contain an Ethernet interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="NoLink" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
            <enumeration value="Disabled" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" version="1.0">
        <description>
          The name of this layer 2 interface, chosen by the vendor, e.g. "eth0" or "eth0:1".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether MAC Address Control is enabled or not on this interface.  MAC Address Control limits the clients that connect to those that match a list of allowed MAC addresses specified in {{param|InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.AllowedMACAddresses}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" version="1.0">
        <description>
          The maximum upstream and downstream bit rate available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="10" version="1.0"/>
            <enumeration value="100" version="1.0"/>
            <enumeration value="1000" version="1.0"/>
            <enumeration value="10000" version="1.0"/>
            <enumeration value="Auto" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DuplexMode" access="readWrite" version="1.0">
        <description>
          The duplex mode available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Half" version="1.0"/>
            <enumeration value="Full" version="1.0"/>
            <enumeration value="Auto" version="1.0"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for an Ethernet LAN interface on a CPE device.
        Note that these statistics refer to the link layer, not to the physical layer.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}." access="readOnly" numEntriesParameter="LANUSBInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object models a USB LAN connection on a CPE device.  This object MUST be implemented for CPE that contain a USB interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="NoLink" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
            <enumeration value="Disabled" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" version="1.0">
        <description>
          The name of this layer 2 interface, chosen by the vendor, e.g. "usb0".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether MAC Address Control is enabled or not on this interface.  MAC Address Control limits the clients that connect to those that match a list of allowed MAC addresses specified in {{param|InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.AllowedMACAddresses}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Standard" access="readOnly" version="1.0">
        <description>
          USB version supported by the device.
        </description>
        <syntax>
          <string>
            <size maxLength="6"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Type" access="readOnly" version="1.0">
        <description>
          Type of the USB interface.
        </description>
        <syntax>
          <string>
            <enumeration value="Host" version="1.0"/>
            <enumeration value="Hub" version="1.0"/>
            <enumeration value="Device" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Rate" access="readOnly" version="1.0">
        <description>
          Speed of the USB interface.
        </description>
        <syntax>
          <string>
            <enumeration value="Low" version="1.0"/>
            <enumeration value="Full" version="1.0"/>
            <enumeration value="High" version="1.0">
              <description>
                USB 2.0
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Power" access="readOnly" version="1.0">
        <description>
          Power configuration of the USB interface.
        </description>
        <syntax>
          <string>
            <enumeration value="Self" version="1.0"/>
            <enumeration value="Bus" version="1.0"/>
            <enumeration value="Unknown" version="1.0"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for a USB LAN interface on a CPE device.
        Note that these statistics refer to the link layer, not to the physical layer.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets (cells) transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets (cells) which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." access="readOnly" numEntriesParameter="LANWLANConfigurationNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object models an 802.11 LAN connection on a CPE device.  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="BSSID"/>
      </uniqueKey>
      <uniqueKey>
        <parameter ref="SSID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this interface.
          When there are multiple ''WLANConfiguration'' instances, e.g. each instance supports a different 802.11 standard or has a different security configuration, this parameter can be used to control which of the instances are currently enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
            <enumeration value="Disabled" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" version="1.0">
        <description>
          The name of this layer 2 interface, chosen by the vendor, e.g. "wlan0".
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BSSID" access="readOnly" version="1.0">
        <description>
          The MAC address of the interface.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" version="1.0">
        <description>
          The maximum upstream and downstream bit rate available to this connection in Mbps.  Either ''Auto'', or the largest of the {{param|OperationalDataTransmitRates}} values.
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Channel" access="readWrite" version="1.0">
        <description>
          The current radio channel used by the connection.  To request automatic channel selection, set {{param|AutoChannelEnable}} to {{true}}.
          Whenever {{param|AutoChannelEnable}} is {{true}}, the value of the {{param}} parameter MUST be the channel selected by the automatic channel selection procedure.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AutoChannelEnable" access="readWrite" version="1.0">
        <description>
          Enable or disable automatic channel selection.
          Set to {{false}} to disable the automatic channel selection procedure, in which case the currently selected channel remains selected.
          Set to {{true}} to enable the automatic channel selection procedure.  This procedure MUST automatically select the channel, and MAY also change it subsequently.
          {{param}} MUST automatically change to {{false}} whenever the channel is manually selected, i.e. whenever the {{param|Channel}} parameter is written.
          Whenever {{param}} is {{true}}, the value of the {{param|Channel}} parameter MUST be the channel selected by the automatic channel selection procedure.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SSID" access="readWrite" version="1.0">
        <description>
          The current service set identifier in use by the connection.  The SSID is an identifier that is attached to packets sent over the wireless LAN that functions as a "password" for joining a particular radio network (BSS).  Note: If an access point wishes to be known by more than one SSID, it MUST provide a ''WLANConfiguration'' instance for each SSID.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BeaconType" access="readWrite" version="1.0">
        <description>
          The capabilities that are currently enabled on the access point (and that are announced via beacons if {{param|BeaconAdvertisementEnabled}} is {{true}}). Write access to this parameter enables and disables such capabilities.
          An attempt to set this parameter to one of the REQUIRED (mandatory) values MAY be rejected if (and only if) the requested capability is not available on this WLANConfiguration instance but is available on another WLANConfiguration instance within this Internet Gateway Device. For example, only basic 802.11 might be supported by one virtual AP, and only WPA might be supported by another virtual AP.
          A value of {{enum|None}} means that no capabilities are currently enabled on the access point and that no stations will be able to associate with it.  {{enum}}
          {{enum|11i}} SHOULD be taken to refer to both the 802.11i specification and to the WPA2 specification (any WPA2-certified device will implement all mandatory parts of the 802.11i standard).
          The OBSOLETED values are those for Basic + WPA/WPA2  mixed modes, which are not permitted by the WPA specifications.
        </description>
        <syntax>
          <string>
            <enumeration value="None" version="1.0"/>
            <enumeration value="Basic" version="1.0"/>
            <enumeration value="WPA" version="1.0"/>
            <enumeration value="11i" optional="true" version="1.0"/>
            <enumeration value="BasicandWPA" status="obsoleted" optional="true" version="1.0"/>
            <enumeration value="Basicand11i" status="obsoleted" optional="true" version="1.0"/>
            <enumeration value="WPAand11i" optional="true" version="1.0"/>
            <enumeration value="BasicandWPAand11i" status="obsoleted" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddressControlEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether MAC Address Control is enabled or not on this interface.  MAC Address Control limits the clients that connect to those that match a list of allowed MAC addresses specified in {{param|InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.AllowedMACAddresses}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Standard" access="readOnly" version="1.0">
        <description>
          Indicates which IEEE 802.11 standard this ''WLANConfiguration'' instance is configured for.  {{enum}}
          Where each value indicates support for only the indicated standard.
          If the device is configured simultaneously for more than one standard, a separate ''WLANConfiguration'' instance MUST be used for each supported standard.
        </description>
        <syntax>
          <string>
            <enumeration value="a" version="1.0"/>
            <enumeration value="b" version="1.0"/>
            <enumeration value="g" version="1.0">
              <description>
                b and g clients supported
              </description>
            </enumeration>
            <enumeration value="g-only" version="1.0">
              <description>
                only g clients supported
              </description>
            </enumeration>
            <enumeration value="n" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPKeyIndex" access="readWrite" version="1.0">
        <description>
          The index of the default WEP key.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="4"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" version="1.0">
        <description>
          A passphrase from which the WEP keys are to be generated.
          This parameter is the same as the parameter ''InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.1.KeyPassphrase'' for the same instance of ''WLANConfiguration''.  When either parameter is changed, the value of the other is changed as well.
          If {{param}} is written, all four WEP keys are immediately generated.  The ACS SHOULD NOT set the passphrase and also set the WEP keys directly (the result of doing this is undefined).
          This MUST either be a valid key length divided by 8, in which case each byte contributes 8 bits to the key, or else MUST consist of Hex digits and be a valid key length divided by 4, in which case each byte contributes 4 bits to the key.
          Note: If a passphrase is used, all four WEP keys will be the same.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WEPEncryptionLevel" access="readOnly" version="1.0">
        <description>
          Supported key lengths.  {{enum}}
          Any additional vendor-specific values MUST start with the key length in bits.
          This parameter does not enforce a given encryption level but only indicates capabilities.  The WEP encryption level for a given key is inferred from the key length.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <string>
            <enumeration value="Disabled" version="1.0"/>
            <enumeration value="40-bit" version="1.0"/>
            <enumeration value="104-bit" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BasicEncryptionModes" access="readWrite" version="1.0">
        <description>
          Encryption modes that are available when basic 802.11 is enabled. {{enum|WEPEncryption}} implies that all wireless clients can use WEP for data encryption.  {{enum}}
          If this ''WLANConfiguration'' instance does not support basic 802.11 then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
        </description>
        <syntax>
          <string>
            <enumeration value="None" version="1.0"/>
            <enumeration value="WEPEncryption" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="BasicAuthenticationMode" access="readWrite" version="1.0">
        <description>
          Authentication modes that are available when basic 802.11 is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support basic 802.11 then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
        </description>
        <syntax>
          <string>
            <enumeration value="None" version="1.0">
              <description>
                Open authentication
              </description>
            </enumeration>
            <enumeration value="EAPAuthentication" optional="true" version="1.0"/>
            <enumeration value="SharedAuthentication" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WPAEncryptionModes" access="readWrite" version="1.0">
        <description>
          Encryption modes that are available when WPA is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support WPA then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
          The DEPRECATED values are those that combine WEP with TKIP and/or AES, which is not permitted by the WPA specifications.
        </description>
        <syntax>
          <string>
            <enumeration value="WEPEncryption" status="deprecated" version="1.0"/>
            <enumeration value="TKIPEncryption" version="1.0"/>
            <enumeration value="WEPandTKIPEncryption" status="deprecated" version="1.0"/>
            <enumeration value="AESEncryption" optional="true" version="1.0"/>
            <enumeration value="WEPandAESEncryption" status="deprecated" optional="true" version="1.0"/>
            <enumeration value="TKIPandAESEncryption" optional="true" version="1.0"/>
            <enumeration value="WEPandTKIPandAESEncryption" status="deprecated" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WPAAuthenticationMode" access="readWrite" version="1.0">
        <description>
          Authentication modes that are available when WPA is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support WPA then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
        </description>
        <syntax>
          <string>
            <enumeration value="PSKAuthentication" version="1.0"/>
            <enumeration value="EAPAuthentication" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IEEE11iEncryptionModes" access="readWrite" version="1.0">
        <description>
          Encryption modes that are available when 802.11i is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support 802.11i then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
          ''IEEE11i'' SHOULD be taken to refer to both the 802.11i specification and to the WPA2 specification (any WPA2-certified device will implement all mandatory parts of the 802.11i standard).
          The DEPRECATED values are those that combine WEP with TKIP and/or AES, which is not permitted by the WPA2 specifications.
        </description>
        <syntax>
          <string>
            <enumeration value="WEPEncryption" status="deprecated" version="1.0"/>
            <enumeration value="TKIPEncryption" optional="true" version="1.0"/>
            <enumeration value="WEPandTKIPEncryption" status="deprecated" version="1.0"/>
            <enumeration value="AESEncryption" version="1.0"/>
            <enumeration value="WEPandAESEncryption" status="deprecated" optional="true" version="1.0"/>
            <enumeration value="TKIPandAESEncryption" optional="true" version="1.0"/>
            <enumeration value="WEPandTKIPandAESEncryption" status="deprecated" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="IEEE11iAuthenticationMode" access="readWrite" version="1.0">
        <description>
          Authentication modes that are available when 802.11i is enabled.  {{enum}}
          If this ''WLANConfiguration'' instance does not support 802.11i then this parameter MUST NOT be present in this instance of the ''WLANConfiguration'' object.
          ''IEEE11i'' SHOULD be taken to refer to both the 802.11i specification and to the WPA2 specification (any WPA2-certified device will implement all mandatory parts of the 802.11i standard).
        </description>
        <syntax>
          <string>
            <enumeration value="PSKAuthentication" version="1.0"/>
            <enumeration value="EAPAuthentication" optional="true" version="1.0"/>
            <enumeration value="EAPandPSKAuthentication" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleChannels" access="readOnly" version="1.0">
        <description>
          Possible radio channels for the wireless standard (a, b or g) and the regulatory domain.
          Ranges in the form "n-m" are permitted.
          For example, for 802.11b and North America, would be "1-11".
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="BasicDataTransmitRates" access="readWrite" version="1.0">
        <description>
          Maximum access point data transmit rates in Mbps for unicast, multicast and broadcast frames.
          For example, a value of "1,2", indicates that unicast, multicast and broadcast frames can be transmitted at 1 Mbps and 2 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="OperationalDataTransmitRates" access="readWrite" version="1.0">
        <description>
          Maximum access point data transmit rates in Mbps for unicast frames (a superset of {{param|BasicDataTransmitRates}}).
          Given the value of {{param|BasicDataTransmitRates}} from the example above, {{param}} might be "1,2,5.5,11", indicating that unicast frames can additionally be transmitted at 5.5 Mbps and 11 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="PossibleDataTransmitRates" access="readOnly" version="1.0">
        <description>
          Data transmit rates for unicast frames at which the access point will permit a station to connect (a subset of {{param|OperationalDataTransmitRates}}).
          Given the values of {{param|BasicDataTransmitRates}} and {{param|OperationalDataTransmitRates}} from the examples above, {{param}} might be "1,2,5.5", indicating that the AP will only permit connections at 1 Mbps, 2 Mbps and 5.5 Mbps, even though it could theoretically accept connections at 11 Mbps.
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="InsecureOOBAccessEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether insecure write access via mechanisms other than the CPE WAN Management Protocol is permitted to the parameters in this object.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="BeaconAdvertisementEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether or not the access point is sending out beacons.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SSIDAdvertisementEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether or not beacons include the SSID name.
          This parameter has an effect only if {{param|BeaconAdvertisementEnabled}} is {{true}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="RadioEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether or not the access point radio is enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransmitPowerSupported" access="readOnly" version="1.0">
        <description>
          Supported transmit power levels as percentages of full power.  For example, "0,25,50,75,100".
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TransmitPower" access="readWrite" version="1.0">
        <description>
          Indicates the current transmit power level as a percentage of full power.  The value MUST be one of the values reported by the {{param|TransmitPowerSupported}} parameter.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="100"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AutoRateFallBackEnabled" access="readWrite" version="1.0">
        <description>
          Indicates whether the access point can automatically reduce the data rate in the event of undue noise or contention.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LocationDescription" access="readWrite" version="1.0">
        <description>
          An XML description of information used to identify the access point by name and physical location.  The CPE is not expected to parse this string, but simply to treat it as an opaque string.  {{empty}} indicates no location has been set.
        </description>
        <syntax>
          <string>
            <size maxLength="4096"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RegulatoryDomain" access="readWrite" version="1.0">
        <description>
          802.11d Regulatory Domain String.  First two octets are ISO/IEC 3166-1 two-character country code.  The third octet is either " " (all environments), "O" (outside) or "I" (inside).
        </description>
        <syntax>
          <string>
            <size maxLength="3"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TotalPSKFailures" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The number of times pre-shared key (PSK) authentication has failed (relevant only to WPA and 802.11i).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalIntegrityFailures" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The number of times the MICHAEL integrity check has failed (relevant only to WPA and 802.11i)
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ChannelsInUse" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Channels that the access point determines to be currently in use (including any that it is using itself).
          Ranges in the form "n-m" are permitted.
        </description>
        <syntax>
          <list>
            <size maxLength="1024"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DeviceOperationMode" access="readWrite" version="1.0">
        <description>
          The current access-point operating mode.  The OPTIONAL modes permit the AP to be configured as a wireless bridge (to bridge two wired networks), repeater (a bridge that also serves wireless clients), or wireless station. Ad hoc stations are not supported.
        </description>
        <syntax>
          <string>
            <enumeration value="InfrastructureAccessPoint" version="1.0"/>
            <enumeration value="WirelessBridge" optional="true" version="1.0"/>
            <enumeration value="WirelessRepeater" optional="true" version="1.0"/>
            <enumeration value="WirelessStation" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DistanceFromRoot" access="readWrite" version="1.0">
        <description>
          The number of hops from the root access point to the wireless repeater or bridge.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PeerBSSID" access="readWrite" version="1.0">
        <description>
          The MAC address of the peer in wireless repeater or bridge mode.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="AuthenticationServiceMode" access="readWrite" version="1.0">
        <description>
          Indicates whether another service is involved in client authentication ({{enum|LinkAuthentication}} for a co-located authentication server; {{enum|RadiusClient}} for an external RADIUS server).
        </description>
        <syntax>
          <string>
            <enumeration value="None" version="1.0"/>
            <enumeration value="LinkAuthentication" optional="true" version="1.0"/>
            <enumeration value="RadiusClient" optional="true" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WMMSupported" access="readOnly" version="1.0">
        <description>
          Indicates whether this interface supports WiFi Multimedia (WMM) Access Categories (AC).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDSupported" access="readOnly" version="1.0">
        <description>
          Indicates whether this interface supports WMM Unscheduled Automatic Power Save Delivery (U-APSD).
          Note: U-APSD support implies WMM support.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WMMEnable" access="readWrite" version="1.0">
        <description>
          Whether WMM support is currently enabled.  When enabled, this is indicated in beacon frames
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UAPSDEnable" access="readWrite" version="1.0">
        <description>
          Whether U-APSD support is currently enabled.  When enabled, this is indicated in beacon frames.
          Note: U-APSD can only be enabled if WMM is also enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalAssociations" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The number of devices currently associated with the access point.  This corresponds to the number of entries in the AssociatedDevice table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}." access="readOnly" numEntriesParameter="TotalAssociations" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        A table of the devices currently associated with the access point.  The size of this table is given by {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.TotalAssociations}}.  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <uniqueKey>
        <parameter ref="AssociatedDeviceMACAddress"/>
      </uniqueKey>
      <parameter name="AssociatedDeviceMACAddress" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The MAC address of an associated device.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceIPAddress" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The IP address or DNS name of an associated device.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceAuthenticationState" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Whether an associated device has authenticated ({{true}}) or not ({{false}}).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="LastRequestedUnicastCipher" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The unicast cipher that was most recently used for a station with a specified MAC address (802.11i only).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastRequestedMulticastCipher" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The multicast cipher that was most recently used for a station with a specified MAC address (802.11i only).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastPMKId" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The pairwise master key (PMK) that was most recently used for a station with a specified MAC address (802.11i only).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastDataTransmitRate" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The data transmit rate that was most recently used for a station with a specified MAC address.
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}." access="readOnly" minEntries="4" maxEntries="4" version="1.0">
      <description>
        This is a table of WEP keys.  The size of this table is fixed with exactly 4 entries (with instance numbers 1 through 4).  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <parameter name="WEPKey" access="readWrite" version="1.0">
        <description>
          A WEP key expressed as a hexadecimal string.
          The WEP encryption level for a given key is inferred from the key length, e.g. 10 characters for 40-bit encryption, or 26 characters for 104-bit encryption (keys do not all have to be of the same length, although they will be if the CPE uses {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.KeyPassphrase}} to generate them).
          If {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.KeyPassphrase}} is written, all four WEP keys are immediately generated.  The ACS SHOULD NOT set the passphrase and also set the WEP keys directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="128"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}." access="readOnly" minEntries="10" maxEntries="10" version="1.0">
      <description>
        This is a table of preshared keys.  The size of this table is fixed with exactly 10 entries (with instance numbers 1 through 10).  This object MUST be implemented for CPE that contain an 802.11 interface on the LAN side.
      </description>
      <parameter name="PreSharedKey" access="readWrite" version="1.0">
        <description>
          A literal WPA PSK expressed as a hexadecimal string.
          The first table entry contains the default {{param}} (''InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.1.PreSharedKey'').
          If {{param|KeyPassphrase}} is written, the PSK is immediately generated.  The ACS SHOULD NOT set the passphrase and also set the PSK directly (the result of doing this is undefined).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="KeyPassphrase" access="readWrite" version="1.0">
        <description>
          A passphrase from which the PSK is to be generated.
          The first table entry is the same as the parameter {{param|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.KeyPassphrase}} for the same instance of WLANConfiguration.  When either parameter is changed, the value of the other is changed as well.
          If {{param}} is written, the PSK is immediately generated.  The ACS SHOULD NOT set the passphrase and also set the PSK directly (the result of doing this is undefined).
          The key is generated as specified by WPA, which uses PBKDF2 from PKCS #5: Password-based Cryptography Specification Version 2.0 (RFC 2898 {{bibref|RFC2898}}).
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="63"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AssociatedDeviceMACAddress" access="readWrite" version="1.0">
        <description>
          The MAC address associated with a preshared key, or {{empty}} if no MAC address is associated with the key.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.APWMMParameter.{i}." access="readOnly" minEntries="4" maxEntries="4" version="1.0">
      <description>
        This is a table of WMM parameters for traffic that originates at the wireless access point, i.e. for outgoing traffic.  The size of this table is fixed, with 4 entries (with instance numbers 1 through 4).  Instance numbers MUST be assigned as follows:
        # BE AC (Best Effort)
        # BK AC (Background)
        # VI AC (Video)
        # VO AC (Voice)
      </description>
      <parameter name="AIFSN" access="readWrite" version="1.0">
        <description>
          Arbitration Inter Frame Spacing (Number).  This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" version="1.0">
        <description>
          Exponent of Contention Window (Minimum). This encodes the Values of CWMin as an exponent: CWMin = 2^ECWMin - 1.
          For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" version="1.0">
        <description>
          Exponent of Contention Window (Maximum). This encodes the Values of CWMax as an exponent: CWMax = 2^ECWMax - 1.
          For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TXOP" access="readWrite" version="1.0">
        <description>
          Transmit Opportunity, in multiples of 32 microseconds.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" version="1.0">
        <description>
          Ack Policy, where {{false}}=''Do Not Acknowledge'' and {{true}}=''Acknowledge''.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.STAWMMParameter.{i}." access="readOnly" minEntries="4" maxEntries="4" version="1.0">
      <description>
        This is a table of WMM parameters for traffic that originates at the wireless station, i.e. for incoming traffic.  The size of this table is fixed, with 4 entries (with instance numbers 1 through 4).  Instance numbers MUST be assigned as follows:
        # BE AC (Best Effort)
        # BK AC (Background)
        # VI AC (Video)
        # VO AC (Voice)
      </description>
      <parameter name="AIFSN" access="readWrite" version="1.0">
        <description>
          Arbitration Inter Frame Spacing (Number).  This is the number of time slots in the arbitration interframe space.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="2" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMin" access="readWrite" version="1.0">
        <description>
          Exponent of Contention Window (Minimum). This encodes the Values of CWMin as an exponent: CWMin = 2^ECWMin - 1.
          For example, if ECWMin is 8, then CWMin is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="ECWMax" access="readWrite" version="1.0">
        <description>
          Exponent of Contention Window (Maximum). This encodes the Values of CWMax as an exponent: CWMax = 2^ECWMax - 1.
          For example, if ECWMax is 8, then CWMax is 2^8 - 1, or 255,
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="15"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="TXOP" access="readWrite" version="1.0">
        <description>
          Transmit Opportunity, in multiples of 32 microseconds.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="255"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="AckPolicy" access="readWrite" version="1.0">
        <description>
          Ack Policy, where {{false}}=''Do Not Acknowledge'' and {{true}}=''Acknowledge''.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for an 802.11 LAN interface on a CPE device.
        Note that these statistics refer to the link layer, not to the physical layer.
        Note that this object does not include the total byte and packet statistics, which are, for historical reasons, in the parent object.
      </description>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains parameters related to WPS (Wi-Fi Protected Setup) {{bibref|WPSv1.0}} that apply to a CPE acting as an Access Point.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables WPS functionality for this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="DeviceName" access="readOnly" version="1.0">
        <description>
          User-friendly description of the device.
          This parameter corresponds directly to the "Device Name" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DevicePassword" access="readWrite" version="1.0">
        <description>
          Represents the DevicePassword used (commonly known as PIN).
          This parameter corresponds directly to the "Device Password" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax hidden="true">
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" version="1.0">
        <description>
          UUID of the device. This is represented as specified in RFC 4122 {{bibref|RFC4122}} but omitting the leading "urn:uuid:", e.g. "f81d4fae-7dec-11d0-a765-00a0c91e6bf6".
          This parameter corresponds directly to the "UUID-E" (enrollee) and "UUID-R" (registrar) attributes of the WPS specification {{bibref|WPSv1.0}}.  Note that if the Access Point can act both as an enrollee and as a registrar then UUID-E and UUID-R will be the same as each other.
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
            <pattern value="[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Version" access="readOnly" version="1.0">
        <description>
          The Wi-Fi Protected Setup version supported by the device.
          This parameter corresponds directly to the "Version" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsSupported" access="readOnly" version="1.0">
        <description>
          WPS configuration methods supported by the device.  {{enum}}
          This parameter corresponds directly to the "Config Methods" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="USBFlashDrive" version="1.0"/>
            <enumeration value="Ethernet" version="1.0"/>
            <enumeration value="Label" version="1.0"/>
            <enumeration value="Display" version="1.0"/>
            <enumeration value="ExternalNFCToken" version="1.0"/>
            <enumeration value="IntegratedNFCToken" version="1.0"/>
            <enumeration value="NFCInterface" version="1.0"/>
            <enumeration value="PushButton" version="1.0"/>
            <enumeration value="Keypad" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConfigMethodsEnabled" access="readWrite" version="1.0">
        <description>
          WPS configuration methods enabled on the device.  This parameter corresponds directly to the "Permitted Config Methods" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumerationRef targetParam="ConfigMethodsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SetupLockedState" access="readOnly" version="1.0">
        <description>
          Indicates if the AP Setup mode is enabled for configuration of the AP through an external registrar. The AP Setup mode can be disabled by the user, by the remote management or in case of a brute force attack against the AP's PIN (Wrong PIN provided to AP multiple times).  {{enum}}
          This parameter corresponds directly to the "AP Setup Locked" attribute of the WPS specification {{bibref|WPSv1.0}}.  The factory default setting is {{enum|Unlocked}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Unlocked" version="1.0"/>
            <enumeration value="LockedByLocalManagement" version="1.0"/>
            <enumeration value="LockedByRemoteManagement" version="1.0"/>
            <enumeration value="PINRetryLimitReached" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SetupLock" access="readWrite" version="1.0">
        <description>
          When set to {{true}}, the Access Point will refuse to accept new external registrars; already established registrars will continue to be able to add new enrollees (the {{param|SetupLockedState}} becomes {{enum|LockedByRemoteManagement|SetupLockedState}}).
          When set to {{false}}, the Access Point is enabled for configuration through an external registrar (the {{param|SetupLockedState}} becomes {{enum|Unlocked|SetupLockedState}}).
          The factory default setting is {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ConfigurationState" access="readOnly" version="1.0">
        <description>
          Description of the WPS status on the Wireless Access Point side.  {{enum}}
          This parameter corresponds directly to the "Wi-Fi Protected Setup State" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Not configured" version="1.0">
              <description>
                WLAN interface is unconfigured: out-of-the box configuration
              </description>
            </enumeration>
            <enumeration value="Configured" version="1.0">
              <description>
                WLAN interface is configured
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LastConfigurationError" access="readOnly" version="1.0">
        <description>
          Shows the result of the last external registrar attempt to configure the Access Point.  {{enum}}
          If no external registrar has yet attempted to configure the Access Point, this parameter MUST have the value {{enum|NoError}}.  The value of this parameter MUST persist across CPE reboots.
          This parameter corresponds directly to the "Configuration Error" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <enumeration value="NoError" version="1.0"/>
            <enumeration value="DecryptionCRCFailure" version="1.0"/>
            <enumeration value="SignalTooWeak" version="1.0"/>
            <enumeration value="CouldntConnectToRegistrar" version="1.0"/>
            <enumeration value="RogueActivitySuspected" version="1.0"/>
            <enumeration value="DeviceBusy" version="1.0"/>
            <enumeration value="SetupLocked" version="1.0"/>
            <enumeration value="MessageTimeout" version="1.0"/>
            <enumeration value="RegistrationSessionTimeout" version="1.0"/>
            <enumeration value="DevicePasswordAuthFailure" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="RegistrarNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the Registrar table: number of Registrars that currently have an association with the Access Point.
          This parameter corresponds directly to the "Registrar Current" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RegistrarEstablished" access="readOnly" version="1.0">
        <description>
          {{true}} if the Access Point has ever previously created an association with a Registrar.
          This parameter corresponds directly to the "Registrar Established" attribute of the WPS specification {{bibref|WPSv1.0}}.  The factory default setting is {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS.Registrar.{i}." access="readOnly" numEntriesParameter="RegistrarNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This table lists the Registrars associated with the Access Point.
        This table MUST persist across CPE reboots.  The registrar UUID is the unique key.
        This object corresponds directly to the "Registrar List" attribute of the WPS specification {{bibref|WPSv1.0}}.
      </description>
      <uniqueKey>
        <parameter ref="UUID"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          If {{true}}, the registrar can be used by the Access Point for WPS procedures.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="UUID" access="readOnly" version="1.0">
        <description>
          UUID of the registrar. This is represented as specified in RFC 4122 {{bibref|RFC4122}} but omitting the leading "urn:uuid:", e.g. ''f81d4fae-7dec-11d0-a765-00a0c91e6bf6''.
          This parameter corresponds directly to the "UUID-R" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <size maxLength="36"/>
            <pattern value="[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DeviceName" access="readOnly" version="1.0">
        <description>
          Device Name of the registrar.
          This parameter corresponds directly to the "Device Name" attribute of the WPS specification {{bibref|WPSv1.0}}.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.Hosts." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object provides information about each of the hosts on the LAN, including those whose IP address was allocated by the CPE using DHCP as well as hosts with statically allocated IP addresses.
      </description>
      <parameter name="HostNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of entries in the {{object|Host}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}." access="readOnly" numEntriesParameter="HostNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Host table.
      </description>
      <uniqueKey>
        <parameter ref="MACAddress"/>
      </uniqueKey>
      <parameter name="IPAddress" access="readOnly" version="1.0">
        <description>
          Current IP Address of the host.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="AddressSource" access="readOnly" version="1.0">
        <description>
          Indicates whether the IP address of the host was allocated by the CPE using DHCP, was assigned to the host statically, or was assigned using automatic IP address allocation.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" version="1.0"/>
            <enumeration value="Static" version="1.0"/>
            <enumeration value="AutoIP" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LeaseTimeRemaining" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          DHCP lease time remaining in seconds.  A value of -1 indicates an infinite lease.  The value MUST be 0 (zero) if the {{param|AddressSource}} is not {{enum|DHCP|AddressSource}}.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" version="1.0">
        <description>
          MAC address of the host.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="Layer2Interface" access="readOnly" version="1.0">
        <description>
          This parameter is the full hierarchical parameter name of a particular ''LAN**InterfaceConfig'' object or a ''WLANConfiguration'' object.  For example: ''InternetGatewayDevice.LANDevice.1.LANEthernetInterfaceConfig.2''.
          In the case of an embedded Ethernet switch, the {{param}} parameter references the ''LANEthernetInterfaceConfig'' object that corresponds to the switch port the device is connected to (a ''LANEthernetInterfaceConfig'' instance for each switch port).
          In the case of an embedded WLAN access point, the {{param}} parameter references the ''WLANConfiguration'' object that corresponds to the SSID the device is connected to (if the access point supports multiple SSIDs, then each SSID is a separate instance).
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="VendorClassID" access="readOnly" version="1.0">
        <description>
          Vendor Class Identifier DHCP option (Option 60) of the host.
          It MAY be defined when ''AddressSource'' is ''DHCP''. {{empty}} indicates this option is not used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ClientID" access="readOnly" version="1.0">
        <description>
          Client Identifier DHCP option (Option 61) for the specific IP connection of the client.  The option value is binary, so an exact match is REQUIRED.
          It MAY be defined when ''AddressSource'' is ''DHCP''. {{empty}} indicates this option is not used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UserClassID" access="readOnly" version="1.0">
        <description>
          User Class Identifier DHCP option (Option 77) of the host.
          It MAY be defined when ''AddressSource'' is ''DHCP''. {{empty}} indicates this option is not used.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="HostName" access="readOnly" version="1.0">
        <description>
          The device's host name or {{empty}} if unknown.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterfaceType" access="readOnly" version="1.0">
        <description>
          Type of physical interface through which this host is connected to the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="Ethernet" version="1.0"/>
            <enumeration value="USB" version="1.0"/>
            <enumeration value="802.11" version="1.0"/>
            <enumeration value="HomePNA" version="1.0"/>
            <enumeration value="HomePlug" version="1.0"/>
            <enumeration value="MoCA" version="1.0"/>
            <enumeration value="Other" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Active" access="readOnly" version="1.0">
        <description>
          Whether or not the host is currently present on the LAN.  The method of presence detection is a local matter to the CPE.
          The ability to list inactive hosts is OPTIONAL.  If the CPE includes inactive hosts in this table, this variable MUST be set to {{false}} for each inactive host.  The length of time an inactive host remains listed in this table is a local matter to the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANInterfaces." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains LAN-side layer 1/2 interfaces that are not currently connected to the Gateway's IP router and which therefore do not currently reside within a ''LANDevice'' instance.
      </description>
      <parameter name="LANEthernetInterfaceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|LANEthernetInterfaceConfig}} in this object.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LANUSBInterfaceNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|LANUSBInterfaceConfig}} in this object.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LANWLANConfigurationNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|WLANConfiguration}} in this object object.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.LANInterfaces.LANEthernetInterfaceConfig.{i}." access="readOnly" numEntriesParameter="LANEthernetInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object models an Ethernet LAN connection on a CPE device.
        The object definition is identical to that for {{object|InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}}}.
      </description>
    </object>
    <object name="InternetGatewayDevice.LANInterfaces.LANUSBInterfaceConfig.{i}." access="readOnly" numEntriesParameter="LANUSBInterfaceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object models a USB LAN connection on a CPE device.
        The object definition is identical to that for {{object|InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}}}.
      </description>
    </object>
    <object name="InternetGatewayDevice.LANInterfaces.WLANConfiguration.{i}." access="readOnly" numEntriesParameter="LANWLANConfigurationNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object models an 802.11 LAN connection on a CPE device.
        The object definition is identical to that for {{object|InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}}}.
      </description>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}." access="readOnly" numEntriesParameter="WANDeviceNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Each instance contains all objects associated with a particular physical WAN interface.
      </description>
      <parameter name="WANConnectionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|WANConnectionDevice}} in this ''WANDevice''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object models WAN interface properties common across all connection instances.
      </description>
      <parameter name="EnabledForInternet" access="readWrite" version="1.0">
        <description>
          Used to enable or disable access to and from the Internet across all connection instances.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="WANAccessType" access="readOnly" version="1.0">
        <description>
          Specifies the WAN access (modem) type.
        </description>
        <syntax>
          <string>
            <enumeration value="DSL" version="1.0"/>
            <enumeration value="Ethernet" version="1.0"/>
            <enumeration value="POTS" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Layer1UpstreamMaxBitRate" access="readOnly" version="1.0">
        <description>
          Specifies the maximum upstream theoretical bit rate for the WAN device in bits per second.  This describes the maximum possible rate given the type of interface assuming the best-case operating environment, regardless of the current operating rate.
          For example, if the physical interface is 100BaseT, this value would be 100000000, regardless of the current operating rate.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Layer1DownstreamMaxBitRate" access="readOnly" version="1.0">
        <description>
          Specifies the maximum downstream theoretical bit rate for the WAN device in bits per second.  This describes the maximum possible rate given the type of interface assuming the best-case operating environment, regardless of the current operating rate.
          For example, if the physical interface is 100BaseT, this value would be 100000000, regardless of the current operating rate.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PhysicalLinkStatus" access="readOnly" version="1.0">
        <description>
          Indicates the state of the physical connection (link) from WANDevice to a connected entity.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Down" version="1.0"/>
            <enumeration value="Initializing" version="1.0"/>
            <enumeration value="Unavailable" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WANAccessProvider" access="readOnly" version="1.0">
        <description>
          Name of the Service Provider providing link connectivity on the WAN.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="TotalBytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The cumulative counter for total number of bytes sent upstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalBytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The cumulative counter for total number of bytes received downstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The cumulative counter for total number of packets (IP or PPP) sent upstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The cumulative counter for total number of packets (IP or PPP) received downstream across all connection service instances on the WAN device.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MaximumActiveConnections" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the maximum number of active connections the CPE can simultaneously support.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="NumberOfActiveConnections" access="readOnly" version="1.0">
        <description>
          Number of WAN connection service instances currently active on this WAN interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig.Connection.{i}." access="readOnly" numEntriesParameter="NumberOfActiveConnections" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Active connection table.
      </description>
      <uniqueKey>
        <parameter ref="ActiveConnectionServiceID"/>
      </uniqueKey>
      <parameter name="ActiveConnectionDeviceContainer" access="readOnly" version="1.0">
        <description>
          Specifies a WAN connection device object associated with this connection instance.  The content is the full hierarchical parameter name of the WAN connection device.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2''.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ActiveConnectionServiceID" access="readOnly" version="1.0">
        <description>
          Specifies a WAN connection object associated with this connection instance.  The content is the full hierarchical parameter name of the layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." access="readOnly" minEntries="0" maxEntries="1" version="1.0">
      <description>
        This object models physical layer properties specific to a single physical connection of a DSL modem used for Internet access on a CPE.  This object is required for a CPE with a DSL modem WAN interface, and is exclusive of any other ''WAN*InterfaceConfig'' object within a given ''WANDevice'' instance.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the link.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Status of the DSL physical link.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Initializing" version="1.0"/>
            <enumeration value="EstablishingLink" version="1.0"/>
            <enumeration value="NoSignal" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
            <enumeration value="Disabled" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationSupported" access="readOnly" version="1.0">
        <description>
          Indicates which link encapsulation standards and recommendations are supported by the B-NT.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="G.992.3_Annex_K_ATM" version="1.0"/>
            <enumeration value="G.992.3_Annex_K_PTM" version="1.0"/>
            <enumeration value="G.993.2_Annex_K_ATM" version="1.0"/>
            <enumeration value="G.993.2_Annex_K_PTM" version="1.0"/>
            <enumeration value="G.994.1" version="1.0">
              <description>
                Auto
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationRequested" access="readWrite" version="1.0">
        <description>
          Indicates the link encapsulation standard requested by the B-NT.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="LinkEncapsulationSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkEncapsulationUsed" access="readOnly" version="1.0">
        <description>
          Indicates the link encapsulation standard that the B-NT is using for the connection.  {{enum}}
          When the standard identifies ATM encapsulation then the {{object|InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig}} object MUST be used.
          When the standard identifies PTM encapsulation then the {{object|InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig}} object MUST be used.
        </description>
        <syntax>
          <string>
            <enumeration value="G.992.3_Annex_K_ATM" version="1.0"/>
            <enumeration value="G.992.3_Annex_K_PTM" version="1.0"/>
            <enumeration value="G.993.2_Annex_K_ATM" version="1.0"/>
            <enumeration value="G.993.2_Annex_K_PTM" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ModulationType" access="readOnly" status="deprecated" version="1.0">
        <description>
          Indicates the type of modulation used on the connection.  {{enum}}
          This parameter, which was inherited from WANDSLLinkConfig, is DEPRECATED because it is in general not clear which standards correspond to which of the the above enumerated values.
          It is RECOMMENDED that the {{param|StandardUsed}} parameter be used to indicate which standard is in use.
        </description>
        <syntax>
          <string>
            <enumeration value="ADSL_G.dmt" version="1.0"/>
            <enumeration value="ADSL_G.lite" version="1.0"/>
            <enumeration value="ADSL_G.dmt.bis" version="1.0"/>
            <enumeration value="ADSL_re-adsl" version="1.0"/>
            <enumeration value="ADSL_2plus" version="1.0"/>
            <enumeration value="ADLS_four" version="1.0"/>
            <enumeration value="ADSL_ANSI_T1.413" version="1.0"/>
            <enumeration value="G.shdsl" version="1.0"/>
            <enumeration value="IDSL" version="1.0"/>
            <enumeration value="HDSL" version="1.0"/>
            <enumeration value="SDSL" version="1.0"/>
            <enumeration value="VDSL" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StandardsSupported" access="readOnly" version="1.0">
        <description>
          Indicates which DSL standards and recommendations are supported by the B-NT.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="G.992.1_Annex_A" version="1.0"/>
            <enumeration value="G.992.1_Annex_B" version="1.0"/>
            <enumeration value="G.992.1_Annex_C" version="1.0"/>
            <enumeration value="T1.413" version="1.0"/>
            <enumeration value="T1.413i2" version="1.0"/>
            <enumeration value="ETSI_101_388" version="1.0"/>
            <enumeration value="G.992.2" version="1.0"/>
            <enumeration value="G.992.3_Annex_A" version="1.0"/>
            <enumeration value="G.992.3_Annex_B" version="1.0"/>
            <enumeration value="G.992.3_Annex_C" version="1.0"/>
            <enumeration value="G.992.3_Annex_I" version="1.0"/>
            <enumeration value="G.992.3_Annex_J" version="1.0"/>
            <enumeration value="G.992.3_Annex_L" version="1.0"/>
            <enumeration value="G.992.3_Annex_M" version="1.0"/>
            <enumeration value="G.992.4" version="1.0"/>
            <enumeration value="G.992.5_Annex_A" version="1.0"/>
            <enumeration value="G.992.5_Annex_B" version="1.0"/>
            <enumeration value="G.992.5_Annex_C" version="1.0"/>
            <enumeration value="G.992.5_Annex_I" version="1.0"/>
            <enumeration value="G.992.5_Annex_J" version="1.0"/>
            <enumeration value="G.992.5_Annex_M" version="1.0"/>
            <enumeration value="G.993.1" version="1.0"/>
            <enumeration value="G.993.1_Annex_A" version="1.0"/>
            <enumeration value="G.993.2_Annex_A" version="1.0"/>
            <enumeration value="G.993.2_Annex_B" version="1.0"/>
            <enumeration value="G.993.2_Annex_C" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="StandardUsed" access="readOnly" version="1.0">
        <description>
          Indicates the standard that the B-NT is using for the connection.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="StandardsSupported"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LineEncoding" access="readOnly" version="1.0">
        <description>
          The line encoding method used in establishing the Layer 1 DSL connection between the CPE and the DSLAM.  Note: Generally speaking, this variable does not change after provisioning.
        </description>
        <syntax>
          <string>
            <enumeration value="DMT" version="1.0"/>
            <enumeration value="CAP" version="1.0"/>
            <enumeration value="2B1Q" version="1.0"/>
            <enumeration value="43BT" version="1.0"/>
            <enumeration value="PAM" version="1.0"/>
            <enumeration value="QAM" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="AllowedProfiles" access="readOnly" version="1.0">
        <description>
          Indicates which VDSL2 profiles are allowed on the line.  {{enum}}
          Note:  In G.997.1, this parameter is called PROFILES.  See ITU-T Recommendation G.997.1.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be {{empty}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="8a" version="1.0"/>
            <enumeration value="8b" version="1.0"/>
            <enumeration value="8c" version="1.0"/>
            <enumeration value="8d" version="1.0"/>
            <enumeration value="12a" version="1.0"/>
            <enumeration value="12b" version="1.0"/>
            <enumeration value="17a" version="1.0"/>
            <enumeration value="17b" version="1.0"/>
            <enumeration value="30a" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CurrentProfile" access="readOnly" version="1.0">
        <description>
          Indicates which VDSL2 profile is currently in use on the line.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be {{empty}}.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="AllowedProfiles" nullValue=""/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PowerManagementState" access="readOnly" version="1.0">
        <description>
          The power management state of the line.
        </description>
        <syntax>
          <string>
            <enumeration value="L0" version="1.0"/>
            <enumeration value="L1" version="1.0"/>
            <enumeration value="L3" version="1.0"/>
            <enumeration value="L4" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="SuccessFailureCause" access="readOnly" version="1.0">
        <description>
          The success failure cause of the initialization. An enumeration of the following integer values:
          * 0: Successful
          * 1: Configuration error.  This error occurs with inconsistencies in configuration parameters, e.g. when the line is initialized in an xDSL Transmission system where an xTU does not support the configured Maximum Delay or the configured Minimum or Maximum Data Rate for one or more bearer channels.
          * 2: Configuration not feasible on the line.  This error occurs if the Minimum Data Rate cannot be reached on the line with the Minimum Noise Margin, Maximum PSD level, Maximum Delay and Maximum Bit Error Ratio for one or more bearer channels.
          * 3: Communication problem.  This error occurs, for example, due to corrupted messages or bad syntax messages or if no common mode can be selected in the G.994.1 handshaking procedure or due to a timeout..
          * 4: No peer xTU detected.  This error occurs if the peer xTU is not powered or not connected or if the line is too long to allow detection of a peer xTU.
          * 5: Any other or unknown Initialization Failure cause.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="5"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="LastStateTransmittedDownstream" access="readOnly" version="1.0">
        <description>
          This parameter represents the last successful transmitted initialization state in the downstream direction in the last full initialization performed on the line.  Initialization states are defined in the individual xDSL Recommendations and are counted from 0 (if G.994.1 is used) or 1 (if G.994.1 is not used) up to Showtime.  This parameter needs to be interpreted along with the xDSL Transmission System.
          This parameter is available only when, after a failed full initialization, the line diagnostics procedures are activated on the line.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastStateTransmittedUpstream" access="readOnly" version="1.0">
        <description>
          This parameter represents the last successful transmitted initialization state in the upstream direction in the last full initialization performed on the line.  Initialization states are defined in the individual xDSL Recommendations and are counted from 0 (if G.994.1 is used) or 1 (if G.994.1 is not used) up to Showtime.  This parameter needs to be interpreted along with the xDSL Transmission System.
          This parameter is available only when, after a failed full initialization, the line diagnostics procedures are activated on the line.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UPBOKLE" access="readOnly" version="1.0">
        <description>
          This parameter contains the estimated electrical loop length expressed in dB at 1MHz, kle (see O-UPDATE in section 12.2.4.2.1.2/G.993.2).  The value SHALL be coded as an unsigned 16 bit number in the range 0 (coded as 0) to 128 dB (coded as 1280) in steps of 0.1 dB.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="1280"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MREFPSDds" access="readOnly" version="1.0">
        <description>
          This parameter SHALL contain the set of breakpoints exchanged in the MREFPSDds fields of the O-PRM message of G.993.2. Base64 encoded of the binary representation defined in Table 12-19/G.993.2 (maximum length is 145 octets, which requires 196 bytes for Base64 encoding).
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="145"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="MREFPSDus" access="readOnly" version="1.0">
        <description>
          This parameter SHALL contain the set of breakpoints exchanged in the MREFPSDus fields of the R-PRM message of G.993.2. Base64 encoded of the binary representation defined in Table 12-19/G.993.2 (maximum length is 145 octets, which requires 196 bytes for Base64 encoding).
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="145"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="LIMITMASK" access="readOnly" version="1.0">
        <description>
          Indicates the enabled VDSL2 Limit PSD mask of the selected PSD mask class.  Bit mask as specified in ITU-T Recommendation G.997.1.
          Note:  For a VDSL2-capable multimode device operating in a mode other than VDSL2, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="US0MASK" access="readOnly" version="1.0">
        <description>
          Indicates the allowed VDSL2 US0 PSD masks for Annex A operation.  Bit mask as specified in see ITU-T Recommendation G.997.1.
          Note:  For a VDSL2-capable multimode device operating in a mode other than VDSL2, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DataPath" access="readOnly" version="1.0">
        <description>
          Indicates whether the data path is fast (lower latency) or interleaved (lower error rate).  {{enum}}
          Note1:  This parameter is only applicable to G.992.1.
          Note2:  For an ADSL1-capable multimode device operating in a mode other than ADSL1, the value of this parameter SHOULD be set to {{enum|None}}.
        </description>
        <syntax>
          <string>
            <enumeration value="Interleaved" version="1.0"/>
            <enumeration value="Fast" version="1.0"/>
            <enumeration value="None" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InterleaveDepth" access="readOnly" version="1.0">
        <description>
          ADSL1 Interleaved depth.  This variable is only applicable to ADSL1 and only if {{param|DataPath}} = {{enum|Interleaved|DataPath}}.  Otherwise, the value of this parameter MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LPATH" access="readOnly" version="1.0">
        <description>
          Reports the index of the latency path supporting the bearer channel.  For single-latency connections, LPATH = 0.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="INTLVDEPTH" access="readOnly" version="1.0">
        <description>
          Reports the interleaver depth D for the latency path indicated in LPATH.
          Note:  See ITU-T Recommendation G.997.1.  For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="INTLVBLOCK" access="readOnly" version="1.0">
        <description>
          Reports the interleaver block length in use on the latency path indicated in LPATH.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ActualInterleavingDelay" access="readOnly" version="1.0">
        <description>
          Reports the actual delay, in milliseconds, of the latency path due to interleaving.
          Note:  In G.997.1, this parameter is called "Actual Interleaving Delay." See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTINP" access="readOnly" version="1.0">
        <description>
          Reports the actual impulse noise protection (INP) provided by the latency path indicated in LPATH.  The value is the actual INP in the L0 (i.e., Showtime) state.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="INPREPORT" access="readOnly" version="1.0">
        <description>
          Reports whether the value reported in ACTINP was computed assuming the receiver does not use erasure decoding.  Valid values are 0 (computed per the formula assuming no erasure decoding) and 1 (computed by taking into account erasure decoding capabilities of receiver).
          Note:  See ITU-T Recommendation G.997.1.  For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NFEC" access="readOnly" version="1.0">
        <description>
          Reports the size, in octets, of the Reed-Solomon codeword in use on the latency path indicated in LPATH.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="RFEC" access="readOnly" version="1.0">
        <description>
          Reports the number of redundancy bytes per Reed-Solomon codeword on the latency path indicated in LPATH.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="LSYMB" access="readOnly" version="1.0">
        <description>
          Reports the number of bits per symbol assigned to the latency path indicated in LPATH.  This value does not include overhead due to trellis coding.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="TRELLISds" access="readOnly" version="1.0">
        <description>
          Reports whether trellis coding is enabled in the downstream direction.  A value of 1 indicates that trellis coding is in use, and a value of 0 indicates that the trellis is disabled.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="TRELLISus" access="readOnly" version="1.0">
        <description>
          Reports whether trellis coding is enabled in the upstream direction.  A value of 1 indicates that trellis coding is in use, and a value of 0 indicates that the trellis is disabled.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to -1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTSNRMODEds" access="readOnly" version="1.0">
        <description>
          Reports whether the OPTIONAL virtual noise mechanism is in use in the downstream direction.  A value of 1 indicates the virtual noise mechanism is not in use, and a value of 2 indicates the virtual noise mechanism is in use.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ACTSNRMODEus" access="readOnly" version="1.0">
        <description>
          Reports whether the OPTIONAL virtual noise mechanism is in use in the upstream direction.  A value of 1 indicates the virtual noise mechanism is not in use, and a value of 2 indicates the virtual noise mechanism is in use.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="VirtualNoisePSDds" access="readOnly" version="1.0">
        <description>
          Reports the virtual noise PSD for the downstream direction. Base64 encoded of the binary representation defined in G.997.1 by the parameter called TXREFVNds (maximum length is 97 octets, which requires 132 bytes for Base64 encoding).
          See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to {{empty}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="97"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="VirtualNoisePSDus" access="readOnly" version="1.0">
        <description>
          Reports the virtual noise PSD for the upstream direction. Base64 encoded of the binary representation defined in G.997.1by the parameter called TXREFVNus (maximum length is 49 octets, which requires 68 bytes for Base64 encoding).
          See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to {{empty}}.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="49"/>
          </base64>
        </syntax>
      </parameter>
      <parameter name="ACTUALCE" access="readOnly" version="1.0">
        <description>
          Reports the actual cyclic extension, as the value of m, in use for the connection.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 99.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LineNumber" access="readOnly" version="1.0">
        <description>
          Signifies the line pair that the modem is using to connection.  {{param}} = 1 is the innermost pair.
        </description>
        <syntax>
          <int>
            <range minInclusive="1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="UpstreamCurrRate" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current physical layer aggregate data rate (expressed in Kbps) of the upstream DSL connection.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamCurrRate" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current physical layer aggregate data rate (expressed in Kbps) of the downstream DSL connection.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamMaxRate" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current attainable rate (expressed in Kbps) of the upstream DSL channel.
          Note:  This parameter is related to the G.997.1 parameter ATTNDRus, which is measured in bits/s.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DownstreamMaxRate" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current attainable rate (expressed in Kbps) of the downstream DSL channel.
          Note:  This parameter is related to the G.997.1 parameter ATTNDRds, which is measured in bits/s.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UpstreamNoiseMargin" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current signal-to-noise ratio margin (expressed in 0.1 dB) in the upstream direction.
          Note:  In G.997.1, this parameter is called SNRMus.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="DownstreamNoiseMargin" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current signal-to-noise ratio margin (expressed in 0.1 dB) in the downstream direction.
          Note:  In G.997.1, this parameter is called SNRMds.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRMpbus" access="readOnly" version="1.0">
        <description>
          The current signal-to-noise ratio margin of each upstream band.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMpbds" access="readOnly" version="1.0">
        <description>
          The current signal-to-noise ratio margin of each band.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="INMIATOds" access="readOnly" version="1.0">
        <description>
          The Impulse Noise Monitoring (INM) Inter Arrival Time (IAT) Offset, measured in DMT symbols, that the xTU receiver uses to determine in which bin of the IAT histogram the IAT is reported.
          Note:  In G.997.1, this parameter is called INMIATO.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="3" maxInclusive="511"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMIATSds" access="readOnly" version="1.0">
        <description>
          The Impulse Noise Monitoring (INM)  Inter Arrival Time (IAT) Step that the xTU receiver uses to determine in which bin of the IAT histogram the IAT is reported.
          Note:  In G.997.1, this parameter is called INMIATS.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="7"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMCCds" access="readOnly" version="1.0">
        <description>
          The Impulse Noise Monitoring (INM) Cluster Continuation value, measured in DMT symbols, that the xTU receiver uses in the cluster indication process.
          Note:  In G.997.1, this parameter is called INMCC.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="64"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="INMINPEQMODEds" access="readOnly" version="1.0">
        <description>
          The Impulse Noise Monitoring (INM) Equivalent Impulse Noise Protection (INP) Mode that the xTU receiver uses in the computation of the Equivalent INP.
          Note:  In G.997.1, this parameter is called INM_INPEQ_MODE.  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="0" maxInclusive="3"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="UpstreamAttenuation" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current upstream signal loss (expressed in 0.1 dB).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="DownstreamAttenuation" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current downstream signal loss (expressed in 0.1 dB).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="UpstreamPower" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current output power at the CPE's DSL interface (expressed in 0.1 dBmV).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="DownstreamPower" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current received power at the CPE's DSL interface (expressed in 0.1 dBmV).
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ATURVendor" access="readOnly" version="1.0">
        <description>
          ATU-R vendor identifier as defined in G.994.1 and T1.413.  In the case of G.994.1 this corresponds to the four-octet provider code, which MUST be represented as eight hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "00000000".
        </description>
        <syntax>
          <string>
            <size maxLength="8"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATURCountry" access="readOnly" version="1.0">
        <description>
          T.35 country code of the ATU-R vendor as defined in G.994.1, where the two-octet value defined in G.994.1 MUST be represented as four hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "0000".
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATURANSIStd" access="readOnly" version="1.0">
        <description>
          ATU-R T1.413 Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATURANSIRev" access="readOnly" version="1.0">
        <description>
          ATU-R Vendor Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCVendor" access="readOnly" version="1.0">
        <description>
          ATU-C vendor identifier as defined in G.994.1 and T1.413.  In the case of G.994.1 this corresponds to the four-octet provider code, which MUST be represented as eight hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "00000000".
        </description>
        <syntax>
          <string>
            <size maxLength="8"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATUCCountry" access="readOnly" version="1.0">
        <description>
          T.35 country code of the ATU-C vendor as defined in G.994.1, where the two-octet value defined in G.994.1 MUST be represented as four hexadecimal digits.
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, it MUST have the value "0000".
        </description>
        <syntax>
          <string>
            <size maxLength="4"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATUCANSIStd" access="readOnly" version="1.0">
        <description>
          ATU-C T1.413 Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCANSIRev" access="readOnly" version="1.0">
        <description>
          ATU-C Vendor Revision Number as defined in T1.413 Issue 2.
          When T1.413 modulation is not in use, the parameter value SHOULD be 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TotalStart" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of seconds since the beginning of the period used for collection of ''Total'' statistics.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShowtimeStart" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of seconds since the most recent DSL Showtime - the beginning of the period used for collection of ''Showtime'' statistics.
          Showtime is defined as successful completion of the DSL link establishment process.  The ''Showtime'' statistics are those collected since the most recent establishment of the DSL link.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastShowtimeStart" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of seconds since the second most recent DSL Showtime-the beginning of the period used for collection of ''LastShowtime'' statistics.
          If the CPE has not retained information about the second most recent Showtime (e.g., on reboot), the start of ''LastShowtime'' statistics MAY temporarily coincide with the start of ''Showtime'' statistics.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CurrentDayStart" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of seconds since the beginning of the period used for collection of ''CurrentDay'' statistics.
          The CPE MAY align the beginning of each CurrentDay interval with days in the UTC time zone, but does not have to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QuarterHourStart" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of seconds since the beginning of the period used for collection of ''QuarterHour'' statistics.
          The CPE MAY align the beginning of each QuarterHour interval with real-time quarter-hour intervals, but does not have to do so.
          Statistics SHOULD continue to be accumulated across CPE reboots, though this might not always be possible.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for a WAN DSL physical interface.
      </description>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains DSL total statistics.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Total number of successfully received blocks, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Total number of successfully transmitted blocks, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Total number of cell-delineation errors (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Total number of link-retrain errors (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Total number of initialization errors (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of initialization timeout errors.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Total number of loss-of-framing errors (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of errored seconds (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of errored seconds detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of severely errored seconds (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of severely errored seconds detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of FEC errors detected (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of FEC errors detected by the ATU-C (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of HEC errors detected (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of HEC errors detected by the ATU-C (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of CRC errors detected (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of CRC errors detected by the ATU-C (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Showtime." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains DSL statistics accumulated since the most recent DSL Showtime.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully received blocks since the most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully transmitted blocks since the most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of cell-delineation errors since the most recent DSL Showtime (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of link-retrain errors since the most recent DSL Showtime (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization errors since the most recent DSL Showtime (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization timeout errors since the most recent DSL Showtime.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of loss-of-framing errors since the most recent DSL Showtime (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds since the most recent DSL Showtime (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds since the most recent DSL Showtime detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds since the most recent DSL Showtime (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds since the most recent DSL Showtime detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected since the most recent DSL Showtime (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected by the ATU-C since the most recent DSL Showtime (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected since the most recent DSL Showtime (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected by the ATU-C since the most recent DSL Showtime (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected since the most recent DSL Showtime (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected by the ATU-C since the most recent DSL Showtime (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.LastShowtime." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains DSL statistics accumulated since the second most recent DSL Showtime.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully received blocks since the second most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully transmitted blocks since the second most recent DSL Showtime, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of cell-delineation errors since the second most recent DSL Showtime (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of link-retrain errors since the second most recent DSL Showtime (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization errors since the second most recent DSL Showtime (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization timeout errors since the second most recent DSL Showtime.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of loss-of-framing errors since the second most recent DSL Showtime (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds since the second most recent DSL Showtime (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds since the second most recent DSL Showtime detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds since the second most recent DSL Showtime detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected since the second most recent DSL Showtime (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected by the ATU-C since the second most recent DSL Showtime (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected since the second most recent DSL Showtime (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected by the ATU-C since the second most recent DSL Showtime (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected since the second most recent DSL Showtime (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected by the ATU-C since the second most recent DSL Showtime (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.CurrentDay." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains DSL statistics accumulated during the current day.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully received blocks during the current day, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully transmitted blocks during the current day, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of cell-delineation errors during the current day (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of link-retrain errors during the current day (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization errors during the current day (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization timeout errors during the current day.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of loss-of-framing errors during the current day (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds during the current day (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds during the current day detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds during the current day (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds during the current day detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected during the current day (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected by the ATU-C during the current day (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected during the current day (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected by the ATU-C during the current day (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected during the current day (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected by the ATU-C during the current day (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.QuarterHour." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains DSL statistics accumulated during the current quarter hour.
      </description>
      <parameter name="ReceiveBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully received blocks during the current quarter hour, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="TransmitBlocks" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of successfully transmitted blocks during the current quarter hour, where a block is as defined in RFC 2662 {{bibref|RFC2662}}.
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CellDelin" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of cell-delineation errors during the current quarter hour (total seconds with NCD or LCD failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LinkRetrain" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of link-retrain errors during the current quarter hour (Full Initialization Count as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not available at either the G or the S/T interface.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="InitErrors" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization errors during the current quarter hour (LINIT failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LInit" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          LInit is a flag to signal that a failure occurred as defined in G.997.1.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="InitTimeouts" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of initialization timeout errors during the current quarter hour.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LossOfFraming" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Number of loss-of-framing errors during the current quarter hour (LOF failures as defined in ITU-T Rec. G.997.1).
          This parameter is DEPRECATED because it is not defined in G.997.1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LOF" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          This parameter corresponds to LOF as defined in ITU-T Rec. G.997.1. LOF is a flag to signal that a failure occurred.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds during the current quarter hour (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of errored seconds during the current quarter hour detected by the ATU-C (ES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds during the current quarter hour (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCSeverelyErroredSecs" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of severely errored seconds during the current quarter hour detected by the ATU-C (SES-L as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected during the current quarter hour (FEC-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCFECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of FEC errors detected by the ATU-C during the current quarter hour (FEC-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected during the current quarter hour (HEC-P as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCHECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of HEC errors detected by the ATU-C during the current quarter hour (HEC-PFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="CRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected during the current quarter hour (CV-C as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATUCCRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of CRC errors detected by the ATU-C during the current quarter hour (CV-CFE as defined in ITU-T Rec. G.997.1).
          Note: This parameter is OPTIONAL at the G and S/T interfaces in G.997.1 Amendment 1.  If the parameter is implemented but no value is available, its value MUST be 4294967295 (the maximum for its data type).
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains the DSL test parameters that are available during the L0 (i.e., Showtime) state.
      </description>
      <parameter name="HLOGGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLOGpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|HLOGpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|QLNpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|QLNpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream quiet line noise per subcarrier group.  The maximum number of elements is 256 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="QLNpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream quiet line noise per subcarrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNMTds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNMTus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|SNRpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|SNRpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream SNR per subcarrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.
          Note: {{param}} is first measured during initialization and is updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream SNR per subcarrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter should be set to ''None''.
          Note: {{param}} is first measured during initialization and is updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2047"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LATNds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LATNus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of upstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig." access="readOnly" minEntries="0" maxEntries="1" version="1.0">
      <description>
        This object models physical layer properties specific to a single Ethernet physical connection used for Internet access on a CPE.  This object is required for a CPE with an Ethernet WAN interface, and is exclusive of any other ''WAN*InterfaceConfig'' object within a given ''WANDevice'' instance.  Note that this object is not related to the Ethernet protocol layer sometimes used in associated with a DSL connection.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this interface.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Status" access="readOnly" version="1.0">
        <description>
          Indicates the status of this interface.  {{enum}}
          The {{enum|Error}} value MAY be used by the CPE to indicate a locally defined error condition.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="NoLink" version="1.0"/>
            <enumeration value="Error" optional="true" version="1.0"/>
            <enumeration value="Disabled" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxBitRate" access="readWrite" version="1.0">
        <description>
          The maximum upstream and downstream bit rate available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="10" version="1.0"/>
            <enumeration value="100" version="1.0"/>
            <enumeration value="1000" version="1.0"/>
            <enumeration value="10000" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DuplexMode" access="readWrite" version="1.0">
        <description>
          The duplex mode available to this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Half" version="1.0"/>
            <enumeration value="Full" version="1.0"/>
            <enumeration value="Auto" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" version="1.0">
        <description>
          Rate to shape this connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" version="1.0">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for an Ethernet WAN interface on a CPE device.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of bytes sent over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of bytes received over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of packets sent over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Total number of packets received over the interface since the CPE was last reset.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement." access="readOnly" status="obsoleted" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object is intended for a CPE with a DSL modem WAN interface.
        Note - This object was originally created to allow ''WANConnection'' devices and services to be added dynamically in the IGD object model in TR-064 because UPnP Device Architecture 1.0 did not contain this capability natively.  Because in TR-069 objects can be created and removed using the AddObject and DeleteObject RPCs, ''WANConnection'' interfaces can be managed using these TR-069 mechanisms directly.  Therefore, unlike the TR-064 equivalent, the {{object|ConnectionService}} table within this object is Read-Only in the TR-069 ''InternetGatewayDevice'' data model context.
        This object is OBSOLETED because it serves no purpose.
      </description>
      <parameter name="ConnectionServiceNumberOfEntries" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Number of table entries in the ConnectionService table.
          This parameter is OBSOLETED because it is within an OBSOLETED object.  The CPE MAY return a value of 0 for this parameter, regardless of the number of connection services, in which case no {{object|ConnectionService}} instances will exist.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement.ConnectionService.{i}." access="readOnly" numEntriesParameter="ConnectionServiceNumberOfEntries" status="obsoleted" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This table contains an entry for each connection service.
        This object is OBSOLETED because it is within an OBSOLETED object.
      </description>
      <uniqueKey>
        <parameter ref="WANConnectionService"/>
      </uniqueKey>
      <parameter name="WANConnectionDevice" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Specifies a WAN connection device object associated with this connection instance.  The content is the full hierarchical parameter name of the WAN connection device.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2''.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="WANConnectionService" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Specifies a WAN connection object associated with this connection instance.  The content is the full hierarchical parameter name of the layer 3 connection object.  Example: ''InternetGatewayDevice.WANDevice.1.WANConnectionDevice.2.WANPPPConnection.1''.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DestinationAddress" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Destination address of the WANConnectionDevice entry.  One of:
          * ''PVC: VPI/VCI''
          * ''SVC: ATM connection name''
          * ''SVC: ATM address''
          The "PVC:" or "SVC:" prefix is part of the parameter value and MUST be followed by 0 or 1 space characters.  For example, possible values for this parameter are "PVC:8/23" or "PVC: 0/35".
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkType" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Link Type of the ''WANConnectionDevice'' entry.  One of Link Types as described in ''WANDSLLinkConfig''.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readOnly" status="obsoleted" version="1.0">
        <description>
          Connection Type of the ''WANPPPConnection'' or ''WANIPConnection'' entry. One of ''PossibleConnectionTypes'' as described in ''WAN**Connection'' service.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="16"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readOnly" status="obsoleted" version="1.0">
        <description>
          User-readable name of the connection.
          This parameter is OBSOLETED because it is within an OBSOLETED object.
        </description>
        <syntax>
          <string>
            <size maxLength="32"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object is to provide diagnostic information for a CPE with an ADSL2 or ADSL2+ modem WAN interface, but MAY also be used for ADSL.
      </description>
      <parameter name="LoopDiagnosticsState" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test, which brings down the DSL connection while the test is operating.  When writing, the only allowed value is {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed, the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the corresponding reason in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object instance) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly" version="1.0"/>
            <enumeration value="Requested" version="1.0"/>
            <enumeration value="Complete" access="readOnly" version="1.0"/>
            <enumeration value="Error_Internal" access="readOnly" version="1.0"/>
            <enumeration value="Error_Other" access="readOnly" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ACTPSDds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream actual power spectral density.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTPSDus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream actual power spectral density.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTATPds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream actual aggregate transmitter power.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="ACTATPus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream actual aggregate transmitter power.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINSCds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream linear representation scale.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINSCus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Scaling used to represent the upstream linear channel characteristics.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLINpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLINGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLINpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|HLOGpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|HLOGpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGds}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream logarithmic channel characteristics per sub-carrier group.  The maximum number of elements is 64 for G.992.3 and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|HLOGGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
          Note: {{param}} is measured during initialization and is not updated during Showtime.
        </description>
        <syntax>
          <list>
            <size maxLength="2559"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="HLOGMTus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|HLOGpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LATNpbds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2. Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="LATNpbus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream line attenuation per usable band, as computed during initialization.  Number of elements is dependent on the number of upstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SATNus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream signal attenuation per usable band, as computed during the L0 (i.e., Showtime) state.  Number of elements is dependent on the number of downstream bands but will exceed one only for G.993.2.  Interpretation of {{param}} is as defined in ITU-T Rec. G.997.1.
          Note:  See ITU-T Recommendation G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="24"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="HLINpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream linear channel characteristics per subcarrier group.  Maximum number of complex pairs is 256 for G.992.3, and 512 for G.992.5.  For G.993.2, the number of pairs will depend on the value of {{param|HLINGds}} but will not exceed 512.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note: HLIN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="HLINpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream linear channel characteristics per sub-carrier group.  Maximum number of complex pairs is 64 for G.992.3, and G.992.5.  For G.993.2, the number of pairs will depend on the value of {{param|HLINGus}} but will not exceed 512.  Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  HLIN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|QLNpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|QLNpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream quiet line noise per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGds}} but will not exceed 512.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  QLN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="QLNpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream quiet line noise per subcarrier group.  The maximum number of elements is 64 for G.992.3, and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|QLNGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  QLN is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="QLNMTds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="QLNMTus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|QLNpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the downstream direction for {{param|SNRpsds}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRGus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Number of sub-carriers per sub-carrier group in the upstream direction for {{param|SNRpsus}}.  Valid values are 1, 2, 4, and 8.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 1.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream SNR per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGds}} but will not exceed 512.   Interpretation of the value is as defined in ITU-T Rec. G.997.1.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          Note:  SNRps is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="SNRpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream SNR per subcarrier group.  The maximum number of elements is 64 for G.992.3, and G.992.5.  For G.993.2, the number of elements will depend on the value of {{param|SNRGus}} but will not exceed 512. Interpretation of the values is as defined in ITU-T Rec. G.997.1.
          Note:  SNRps is not applicable in PLOAM for G.992.1 or G.992.2.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to ''None''.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SNRMTds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsds}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="SNRMTus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Indicates the number of symbols over which {{param|SNRpsus}} was measured.
          Note:  See ITU-T Recommendation G.997.1. For a multimode device operating in a mode in which this parameter does not apply, the value of this parameter SHOULD be set to 0.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BITSpsds" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Downstream bit allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
      <parameter name="BITSpsus" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Upstream bit allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="GAINSpsds" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Downstream gain allocation per subcarrier group.  Maximum number of elements is 256 for G.992.3, 512 for G.992.5.  Interpretation of the value is as defined in ITU-T Rec. G.997.1.
          This parameter is DEPRECATED.
        </description>
        <syntax>
          <list>
            <size maxLength="61430"/>
          </list>
          <int/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." access="readWrite" numEntriesParameter="WANConnectionNumberOfEntries" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Each instance contains objects associated with a given WAN link.  In the case of DSL, each instance corresponds to either a single ATM VC or a PTM Ethernet link.  On creation of a ''WANConnectionDevice'' instance, there are initially no connection objects contained within.  In the case of Ethernet (interface or link), only one ''WANConnectionDevice'' instance is supported.
      </description>
      <parameter name="WANIPConnectionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|WANIPConnection}} in this ''WANConnectionDevice''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WANPPPConnectionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Number of instances of {{object|WANPPPConnection}} in this ''WANConnectionDevice''.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." access="readOnly" minEntries="0" maxEntries="1" version="1.0">
      <description>
        This object models the ATM layer properties specific to a single physical connection of a DSL modem used for Internet access on a CPE.  This object is intended for a CPE with a DSL modem WAN interface, and is exclusive of any other ''WAN*LinkConfig'' object within a given ''WANConnectionDevice'' instance.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the link.  On creation of a ''WANConnectionDevice'', this object is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LinkStatus" access="readOnly" version="1.0">
        <description>
          Status of the link.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Down" version="1.0"/>
            <enumeration value="Initializing" version="1.0"/>
            <enumeration value="Unavailable" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="LinkType" access="readWrite" version="1.0">
        <description>
          Indicates the type of DSL connection and refers to the complete stack of protocol used for this connection.  {{enum}}
          The value {{enum|PPPoE}} has always been DEPRECATED and {{enum|EoA}} SHOULD be used instead (see {{bibref|TR-098a2|Annex B}}).  The ACS MUST NOT set this parameter to {{enum|PPPoE}} and the CPE MUST reject attempts to do so.
        </description>
        <syntax>
          <string>
            <enumeration value="EoA" version="1.0">
              <description>
                RFC 2684 {{bibref|RFC2684}} bridged Ethernet over ATM
              </description>
            </enumeration>
            <enumeration value="IPoA" version="1.0">
              <description>
                RFC 2684 {{bibref|RFC2684}} routed IP over ATM
              </description>
            </enumeration>
            <enumeration value="PPPoA" version="1.0">
              <description>
                RFC 2364 {{bibref|RFC2634}} PPP over ATM
              </description>
            </enumeration>
            <enumeration value="PPPoE" status="deprecated" version="1.0">
              <description>
                RFC 2516 {{bibref|RFC2516}} PPP over Ethernet on RFC 2684 {{bibref|RFC2684}} bridged Ethernet over ATM
              </description>
            </enumeration>
            <enumeration value="CIP" version="1.0">
              <description>
                RFC 2225 {{bibref|RFC2225}} Classical IP over ATM
              </description>
            </enumeration>
            <enumeration value="Unconfigured" version="1.0"/>
          </string>
          <default type="object" value="Unconfigured"/>
        </syntax>
      </parameter>
      <parameter name="AutoConfig" access="readOnly" version="1.0">
        <description>
          Indicates if the CPE is currently using some auto configuration mechanisms for this connection.  If this variable is {{true}}, all writable variables in this connection instance become read-only. Any attempt to change one of these variables SHOULD fail and an error SHOULD be returned.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ModulationType" access="readOnly" version="1.0">
        <description>
          Indicates the type of DSL modulation used on the interface associated with this connection (duplication from ''WANDSLInterfaceConfig'').
        </description>
        <syntax>
          <string>
            <enumeration value="ADSL_G.dmt" version="1.0"/>
            <enumeration value="ADSL_G.lite" version="1.0"/>
            <enumeration value="ADSL_G.dmt.bis" version="1.0"/>
            <enumeration value="ADSL_re-adsl" version="1.0"/>
            <enumeration value="ADSL_2plus" version="1.0"/>
            <enumeration value="ADLS_four" version="1.0"/>
            <enumeration value="ADSL_ANSI_T1.413" version="1.0"/>
            <enumeration value="G.shdsl" version="1.0"/>
            <enumeration value="IDSL" version="1.0"/>
            <enumeration value="HDSL" version="1.0"/>
            <enumeration value="SDSL" version="1.0"/>
            <enumeration value="VDSL" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DestinationAddress" access="readWrite" version="1.0">
        <description>
          Destination address of this link.  One of:
          * ''PVC: VPI/VCI''
          * ''SVC: ATM connection name''
          * ''SVC: ATM address''
          The "PVC:" or "SVC:" prefix is part of the parameter value and MUST be followed by 0 or 1 space characters.  For example, possible values for this parameter are "PVC:8/23" or "PVC: 0/35".
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATMEncapsulation" access="readWrite" version="1.0">
        <description>
          Identifies the connection encapsulation that will be used.
        </description>
        <syntax>
          <string>
            <enumeration value="LLC" version="1.0"/>
            <enumeration value="VCMUX" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="FCSPreserved" access="readWrite" version="1.0">
        <description>
          This flag tells if a checksum SHOULD be added in the ATM payload. It does not refer to the checksum of one of the ATM cells or AALX packets. In case of LLC or VCMUX encapsulation, this ATM checksum is the FCS field described in RFC 2684 {{bibref|RFC2684}}. It is only applicable in the upstream direction.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="VCSearchList" access="readWrite" version="1.0">
        <description>
          Ordered list of VPI/VCI pairs to search if a link using the {{param|DestinationAddress}} cannot be established.  In the form:
          : ''VPI1/VCI1, VPI2/VCI2, ...''
          Example:
          : ''0/35, 8/35, 1/35''
        </description>
        <syntax>
          <list>
            <size maxLength="256"/>
          </list>
          <string/>
        </syntax>
      </parameter>
      <parameter name="ATMAAL" access="readOnly" version="1.0">
        <description>
          Describes the ATM Adaptation Layer (AAL) currently in use on the PVC.
        </description>
        <syntax>
          <string>
            <enumeration value="AAL1" version="1.0"/>
            <enumeration value="AAL2" version="1.0"/>
            <enumeration value="AAL3" version="1.0"/>
            <enumeration value="AAL4" version="1.0"/>
            <enumeration value="AAL5" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATMTransmittedBlocks" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current count of successfully transmitted cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMReceivedBlocks" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current count of successfully received cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMQoS" access="readWrite" version="1.0">
        <description>
          Describes the ATM Quality Of Service (QoS) being used on the VC.
        </description>
        <syntax>
          <string>
            <enumeration value="UBR" version="1.0"/>
            <enumeration value="CBR" version="1.0"/>
            <enumeration value="GFR" version="1.0"/>
            <enumeration value="VBR-nrt" version="1.0"/>
            <enumeration value="VBR-rt" version="1.0"/>
            <enumeration value="UBR+" version="1.0"/>
            <enumeration value="ABR" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ATMPeakCellRate" access="readWrite" version="1.0">
        <description>
          Specifies the upstream peak cell rate in cells per second.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMMaximumBurstSize" access="readWrite" version="1.0">
        <description>
          Specifies the upstream maximum burst size in cells.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMSustainableCellRate" access="readWrite" version="1.0">
        <description>
          Specifies the upstream sustainable cell rate, in cells per second, used for traffic shaping.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="AAL5CRCErrors" access="readOnly" status="deprecated" activeNotify="canDeny" version="1.0">
        <description>
          Count of the AAL5 layer cyclic redundancy check errors.
          This parameter is DEPRECATED because it overlaps with the {{param|ATMCRCErrors}} parameter. If present, it MUST have the same value as the {{param|ATMCRCErrors}} parameter if AAL5 is in use, or 0 if AAL5 is not in use.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMCRCErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Count of the ATM layer cyclic redundancy check (CRC) errors.
          This refers to CRC errors at the ATM adaptation layer (AAL). The AAL in use is indicated by the {{param|ATMAAL}} parameter. The value of the {{param}} parameter MUST be 0 for AAL types that have no CRCs.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ATMHECErrors" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Count of the number of Header Error Check related errors at the ATM layer.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object is provides access to an ATM-layer F5 OAM loopback test.
      </description>
      <parameter name="DiagnosticsState" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Indicates availability of diagnostic data.  {{enum}}
          If the ACS sets the value of this parameter to {{enum|Requested}}, the CPE MUST initiate the corresponding diagnostic test.  When writing, the only allowed value is {{enum|Requested}}.  To ensure the use of the proper test parameters (the writable parameters in this object), the test parameters MUST be set either prior to or at the same time as (in the same SetParameterValues) setting the {{param}} to {{enum|Requested}}.
          When requested, the CPE SHOULD wait until after completion of the communication session with the ACS before starting the diagnostic.
          When the test is completed, the value of this parameter MUST be either {{enum|Complete}} (if the test completed successfully), or one of the ''Error'' values listed above.
          If the value of this parameter is anything other than {{enum|Complete}}, the values of the results parameters for this test are indeterminate.
          When the diagnostic initiated by the ACS is completed (successfully or not), the CPE MUST establish a new connection to the ACS to allow the ACS to view the results, indicating the Event code ''8 DIAGNOSTICS COMPLETE'' in the Inform message.
          After the diagnostic is complete, the value of all result parameters (all read-only parameters in this object instance) MUST be retained by the CPE until either this diagnostic is run again, or the CPE reboots.  After a reboot, if the CPE has not retained the result parameters from the most recent test, it MUST set the value of this parameter to {{enum|None}}.
          Modifying any of the writable parameters in this object except for this one MUST result in the value of this parameter being set to {{enum|None}}.
          While the test is in progress, modifying any of the writable parameters in this object except for this one MUST result in the test being terminated and the value of this parameter being set to {{enum|None}}.
          While the test is in progress, setting this parameter to {{enum|Requested}} (and possibly modifying other writable parameters in this object) MUST result in the test being terminated and then restarted using the current values of the test parameters.
        </description>
        <syntax>
          <string>
            <enumeration value="None" access="readOnly" version="1.0"/>
            <enumeration value="Requested" version="1.0"/>
            <enumeration value="Complete" access="readOnly" version="1.0"/>
            <enumeration value="Error_Internal" access="readOnly" version="1.0"/>
            <enumeration value="Error_Other" access="readOnly" version="1.0"/>
          </string>
          <default type="object" value="None"/>
        </syntax>
      </parameter>
      <parameter name="NumberOfRepetitions" access="readWrite" version="1.0">
        <description>
          Number of repetitions of the ping test to perform before reporting the results.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
          <default type="object" value="1"/>
        </syntax>
      </parameter>
      <parameter name="Timeout" access="readWrite" version="1.0">
        <description>
          Timeout in milliseconds for the ping test.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SuccessCount" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the number of successful pings (those in which a successful response was received prior to the timeout) in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="FailureCount" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the number of failed pings in the most recent ping test.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="AverageResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the average response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MinimumResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the minimum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="MaximumResponseTime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          Result parameter indicating the maximum response time in milliseconds over all repetitions with successful responses of the most recent ping test.  If there were no successful responses, this value MUST be zero.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig." access="readOnly" minEntries="0" maxEntries="1" version="1.0">
      <description>
        This object models the PTM layer properties specific to a layer 2 interface of a DSL modem used for Internet access on a CPE.  This object is intended for a CPE with a DSL modem WAN interface, and is exclusive of any other ''WAN*LinkConfig'' object within a given ''WANConnectionDevice'' instance.
        The PTM Link Layer object exists when the ''WANDSLInterfaceConfig'' ''LinkEncapsulationSupported'' parameter includes any of:
        * ''G.992.3_Annex_K_PTM''
        * ''G.993.2_Annex_K_PTM''
        * ''G.994.1''
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the link.  On creation of a ''WANConnectionDevice'', this object is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LinkStatus" access="readOnly" version="1.0">
        <description>
          Status of the link.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Down" version="1.0"/>
            <enumeration value="Initializing" version="1.0"/>
            <enumeration value="Unavailable" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readOnly" version="1.0">
        <description>
          The physical address of the interface.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object represents the statistics collected and returned over a PTM link.
      </description>
      <parameter name="BytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes transmitted out of the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received on the interface, including framing characters.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FramesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets (frames) transmitted out of the interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="FramesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets (frames) which were received on this interface.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="OOSNearEnd" access="readOnly" version="1.0">
        <description>
          Indication that the CPE has detected the link is Out of Synchronization since the CPE rebooted or the interface was last enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OOSFarEnd" access="readOnly" version="1.0">
        <description>
          Indication that the remote device has detected the link is Out of Synchronization since the CPE rebooted or the interface was last enabled.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ErrorsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ErrorsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnicastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DiscardPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a multicast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="MulticastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a multicast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were addressed to a broadcast address, including those that were discarded or not sent.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="BroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a broadcast address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="UnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets received via the interface which were discarded because of an unknown or unsupported protocol.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig." access="readOnly" minEntries="0" maxEntries="1" version="1.0">
      <description>
        This object models the Ethernet link layer properties specific to a single physical connection used for Internet access on a CPE.  This object is intended for a CPE with an Ethernet WAN interface, and is exclusive of any other ''WAN*LinkConfig'' object within a given ''WANConnectionDevice'' instance.  Note that this object is not related to the Ethernet protocol layer sometimes used in associated with a DSL connection.
      </description>
      <parameter name="EthernetLinkStatus" access="readOnly" version="1.0">
        <description>
          Status of the Ethernet link.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Down" version="1.0"/>
            <enumeration value="Unavailable" version="1.0"/>
          </string>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPOTSLinkConfig." access="readOnly" minEntries="0" maxEntries="1" version="1.0">
      <description>
        This object models the POTS link layer properties specific to a single physical connection used for Internet access on a CPE.  This object is intended for a CPE with a POTS WAN interface, and is exclusive of any other ''WAN*LinkConfig'' object within a given ''WANConnectionDevice'' instance.
      </description>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the link.  On creation of a ''WANConnectionDevice'', this object is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="LinkStatus" access="readOnly" version="1.0">
        <description>
          Status of the link.
        </description>
        <syntax>
          <string>
            <enumeration value="Up" version="1.0"/>
            <enumeration value="Down" version="1.0"/>
            <enumeration value="Dialing" version="1.0"/>
            <enumeration value="Connecting" version="1.0"/>
            <enumeration value="Unavailable" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ISPPhoneNumber" access="readWrite" version="1.0">
        <description>
          Specifies a list of strings separated by semicolon (;), each string representing a phone number to connect to a particular ISP. The digits of the phone number follow the semantics of the ITU-T E.164 specification. Delimiters such as brackets or hyphens between the digits of a phone number are to be ignored by the CPE.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ISPInfo" access="readWrite" version="1.0">
        <description>
          Information identifying the Internet Service Provider. The format of the string is vendor specific.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="LinkType" access="readWrite" version="1.0">
        <description>
          This variable indicates the type of POTS link used for the dialup connection.
        </description>
        <syntax>
          <string>
            <enumeration value="PPP_Dialup" version="1.0"/>
          </string>
          <default type="object" value="PPP_Dialup"/>
        </syntax>
      </parameter>
      <parameter name="NumberOfRetries" access="readWrite" version="1.0">
        <description>
          The number of times the CPE SHOULD attempt an Internet connection setup before returning error.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="DelayBetweenRetries" access="readWrite" version="1.0">
        <description>
          The number of seconds the CPE SHOULD wait between attempts to setup an Internet connection.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="Fclass" access="readOnly" version="1.0">
        <description>
          Specifies capabilities of the POTS modem - i.e., if it handles data ({{enum|0}}), fax ({{enum|1}},{{enum|2}},{{enum|2.0}}), voice ({{enum|8}}), DSVD ({{enum|80}}).
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="0" version="1.0"/>
            <enumeration value="1" version="1.0"/>
            <enumeration value="2" version="1.0"/>
            <enumeration value="2.0" version="1.0"/>
            <enumeration value="8" version="1.0"/>
            <enumeration value="80" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DataModulationSupported" access="readOnly" version="1.0">
        <description>
          The modulation standard currently being used for data.
        </description>
        <syntax>
          <string>
            <enumeration value="V92" version="1.0"/>
            <enumeration value="V90" version="1.0"/>
            <enumeration value="V34" version="1.0"/>
            <enumeration value="V32bis" version="1.0"/>
            <enumeration value="V32" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DataProtocol" access="readOnly" version="1.0">
        <description>
          The protocol standard currently being used for data transfers.
        </description>
        <syntax>
          <string>
            <enumeration value="V42_LAPM" version="1.0"/>
            <enumeration value="V42_MNP4" version="1.0"/>
            <enumeration value="V14" version="1.0"/>
            <enumeration value="V80" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="DataCompression" access="readOnly" version="1.0">
        <description>
          The compression technology implemented on the modem.
        </description>
        <syntax>
          <string>
            <enumeration value="V42bis" version="1.0"/>
            <enumeration value="MNP5" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PlusVTRCommandSupported" access="readOnly" version="1.0">
        <description>
          Capability for full duplex operation with data and voice.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." access="readWrite" numEntriesParameter="WANIPConnectionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object enables configuration of IP connections on the WAN interface of a CPE.
        If the ''Layer2Bridging'' object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any ''LANDevice'' and ''WAN**Connection'' objects.  The implications of this are explained in {{bibref|TR-098a2|Annex A.6}}.
      </description>
      <uniqueKey>
        <parameter ref="ExternalIPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the connection instance.  On creation of a ''WANIPConnection'' instance, it is initially disabled.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" version="1.0">
        <description>
          When set to {{true}}, the device MUST tear down the existing IP connection represented by this object and establish a new one.
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.
          When read, this parameter always returns {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionStatus" access="readOnly" version="1.0">
        <description>
          Current status of the connection.  {{enum}}
          The value {{enum|Disconneting}} is DEPRECATED because it is a typo.  The ACS MUST treat {{enum|Disconneting}} and {{enum|Disconnecting}} the same.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured" version="1.0"/>
            <enumeration value="Connecting" version="1.0"/>
            <enumeration value="Connected" version="1.0"/>
            <enumeration value="PendingDisconnect" version="1.0"/>
            <enumeration value="Disconneting" status="deprecated" version="1.0"/>
            <enumeration value="Disconnecting" version="1.0"/>
            <enumeration value="Disconnected" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleConnectionTypes" access="readOnly" version="1.0">
        <description>
          Types of connections possible for this connection instance.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Unconfigured" version="1.0"/>
            <enumeration value="IP_Routed" version="1.0"/>
            <enumeration value="IP_Bridged" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readWrite" version="1.0">
        <description>
          Specifies the connection type of the connection instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured" version="1.0"/>
            <enumeration value="IP_Routed" version="1.0"/>
            <enumeration value="IP_Bridged" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" version="1.0">
        <description>
          User-readable name of this connection.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Uptime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The time in seconds that this connection has been up.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastConnectionError" access="readOnly" version="1.0">
        <description>
          The cause of failure for the last connection setup attempt.
        </description>
        <syntax>
          <string>
            <enumeration value="ERROR_NONE" version="1.0"/>
            <enumeration value="ERROR_COMMAND_ABORTED" version="1.0"/>
            <enumeration value="ERROR_NOT_ENABLED_FOR_INTERNET" version="1.0"/>
            <enumeration value="ERROR_USER_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_ISP_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_IDLE_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_FORCED_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_NO_CARRIER" version="1.0"/>
            <enumeration value="ERROR_IP_CONFIGURATION" version="1.0"/>
            <enumeration value="ERROR_UNKNOWN" version="1.0"/>
          </string>
          <default type="object" value="ERROR_NONE"/>
        </syntax>
      </parameter>
      <parameter name="AutoDisconnectTime" access="readWrite" version="1.0">
        <description>
          The time in seconds since the establishment of the connection after which connection termination is automatically initiated by the CPE.  This occurs irrespective of whether the connection is being used or not.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IdleDisconnectTime" access="readWrite" version="1.0">
        <description>
          The time in seconds that if the connection remains idle, the CPE automatically terminates the connection.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WarnDisconnectDelay" access="readWrite" version="1.0">
        <description>
          Time in seconds the Status remains in the pending disconnect state before transitioning to disconnecting state to drop the connection.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RSIPAvailable" access="readOnly" version="1.0">
        <description>
          Indicates if Realm-specific IP (RSIP) is available as a feature on the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NATEnabled" access="readWrite" version="1.0">
        <description>
          Indicates if Network Address Translation (NAT) is enabled for this connection.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="AddressingType" access="readWrite" version="1.0">
        <description>
          The method used to assign an address to the WAN side interface of the CPE for this connection.
        </description>
        <syntax>
          <string>
            <enumeration value="DHCP" version="1.0"/>
            <enumeration value="Static" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExternalIPAddress" access="readWrite" version="1.0">
        <description>
          This is the external IP address used by NAT for this connection.  This parameter is configurable only if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="SubnetMask" access="readWrite" version="1.0">
        <description>
          Subnet mask of the WAN interface.  This parameter is configurable only if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="DefaultGateway" access="readWrite" version="1.0">
        <description>
          The IP address of the default gateway for this connection.  This parameter is configurable only if the {{param|AddressingType}} is {{enum|Static|AddressingType}}.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="DNSEnabled" access="readWrite" version="1.0">
        <description>
          Whether or not the device SHOULD attempt to query a DNS server across this connection.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DNSOverrideAllowed" access="readWrite" version="1.0">
        <description>
          Whether or not a manually set, non-empty DNS address can be overridden by a DNS entry received from the WAN.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" version="1.0">
        <description>
          DNS server IP addresses for this connection.  Support for more than three DNS Servers is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxMTUSize" access="readWrite" version="1.0">
        <description>
          The maximum allowed size of an Ethernet frame from LAN-side devices.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readWrite" version="1.0">
        <description>
          The physical address of the ''WANIPConnection'' if applicable.  Configurable only if {{param|MACAddressOverride}} is present and {{true}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressOverride" access="readWrite" version="1.0">
        <description>
          Whether the value of {{param|MACAddress}} parameter can be overridden. If {{false}}, the CPE's default value is used (or restored if it had previously been overridden).
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="ConnectionTrigger" access="readWrite" version="1.0">
        <description>
          Trigger used to establish the IP connection.  {{enum}}
          The above values are defined as follows:
          * {{enum|OnDemand}}: If this IP connection is disconnected for any reason, it is to remain disconnected until the CPE has one or more packets to communicate over this connection, at which time the CPE automatically attempts to reestablish the connection.
          * {{enum|AlwaysOn}}: If this IP connection is disconnected for any reason, the CPE automatically attempts to reestablish the connection (and continues to attempt to reestablish the connection as long it remains disconnected).
          * {{enum|Manual}}: If this IP connection is disconnected for any reason, it is to remain disconnected until the user of the CPE explicitly instructs the CPE to reestablish the connection.
          Note that the reason for an IP connection becoming disconnected to begin with might be either external to the CPE, such as non-renewal of a DHCP lease or momentary disconnection of the physical interface, or internal to the CPE, such as use of the {{param|IdleDisconnectTime}} and/or {{param|AutoDisconnectTime}} parameters in this object.
          Note also that the means by which a CPE would keep an IP connection disconnected (while waiting for the designated trigger) if it is otherwise physically connected and has an IP address is a local matter specific to the implementation of the CPE.
        </description>
        <syntax>
          <string>
            <enumeration value="OnDemand" version="1.0"/>
            <enumeration value="AlwaysOn" version="1.0"/>
            <enumeration value="Manual" version="1.0"/>
          </string>
          <default type="object" value="OnDemand"/>
        </syntax>
      </parameter>
      <parameter name="RouteProtocolRx" access="readWrite" version="1.0">
        <description>
          Defines the Rx protocol to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Off" version="1.0"/>
            <enumeration value="RIPv1" optional="true" version="1.0"/>
            <enumeration value="RIPv2" optional="true" version="1.0"/>
            <enumeration value="OSPF" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Off"/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" version="1.0">
        <description>
          Rate to shape this connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" version="1.0">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Total number of port mapping entries.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains DHCP client configuration parameters.
      </description>
      <parameter name="SentDHCPOptionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|SentDHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ReqDHCPOptionNumberOfEntries" access="readOnly" version="1.0">
        <description>
          The number of entries in the {{object|ReqDHCPOption}} table.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.SentDHCPOption.{i}." access="readWrite" numEntriesParameter="SentDHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Each instance of this object represents a DHCP option that MUST, if enabled, be sent in DHCP client requests.  All sent DHCP options MUST be listed.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this SentDHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" version="1.0">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readWrite" version="1.0">
        <description>
          Base64 encoded option value.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.ReqDHCPOption.{i}." access="readWrite" numEntriesParameter="ReqDHCPOptionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Each instance of this object represents a DHCP option that MUST, if enabled, be requested in DHCP client requests. All requested DHCP options MUST be listed.
      </description>
      <uniqueKey>
        <parameter ref="Tag"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables this ReqDHCPOption table entry.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Order" access="readWrite" version="1.0">
        <description>
          Position of the option in the DHCP client request.  A value of 1 indicates the first entry.
          When this value is modified, if the value matches that of an existing entry, the Order value for the existing entry and all lower Order entries is incremented to ensure uniqueness of this value. A deletion causes Order values to be compacted. When a value is changed, incrementing occurs before compaction.
          The value on creation of a ReqDHCPOption table entry MUST be one greater than the largest current value.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Tag" access="readWrite" version="1.0">
        <description>
          Option tag as defined in RFC 2132 {{bibref|RFC2132}}.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="254"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="Value" access="readOnly" version="1.0">
        <description>
          Base64 encoded most recently received DHCP option value.
          If no option value has been received, then the value MUST represent {{empty}}.
          Received DHCP option values MAY, but need not, persist across CPE reboots.
        </description>
        <syntax>
          <base64>
            <size minLength="0" maxLength="255"/>
          </base64>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}." access="readWrite" numEntriesParameter="PortMappingNumberOfEntries" enableParameter="PortMappingEnabled" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Port mapping table.
        This table MUST contain all NAT port mappings associated with this connection, including static and dynamic port mappings programmatically created via local control protocol, such as UPnP.
        This table MUST NOT contain dynamic NAT binding entries associated with the normal operation of NAT.
        At most one entry in an instance of this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.  If the ACS attempts to set the parameters of an existing entry such that this requirement would be violated, the CPE MUST reject the request.  In this case, the SetParameterValues response MUST include a SetParameterValuesFault element for each parameter in the corresponding request whose modification would have resulted in such a violation.  On creation of a new table entry, the CPE MUST choose default values for {{param|ExternalPort}} and {{param|PortMappingProtocol}} such that the new entry does not conflict with any existing entry.
      </description>
      <uniqueKey>
        <parameter ref="RemoteHost"/>
        <parameter ref="ExternalPort"/>
        <parameter ref="PortMappingProtocol"/>
      </uniqueKey>
      <parameter name="PortMappingEnabled" access="readWrite" version="1.0">
        <description>
          Enables or disables the port mapping instance.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingLeaseDuration" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Determines the time to live, in seconds, of a port-mapping lease, where "time to live" means the number of seconds before the port mapping expires.
          A value of 0 means the port mapping is static. Support for dynamic (non-static) port mappings is OPTIONAL.  That is, the only value for {{param}} that MUST be supported is 0.
          For a dynamic (non-static) port mapping, when this parameter is read, the value represents the time remaining on the port-mapping lease.  That is, for a dynamic port mapping, the value counts down toward 0.  When a dynamic port-mapping lease expires, the CPE MUST automatically terminate that port mapping, and MUST automatically delete the corresponding ''PortMapping'' table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RemoteHost" access="readWrite" version="1.0">
        <description>
          This parameter is the IP address of the source of inbound packets.  {{empty}} indicates a "wildcard" (this will be a wildcard in most cases).  CPE are REQUIRED only to support wildcards.
          When {{param}} is a wildcard, all traffic sent to the {{param|ExternalPort}} on the WAN interface of the gateway is forwarded to the {{param|InternalClient}} on the {{param|InternalPort}}.
          When {{param}} is specified as one external IP address, the NAT will only forward inbound packets from this {{param}} to the {{param|InternalClient}}, all other packets will be dropped.
          If a CPE supports non-wildcard values for {{param}}, it MAY additionally support the ability to have more than one port mapping with the same {{param|ExternalPort}} and {{param|PortMappingProtocol}}, but with differing values of {{param}}.
          When wildcard values are used for {{param}} and/or {{param|ExternalPort}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param}}, explicit {{param|ExternalPort}}
          # Explicit {{param}}, wildcard {{param|ExternalPort}}
          # Wildcard {{param}}, explicit {{param|ExternalPort}}
          # Wildcard {{param}}, wildcard {{param|ExternalPort}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ExternalPort" access="readWrite" version="1.0">
        <description>
          The external port (or the first port of a range of external ports) that the NAT gateway would listen on for connection requests to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the WAN interface SHOULD be forwarded to {{param|InternalClient}} on the {{param|InternalPort}}.
          A value of zero (0) represents a "wildcard".  If this value is a wildcard, connection requests on all external ports (that are not otherwise mapped) will be forwarded to {{param|InternalClient}}.  In the wildcard case, the value(s) of {{param|InternalPort}} on {{param|InternalClient}} are ignored.
          When wildcard values are used for {{param|RemoteHost}} and/or {{param}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param|RemoteHost}}, explicit {{param}}
          # Explicit {{param|RemoteHost}}, wildcard {{param}}
          # Wildcard {{param|RemoteHost}}, explicit {{param}}
          # Wildcard {{param|RemoteHost}}, wildcard {{param}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExternalPortEndRange" access="readWrite" version="1.0">
        <description>
          Indicates the last port of the external port range that starts with {{param|ExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|ExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|ExternalPort}}.
          If {{param|ExternalPort}} is zero (wildcard), the value of this parameter MUST be ignored.
          If specified, the value of this parameter MUST be greater than or equal to the value of {{param|ExternalPort}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" version="1.0">
        <description>
          The port on {{param|InternalClient}} that the gateway SHOULD forward connection requests to.  A value of zero (0) is not allowed.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortMappingProtocol" access="readWrite" version="1.0">
        <description>
          The protocol of the port mapping.  {{enum}}
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param}}.
        </description>
        <syntax>
          <string>
            <enumeration value="TCP" version="1.0"/>
            <enumeration value="UDP" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InternalClient" access="readWrite" version="1.0">
        <description>
          The IP address or DNS host name of an internal client (on the LAN).
          Support for an IP address is mandatory.  If {{param}} is specified as an IP address and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with the original IP address.
          Support for DNS host names is OPTIONAL.  If {{param}} is specified as a DNS host name and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with this LAN device.  In this case, it is the responsibility of the CPE to maintain the name-to-address mapping in the event of IP address changes.  This can be accomplished, for example, by assigning the DNS host name via use of DHCP option 12 (Host Name) or option 81 (FQDN).  Note that the ACS can learn the host name associated with a given LAN device via the ''Hosts'' table ({{object|InternetGatewayDevice.LANDevice.{i}.Hosts}}).
          Read access to this parameter MUST always return the exact value that was last set by the ACS.  For example, if the internal client is set to a DNS host name, it MUST read back as a DNS host name and not as an IP address.
          {{empty}} indicates an unconfigured {{param}}. If this parameter is unconfigured, this port mapping MUST NOT be operational.
          It MUST be possible to set the {{param}} to the broadcast IP address 255.255.255.255 for UDP mappings. This is to enable multiple NAT clients to use the same well-known port simultaneously.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PortMappingDescription" access="readWrite" version="1.0">
        <description>
          User-readable description of this port mapping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for all connections within the same ''WANConnectionDevice'' that share a common MAC address.  The contents of this object SHOULD be identical for each such connection.
        This object is intended only for ''WANConnectionDevice''s that can support an Ethernet-layer on this interface (e.g., ''PPPoE'', ''IPoE'').
      </description>
      <parameter name="EthernetBytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes transmitted, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets transmitted over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets which were received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets which were discarded because of an unknown or unsupported protocol, received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." access="readWrite" numEntriesParameter="WANPPPConnectionNumberOfEntries" enableParameter="Enable" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        This object enables configuration of PPP connections on the WAN interface of a CPE.
        If the ''Layer2Bridging'' object is implemented, the view that it provides of the CPE's underlying bridging configuration MUST be consistent with the view provided by any ''LANDevice'' and ''WAN**Connection'' objects.  The implications of this are explained in {{bibref|TR-098a2|Annex A.6}}.
      </description>
      <uniqueKey>
        <parameter ref="ExternalIPAddress"/>
      </uniqueKey>
      <parameter name="Enable" access="readWrite" version="1.0">
        <description>
          Enables or disables the connection instance.  On creation of a ''WANPPPConnection'' instance, it is initially disabled.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="Reset" access="readWrite" version="1.0">
        <description>
          When set to {{true}}, the device MUST tear down the existing PPP connection represented by this object and establish a new one.
          The device MUST initiate the reset after completion of the current CWMP session.  The device MAY delay resetting the connection in order to avoid interruption of a user service such as an ongoing voice call.
          When read, this parameter always returns {{false}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ConnectionStatus" access="readOnly" version="1.0">
        <description>
          Current status of the connection.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured" version="1.0"/>
            <enumeration value="Connecting" version="1.0"/>
            <enumeration value="Authenticating" version="1.0"/>
            <enumeration value="Connected" version="1.0"/>
            <enumeration value="PendingDisconnect" version="1.0"/>
            <enumeration value="Disconnecting" version="1.0"/>
            <enumeration value="Disconnected" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PossibleConnectionTypes" access="readOnly" version="1.0">
        <description>
          Types of connections possible for this connection instance.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Unconfigured" version="1.0"/>
            <enumeration value="IP_Routed" version="1.0"/>
            <enumeration value="DHCP_Spoofed" version="1.0"/>
            <enumeration value="PPPoE_Bridged" version="1.0"/>
            <enumeration value="PPPoE_Relay" version="1.0"/>
            <enumeration value="PPTP_Relay" version="1.0"/>
            <enumeration value="L2TP_Relay" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ConnectionType" access="readWrite" version="1.0">
        <description>
          Specifies the connection type of the connection instance.
        </description>
        <syntax>
          <string>
            <enumeration value="Unconfigured" version="1.0"/>
            <enumeration value="IP_Routed" version="1.0"/>
            <enumeration value="DHCP_Spoofed" version="1.0"/>
            <enumeration value="PPPoE_Bridged" version="1.0"/>
            <enumeration value="PPPoE_Relay" version="1.0"/>
            <enumeration value="PPTP_Relay" version="1.0"/>
            <enumeration value="L2TP_Relay" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPoESessionID" access="readOnly" version="1.0">
        <description>
          Represents the PPPoE Session ID.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DefaultGateway" access="readOnly" version="1.0">
        <description>
          Represents the IP Address of the remote end Default Gateway established through PPPoE.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite" version="1.0">
        <description>
          User-readable name of this connection.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Uptime" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The time in seconds that this connection has been up.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="LastConnectionError" access="readOnly" version="1.0">
        <description>
          The cause of failure for the last connection setup attempt.
        </description>
        <syntax>
          <string>
            <enumeration value="ERROR_NONE" version="1.0"/>
            <enumeration value="ERROR_ISP_TIME_OUT" version="1.0"/>
            <enumeration value="ERROR_COMMAND_ABORTED" version="1.0"/>
            <enumeration value="ERROR_NOT_ENABLED_FOR_INTERNET" version="1.0"/>
            <enumeration value="ERROR_BAD_PHONE_NUMBER" version="1.0"/>
            <enumeration value="ERROR_USER_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_ISP_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_IDLE_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_FORCED_DISCONNECT" version="1.0"/>
            <enumeration value="ERROR_SERVER_OUT_OF_RESOURCES" version="1.0"/>
            <enumeration value="ERROR_RESTRICTED_LOGON_HOURS" version="1.0"/>
            <enumeration value="ERROR_ACCOUNT_DISABLED" version="1.0"/>
            <enumeration value="ERROR_ACCOUNT_EXPIRED" version="1.0"/>
            <enumeration value="ERROR_PASSWORD_EXPIRED" version="1.0"/>
            <enumeration value="ERROR_AUTHENTICATION_FAILURE" version="1.0"/>
            <enumeration value="ERROR_NO_DIALTONE" version="1.0"/>
            <enumeration value="ERROR_NO_CARRIER" version="1.0"/>
            <enumeration value="ERROR_NO_ANSWER" version="1.0"/>
            <enumeration value="ERROR_LINE_BUSY" version="1.0"/>
            <enumeration value="ERROR_UNSUPPORTED_BITSPERSECOND" version="1.0"/>
            <enumeration value="ERROR_TOO_MANY_LINE_ERRORS" version="1.0"/>
            <enumeration value="ERROR_IP_CONFIGURATION" version="1.0"/>
            <enumeration value="ERROR_UNKNOWN" version="1.0"/>
          </string>
          <default type="object" value="ERROR_NONE"/>
        </syntax>
      </parameter>
      <parameter name="AutoDisconnectTime" access="readWrite" version="1.0">
        <description>
          The time in seconds since the establishment of the connection after which connection termination is automatically initiated by the CPE.  This occurs irrespective of whether the connection is being used or not.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="IdleDisconnectTime" access="readWrite" version="1.0">
        <description>
          The time in seconds that if the connection remains idle, the CPE automatically terminates the connection.  A value of 0 (zero) indicates that the connection is not to be shut down automatically.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="WarnDisconnectDelay" access="readWrite" version="1.0">
        <description>
          Time in seconds the Status remains in the pending disconnect state before transitioning to disconnecting state to drop the connection.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RSIPAvailable" access="readOnly" version="1.0">
        <description>
          Indicates if Realm-specific IP (RSIP) is available as a feature on the CPE.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="NATEnabled" access="readWrite" version="1.0">
        <description>
          Indicates if Network Address Translation (NAT) is enabled for this connection.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite" version="1.0">
        <description>
          Username to be used for authentication.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite" version="1.0">
        <description>
          Password to be usef for authentication.
        </description>
        <syntax hidden="true">
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PPPEncryptionProtocol" access="readOnly" version="1.0">
        <description>
          Describes the PPP encryption protocol used between the WAN device and the ISP POP.
        </description>
        <syntax>
          <string>
            <enumeration value="None" version="1.0"/>
            <enumeration value="MPPE" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPCompressionProtocol" access="readOnly" version="1.0">
        <description>
          Describes the PPP compression protocol used between the WAN device and the ISP POP.
        </description>
        <syntax>
          <string>
            <enumeration value="None" version="1.0"/>
            <enumeration value="Van Jacobsen" version="1.0"/>
            <enumeration value="STAC LZS" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPAuthenticationProtocol" access="readOnly" version="1.0">
        <description>
          Describes the PPP authentication protocol used between the WAN device and the ISP POP.
        </description>
        <syntax>
          <string>
            <enumeration value="PAP" version="1.0"/>
            <enumeration value="CHAP" version="1.0"/>
            <enumeration value="MS-CHAP" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ExternalIPAddress" access="readOnly" version="1.0">
        <description>
          This is the external IP address used by NAT for this connection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="RemoteIPAddress" access="readOnly" version="1.0">
        <description>
          The remote IP address for this connection.
        </description>
        <syntax>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MaxMRUSize" access="readWrite" version="1.0">
        <description>
          The maximum allowed size of frames sent from the remote peer.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="CurrentMRUSize" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The current MRU in use over this connection.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="1540"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="DNSEnabled" access="readWrite" version="1.0">
        <description>
          Whether or not the device SHOULD attempt to query a DNS server across this connection.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="true"/>
        </syntax>
      </parameter>
      <parameter name="DNSOverrideAllowed" access="readWrite" version="1.0">
        <description>
          Whether or not a manually set, non-empty DNS address can be overridden by a DNS entry received from the WAN.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="DNSServers" access="readWrite" version="1.0">
        <description>
          DNS server IP addresses for this connection.  Support for more than three DNS Servers is OPTIONAL.
        </description>
        <syntax>
          <list>
            <size maxLength="64"/>
          </list>
          <dataType ref="IPAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddress" access="readWrite" version="1.0">
        <description>
          The physical address of the ''WANPPPConnection'' if applicable.  Configurable only if {{param|MACAddressOverride}} is present and {{true}}.
          If {{param|TransportType}} is {{enum|PPPoA|TransportType}}, the value of this parameter is irrelevant and MUST be {{empty}}.
        </description>
        <syntax>
          <dataType ref="MACAddress"/>
        </syntax>
      </parameter>
      <parameter name="MACAddressOverride" access="readWrite" version="1.0">
        <description>
          Whether the value of {{param|MACAddress}} parameter can be overridden. If {{false}}, the CPE's default value is used (or restored if it had previously been overridden).
          If {{param|TransportType}} is {{enum|PPPoA|TransportType}}, the value of this parameter is irrelevant and MUST be {{false}}.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransportType" access="readOnly" version="1.0">
        <description>
          PPP transport type of the connection.
        </description>
        <syntax>
          <string>
            <enumeration value="PPPoA" version="1.0"/>
            <enumeration value="PPPoE" version="1.0"/>
            <enumeration value="L2TP" version="1.0">
              <description>
                for future use
              </description>
            </enumeration>
            <enumeration value="PPTP" version="1.0">
              <description>
                for future use
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="PPPoEACName" access="readWrite" version="1.0">
        <description>
          PPPoE Access Concentrator.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PPPoEServiceName" access="readWrite" version="1.0">
        <description>
          PPPoE Service Name.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ConnectionTrigger" access="readWrite" version="1.0">
        <description>
          Trigger used to establish the PPP connection.  {{enum}}
          The above values are defined as follows:
          * {{enum|OnDemand}}: If this PPP connection is disconnected for any reason, it is to remain disconnected until the CPE has one or more packets to communicate over this connection, at which time the CPE automatically attempts to reestablish the connection.
          * {{enum|AlwaysOn}}: If this PPP connection is disconnected for any reason, the CPE automatically attempts to reestablish the connection (and continues to attempt to reestablish the connection as long it remains disconnected).
          * {{enum|Manual}}: If this PPP connection is disconnected for any reason, it is to remain disconnected until the user of the CPE explicitly instructs the CPE to reestablish the connection.
          Note that the reason for a PPP connection becoming disconnected to begin with might be either external to the CPE, such as termination by the BRAS or momentary disconnection of the physical interface, or internal to the CPE, such as use of the {{param|IdleDisconnectTime}} and/or {{param|AutoDisconnectTime}} parameters in this object.
        </description>
        <syntax>
          <string>
            <enumeration value="OnDemand" version="1.0"/>
            <enumeration value="AlwaysOn" version="1.0"/>
            <enumeration value="Manual" version="1.0"/>
          </string>
          <default type="object" value="OnDemand"/>
        </syntax>
      </parameter>
      <parameter name="RouteProtocolRx" access="readWrite" version="1.0">
        <description>
          Defines the Rx protocol to be used.
        </description>
        <syntax>
          <string>
            <enumeration value="Off" version="1.0"/>
            <enumeration value="RIPv1" optional="true" version="1.0"/>
            <enumeration value="RIPv2" optional="true" version="1.0"/>
            <enumeration value="OSPF" optional="true" version="1.0"/>
          </string>
          <default type="object" value="Off"/>
        </syntax>
      </parameter>
      <parameter name="PPPLCPEcho" access="readOnly" version="1.0">
        <description>
          PPP LCP Echo period in seconds.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PPPLCPEchoRetry" access="readOnly" version="1.0">
        <description>
          Number of PPP LCP Echo retries within an echo period.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ShapingRate" access="readWrite" version="1.0">
        <description>
          Rate to shape this connection's egress traffic to.  For leaky bucket (constant rate shaping), this is the constant rate.  For token bucket (variable rate shaping), this is the average rate.
          If &lt;= 100, in percent of the rate of the highest rate-constrained layer over which the packet will travel on egress.
          If &gt; 100, in bits per second.
          A value of -1 indicates no shaping.
          For example, for packets destined for a WAN DSL interface, if the ATM layer is rate-constrained, then the rate is calculated relative to this rate.  Otherwise, the rate is calculated relative to the physical-layer DSL rate.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="object" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="ShapingBurstSize" access="readWrite" version="1.0">
        <description>
          Burst size in bytes.  For both leaky bucket (constant rate shaping) and token bucket (variable rate shaping) this is the bucket size and is therefore the maximum burst size.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0" status="deleted"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingNumberOfEntries" access="readOnly" version="1.0">
        <description>
          Total number of port mapping entries.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}." access="readWrite" numEntriesParameter="PortMappingNumberOfEntries" enableParameter="PortMappingEnabled" minEntries="0" maxEntries="unbounded" version="1.0">
      <description>
        Port mapping table.
        This table MUST contain all NAT port mappings associated with this connection, including static and dynamic port mappings programmatically created via local control protocol, such as UPnP.
        This table MUST NOT contain dynamic NAT binding entries associated with the normal operation of NAT.
        At most one entry in an instance of this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.  If the ACS attempts to set the parameters of an existing entry such that this requirement would be violated, the CPE MUST reject the request.  In this case, the SetParameterValues response MUST include a SetParameterValuesFault element for each parameter in the corresponding request whose modification would have resulted in such a violation.  On creation of a new table entry, the CPE MUST choose default values for {{param|ExternalPort}} and {{param|PortMappingProtocol}} such that the new entry does not conflict with any existing entry.
      </description>
      <uniqueKey>
        <parameter ref="RemoteHost"/>
        <parameter ref="ExternalPort"/>
        <parameter ref="PortMappingProtocol"/>
      </uniqueKey>
      <parameter name="PortMappingEnabled" access="readWrite" version="1.0">
        <description>
          Enables or disables the port mapping instance.  On creation, an entry is disabled by default.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PortMappingLeaseDuration" access="readWrite" activeNotify="canDeny" version="1.0">
        <description>
          Determines the time to live, in seconds, of a port-mapping lease, where "time to live" means the number of seconds before the port mapping expires.
          A value of 0 means the port mapping is static. Support for dynamic (non-static) port mappings is OPTIONAL.  That is, the only value for {{param}} that MUST be supported is 0.
          For a dynamic (non-static) port mapping, when this parameter is read, the value represents the time remaining on the port-mapping lease.  That is, for a dynamic port mapping, the value counts down toward 0.  When a dynamic port-mapping lease expires, the CPE MUST automatically terminate that port mapping, and MUST automatically delete the corresponding ''PortMapping'' table entry.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="RemoteHost" access="readWrite" version="1.0">
        <description>
          This parameter is the IP address of the source of inbound packets.  {{empty}} indicates a "wildcard" (this will be a wildcard in most cases).  CPE are REQUIRED only to support wildcards.
          When {{param}} is a wildcard, all traffic sent to the {{param|ExternalPort}} on the WAN interface of the gateway is forwarded to the {{param|InternalClient}} on the {{param|InternalPort}}.
          When {{param}} is specified as one external IP address, the NAT will only forward inbound packets from this {{param}} to the {{param|InternalClient}}, all other packets will be dropped.
          If a CPE supports non-wildcard values for {{param}}, it MAY additionally support the ability to have more than one port mapping with the same {{param|ExternalPort}} and {{param|PortMappingProtocol}}, but with differing values of {{param}}.
          When wildcard values are used for {{param}} and/or {{param|ExternalPort}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param}}, explicit {{param|ExternalPort}}
          # Explicit {{param}}, wildcard {{param|ExternalPort}}
          # Wildcard {{param}}, explicit {{param|ExternalPort}}
          # Wildcard {{param}}, wildcard {{param|ExternalPort}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param}}, {{param|ExternalPort}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="ExternalPort" access="readWrite" version="1.0">
        <description>
          The external port (or the first port of a range of external ports) that the NAT gateway would listen on for connection requests to a corresponding {{param|InternalPort}}. Inbound packets to this external port on the WAN interface SHOULD be forwarded to {{param|InternalClient}} on the {{param|InternalPort}}.
          A value of zero (0) represents a "wildcard".  If this value is a wildcard, connection request on all external ports (that are not otherwise mapped) will be forwarded to {{param|InternalClient}}.  In the wildcard case, the value(s) of {{param|InternalPort}} on {{param|InternalClient}} are ignored.
          When wildcard values are used for {{param|RemoteHost}} and/or {{param}}, the following precedence order applies (with the highest precedence listed first):
          # Explicit {{param|RemoteHost}}, explicit {{param}}
          # Explicit {{param|RemoteHost}}, wildcard {{param}}
          # Wildcard {{param|RemoteHost}}, explicit {{param}}
          # Wildcard {{param|RemoteHost}}, wildcard {{param}}
          If an incoming packet matches the criteria associated with more than one entry in this table, the CPE MUST apply the port mapping associated with the highest precedence entry.
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param}}, and {{param|PortMappingProtocol}}.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="ExternalPortEndRange" access="readWrite" version="1.0">
        <description>
          Indicates the last port of the external port range that starts with {{param|ExternalPort}}.
          If an external port range is specified, then the behavior described for {{param|ExternalPort}} applies to all ports within the range.
          A value of zero (0) indicates that no external port range is specified, i.e. that the range consists only of {{param|ExternalPort}}.
          If {{param|ExternalPort}} is zero (wildcard), the value of this parameter MUST be ignored.
          If specified, the value of this parameter MUST be greater than or equal to the value of {{param|ExternalPort}}.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="InternalPort" access="readWrite" version="1.0">
        <description>
          The port on {{param|InternalClient}} that the gateway SHOULD forward connection requests to.  A value of zero (0) is not allowed.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="PortMappingProtocol" access="readWrite" version="1.0">
        <description>
          The protocol of the port mapping.  {{enum}}
          At most one entry in this table can exist with all of the same values for {{param|RemoteHost}}, {{param|ExternalPort}}, and {{param}}.
        </description>
        <syntax>
          <string>
            <enumeration value="TCP" version="1.0"/>
            <enumeration value="UDP" version="1.0"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="InternalClient" access="readWrite" version="1.0">
        <description>
          The IP address or DNS host name of an internal client (on the LAN).
          Support for an IP address is mandatory.  If {{param}} is specified as an IP address and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with the original IP address.
          Support for DNS host names is OPTIONAL.  If {{param}} is specified as a DNS host name and the LAN device's IP address subsequently changes, the port mapping MUST remain associated with this LAN device.  In this case, it is the responsibility of the CPE to maintain the name-to-address mapping in the event of IP address changes.  This can be accomplished, for example, by assigning the DNS host name via use of DHCP option 12 (Host Name) or option 81 (FQDN).  Note that the ACS can learn the host name associated with a given LAN device via the ''Hosts'' table ({{object|InternetGatewayDevice.LANDevice.{i}.Hosts}}).
          Read access to this parameter MUST always return the exact value that was last set by the ACS.  For example, if the internal client is set to a DNS host name, it MUST read back as a DNS host name and not as an IP address.
          {{empty}} indicates an unconfigured {{param}}. If this parameter is unconfigured, this port mapping MUST NOT be operational.
          It MUST be possible to set the {{param}} to the broadcast IP address 255.255.255.255 for UDP mappings. This is to enable multiple NAT clients to use the same well-known port simultaneously.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="PortMappingDescription" access="readWrite" version="1.0">
        <description>
          User-readable description of this port mapping.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
    <object name="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats." access="readOnly" minEntries="1" maxEntries="1" version="1.0">
      <description>
        This object contains statistics for all connections within the same ''WANConnectionDevice'' that share a common MAC address.  The contents of this object SHOULD be identical for each such connection.
        This object is intended only for ''WANConnectionDevice''s that can support an Ethernet-layer on this interface (e.g., ''PPPoE'', ''IPoE'').
      </description>
      <parameter name="EthernetBytesSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes transmitted, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBytesReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of bytes received, including framing characters, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets transmitted over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets which were received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets that could not be transmitted because of errors, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetErrorsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets that contained errors preventing them from being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission which were not addressed to a multicast or broadcast address, including those that were discarded or not sent, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnicastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were not addressed to a multicast or broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of outbound packets which were chosen to be discarded even though no errors had been detected to prevent their being transmitted, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetDiscardPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of inbound packets which were chosen to be discarded even though no errors had been detected to prevent their being deliverable, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.  One possible reason for discarding such a packet could be to free up buffer space.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetMulticastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a multicast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsSent" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets requested for transmission, including those that were discarded or not sent, which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetBroadcastPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of received packets which were addressed to a broadcast address, over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
      <parameter name="EthernetUnknownProtoPacketsReceived" access="readOnly" activeNotify="canDeny" version="1.0">
        <description>
          The total number of packets which were discarded because of an unknown or unsupported protocol, received over all connections within the same ''WANConnectionDevice'' that share a common MAC address.
          The value of this counter MAY be reset to zero when the CPE is rebooted.
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>
    <profile name="Baseline:1" version="1.0">
      <object ref="InternetGatewayDevice." requirement="present">
        <parameter ref="DeviceSummary" requirement="readOnly"/>
        <parameter ref="LANDeviceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="WANDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.DeviceInfo." requirement="present">
        <parameter ref="Manufacturer" requirement="readOnly"/>
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="ModelName" requirement="readOnly"/>
        <parameter ref="Description" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="HardwareVersion" requirement="readOnly"/>
        <parameter ref="SoftwareVersion" requirement="readOnly"/>
        <parameter ref="SpecVersion" requirement="readOnly"/>
        <parameter ref="ProvisioningCode" requirement="readWrite"/>
        <parameter ref="UpTime" requirement="readOnly"/>
        <parameter ref="DeviceLog" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.ManagementServer." requirement="present">
        <parameter ref="URL" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="PeriodicInformEnable" requirement="readWrite"/>
        <parameter ref="PeriodicInformInterval" requirement="readWrite"/>
        <parameter ref="PeriodicInformTime" requirement="readWrite"/>
        <parameter ref="ParameterKey" requirement="readOnly"/>
        <parameter ref="ConnectionRequestURL" requirement="readOnly"/>
        <parameter ref="ConnectionRequestUsername" requirement="readWrite"/>
        <parameter ref="ConnectionRequestPassword" requirement="readWrite"/>
        <parameter ref="UpgradesManaged" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer3Forwarding." requirement="present">
        <parameter ref="DefaultConnectionService" requirement="readWrite"/>
        <parameter ref="ForwardNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Type" requirement="readWrite"/>
        <parameter ref="DestIPAddress" requirement="readWrite"/>
        <parameter ref="DestSubnetMask" requirement="readWrite"/>
        <parameter ref="SourceIPAddress" requirement="readWrite"/>
        <parameter ref="SourceSubnetMask" requirement="readWrite"/>
        <parameter ref="GatewayIPAddress" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="ForwardingMetric" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANConfigSecurity." requirement="present">
        <parameter ref="ConfigPassword" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}." requirement="present">
        <parameter ref="LANEthernetInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANUSBInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANWLANConfigurationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="DHCPServerConfigurable" requirement="readWrite"/>
        <parameter ref="DHCPServerEnable" requirement="readWrite"/>
        <parameter ref="DHCPRelay" requirement="readOnly"/>
        <parameter ref="MinAddress" requirement="readWrite"/>
        <parameter ref="MaxAddress" requirement="readWrite"/>
        <parameter ref="ReservedAddresses" requirement="readWrite"/>
        <parameter ref="SubnetMask" requirement="readWrite"/>
        <parameter ref="DNSServers" requirement="readWrite"/>
        <parameter ref="DomainName" requirement="readWrite"/>
        <parameter ref="IPRouters" requirement="readWrite"/>
        <parameter ref="IPInterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="IPInterfaceIPAddress" requirement="readWrite"/>
        <parameter ref="IPInterfaceSubnetMask" requirement="readWrite"/>
        <parameter ref="IPInterfaceAddressingType" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.Hosts." requirement="present">
        <parameter ref="HostNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}." requirement="present">
        <parameter ref="IPAddress" requirement="readOnly"/>
        <parameter ref="AddressSource" requirement="readOnly"/>
        <parameter ref="LeaseTimeRemaining" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="HostName" requirement="readOnly"/>
        <parameter ref="InterfaceType" requirement="readOnly"/>
        <parameter ref="Active" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}." requirement="present">
        <parameter ref="WANConnectionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig." requirement="present">
        <parameter ref="EnabledForInternet" requirement="readOnly"/>
        <parameter ref="WANAccessType" requirement="readOnly"/>
        <parameter ref="Layer1UpstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="Layer1DownstreamMaxBitRate" requirement="readOnly"/>
        <parameter ref="PhysicalLinkStatus" requirement="readOnly"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalPacketsSent" requirement="readOnly"/>
        <parameter ref="TotalPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="present">
        <parameter ref="WANIPConnectionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="WANPPPConnectionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ConnectionStatus" requirement="readOnly"/>
        <parameter ref="PossibleConnectionTypes" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Uptime" requirement="readOnly"/>
        <parameter ref="LastConnectionError" requirement="readOnly"/>
        <parameter ref="RSIPAvailable" requirement="readOnly"/>
        <parameter ref="NATEnabled" requirement="readWrite"/>
        <parameter ref="AddressingType" requirement="readOnly"/>
        <parameter ref="ExternalIPAddress" requirement="readOnly"/>
        <parameter ref="SubnetMask" requirement="readOnly"/>
        <parameter ref="DefaultGateway" requirement="readOnly"/>
        <parameter ref="DNSEnabled" requirement="readOnly"/>
        <parameter ref="DNSOverrideAllowed" requirement="readOnly"/>
        <parameter ref="DNSServers" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="ConnectionTrigger" requirement="readWrite"/>
        <parameter ref="RouteProtocolRx" requirement="readWrite"/>
        <parameter ref="PortMappingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}." requirement="createDelete">
        <parameter ref="PortMappingEnabled" requirement="readWrite"/>
        <parameter ref="PortMappingLeaseDuration" requirement="readOnly"/>
        <parameter ref="RemoteHost" requirement="readWrite"/>
        <parameter ref="ExternalPort" requirement="readWrite"/>
        <parameter ref="InternalPort" requirement="readWrite"/>
        <parameter ref="PortMappingProtocol" requirement="readWrite"/>
        <parameter ref="InternalClient" requirement="readWrite"/>
        <parameter ref="PortMappingDescription" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetBytesSent" requirement="readOnly"/>
        <parameter ref="EthernetBytesReceived" requirement="readOnly"/>
        <parameter ref="EthernetPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="ConnectionStatus" requirement="readOnly"/>
        <parameter ref="PossibleConnectionTypes" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readWrite"/>
        <parameter ref="Name" requirement="readWrite"/>
        <parameter ref="Uptime" requirement="readOnly"/>
        <parameter ref="LastConnectionError" requirement="readOnly"/>
        <parameter ref="RSIPAvailable" requirement="readOnly"/>
        <parameter ref="NATEnabled" requirement="readWrite"/>
        <parameter ref="Username" requirement="readWrite"/>
        <parameter ref="Password" requirement="readWrite"/>
        <parameter ref="ExternalIPAddress" requirement="readOnly"/>
        <parameter ref="DNSEnabled" requirement="readOnly"/>
        <parameter ref="DNSOverrideAllowed" requirement="readOnly"/>
        <parameter ref="DNSServers" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="TransportType" requirement="readOnly"/>
        <parameter ref="PPPoEACName" requirement="readWrite"/>
        <parameter ref="PPPoEServiceName" requirement="readWrite"/>
        <parameter ref="ConnectionTrigger" requirement="readWrite"/>
        <parameter ref="RouteProtocolRx" requirement="readWrite"/>
        <parameter ref="PortMappingNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}." requirement="createDelete">
        <parameter ref="PortMappingEnabled" requirement="readWrite"/>
        <parameter ref="PortMappingLeaseDuration" requirement="readOnly"/>
        <parameter ref="RemoteHost" requirement="readWrite"/>
        <parameter ref="ExternalPort" requirement="readWrite"/>
        <parameter ref="InternalPort" requirement="readWrite"/>
        <parameter ref="PortMappingProtocol" requirement="readWrite"/>
        <parameter ref="InternalClient" requirement="readWrite"/>
        <parameter ref="PortMappingDescription" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetBytesSent" requirement="readOnly"/>
        <parameter ref="EthernetBytesReceived" requirement="readOnly"/>
        <parameter ref="EthernetPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="DuplexMode" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="USBLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="Standard" requirement="readOnly"/>
        <parameter ref="Type" requirement="readOnly"/>
        <parameter ref="Rate" requirement="readOnly"/>
        <parameter ref="Power" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="CellsSent" requirement="readOnly"/>
        <parameter ref="CellsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="BSSID" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="Channel" requirement="readWrite"/>
        <parameter ref="SSID" requirement="readWrite"/>
        <parameter ref="BeaconType" requirement="readWrite"/>
        <parameter ref="MACAddressControlEnabled" requirement="readWrite"/>
        <parameter ref="Standard" requirement="readOnly"/>
        <parameter ref="WEPKeyIndex" requirement="readWrite"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
        <parameter ref="WEPEncryptionLevel" requirement="readOnly"/>
        <parameter ref="BasicEncryptionModes" requirement="readWrite"/>
        <parameter ref="BasicAuthenticationMode" requirement="readWrite"/>
        <parameter ref="WPAEncryptionModes" requirement="readWrite"/>
        <parameter ref="WPAAuthenticationMode" requirement="readWrite"/>
        <parameter ref="PossibleChannels" requirement="readOnly"/>
        <parameter ref="BasicDataTransmitRates" requirement="readWrite"/>
        <parameter ref="OperationalDataTransmitRates" requirement="readWrite"/>
        <parameter ref="PossibleDataTransmitRates" requirement="readOnly"/>
        <parameter ref="RadioEnabled" requirement="readWrite"/>
        <parameter ref="AutoRateFallBackEnabled" requirement="readWrite"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalPacketsSent" requirement="readOnly"/>
        <parameter ref="TotalPacketsReceived" requirement="readOnly"/>
        <parameter ref="TotalAssociations" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}." requirement="present">
        <parameter ref="AssociatedDeviceMACAddress" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceIPAddress" requirement="readOnly"/>
        <parameter ref="AssociatedDeviceAuthenticationState" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}." requirement="present">
        <parameter ref="WEPKey" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}." requirement="present">
        <parameter ref="PreSharedKey" requirement="readWrite"/>
        <parameter ref="KeyPassphrase" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ADSLWAN:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="UpstreamCurrRate" requirement="readOnly"/>
        <parameter ref="DownstreamCurrRate" requirement="readOnly"/>
        <parameter ref="UpstreamMaxRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="ATURVendor" requirement="readOnly"/>
        <parameter ref="ATURCountry" requirement="readOnly"/>
        <parameter ref="ATUCVendor" requirement="readOnly"/>
        <parameter ref="ATUCCountry" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats." requirement="present"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total." requirement="present">
        <parameter ref="ReceiveBlocks" requirement="readOnly"/>
        <parameter ref="TransmitBlocks" requirement="readOnly"/>
        <parameter ref="CellDelin" requirement="readOnly"/>
        <parameter ref="LinkRetrain" requirement="readOnly"/>
        <parameter ref="InitErrors" requirement="readOnly"/>
        <parameter ref="InitTimeouts" requirement="readOnly"/>
        <parameter ref="LossOfFraming" requirement="readOnly"/>
        <parameter ref="ErroredSecs" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSecs" requirement="readOnly"/>
        <parameter ref="FECErrors" requirement="readOnly"/>
        <parameter ref="ATUCFECErrors" requirement="readOnly"/>
        <parameter ref="HECErrors" requirement="readOnly"/>
        <parameter ref="ATUCHECErrors" requirement="readOnly"/>
        <parameter ref="CRCErrors" requirement="readOnly"/>
        <parameter ref="ATUCCRCErrors" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Showtime." requirement="present">
        <parameter ref="ReceiveBlocks" requirement="readOnly"/>
        <parameter ref="TransmitBlocks" requirement="readOnly"/>
        <parameter ref="CellDelin" requirement="readOnly"/>
        <parameter ref="LinkRetrain" requirement="readOnly"/>
        <parameter ref="InitErrors" requirement="readOnly"/>
        <parameter ref="InitTimeouts" requirement="readOnly"/>
        <parameter ref="LossOfFraming" requirement="readOnly"/>
        <parameter ref="ErroredSecs" requirement="readOnly"/>
        <parameter ref="SeverelyErroredSecs" requirement="readOnly"/>
        <parameter ref="FECErrors" requirement="readOnly"/>
        <parameter ref="ATUCFECErrors" requirement="readOnly"/>
        <parameter ref="HECErrors" requirement="readOnly"/>
        <parameter ref="ATUCHECErrors" requirement="readOnly"/>
        <parameter ref="CRCErrors" requirement="readOnly"/>
        <parameter ref="ATUCCRCErrors" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement." requirement="present">
        <parameter ref="ConnectionServiceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLConnectionManagement.ConnectionService.{i}." requirement="present">
        <parameter ref="WANConnectionDevice" requirement="readOnly"/>
        <parameter ref="WANConnectionService" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readOnly"/>
        <parameter ref="ConnectionType" requirement="readOnly"/>
        <parameter ref="Name" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="createDelete"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="AutoConfig" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="ATMTransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ATMReceivedBlocks" requirement="readOnly"/>
        <parameter ref="AAL5CRCErrors" requirement="readOnly"/>
        <parameter ref="ATMCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2WAN:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationSupported" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationRequested" requirement="readWrite"/>
        <parameter ref="LinkEncapsulationUsed" requirement="readOnly"/>
        <parameter ref="StandardsSupported" requirement="readOnly"/>
        <parameter ref="StandardUsed" requirement="readOnly"/>
        <parameter ref="UpstreamMaxRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams." requirement="present">
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNds" requirement="readOnly"/>
        <parameter ref="LATNus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="createDelete"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="AutoConfig" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="ATMTransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ATMReceivedBlocks" requirement="readOnly"/>
        <parameter ref="ATMCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2WAN:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationSupported" requirement="readOnly"/>
        <parameter ref="LinkEncapsulationRequested" requirement="readWrite"/>
        <parameter ref="LinkEncapsulationUsed" requirement="readOnly"/>
        <parameter ref="StandardsSupported" requirement="readOnly"/>
        <parameter ref="StandardUsed" requirement="readOnly"/>
        <parameter ref="AllowedProfiles" requirement="readOnly"/>
        <parameter ref="CurrentProfile" requirement="readOnly"/>
        <parameter ref="UPBOKLE" requirement="readOnly"/>
        <parameter ref="UpstreamMaxRate" requirement="readOnly"/>
        <parameter ref="DownstreamMaxRate" requirement="readOnly"/>
        <parameter ref="UpstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="DownstreamNoiseMargin" requirement="readOnly"/>
        <parameter ref="UpstreamAttenuation" requirement="readOnly"/>
        <parameter ref="DownstreamAttenuation" requirement="readOnly"/>
        <parameter ref="UpstreamPower" requirement="readOnly"/>
        <parameter ref="DownstreamPower" requirement="readOnly"/>
        <parameter ref="TRELLISds" requirement="readOnly"/>
        <parameter ref="TRELLISus" requirement="readOnly"/>
        <parameter ref="ACTSNRMODEds" requirement="readOnly"/>
        <parameter ref="ACTSNRMODEus" requirement="readOnly"/>
        <parameter ref="ACTUALCE" requirement="readOnly"/>
        <parameter ref="SNRMpbds" requirement="readOnly"/>
        <parameter ref="SNRMpbus" requirement="readOnly"/>
        <parameter ref="TotalStart" requirement="readOnly"/>
        <parameter ref="ShowtimeStart" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams." requirement="present">
        <parameter ref="HLOGGds" requirement="readOnly"/>
        <parameter ref="HLOGGus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNGds" requirement="readOnly"/>
        <parameter ref="QLNGus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNds" requirement="readOnly"/>
        <parameter ref="LATNus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}." requirement="createDelete"/>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readWrite"/>
        <parameter ref="AutoConfig" requirement="readOnly"/>
        <parameter ref="DestinationAddress" requirement="readWrite"/>
        <parameter ref="ATMTransmittedBlocks" requirement="readOnly"/>
        <parameter ref="ATMReceivedBlocks" requirement="readOnly"/>
        <parameter ref="ATMCRCErrors" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="PTMWAN:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="FramesSent" requirement="readOnly"/>
        <parameter ref="FramesReceived" requirement="readOnly"/>
        <parameter ref="OOSNearEnd" requirement="readOnly"/>
        <parameter ref="OOSFarEnd" requirement="readOnly"/>
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetWAN:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="MACAddress" requirement="readOnly"/>
        <parameter ref="MaxBitRate" requirement="readWrite"/>
        <parameter ref="DuplexMode" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats." requirement="present">
        <parameter ref="BytesSent" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="PacketsSent" requirement="readOnly"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig." requirement="present">
        <parameter ref="EthernetLinkStatus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="POTSWAN:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPOTSLinkConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="LinkStatus" requirement="readOnly"/>
        <parameter ref="ISPPhoneNumber" requirement="readOnly"/>
        <parameter ref="ISPInfo" requirement="readOnly"/>
        <parameter ref="LinkType" requirement="readOnly"/>
        <parameter ref="NumberOfRetries" requirement="readOnly"/>
        <parameter ref="DelayBetweenRetries" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="QoS:1" version="1.0">
      <object ref="InternetGatewayDevice.QueueManagement." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="MaxQueues" requirement="readOnly"/>
        <parameter ref="MaxClassificationEntries" requirement="readOnly"/>
        <parameter ref="ClassificationNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxAppEntries" requirement="readOnly"/>
        <parameter ref="AppNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxFlowEntries" requirement="readOnly"/>
        <parameter ref="FlowNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxPolicerEntries" requirement="readOnly"/>
        <parameter ref="PolicerNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MaxQueueEntries" requirement="readOnly"/>
        <parameter ref="QueueNumberOfEntries" requirement="readOnly"/>
        <parameter ref="DefaultForwardingPolicy" requirement="readWrite"/>
        <parameter ref="DefaultPolicer" requirement="readWrite"/>
        <parameter ref="DefaultQueue" requirement="readWrite"/>
        <parameter ref="DefaultDSCPMark" requirement="readWrite"/>
        <parameter ref="DefaultEthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="AvailableAppList" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Classification.{i}." requirement="createDelete">
        <parameter ref="ClassificationKey" requirement="readOnly"/>
        <parameter ref="ClassificationEnable" requirement="readWrite"/>
        <parameter ref="ClassificationStatus" requirement="readOnly"/>
        <parameter ref="ClassificationOrder" requirement="readWrite"/>
        <parameter ref="ClassInterface" requirement="readWrite"/>
        <parameter ref="DestIP" requirement="readWrite"/>
        <parameter ref="DestMask" requirement="readWrite"/>
        <parameter ref="DestIPExclude" requirement="readWrite"/>
        <parameter ref="SourceIP" requirement="readWrite"/>
        <parameter ref="SourceMask" requirement="readWrite"/>
        <parameter ref="SourceIPExclude" requirement="readWrite"/>
        <parameter ref="Protocol" requirement="readWrite"/>
        <parameter ref="ProtocolExclude" requirement="readWrite"/>
        <parameter ref="DestPort" requirement="readWrite"/>
        <parameter ref="DestPortRangeMax" requirement="readWrite"/>
        <parameter ref="DestPortExclude" requirement="readWrite"/>
        <parameter ref="SourcePort" requirement="readWrite"/>
        <parameter ref="SourcePortRangeMax" requirement="readWrite"/>
        <parameter ref="SourcePortExclude" requirement="readWrite"/>
        <parameter ref="SourceMACAddress" requirement="readWrite"/>
        <parameter ref="SourceMACExclude" requirement="readWrite"/>
        <parameter ref="DestMACAddress" requirement="readWrite"/>
        <parameter ref="DestMACExclude" requirement="readWrite"/>
        <parameter ref="DSCPCheck" requirement="readWrite"/>
        <parameter ref="DSCPExclude" requirement="readWrite"/>
        <parameter ref="DSCPMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityCheck" requirement="readWrite"/>
        <parameter ref="EthernetPriorityExclude" requirement="readWrite"/>
        <parameter ref="EthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="VLANIDCheck" requirement="readWrite"/>
        <parameter ref="VLANIDExclude" requirement="readWrite"/>
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
        <parameter ref="ClassPolicer" requirement="readWrite"/>
        <parameter ref="ClassQueue" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Policer.{i}." requirement="createDelete">
        <parameter ref="PolicerKey" requirement="readOnly"/>
        <parameter ref="PolicerEnable" requirement="readWrite"/>
        <parameter ref="PolicerStatus" requirement="readOnly"/>
        <parameter ref="CommittedRate" requirement="readWrite"/>
        <parameter ref="CommittedBurstSize" requirement="readWrite"/>
        <parameter ref="MeterType" requirement="readWrite"/>
        <parameter ref="PossibleMeterTypes" requirement="readOnly"/>
        <parameter ref="ConformingAction" requirement="readWrite"/>
        <parameter ref="NonConformingAction" requirement="readWrite"/>
        <parameter ref="CountedPackets" requirement="readOnly"/>
        <parameter ref="CountedBytes" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Queue.{i}." requirement="createDelete">
        <parameter ref="QueueKey" requirement="readOnly"/>
        <parameter ref="QueueEnable" requirement="readWrite"/>
        <parameter ref="QueueStatus" requirement="readOnly"/>
        <parameter ref="QueueInterface" requirement="readWrite"/>
        <parameter ref="QueueBufferLength" requirement="readOnly"/>
        <parameter ref="QueueWeight" requirement="readWrite"/>
        <parameter ref="QueuePrecedence" requirement="readWrite"/>
        <parameter ref="REDThreshold" requirement="readWrite"/>
        <parameter ref="REDPercentage" requirement="readWrite"/>
        <parameter ref="DropAlgorithm" requirement="readWrite"/>
        <parameter ref="SchedulerAlgorithm" requirement="readWrite"/>
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." requirement="notSpecified">
        <parameter ref="ForwardingPolicy" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." requirement="notSpecified">
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." requirement="notSpecified">
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSDynamicFlow:1" version="1.0">
      <object ref="InternetGatewayDevice.QueueManagement.App.{i}." requirement="createDelete">
        <parameter ref="AppKey" requirement="readOnly"/>
        <parameter ref="AppEnable" requirement="readWrite"/>
        <parameter ref="AppStatus" requirement="readOnly"/>
        <parameter ref="ProtocolIdentifier" requirement="readWrite"/>
        <parameter ref="AppName" requirement="readWrite"/>
        <parameter ref="AppDefaultForwardingPolicy" requirement="readWrite"/>
        <parameter ref="AppDefaultPolicer" requirement="readWrite"/>
        <parameter ref="AppDefaultQueue" requirement="readWrite"/>
        <parameter ref="AppDefaultDSCPMark" requirement="readWrite"/>
        <parameter ref="AppDefaultEthernetPriorityMark" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Flow.{i}." requirement="createDelete">
        <parameter ref="FlowKey" requirement="readOnly"/>
        <parameter ref="FlowEnable" requirement="readWrite"/>
        <parameter ref="FlowStatus" requirement="readOnly"/>
        <parameter ref="FlowType" requirement="readWrite"/>
        <parameter ref="FlowTypeParameters" requirement="readWrite"/>
        <parameter ref="FlowName" requirement="readWrite"/>
        <parameter ref="AppIdentifier" requirement="readWrite"/>
        <parameter ref="FlowForwardingPolicy" requirement="readWrite"/>
        <parameter ref="FlowPolicer" requirement="readWrite"/>
        <parameter ref="FlowQueue" requirement="readWrite"/>
        <parameter ref="FlowDSCPMark" requirement="readWrite"/>
        <parameter ref="FlowEthernetPriorityMark" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Classification.{i}." requirement="notSpecified">
        <parameter ref="ClassApp" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Bridging:1" version="1.0">
      <object ref="InternetGatewayDevice.Layer2Bridging." requirement="present">
        <parameter ref="MaxBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxFilterEntries" requirement="readOnly"/>
        <parameter ref="MaxMarkingEntries" requirement="readOnly"/>
        <parameter ref="BridgeNumberOfEntries" requirement="readOnly"/>
        <parameter ref="FilterNumberOfEntries" requirement="readOnly"/>
        <parameter ref="MarkingNumberOfEntries" requirement="readOnly"/>
        <parameter ref="AvailableInterfaceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." requirement="createDelete">
        <parameter ref="BridgeKey" requirement="readOnly"/>
        <parameter ref="BridgeEnable" requirement="readWrite"/>
        <parameter ref="BridgeStatus" requirement="readOnly"/>
        <parameter ref="BridgeName" requirement="readWrite"/>
        <parameter ref="VLANID" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Filter.{i}." requirement="createDelete">
        <parameter ref="FilterKey" requirement="readOnly"/>
        <parameter ref="FilterEnable" requirement="readWrite"/>
        <parameter ref="FilterStatus" requirement="readOnly"/>
        <parameter ref="FilterBridgeReference" requirement="readWrite"/>
        <parameter ref="ExclusivityOrder" requirement="readWrite"/>
        <parameter ref="FilterInterface" requirement="readWrite"/>
        <parameter ref="VLANIDFilter" requirement="readWrite"/>
        <parameter ref="AdmitOnlyVLANTagged" requirement="readWrite"/>
        <parameter ref="EthertypeFilterList" requirement="readWrite"/>
        <parameter ref="EthertypeFilterExclude" requirement="readWrite"/>
        <parameter ref="SourceMACAddressFilterList" requirement="readWrite"/>
        <parameter ref="SourceMACAddressFilterExclude" requirement="readWrite"/>
        <parameter ref="DestMACAddressFilterList" requirement="readWrite"/>
        <parameter ref="DestMACAddressFilterExclude" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Marking.{i}." requirement="createDelete">
        <parameter ref="MarkingKey" requirement="readOnly"/>
        <parameter ref="MarkingEnable" requirement="readWrite"/>
        <parameter ref="MarkingStatus" requirement="readOnly"/>
        <parameter ref="MarkingBridgeReference" requirement="readWrite"/>
        <parameter ref="MarkingInterface" requirement="readWrite"/>
        <parameter ref="VLANIDUntag" requirement="readWrite"/>
        <parameter ref="VLANIDMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityMark" requirement="readWrite"/>
        <parameter ref="EthernetPriorityOverride" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}." requirement="present">
        <parameter ref="AvailableInterfaceKey" requirement="readOnly"/>
        <parameter ref="InterfaceType" requirement="readOnly"/>
        <parameter ref="InterfaceReference" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Time:1" version="1.0">
      <object ref="InternetGatewayDevice.Time." requirement="present">
        <parameter ref="NTPServer1" requirement="readWrite"/>
        <parameter ref="NTPServer2" requirement="readWrite"/>
        <parameter ref="CurrentLocalTime" requirement="readOnly"/>
        <parameter ref="LocalTimeZone" requirement="readWrite"/>
        <parameter ref="LocalTimeZoneName" requirement="readWrite"/>
        <parameter ref="DaylightSavingsUsed" requirement="readWrite"/>
        <parameter ref="DaylightSavingsStart" requirement="readWrite"/>
        <parameter ref="DaylightSavingsEnd" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="IPPing:1" version="1.0">
      <object ref="InternetGatewayDevice.IPPingDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="TraceRoute:1" version="1.0">
      <object ref="InternetGatewayDevice.TraceRouteDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="Host" requirement="readWrite"/>
        <parameter ref="NumberOfTries" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="DataBlockSize" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="MaxHopCount" requirement="readWrite"/>
        <parameter ref="ResponseTime" requirement="readOnly"/>
        <parameter ref="RouteHopsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.TraceRouteDiagnostics.RouteHops.{i}." requirement="present">
        <parameter ref="HopHost" requirement="readOnly"/>
        <parameter ref="HopHostAddress" requirement="readOnly"/>
        <parameter ref="HopErrorCode" requirement="readOnly"/>
        <parameter ref="HopRTTimes" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Download:1" version="1.0">
      <object ref="InternetGatewayDevice.Capabilities.PerformanceDiagnostic." requirement="present">
        <parameter ref="DownloadTransports" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.DownloadDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="DownloadURL" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="EthernetPriority" requirement="readWrite"/>
        <parameter ref="ROMTime" requirement="readOnly"/>
        <parameter ref="BOMTime" requirement="readOnly"/>
        <parameter ref="EOMTime" requirement="readOnly"/>
        <parameter ref="TestBytesReceived" requirement="readOnly"/>
        <parameter ref="TotalBytesReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DownloadTCP:1" version="1.0">
      <object ref="InternetGatewayDevice.DownloadDiagnostics." requirement="present">
        <parameter ref="TCPOpenRequestTime" requirement="readOnly"/>
        <parameter ref="TCPOpenResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Upload:1" version="1.0">
      <object ref="InternetGatewayDevice.Capabilities.PerformanceDiagnostic." requirement="present">
        <parameter ref="UploadTransports" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.UploadDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="UploadURL" requirement="readWrite"/>
        <parameter ref="DSCP" requirement="readWrite"/>
        <parameter ref="EthernetPriority" requirement="readWrite"/>
        <parameter ref="ROMTime" requirement="readOnly"/>
        <parameter ref="BOMTime" requirement="readOnly"/>
        <parameter ref="EOMTime" requirement="readOnly"/>
        <parameter ref="TestFileLength" requirement="readOnly"/>
        <parameter ref="TotalBytesSent" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UploadTCP:1" version="1.0">
      <object ref="InternetGatewayDevice.UploadDiagnostics." requirement="present">
        <parameter ref="TCPOpenRequestTime" requirement="readOnly"/>
        <parameter ref="TCPOpenResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPEcho:1" version="1.0">
      <object ref="InternetGatewayDevice.UDPEchoConfig." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="SourceIPAddress" requirement="readWrite"/>
        <parameter ref="UDPPort" requirement="readWrite"/>
        <parameter ref="PacketsReceived" requirement="readOnly"/>
        <parameter ref="PacketsResponded" requirement="readOnly"/>
        <parameter ref="BytesReceived" requirement="readOnly"/>
        <parameter ref="BytesResponded" requirement="readOnly"/>
        <parameter ref="TimeFirstPacketReceived" requirement="readOnly"/>
        <parameter ref="TimeLastPacketReceived" requirement="readOnly"/>
        <parameter ref="EchoPlusSupported" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPEchoPlus:1" version="1.0">
      <object ref="InternetGatewayDevice.UDPEchoConfig." requirement="present">
        <parameter ref="EchoPlusEnabled" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="ATMLoopback:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics." requirement="present">
        <parameter ref="DiagnosticsState" requirement="readWrite"/>
        <parameter ref="NumberOfRepetitions" requirement="readWrite"/>
        <parameter ref="Timeout" requirement="readWrite"/>
        <parameter ref="SuccessCount" requirement="readOnly"/>
        <parameter ref="FailureCount" requirement="readOnly"/>
        <parameter ref="AverageResponseTime" requirement="readOnly"/>
        <parameter ref="MinimumResponseTime" requirement="readOnly"/>
        <parameter ref="MaximumResponseTime" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DSLDiagnostics:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." requirement="present">
        <parameter ref="LoopDiagnosticsState" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="BITSpsds" requirement="readOnly"/>
        <parameter ref="GAINSpsds" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="ADSL2DSLDiagnostics:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." requirement="present">
        <parameter ref="LoopDiagnosticsState" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINSCus" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="HLINpsus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNpbds" requirement="readOnly"/>
        <parameter ref="LATNpbus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="VDSL2DSLDiagnostics:1" version="1.0">
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics." requirement="present">
        <parameter ref="LoopDiagnosticsState" requirement="readWrite"/>
        <parameter ref="ACTPSDds" requirement="readOnly"/>
        <parameter ref="ACTPSDus" requirement="readOnly"/>
        <parameter ref="ACTATPds" requirement="readOnly"/>
        <parameter ref="ACTATPus" requirement="readOnly"/>
        <parameter ref="HLINSCds" requirement="readOnly"/>
        <parameter ref="HLINSCus" requirement="readOnly"/>
        <parameter ref="HLINGds" requirement="readOnly"/>
        <parameter ref="HLINGus" requirement="readOnly"/>
        <parameter ref="HLINpsds" requirement="readOnly"/>
        <parameter ref="HLINpsus" requirement="readOnly"/>
        <parameter ref="HLOGGds" requirement="readOnly"/>
        <parameter ref="HLOGGus" requirement="readOnly"/>
        <parameter ref="HLOGpsds" requirement="readOnly"/>
        <parameter ref="HLOGpsus" requirement="readOnly"/>
        <parameter ref="HLOGMTds" requirement="readOnly"/>
        <parameter ref="HLOGMTus" requirement="readOnly"/>
        <parameter ref="QLNGds" requirement="readOnly"/>
        <parameter ref="QLNGus" requirement="readOnly"/>
        <parameter ref="QLNpsds" requirement="readOnly"/>
        <parameter ref="QLNpsus" requirement="readOnly"/>
        <parameter ref="QLNMTds" requirement="readOnly"/>
        <parameter ref="QLNMTus" requirement="readOnly"/>
        <parameter ref="SNRGds" requirement="readOnly"/>
        <parameter ref="SNRGus" requirement="readOnly"/>
        <parameter ref="SNRpsds" requirement="readOnly"/>
        <parameter ref="SNRpsus" requirement="readOnly"/>
        <parameter ref="SNRMTds" requirement="readOnly"/>
        <parameter ref="SNRMTus" requirement="readOnly"/>
        <parameter ref="LATNpbds" requirement="readOnly"/>
        <parameter ref="LATNpbus" requirement="readOnly"/>
        <parameter ref="SATNds" requirement="readOnly"/>
        <parameter ref="SATNus" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DeviceAssociation:1" version="1.0">
      <object ref="InternetGatewayDevice.ManagementServer." requirement="notSpecified">
        <parameter ref="ManageableDeviceNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.ManagementServer.ManageableDevice.{i}." requirement="present">
        <parameter ref="ManufacturerOUI" requirement="readOnly"/>
        <parameter ref="SerialNumber" requirement="readOnly"/>
        <parameter ref="ProductClass" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="UDPConnReq:1" version="1.0">
      <object ref="InternetGatewayDevice.ManagementServer." requirement="notSpecified">
        <parameter ref="UDPConnectionRequestAddress" requirement="readOnly"/>
        <parameter ref="UDPConnectionRequestAddressNotificationLimit" requirement="readWrite"/>
        <parameter ref="STUNEnable" requirement="readWrite"/>
        <parameter ref="STUNServerAddress" requirement="readWrite"/>
        <parameter ref="STUNServerPort" requirement="readWrite"/>
        <parameter ref="STUNUsername" requirement="readWrite"/>
        <parameter ref="STUNPassword" requirement="readWrite"/>
        <parameter ref="STUNMaximumKeepAlivePeriod" requirement="readWrite"/>
        <parameter ref="STUNMinimumKeepAlivePeriod" requirement="readWrite"/>
        <parameter ref="NATDetected" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="DHCPCondServing:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="DHCPConditionalPoolNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="PoolOrder" requirement="readWrite"/>
        <parameter ref="SourceInterface" requirement="readWrite"/>
        <parameter ref="VendorClassID" requirement="readWrite"/>
        <parameter ref="ClientID" requirement="readWrite"/>
        <parameter ref="UserClassID" requirement="readWrite"/>
        <parameter ref="Chaddr" requirement="readWrite"/>
        <parameter ref="ChaddrMask" requirement="readWrite"/>
        <parameter ref="LocallyServed" requirement="readWrite"/>
        <parameter ref="MinAddress" requirement="readWrite"/>
        <parameter ref="MaxAddress" requirement="readWrite"/>
        <parameter ref="ReservedAddresses" requirement="readWrite"/>
        <parameter ref="SubnetMask" requirement="readWrite"/>
        <parameter ref="DNSServers" requirement="readWrite"/>
        <parameter ref="DomainName" requirement="readWrite"/>
        <parameter ref="IPRouters" requirement="readWrite"/>
        <parameter ref="DHCPLeaseTime" requirement="readWrite"/>
        <parameter ref="DHCPServerIPAddress" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DHCPOption:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="DHCPOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}." requirement="createDelete">
        <parameter ref="DHCPOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.DHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient." requirement="present">
        <parameter ref="SentDHCPOptionNumberOfEntries" requirement="readOnly"/>
        <parameter ref="ReqDHCPOptionNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.SentDHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.DHCPClient.ReqDHCPOption.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Tag" requirement="readWrite"/>
        <parameter ref="Value" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Baseline:2" base="Baseline:1" version="1.0">
      <object ref="InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}." requirement="createDelete">
        <parameter ref="StaticRoute" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement." requirement="present">
        <parameter ref="MACAddress" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}." requirement="present">
        <parameter ref="Layer2Interface" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANInterfaces." requirement="present">
        <parameter ref="LANEthernetInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANUSBInterfaceNumberOfEntries" requirement="readOnly"/>
        <parameter ref="LANWLANConfigurationNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}." requirement="createDelete">
        <parameter ref="Reset" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetErrorsSent" requirement="readOnly"/>
        <parameter ref="EthernetErrorsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}." requirement="createDelete">
        <parameter ref="Reset" requirement="readWrite"/>
        <parameter ref="PPPoESessionID" requirement="readOnly"/>
        <parameter ref="DefaultGateway" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats." requirement="present">
        <parameter ref="EthernetErrorsSent" requirement="readOnly"/>
        <parameter ref="EthernetErrorsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetUnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetDiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetMulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="EthernetBroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="EthernetUnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="EthernetLAN:2" base="EthernetLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="USBLAN:2" base="USBLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats." requirement="present">
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiLAN:2" base="WiFiLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." requirement="present">
        <parameter ref="Name" requirement="readOnly"/>
        <parameter ref="AutoChannelEnable" requirement="readWrite"/>
        <parameter ref="SSIDAdvertisementEnabled" requirement="readWrite"/>
        <parameter ref="TransmitPowerSupported" requirement="readOnly"/>
        <parameter ref="TransmitPower" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.Stats." requirement="present">
        <parameter ref="ErrorsSent" requirement="readOnly"/>
        <parameter ref="ErrorsReceived" requirement="readOnly"/>
        <parameter ref="UnicastPacketsSent" requirement="readOnly"/>
        <parameter ref="UnicastPacketsReceived" requirement="readOnly"/>
        <parameter ref="DiscardPacketsSent" requirement="readOnly"/>
        <parameter ref="DiscardPacketsReceived" requirement="readOnly"/>
        <parameter ref="MulticastPacketsSent" requirement="readOnly"/>
        <parameter ref="MulticastPacketsReceived" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsSent" requirement="readOnly"/>
        <parameter ref="BroadcastPacketsReceived" requirement="readOnly"/>
        <parameter ref="UnknownProtoPacketsReceived" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="WiFiWMM:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}." requirement="present">
        <parameter ref="WMMSupported" requirement="readOnly"/>
        <parameter ref="UAPSDSupported" requirement="readOnly"/>
        <parameter ref="WMMEnable" requirement="readWrite"/>
        <parameter ref="UAPSDEnable" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.APWMMParameter.{i}." requirement="present">
        <parameter ref="AIFSN" requirement="readWrite"/>
        <parameter ref="ECWMin" requirement="readWrite"/>
        <parameter ref="ECWMax" requirement="readWrite"/>
        <parameter ref="TXOP" requirement="readWrite"/>
        <parameter ref="AckPolicy" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.STAWMMParameter.{i}." requirement="present">
        <parameter ref="AIFSN" requirement="readWrite"/>
        <parameter ref="ECWMin" requirement="readWrite"/>
        <parameter ref="ECWMax" requirement="readWrite"/>
        <parameter ref="TXOP" requirement="readWrite"/>
        <parameter ref="AckPolicy" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="WiFiWPS:1" version="1.0">
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="DeviceName" requirement="readOnly"/>
        <parameter ref="DevicePassword" requirement="readWrite"/>
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="Version" requirement="readOnly"/>
        <parameter ref="ConfigMethodsSupported" requirement="readOnly"/>
        <parameter ref="ConfigMethodsEnabled" requirement="readWrite"/>
        <parameter ref="SetupLockedState" requirement="readOnly"/>
        <parameter ref="SetupLock" requirement="readWrite"/>
        <parameter ref="ConfigurationState" requirement="readOnly"/>
        <parameter ref="LastConfigurationError" requirement="readOnly"/>
        <parameter ref="RegistrarNumberOfEntries" requirement="readOnly"/>
        <parameter ref="RegistrarEstablished" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WPS.Registrar.{i}." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="UUID" requirement="readOnly"/>
        <parameter ref="DeviceName" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="QoS:2" base="QoS:1" version="1.0">
      <object ref="InternetGatewayDevice.QueueManagement." requirement="present">
        <parameter ref="DefaultTrafficClass" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Classification.{i}." requirement="createDelete">
        <parameter ref="ClassificationKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="TrafficClass" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Policer.{i}." requirement="createDelete">
        <parameter ref="PolicerKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="ExcessBurstSize" requirement="readWrite"/>
        <parameter ref="PeakRate" requirement="readWrite"/>
        <parameter ref="PeakBurstSize" requirement="readWrite"/>
        <parameter ref="PartialConformingAction" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Queue.{i}." requirement="createDelete">
        <parameter ref="QueueKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="TrafficClasses" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig." requirement="notSpecified">
        <parameter ref="ShapingRate" requirement="readWrite"/>
        <parameter ref="ShapingBurstSize" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSDynamicFlow:2" base="QoSDynamicFlow:1" version="1.0">
      <object ref="InternetGatewayDevice.QueueManagement.App.{i}." requirement="createDelete">
        <parameter ref="AppKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="AppDefaultTrafficClass" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Flow.{i}." requirement="createDelete">
        <parameter ref="FlowKey" status="obsoleted" requirement="readOnly"/>
        <parameter ref="FlowTrafficClass" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="QoSStats:1" version="1.0">
      <object ref="InternetGatewayDevice.QueueManagement." requirement="present">
        <parameter ref="QueueStatsNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.Policer.{i}." requirement="notSpecified">
        <parameter ref="TotalCountedPackets" requirement="readOnly"/>
        <parameter ref="TotalCountedBytes" requirement="readOnly"/>
        <parameter ref="ConformingCountedPackets" requirement="readOnly"/>
        <parameter ref="ConformingCountedBytes" requirement="readOnly"/>
        <parameter ref="NonConformingCountedPackets" requirement="readOnly"/>
        <parameter ref="NonConformingCountedBytes" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.QueueManagement.QueueStats.{i}." requirement="createDelete">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="Queue" requirement="readWrite"/>
        <parameter ref="Interface" requirement="readWrite"/>
        <parameter ref="OutputPackets" requirement="readOnly"/>
        <parameter ref="OutputBytes" requirement="readOnly"/>
        <parameter ref="DroppedPackets" requirement="readOnly"/>
        <parameter ref="DroppedBytes" requirement="readOnly"/>
        <parameter ref="QueueOccupancyPackets" requirement="readOnly"/>
        <parameter ref="QueueOccupancyPercentage" requirement="readOnly"/>
      </object>
    </profile>
    <profile name="Bridging:2" base="Bridging:1" version="1.0">
      <object ref="InternetGatewayDevice.Layer2Bridging." requirement="present">
        <parameter ref="MaxDBridgeEntries" requirement="readOnly"/>
        <parameter ref="MaxQBridgeEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." requirement="createDelete">
        <parameter ref="BridgeStandard" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Marking.{i}." requirement="createDelete">
        <parameter ref="VLANIDMarkOverride" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="BridgingPortVLAN:1" version="1.0">
      <object ref="InternetGatewayDevice.Layer2Bridging." requirement="present">
        <parameter ref="MaxVLANEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}." requirement="present">
        <parameter ref="PortNumberOfEntries" requirement="readOnly"/>
        <parameter ref="VLANNumberOfEntries" requirement="readOnly"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}.Port.{i}." requirement="createDelete">
        <parameter ref="PortEnable" requirement="readWrite"/>
        <parameter ref="PortInterface" requirement="readWrite"/>
        <parameter ref="PortState" requirement="readOnly"/>
        <parameter ref="PVID" requirement="readWrite"/>
        <parameter ref="AcceptableFrameTypes" requirement="readWrite"/>
        <parameter ref="IngressFiltering" requirement="readWrite"/>
      </object>
      <object ref="InternetGatewayDevice.Layer2Bridging.Bridge.{i}.VLAN.{i}." requirement="createDelete">
        <parameter ref="VLANEnable" requirement="readWrite"/>
        <parameter ref="VLANName" requirement="readWrite"/>
        <parameter ref="VLANID" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="Time:2" base="Time:1" version="1.0">
      <object ref="InternetGatewayDevice.Time." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="LocalTimeZone" status="obsoleted" requirement="readWrite"/>
        <parameter ref="DaylightSavingsUsed" status="obsoleted" requirement="readWrite"/>
        <parameter ref="DaylightSavingsStart" status="obsoleted" requirement="readWrite"/>
        <parameter ref="DaylightSavingsEnd" status="obsoleted" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="CaptivePortal:1" version="1.0">
      <object ref="InternetGatewayDevice.CaptivePortal." requirement="present">
        <parameter ref="Enable" requirement="readWrite"/>
        <parameter ref="Status" requirement="readOnly"/>
        <parameter ref="AllowedList" requirement="readWrite"/>
        <parameter ref="CaptivePortalURL" requirement="readWrite"/>
      </object>
    </profile>
    <profile name="DeviceAssociation:2" base="DeviceAssociation:1" version="1.0">
      <object ref="InternetGatewayDevice.ManagementServer.ManageableDevice.{i}." requirement="present">
        <parameter ref="Host" requirement="readOnly"/>
      </object>
    </profile>
  </model>
</dm:document>
